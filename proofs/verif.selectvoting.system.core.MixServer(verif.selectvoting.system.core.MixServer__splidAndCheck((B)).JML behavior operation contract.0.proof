\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Dec 18 11:50:10 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sun Dec 18 11:50:10 CET 2016
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:splidAndCheck([B)].JML behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:splidAndCheck([B)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "f08755657231e066f34a6d2cf1fc92a2d49850a9"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "f08755657231e066f34a6d2cf1fc92a2d49850a9"))

(autoModeTime "12060")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "msg,self,result,exc,heapAtPre,o,f") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(builtin "One Step Simplification" (formula "10"))
(rule "assignment" (formula "10") (term "1") (userinteraction))
(rule "methodBodyExpand" (formula "10") (term "1,1") (newnames "heapBefore_splidAndCheck,savedHeapBefore_splidAndCheck") (userinteraction))
(builtin "One Step Simplification" (formula "10"))
(rule "variableDeclarationAssign" (formula "10") (term "1") (userinteraction))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "len") (userinteraction))
(builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_readLength,result_0,exc_0,heapAfter_readLength,anon_heap_readLength") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::readLength([B)].JML normal_behavior operation contract.0"))
(branch "Post (readLength)"
   (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "assignment" (formula "15") (term "1,1") (userinteraction))
   (builtin "One Step Simplification" (formula "15"))
   (rule "variableDeclarationAssign" (formula "15") (term "1") (userinteraction))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "removedLen") (userinteraction))
   (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_removeLength,result_1,exc_1,heapAfter_removeLength,anon_heap_removeLength") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::removeLength([B)].JML normal_behavior operation contract.0"))
   (branch "Post (removeLength)"
      (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "19"))
      (rule "notLeft" (formula "17"))
      (rule "assignment" (formula "23") (term "1,1") (userinteraction))
      (rule "variableDeclarationAssign" (formula "23") (term "1,1,1") (userinteraction))
      (rule "variableDeclaration" (formula "23") (term "1,1,1") (newnames "res") (userinteraction))
      (builtin "One Step Simplification" (formula "23"))
      (builtin "Use Operation Contract" (formula "23") (newnames "heapBefore_split,result_2,exc_2,heapAfter_split,anon_heap_split") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::split(int,[B)].JML normal_behavior operation contract.0"))
      (branch "Post (split)"
         (builtin "One Step Simplification" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "24"))
         (rule "notLeft" (formula "23"))
         (rule "assignment" (formula "32") (term "1,1") (userinteraction))
         (builtin "One Step Simplification" (formula "32"))
         (builtin "Use Operation Contract" (formula "32") (newnames "heapBefore_checkBallots,exc_3,heapAfter_checkBallots,anon_heap_checkBallots") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::checkBallots([[B)].JML behavior operation contract.0"))
         (branch "Post (checkBallots)"
            (rule "methodCallReturn" (formula "34") (term "1,1") (userinteraction))
            (rule "assignment" (formula "34") (term "1,1") (userinteraction))
            (rule "methodCallEmpty" (formula "34") (term "1,1,1") (userinteraction))
            (rule "tryEmpty" (formula "34") (term "1,1,1") (userinteraction))
            (rule "emptyModality" (formula "34") (term "1,1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "29")))
            (builtin "One Step Simplification" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "29"))
            (rule "andRight" (formula "37") (userinteraction))
            (branch "Case 1"
               (rule "andRight" (formula "37") (userinteraction))
               (branch "Case 1"
                  (rule "cut" (inst "cutFormula=  array2seq2d(heapAfter_checkBallots, result_2)
= array2seq2d(heapAfter_split, result_2)") (userinteraction))
                  (branch "CUT: array2seq2d(heapAfter_checkBallots, result_2) = array2seq2d(heapAfter_split, result_2) TRUE"
                     (rule "applyEq" (formula "38") (term "0") (ifseqformula "1") (userinteraction))
                     (rule "cut" (inst "cutFormula=  array2seq2d(heapAfter_checkBallots,
              byte[][]::select(heapAfter_checkBallots,
                               self,
                               verif.selectvoting.system.core.MixServer::$sorted))
= array2seq2d(heapAfter_split,
              byte[][]::select(heapAfter_split,
                               self,
                               verif.selectvoting.system.core.MixServer::$sorted))") (userinteraction))
                     (branch "CUT: array2seq2d(heapAfter_checkBallots, self.sorted@heapAfter_checkBallots) = array2seq2d(heapAfter_split, self.sorted@heapAfter_split) TRUE"
                        (rule "applyEq" (formula "39") (term "1") (ifseqformula "1") (userinteraction))
                        (rule "close" (formula "39") (ifseqformula "24") (userinteraction))
                     )
                     (branch "CUT: array2seq2d(heapAfter_checkBallots, self.sorted@heapAfter_checkBallots) = array2seq2d(heapAfter_split, self.sorted@heapAfter_split) FALSE"
                        (rule "hide_right" (formula "39") (userinteraction))
                        (rule "array2seq2dDef" (formula "32") (term "0") (inst "u=u") (userinteraction))
                        (rule "array2seq2dDef" (formula "32") (term "1") (inst "u=u") (userinteraction))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "32") (inst "iv=iv") (userinteraction))
                        (rule "andRight" (formula "32") (userinteraction))
                        (branch "Case 1"
                           (rule "typeEqDerived" (formula "31") (term "0,1,1,1") (ifseqformula "29"))
                           (rule "typeEqDerived" (formula "31") (term "0,1,0,1,1") (ifseqformula "29"))
                           (rule "typeEqDerived" (formula "31") (term "0,0,0,1,1") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "29")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (ifseqformula "10"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "15"))
                           (rule "true_left" (formula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1") (ifseqformula "15"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0") (ifseqformula "10"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1") (ifseqformula "15"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1") (ifseqformula "10"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,1") (ifseqformula "10"))
                           (rule "orRight" (formula "34"))
                           (rule "orRight" (formula "32"))
                           (rule "orRight" (formula "32"))
                           (rule "eqSymm" (formula "17"))
                           (rule "eqSymm" (formula "31"))
                           (rule "eqSymm" (formula "1"))
                           (rule "eqSymm" (formula "7"))
                           (rule "eqSymm" (formula "12"))
                           (rule "eqSymm" (formula "23"))
                           (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "38"))
                           (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                           (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                           (rule "lenOfSeqDef" (formula "31") (term "1"))
                           (rule "polySimp_elimSub" (formula "31") (term "1,1"))
                           (rule "times_zero_2" (formula "31") (term "1,1,1"))
                           (rule "add_zero_right" (formula "31") (term "1,1"))
                           (rule "lenOfSeqDef" (formula "31") (term "0"))
                           (rule "polySimp_elimSub" (formula "31") (term "1,0"))
                           (rule "times_zero_2" (formula "31") (term "1,1,0"))
                           (rule "add_zero_right" (formula "31") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1"))
                           (rule "add_zero_right" (formula "31") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                           (rule "applyEq" (formula "23") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "31") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                           (rule "nonNull" (formula "25") (inst "i=i"))
                           (rule "greater_literals" (formula "25") (term "0,1"))
                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "35")))
                           (rule "sub_literals" (formula "25") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                           (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "17"))
                           (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "7"))
                           (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "2") (ifseqformula "40"))
                           (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "eqSeqDef2" (formula "7") (inst "iv=iv") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "pullOutSelect" (formula "11") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_14"))
                           (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "38")) (ifInst ""  (formula "3")))
                           (rule "applyEqReverse" (formula "12") (term "0,0") (ifseqformula "11"))
                           (rule "hideAuxiliaryEq" (formula "11"))
                           (rule "pullOutSelect" (formula "21") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_15"))
                           (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "30") (term "0,0,0,0") (ifseqformula "21"))
                           (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "38")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0") (ifseqformula "14"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "30"))
                           (rule "replace_known_left" (formula "21") (term "0,0,0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "38")))
                           (rule "replaceKnownSelect_taclet010000000_1" (formula "21") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet010000000_2" (formula "21") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0") (ifseqformula "9"))
                           (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "applyEqReverse" (formula "30") (term "0,1,1") (ifseqformula "21"))
                           (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                           (rule "applyEqReverse" (formula "30") (term "0,0,0,1") (ifseqformula "21"))
                           (rule "hideAuxiliaryEq" (formula "21"))
                           (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "11"))
                           (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "11"))
                           (rule "pullOutSelect" (formula "29") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_16"))
                           (rule "applyEq" (formula "30") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                           (rule "replaceKnownSelect_taclet010000000_3" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet010000000_5" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "10"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "30") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "30") (term "0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "closeTrue" (formula "29"))
                        )
                        (branch "Case 2"
                           (rule "typeEqDerived" (formula "31") (term "0,1,1,1") (ifseqformula "29"))
                           (rule "typeEqDerived" (formula "31") (term "0,1,0,1,1") (ifseqformula "29"))
                           (rule "typeEqDerived" (formula "31") (term "0,0,0,1,1") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "29")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (ifseqformula "10"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "15"))
                           (rule "true_left" (formula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1") (ifseqformula "15"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0") (ifseqformula "10"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1") (ifseqformula "15"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1") (ifseqformula "10"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,1") (ifseqformula "10"))
                           (rule "orRight" (formula "34"))
                           (rule "orRight" (formula "32"))
                           (rule "orRight" (formula "32"))
                           (rule "allRight" (formula "31") (inst "sk=iv_3"))
                           (rule "impRight" (formula "31"))
                           (rule "andLeft" (formula "1"))
                           (rule "eqSymm" (formula "9"))
                           (rule "eqSymm" (formula "19"))
                           (rule "eqSymm" (formula "14"))
                           (rule "eqSymm" (formula "3"))
                           (rule "eqSymm" (formula "25"))
                           (rule "eqSymm" (formula "33"))
                           (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                           (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "37"))
                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
                           (rule "lenOfSeqDef" (formula "2") (term "1"))
                           (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "1,1,1"))
                           (rule "add_zero_right" (formula "2") (term "1,1"))
                           (rule "getOfSeqDef" (formula "33") (term "1"))
                           (rule "castDel" (formula "33") (term "1,1"))
                           (rule "castDel" (formula "33") (term "2,1"))
                           (rule "add_zero_right" (formula "33") (term "0,2,1,1,1"))
                           (rule "replace_known_left" (formula "33") (term "0,0,1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "polySimp_elimSub" (formula "33") (term "1,0,1"))
                           (rule "times_zero_2" (formula "33") (term "1,1,0,1"))
                           (rule "add_zero_right" (formula "33") (term "1,0,1"))
                           (rule "getOfSeqDef" (formula "33") (term "0"))
                           (rule "castDel" (formula "33") (term "1,0"))
                           (rule "castDel" (formula "33") (term "2,0"))
                           (rule "add_zero_right" (formula "33") (term "0,2,1,1,0"))
                           (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "polySimp_elimSub" (formula "33") (term "1,0,0"))
                           (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                           (rule "add_zero_right" (formula "33") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "applyEq" (formula "25") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "33") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                           (rule "nonNull" (formula "27") (inst "i=i"))
                           (rule "greater_literals" (formula "27") (term "0,1"))
                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "37")))
                           (rule "sub_literals" (formula "27") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                           (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "9"))
                           (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "4") (ifseqformula "42"))
                           (rule "array2seqDef" (formula "19") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "19"))
                           (rule "array2seqDef" (formula "33") (term "1,0") (inst "u=u"))
                           (rule "array2seqDef" (formula "33") (term "1,1") (inst "u=u"))
                           (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "pullOutSelect" (formula "13") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_17"))
                           (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "40")) (ifInst ""  (formula "5")))
                           (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "13"))
                           (rule "hideAuxiliaryEq" (formula "13"))
                           (rule "pullOutSelect" (formula "23") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_18"))
                           (rule "applyEq" (formula "32") (term "1,1,2,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "32") (term "0,0,0,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "32") (term "1,0,1,1,0") (ifseqformula "23"))
                           (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "40")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0") (ifseqformula "16"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0,0") (ifseqformula "11"))
                           (rule "eqSymm" (formula "32"))
                           (rule "replace_known_left" (formula "23") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "40")))
                           (rule "replaceKnownSelect_taclet110000000_1" (formula "23") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_2" (formula "23") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0") (ifseqformula "11"))
                           (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "applyEqReverse" (formula "32") (term "1,0,1,1,1") (ifseqformula "23"))
                           (rule "applyEqReverse" (formula "32") (term "0,0,0,1") (ifseqformula "23"))
                           (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                           (rule "applyEqReverse" (formula "32") (term "1,1,2,1,1") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "applyEq" (formula "31") (term "0,0,1") (ifseqformula "13"))
                           (rule "pullOutSelect" (formula "2") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_19"))
                           (rule "applyEq" (formula "32") (term "1,0,1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "32") (term "0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "32") (term "1,1,2,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                           (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                           (rule "replaceKnownSelect_taclet110000000_3" (formula "2") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_5" (formula "2") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "22"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0") (ifseqformula "17"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0") (ifseqformula "12"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,0") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "32") (term "0,0,0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "32") (term "1,0,1,1,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "3") (term "0,1,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "32") (term "1,1,2,1,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "13"))
                           (rule "eqSymm" (formula "31"))
                           (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "13"))
                           (rule "pullOutSelect" (formula "31") (term "0,1,1,1") (inst "selectSK=arr_27"))
                           (rule "applyEq" (formula "32") (term "1,2,1,1") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "12"))
                           (rule "pullOutSelect" (formula "32") (term "0,1,1,0") (inst "selectSK=arr_28"))
                           (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "33") (term "1,2,1,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_29"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_30"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "nnf_imp2or" (formula "29") (term "0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                           (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "28") (ifseqformula "10"))
                           (rule "replaceKnownSelect_taclet110000000_3" (formula "28") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_5" (formula "28") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "andLeft" (formula "28"))
                           (rule "notLeft" (formula "29"))
                           (rule "andLeft" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "notLeft" (formula "30"))
                           (rule "notLeft" (formula "29"))
                           (rule "andLeft" (formula "28"))
                           (rule "notLeft" (formula "29"))
                           (rule "andLeft" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "notLeft" (formula "28"))
                           (rule "nonNull" (formula "31") (inst "i=i"))
                           (rule "greater_literals" (formula "31") (term "0,1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "sub_literals" (formula "31") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "notLeft" (formula "31"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "30") (inst "i=i"))
                           (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "greater_literals" (formula "30") (term "0,1"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "andLeft" (formula "30"))
                           (rule "notLeft" (formula "30"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "29") (inst "i=i"))
                           (rule "greater_literals" (formula "29") (term "0,1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "sub_literals" (formula "29") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "andLeft" (formula "29"))
                           (rule "notLeft" (formula "29"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "28") (inst "i=i"))
                           (rule "greater_literals" (formula "28") (term "0,1"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "sub_literals" (formula "28") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "notLeft" (formula "28"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "38"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "38"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "38"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "ifthenelse_negated" (formula "4") (term "0"))
                           (rule "ifthenelse_negated" (formula "2") (term "0"))
                           (rule "ifthenelse_negated" (formula "3") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                           (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                           (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_11"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "10")))
                           (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_11"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "10")))
                           (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_11"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "10")))
                           (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_11"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "10")))
                           (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_11"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "10")))
                           (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "31") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_11"))
                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "31"))
                           (rule "applyEq" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
                           (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0,0") (ifseqformula "15"))
                           (rule "replace_known_left" (formula "31") (term "0,0,0,0,0") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0") (ifseqformula "15"))
                           (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "56")) (ifInst ""  (formula "9")))
                           (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "31"))
                           (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
                           (rule "applyEqReverse" (formula "32") (term "1,0,0,1,0") (ifseqformula "31"))
                           (rule "hideAuxiliaryEq" (formula "31"))
                           (rule "pullOutSelect" (formula "30") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_11"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "30"))
                           (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                           (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,0") (ifseqformula "15"))
                           (rule "replace_known_left" (formula "30") (term "0,0,0,0,0") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "15"))
                           (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "56")) (ifInst ""  (formula "9")))
                           (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "30"))
                           (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                           (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
                           (rule "hideAuxiliaryEq" (formula "30"))
                           (rule "pullOutSelect" (formula "29") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_11"))
                           (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "29"))
                           (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0,0") (ifseqformula "15"))
                           (rule "replace_known_left" (formula "29") (term "0,0,0,0,0") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0") (ifseqformula "15"))
                           (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "56")) (ifInst ""  (formula "9")))
                           (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "29"))
                           (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                           (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "29"))
                           (rule "hideAuxiliaryEq" (formula "29"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_imp2or" (formula "31") (term "0"))
                           (rule "nnf_imp2or" (formula "30") (term "0"))
                           (rule "nnf_imp2or" (formula "29") (term "0"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "18") (ifseqformula "10"))
                           (rule "replaceKnownSelect_taclet110000000_14" (formula "18") (term "0,0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_15" (formula "18") (term "0,0,1"))
                           (rule "replaceKnownSelect_taclet110000000_18" (formula "18") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_19" (formula "18") (term "0,0,1,0"))
                           (rule "replaceKnownSelect_taclet110000000_22" (formula "18") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_23" (formula "18") (term "0,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet110000000_34" (formula "18") (term "1,1,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110000000_26" (formula "18") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_35" (formula "18") (term "1,1,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_27" (formula "18") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownSelect_taclet110000000_38" (formula "18") (term "1,1,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110000000_42" (formula "18") (term "1,1,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_39" (formula "18") (term "1,1,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110000000_1" (formula "18") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_43" (formula "18") (term "1,1,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110000000_30" (formula "18") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_2" (formula "18") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_31" (formula "18") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "19"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "20"))
                           (rule "notLeft" (formula "19"))
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "19"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "nonNull" (formula "21") (inst "i=i"))
                           (rule "greater_literals" (formula "21") (term "0,1"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "44")))
                           (rule "sub_literals" (formula "21") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "20") (inst "i=i"))
                           (rule "greater_literals" (formula "20") (term "0,1"))
                           (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "43")))
                           (rule "sub_literals" (formula "20") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "19") (inst "i=i"))
                           (rule "sub_literals" (formula "19") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "42")))
                           (rule "greater_literals" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "18") (inst "i=i"))
                           (rule "greater_literals" (formula "18") (term "0,1"))
                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "41")))
                           (rule "sub_literals" (formula "18") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                           (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "25") (ifseqformula "10"))
                           (rule "replaceKnownSelect_taclet110000000_13" (formula "25") (term "0,0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_15" (formula "25") (term "0,0,1"))
                           (rule "replaceKnownSelect_taclet110000000_17" (formula "25") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_19" (formula "25") (term "0,0,1,0"))
                           (rule "replaceKnownSelect_taclet110000000_21" (formula "25") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_23" (formula "25") (term "0,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet110000000_33" (formula "25") (term "1,1,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110000000_25" (formula "25") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_35" (formula "25") (term "1,1,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_27" (formula "25") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownSelect_taclet110000000_37" (formula "25") (term "1,1,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110000000_41" (formula "25") (term "1,1,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_39" (formula "25") (term "1,1,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110000000_4" (formula "25") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_43" (formula "25") (term "1,1,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110000000_29" (formula "25") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_5" (formula "25") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_31" (formula "25") (term "0,0,0,0,0,0,0,0,0,0"))
                           (rule "andLeft" (formula "25"))
                           (rule "notLeft" (formula "26"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "notLeft" (formula "27"))
                           (rule "notLeft" (formula "26"))
                           (rule "andLeft" (formula "25"))
                           (rule "notLeft" (formula "26"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "notLeft" (formula "25"))
                           (rule "nonNull" (formula "28") (inst "i=i"))
                           (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "47")))
                           (rule "greater_literals" (formula "28") (term "0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "27") (inst "i=i"))
                           (rule "greater_literals" (formula "27") (term "0,1"))
                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "46")))
                           (rule "sub_literals" (formula "27") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "26") (inst "i=i"))
                           (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "45")))
                           (rule "greater_literals" (formula "26") (term "0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "25") (inst "i=i"))
                           (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "44")))
                           (rule "greater_literals" (formula "25") (term "0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                           (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "13") (ifseqformula "10"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "notLeft" (formula "15"))
                           (rule "notLeft" (formula "14"))
                           (rule "andLeft" (formula "13"))
                           (rule "notLeft" (formula "14"))
                           (rule "andLeft" (formula "13"))
                           (rule "notLeft" (formula "14"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "notLeft" (formula "13"))
                           (rule "nonNull" (formula "16") (inst "i=i"))
                           (rule "greater_literals" (formula "16") (term "0,1"))
                           (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "50")))
                           (rule "sub_literals" (formula "16") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "50"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "15") (inst "i=i"))
                           (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "49")))
                           (rule "greater_literals" (formula "15") (term "0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "49"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "14") (inst "i=i"))
                           (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "48")))
                           (rule "greater_literals" (formula "14") (term "0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "48"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "13") (inst "i=i"))
                           (rule "greater_literals" (formula "13") (term "0,1"))
                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "47")))
                           (rule "sub_literals" (formula "13") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "47"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                           (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "46") (ifseqformula "10"))
                           (rule "replaceKnownSelect_taclet110000000_6" (formula "46") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_7" (formula "46") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "andLeft" (formula "46"))
                           (rule "andLeft" (formula "46"))
                           (rule "notLeft" (formula "48"))
                           (rule "notLeft" (formula "47"))
                           (rule "andLeft" (formula "46"))
                           (rule "andLeft" (formula "46"))
                           (rule "notLeft" (formula "48"))
                           (rule "andLeft" (formula "46"))
                           (rule "notLeft" (formula "48"))
                           (rule "andLeft" (formula "46"))
                           (rule "andLeft" (formula "46"))
                           (rule "andLeft" (formula "46"))
                           (rule "notLeft" (formula "46"))
                           (rule "nonNull" (formula "49") (inst "i=i"))
                           (rule "sub_literals" (formula "49") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "49"))
                           (rule "greater_literals" (formula "49") (term "0,1"))
                           (builtin "One Step Simplification" (formula "49"))
                           (rule "andLeft" (formula "49"))
                           (rule "notLeft" (formula "49"))
                           (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "49") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "48") (inst "i=i"))
                           (rule "sub_literals" (formula "48") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "48"))
                           (rule "greater_literals" (formula "48") (term "0,1"))
                           (builtin "One Step Simplification" (formula "48"))
                           (rule "andLeft" (formula "48"))
                           (rule "notLeft" (formula "48"))
                           (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "47") (inst "i=i"))
                           (rule "sub_literals" (formula "47") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "greater_literals" (formula "47") (term "0,1"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "andLeft" (formula "47"))
                           (rule "notLeft" (formula "47"))
                           (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "46") (inst "i=i"))
                           (rule "greater_literals" (formula "46") (term "0,1"))
                           (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "58")))
                           (rule "sub_literals" (formula "46") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0"))
                           (rule "applyEq" (formula "46") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                           (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_12"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                           (rule "replaceKnownSelect_taclet110000000_12" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_15" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "27"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "19"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_12"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")))
                           (rule "replaceKnownSelect_taclet110000000_16" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_19" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "27"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "19"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_12"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                           (rule "replaceKnownSelect_taclet110000000_20" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_23" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "27"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "19"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_12"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                           (rule "replaceKnownSelect_taclet110000000_24" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_27" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "27"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "19"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_12"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                           (rule "replaceKnownSelect_taclet110000000_28" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_31" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "27"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "19"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "49") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_12"))
                           (rule "applyEq" (formula "50") (term "0,1,1,1,0,0") (ifseqformula "49"))
                           (rule "applyEq" (formula "53") (term "0") (ifseqformula "49"))
                           (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "71")))
                           (rule "replaceKnownSelect_taclet110000000_32" (formula "49") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_35" (formula "49") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,0") (ifseqformula "34"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,0,0,0") (ifseqformula "18"))
                           (rule "replace_known_left" (formula "49") (term "0,0,0,0,0,0") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "49"))
                           (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "49"))
                           (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0") (ifseqformula "49"))
                           (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0") (ifseqformula "49"))
                           (rule "hideAuxiliaryEq" (formula "49"))
                           (rule "pullOutSelect" (formula "48") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_12"))
                           (rule "applyEq" (formula "52") (term "0") (ifseqformula "48"))
                           (rule "applyEq" (formula "49") (term "0,1,1,1,0,0") (ifseqformula "48"))
                           (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "70")))
                           (rule "replaceKnownSelect_taclet110000000_36" (formula "48") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_39" (formula "48") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0") (ifseqformula "34"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,0,0") (ifseqformula "18"))
                           (rule "replace_known_left" (formula "48") (term "0,0,0,0,0,0") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "48"))
                           (rule "applyEqReverse" (formula "49") (term "0,1,1,1,0,0") (ifseqformula "48"))
                           (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "48"))
                           (rule "applyEqReverse" (formula "49") (term "1,0,0,1,0") (ifseqformula "48"))
                           (rule "hideAuxiliaryEq" (formula "48"))
                           (rule "pullOutSelect" (formula "47") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_12"))
                           (rule "applyEq" (formula "51") (term "0") (ifseqformula "47"))
                           (rule "applyEq" (formula "48") (term "0,1,1,1,0,0") (ifseqformula "47"))
                           (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "69")))
                           (rule "replaceKnownSelect_taclet110000000_40" (formula "47") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110000000_43" (formula "47") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0") (ifseqformula "34"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,0,0") (ifseqformula "18"))
                           (rule "replace_known_left" (formula "47") (term "0,0,0,0,0,0") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "applyEqReverse" (formula "48") (term "0,1,1,1,0,0") (ifseqformula "47"))
                           (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "47"))
                           (rule "applyEqReverse" (formula "48") (term "1,0,0,1,0") (ifseqformula "47"))
                           (rule "hideAuxiliaryEq" (formula "47"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "38") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                           (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                           (rule "commute_or_2" (formula "41") (term "0"))
                           (rule "nnf_imp2or" (formula "24") (term "0"))
                           (rule "nnf_imp2or" (formula "23") (term "0"))
                           (rule "nnf_imp2or" (formula "22") (term "0"))
                           (rule "nnf_imp2or" (formula "21") (term "0"))
                           (rule "nnf_imp2or" (formula "31") (term "0"))
                           (rule "nnf_imp2or" (formula "30") (term "0"))
                           (rule "nnf_imp2or" (formula "29") (term "0"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
                           (rule "andLeft" (formula "7"))
                           (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                           (rule "applyEq" (formula "8") (term "0,0,1,0,0,1,0,0") (ifseqformula "9"))
                           (rule "applyEq" (formula "8") (term "0,0,1,0") (ifseqformula "9"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "nnf_imp2or" (formula "16") (term "0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "nnf_imp2or" (formula "14") (term "0"))
                           (rule "ifthenelse_split" (formula "6") (term "0"))
                           (branch "result_0 ≥ 1 TRUE"
                              (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "7")))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "60") (inst "iv=iv"))
                              (rule "lenOfSeqDef" (formula "60") (term "1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0,0,1"))
                              (rule "times_zero_2" (formula "60") (term "1,1,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "60") (term "1,1,1,0,0,1"))
                              (rule "lenOfSeqDef" (formula "60") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "60") (term "1,1,0"))
                              (rule "times_zero_2" (formula "60") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "60") (term "1,1,0"))
                              (rule "lenOfSeqDef" (formula "60") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "60") (term "1,0,0"))
                              (rule "times_zero_2" (formula "60") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "60") (term "1,0,0"))
                              (rule "getOfSeqDef" (formula "60") (term "1,1,0,1"))
                              (rule "castDel" (formula "60") (term "2,1,1,0,1"))
                              (rule "castDel" (formula "60") (term "1,1,1,0,1"))
                              (rule "add_zero_right" (formula "60") (term "0,2,1,1,1,0,1"))
                              (rule "polySimp_elimSub" (formula "60") (term "1,1,0,1,1,0,1"))
                              (rule "times_zero_2" (formula "60") (term "1,1,1,0,1,1,0,1"))
                              (rule "add_zero_right" (formula "60") (term "1,1,0,1,1,0,1"))
                              (rule "getOfSeqDef" (formula "60") (term "0,1,0,1"))
                              (rule "castDel" (formula "60") (term "1,0,1,0,1"))
                              (rule "castDel" (formula "60") (term "2,0,1,0,1"))
                              (rule "add_zero_right" (formula "60") (term "0,2,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "60") (term "1,1,0,0,1,0,1"))
                              (rule "times_zero_2" (formula "60") (term "1,1,1,0,0,1,0,1"))
                              (rule "add_zero_right" (formula "60") (term "1,1,0,0,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "60") (term "0,0,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,0"))
                              (rule "add_zero_right" (formula "60") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                              (rule "add_zero_right" (formula "60") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,1,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,1,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,1,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,1,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "60") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "60") (term "0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "60") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "60") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,1,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,1,0,1,1,0,1"))
                              (rule "mul_literals" (formula "60") (term "0,1,1,0,1,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,1,1,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,1,0,1"))
                              (rule "mul_literals" (formula "60") (term "0,1,1,0,0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,1,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "60") (term "0,0,1,0,0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "0,0,0,1,0,0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "60") (term "0,0,0,1,0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "60") (term "0,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,1"))
                              (rule "nnf_imp2or" (formula "14") (term "0"))
                              (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                              (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                              (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "6"))
                              (rule "leq_literals" (formula "21") (term "0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                              (rule "andLeft" (formula "37"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                              (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "true_left" (formula "37"))
                              (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "true_left" (formula "37"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "self.sorted.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "60") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "60") (term "1,1,1,1,0,1") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "60") (term "0,0,0,1,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "60"))
                                 (rule "allRight" (formula "60") (inst "sk=iv_4"))
                                 (rule "impRight" (formula "60"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0,1,1") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "60") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "2") (term "0,1,1,1") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "60") (term "1,1,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "60") (term "0,1,1,1,0,1") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "60") (term "1,1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "59") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "1")))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "59") (term "0,0"))
                                 (rule "eqSymm" (formula "59"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "59") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0,0,0"))
                                 (rule "eqSymm" (formula "59"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0"))
                                 (rule "eqSymm" (formula "59"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,1"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0"))
                                 (rule "eqSymm" (formula "59"))
                                 (rule "pullOutSelect" (formula "59") (term "1,0") (inst "selectSK=arr_31"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "19"))
                                 (rule "eqSymm" (formula "60"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_32"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                                 (rule "pullOutSelect" (formula "61") (term "1,0") (inst "selectSK=arr_33"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet00110000000_64" (formula "1") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "29"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "21"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_34"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "22"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "nnf_imp2or" (formula "50") (term "0"))
                                 (rule "nnf_imp2or" (formula "53") (term "0"))
                                 (rule "nnf_imp2or" (formula "52") (term "0"))
                                 (rule "nnf_imp2or" (formula "51") (term "0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "53") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "53") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                 (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "commute_or_2" (formula "42") (term "0"))
                                 (rule "commute_or" (formula "45") (term "0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0"))
                                 (rule "commute_or_2" (formula "27") (term "0"))
                                 (rule "commute_or_2" (formula "26") (term "0"))
                                 (rule "commute_or_2" (formula "25") (term "0"))
                                 (rule "commute_or_2" (formula "35") (term "0"))
                                 (rule "commute_or_2" (formula "34") (term "0"))
                                 (rule "commute_or_2" (formula "33") (term "0"))
                                 (rule "commute_or_2" (formula "32") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "45") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "arrayLengthNotNegative" (formula "45") (term "1,1,0"))
                                 (rule "commute_or_2" (formula "20") (term "0"))
                                 (rule "commute_or_2" (formula "19") (term "0"))
                                 (rule "commute_or_2" (formula "18") (term "0"))
                                 (rule "commute_or_2" (formula "17") (term "0"))
                                 (rule "commute_or_2" (formula "51") (term "0"))
                                 (rule "commute_or_2" (formula "54") (term "0"))
                                 (rule "ifthenelse_split" (formula "6") (term "0"))
                                 (branch "self.sorted[iv_3].length ≥ 1 TRUE"
                                    (rule "replace_known_left" (formula "65") (term "0,1") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "7")))
                                    (rule "commute_or_2" (formula "54") (term "0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0,0") (ifseqformula "13"))
                                    (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "57")))
                                    (rule "true_left" (formula "25"))
                                    (rule "commute_or_2" (formula "53") (term "0"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬self.sorted[iv_3] = null ∧ ¬self.sorted[iv_3].<created> = TRUE TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "referencedObjectIsCreatedRight" (formula "57") (ifseqformula "56"))
                                       (rule "close" (formula "57") (ifseqformula "13"))
                                    )
                                    (branch " ¬self.sorted[iv_3] = null ∧ ¬self.sorted[iv_3].<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_or" (formula "41") (term "0,0"))
                                       (rule "commute_or" (formula "44") (term "0,0"))
                                       (rule "commute_or" (formula "43") (term "0,0"))
                                       (rule "commute_or" (formula "42") (term "0,0"))
                                       (rule "commute_or" (formula "28") (term "0,0"))
                                       (rule "commute_or" (formula "27") (term "0,0"))
                                       (rule "commute_or" (formula "26") (term "0,0"))
                                       (rule "commute_or" (formula "25") (term "0,0"))
                                       (rule "commute_or" (formula "35") (term "0,0"))
                                       (rule "commute_or" (formula "34") (term "0,0"))
                                       (rule "commute_or" (formula "33") (term "0,0"))
                                       (rule "commute_or" (formula "32") (term "0,0"))
                                       (rule "commute_or" (formula "20") (term "0,0"))
                                       (rule "commute_or" (formula "19") (term "0,0"))
                                       (rule "commute_or" (formula "18") (term "0,0"))
                                       (rule "commute_or" (formula "17") (term "0,0"))
                                       (rule "commute_or" (formula "51") (term "0,0"))
                                       (rule "commute_or" (formula "54") (term "0,0"))
                                       (rule "commute_or" (formula "53") (term "0,0"))
                                       (rule "commute_or" (formula "52") (term "0,0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "12"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "13"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "14"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "15"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "16"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "17"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "18"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "19"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "ifthenelse_split" (formula "10") (term "0"))
                                       (branch " ¬self.sorted[iv_3] = null ∧ ¬( self.sorted[iv_3].<created> = TRUE ∨ (self.sorted[iv_3]@heap).<created>@anon_heap_readLength«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "10"))
                                          (rule "notLeft" (formula "11"))
                                          (rule "notLeft" (formula "10"))
                                          (rule "orRight" (formula "64"))
                                          (rule "referencedObjectIsCreatedRight" (formula "64") (ifseqformula "63"))
                                          (rule "close" (formula "64") (ifseqformula "20"))
                                       )
                                       (branch " ¬self.sorted[iv_3] = null ∧ ¬( self.sorted[iv_3].<created> = TRUE ∨ (self.sorted[iv_3]@heap).<created>@anon_heap_readLength«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                          (rule "hideAuxiliaryEq" (formula "10"))
                                          (rule "allLeft" (formula "58") (inst "t=iv_3"))
                                          (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "15"))
                                          (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "inEqSimp_contradInEq1" (formula "58") (term "1") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "58") (term "0,0,1"))
                                          (rule "leq_literals" (formula "58") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "notLeft" (formula "58"))
                                          (rule "pullOutSelect" (formula "62") (term "0") (inst "selectSK=arr_35"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "46"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "30"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "15")))
                                          (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "narrowSelectArrayType" (formula "62") (term "0") (ifseqformula "19") (ifseqformula "65"))
                                          (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "62"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "replace_known_right" (formula "10") (term "0,0,0,0") (ifseqformula "62"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "replace_known_right" (formula "64") (term "0,0") (ifseqformula "62"))
                                          (builtin "One Step Simplification" (formula "64"))
                                          (rule "notRight" (formula "64"))
                                          (rule "replace_known_left" (formula "11") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "11"))
                                          (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "11"))
                                          (rule "hideAuxiliaryEq" (formula "11"))
                                          (rule "eqSymm" (formula "73"))
                                          (rule "replace_known_left" (formula "10") (term "0,0,0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "73")))
                                          (rule "closeFalse" (formula "10"))
                                       )
                                    )
                                 )
                                 (branch "self.sorted[iv_3].length ≥ 1 FALSE"
                                    (rule "inEqSimp_geqRight" (formula "55"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "times_zero_2" (formula "7") (term "1,0"))
                                    (rule "add_zero_right" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "closeFalse" (formula "7"))
                                 )
                              )
                              (branch "self.sorted.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "51") (ifseqformula "52"))
                                 (rule "close" (formula "51") (ifseqformula "9"))
                              )
                           )
                           (branch "result_0 ≥ 1 FALSE"
                              (rule "inEqSimp_geqRight" (formula "50"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "times_zero_2" (formula "7") (term "1,0"))
                              (rule "add_zero_right" (formula "7") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "closeFalse" (formula "7"))
                           )
                        )
                     )
                  )
                  (branch "CUT: array2seq2d(heapAfter_checkBallots, result_2) = array2seq2d(heapAfter_split, result_2) FALSE"
                     (rule "hide_right" (formula "38") (userinteraction))
                     (rule "array2seq2dDef" (formula "31") (term "0") (inst "u=u") (userinteraction))
                     (rule "array2seq2dDef" (formula "31") (term "1") (inst "u=u") (userinteraction))
                     (rule "equalityToSeqGetAndSeqLenRight" (formula "31") (inst "iv=iv") (userinteraction))
                     (rule "typeEqDerived" (formula "30") (term "0,1,1,1") (ifseqformula "28"))
                     (rule "typeEqDerived" (formula "30") (term "0,0,0,1,1") (ifseqformula "28"))
                     (rule "typeEqDerived" (formula "30") (term "0,1,0,1,1") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "28")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "9"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (ifseqformula "14"))
                     (rule "true_left" (formula "30"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "20"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0") (ifseqformula "9"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "14"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "14"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1") (ifseqformula "9"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1") (ifseqformula "9"))
                     (rule "orRight" (formula "33"))
                     (rule "orRight" (formula "31"))
                     (rule "orRight" (formula "31"))
                     (rule "eqSymm" (formula "11"))
                     (rule "eqSymm" (formula "30") (term "1,0,1"))
                     (rule "eqSymm" (formula "30") (term "0"))
                     (rule "eqSymm" (formula "22"))
                     (rule "eqSymm" (formula "6"))
                     (rule "eqSymm" (formula "16"))
                     (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
                     (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "34"))
                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                     (rule "lenOfSeqDef" (formula "30") (term "1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "30") (term "1,1,1,0,0,1"))
                     (rule "times_zero_2" (formula "30") (term "1,1,1,1,0,0,1"))
                     (rule "add_zero_right" (formula "30") (term "1,1,1,0,0,1"))
                     (rule "getOfSeqDef" (formula "30") (term "1,1,0,1"))
                     (rule "castDel" (formula "30") (term "1,1,1,0,1"))
                     (rule "castDel" (formula "30") (term "2,1,1,0,1"))
                     (rule "add_zero_right" (formula "30") (term "0,2,1,1,1,1,0,1"))
                     (rule "polySimp_elimSub" (formula "30") (term "1,1,0,1,1,0,1"))
                     (rule "times_zero_2" (formula "30") (term "1,1,1,0,1,1,0,1"))
                     (rule "add_zero_right" (formula "30") (term "1,1,0,1,1,0,1"))
                     (rule "getOfSeqDef" (formula "30") (term "0,1,0,1"))
                     (rule "castDel" (formula "30") (term "2,0,1,0,1"))
                     (rule "castDel" (formula "30") (term "1,0,1,0,1"))
                     (rule "add_zero_right" (formula "30") (term "0,2,1,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0,1,0,1"))
                     (rule "mul_literals" (formula "30") (term "1,1,1,0,0,1,0,1"))
                     (rule "add_zero_right" (formula "30") (term "1,1,0,0,1,0,1"))
                     (rule "lenOfSeqDef" (formula "30") (term "0,0"))
                     (rule "eqSymm" (formula "30") (term "0"))
                     (rule "polySimp_elimSub" (formula "30") (term "1,1,0"))
                     (rule "mul_literals" (formula "30") (term "1,1,1,0"))
                     (rule "add_zero_right" (formula "30") (term "1,1,0"))
                     (rule "lenOfSeqDef" (formula "30") (term "0,0"))
                     (rule "polySimp_elimSub" (formula "30") (term "1,0,0"))
                     (rule "times_zero_2" (formula "30") (term "1,1,0,0"))
                     (rule "add_zero_right" (formula "30") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "allRight" (formula "30") (inst "sk=iv_1"))
                     (rule "impRight" (formula "30"))
                     (rule "andLeft" (formula "1"))
                     (rule "replace_known_left" (formula "32") (term "0,0,1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "1")))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                     (rule "eqSymm" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                     (rule "eqSymm" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1"))
                     (rule "eqSymm" (formula "32"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "eqSymm" (formula "32"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
                     (rule "eqSymm" (formula "32"))
                     (rule "polySimp_elimOne" (formula "32") (term "0,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "0,0,0"))
                     (rule "eqSymm" (formula "32"))
                     (rule "nonNull" (formula "26") (inst "i=i"))
                     (rule "greater_literals" (formula "26") (term "0,1"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "36")))
                     (rule "sub_literals" (formula "26") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                     (rule "array2seqDef" (formula "8") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "8"))
                     (rule "narrowSelectArrayType" (formula "8") (term "2,0") (ifseqformula "3") (ifseqformula "41"))
                     (rule "array2seqDef" (formula "18") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "18"))
                     (rule "array2seqDef" (formula "32") (term "1,1") (inst "u=u"))
                     (rule "eqSymm" (formula "32"))
                     (rule "array2seqDef" (formula "32") (term "1,1") (inst "u=u"))
                     (rule "eqSymm" (formula "32"))
                     (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "eqSeqDef2" (formula "8") (inst "iv=iv") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "pullOutSelect" (formula "12") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_11"))
                     (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "39")) (ifInst ""  (formula "4")))
                     (rule "applyEqReverse" (formula "13") (term "0,0") (ifseqformula "12"))
                     (rule "hideAuxiliaryEq" (formula "12"))
                     (rule "pullOutSelect" (formula "22") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_12"))
                     (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "39")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,0") (ifseqformula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,0,0") (ifseqformula "10"))
                     (rule "replace_known_left" (formula "22") (term "0,0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "39")))
                     (rule "replaceKnownSelect_taclet1000000_1" (formula "22") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_2" (formula "22") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,0") (ifseqformula "10"))
                     (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                     (rule "hideAuxiliaryEq" (formula "22"))
                     (rule "pullOutSelect" (formula "30") (term "1,2,1,1") (inst "selectSK=arr_20"))
                     (rule "applyEq" (formula "31") (term "0,1,1,1") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "11"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,0") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "34")) (ifInst ""  (formula "22")))
                     (rule "applyEq" (formula "31") (term "0,1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "31") (term "1,2,1,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "11"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "34"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                     (rule "applyEqReverse" (formula "31") (term "1,2,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "31") (term "0,1,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "31") (term "1,2,1,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "31") (term "0,1,1,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "nnf_imp2or" (formula "24") (term "0"))
                     (rule "nnf_notAnd" (formula "24") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "23") (ifseqformula "5"))
                     (rule "replaceKnownSelect_taclet1000000_3" (formula "23") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_5" (formula "23") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "24"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "24"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "24"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "25"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "23"))
                     (rule "nonNull" (formula "26") (inst "i=i"))
                     (rule "greater_literals" (formula "26") (term "0,1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "sub_literals" (formula "26") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "andLeft" (formula "26"))
                     (rule "notLeft" (formula "26"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "25") (inst "i=i"))
                     (rule "greater_literals" (formula "25") (term "0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "sub_literals" (formula "25") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "notLeft" (formula "25"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "24") (inst "i=i"))
                     (rule "greater_literals" (formula "24") (term "0,1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "sub_literals" (formula "24") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "notLeft" (formula "24"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "23") (inst "i=i"))
                     (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "greater_literals" (formula "23") (term "0,1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                     (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "11"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "11"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "11"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "11"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "11"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_9"))
                     (rule "applyEq" (formula "37") (term "0") (ifseqformula "26"))
                     (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                     (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0") (ifseqformula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0,0") (ifseqformula "10"))
                     (rule "replace_known_left" (formula "26") (term "0,0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0") (ifseqformula "10"))
                     (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "51")) (ifInst ""  (formula "4")))
                     (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "26"))
                     (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                     (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_9"))
                     (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                     (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
                     (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0") (ifseqformula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0,0") (ifseqformula "10"))
                     (rule "replace_known_left" (formula "25") (term "0,0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0") (ifseqformula "10"))
                     (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")) (ifInst ""  (formula "4")))
                     (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                     (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "25"))
                     (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                     (rule "hideAuxiliaryEq" (formula "25"))
                     (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_9"))
                     (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "24"))
                     (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0") (ifseqformula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,0") (ifseqformula "10"))
                     (rule "replace_known_left" (formula "24") (term "0,0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0") (ifseqformula "10"))
                     (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "51")) (ifInst ""  (formula "4")))
                     (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
                     (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                     (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "24"))
                     (rule "hideAuxiliaryEq" (formula "24"))
                     (rule "nnf_imp2or" (formula "23") (term "0"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "24") (term "0"))
                     (rule "nnf_notAnd" (formula "23") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "26") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "24") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "17") (ifseqformula "5"))
                     (rule "replaceKnownSelect_taclet1000000_10" (formula "17") (term "0,0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_12" (formula "17") (term "0,0,1"))
                     (rule "replaceKnownSelect_taclet1000000_14" (formula "17") (term "0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_16" (formula "17") (term "0,0,1,0"))
                     (rule "replaceKnownSelect_taclet1000000_18" (formula "17") (term "0,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_20" (formula "17") (term "0,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1000000_30" (formula "17") (term "1,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000000_22" (formula "17") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_32" (formula "17") (term "1,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_24" (formula "17") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000000_34" (formula "17") (term "1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000000_38" (formula "17") (term "1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_36" (formula "17") (term "1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000000_4" (formula "17") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_40" (formula "17") (term "1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000000_26" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_5" (formula "17") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_28" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "andLeft" (formula "17"))
                     (rule "notLeft" (formula "18"))
                     (rule "andLeft" (formula "17"))
                     (rule "notLeft" (formula "18"))
                     (rule "andLeft" (formula "17"))
                     (rule "notLeft" (formula "18"))
                     (rule "andLeft" (formula "17"))
                     (rule "notLeft" (formula "18"))
                     (rule "andLeft" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "notLeft" (formula "17"))
                     (rule "nonNull" (formula "20") (inst "i=i"))
                     (rule "sub_literals" (formula "20") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "39")))
                     (rule "greater_literals" (formula "20") (term "0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "19") (inst "i=i"))
                     (rule "greater_literals" (formula "19") (term "0,1"))
                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "38")))
                     (rule "sub_literals" (formula "19") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "18") (inst "i=i"))
                     (rule "greater_literals" (formula "18") (term "0,1"))
                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "37")))
                     (rule "sub_literals" (formula "18") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "17") (inst "i=i"))
                     (rule "greater_literals" (formula "17") (term "0,1"))
                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "36")))
                     (rule "sub_literals" (formula "17") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "8") (ifseqformula "5"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "9"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "9"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "9"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "9"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "8"))
                     (rule "nonNull" (formula "11") (inst "i=i"))
                     (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "42")))
                     (rule "greater_literals" (formula "11") (term "0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "42"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "10") (inst "i=i"))
                     (rule "greater_literals" (formula "10") (term "0,1"))
                     (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "41")))
                     (rule "sub_literals" (formula "10") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "41"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "9") (inst "i=i"))
                     (rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "40")))
                     (rule "greater_literals" (formula "9") (term "0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "40"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "8") (inst "i=i"))
                     (rule "greater_literals" (formula "8") (term "0,1"))
                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "39")))
                     (rule "sub_literals" (formula "8") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "39"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                     (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "16") (ifseqformula "5"))
                     (rule "replaceKnownSelect_taclet1000000_11" (formula "16") (term "0,0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_12" (formula "16") (term "0,0,1"))
                     (rule "replaceKnownSelect_taclet1000000_15" (formula "16") (term "0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_16" (formula "16") (term "0,0,1,0"))
                     (rule "replaceKnownSelect_taclet1000000_19" (formula "16") (term "0,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_20" (formula "16") (term "0,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1000000_31" (formula "16") (term "1,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000000_23" (formula "16") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_32" (formula "16") (term "1,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_24" (formula "16") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000000_35" (formula "16") (term "1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000000_39" (formula "16") (term "1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_36" (formula "16") (term "1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000000_1" (formula "16") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_40" (formula "16") (term "1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000000_27" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_2" (formula "16") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_28" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "andLeft" (formula "16"))
                     (rule "notLeft" (formula "17"))
                     (rule "andLeft" (formula "16"))
                     (rule "notLeft" (formula "17"))
                     (rule "andLeft" (formula "16"))
                     (rule "notLeft" (formula "17"))
                     (rule "andLeft" (formula "16"))
                     (rule "notLeft" (formula "17"))
                     (rule "andLeft" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "notLeft" (formula "16"))
                     (rule "nonNull" (formula "19") (inst "i=i"))
                     (rule "greater_literals" (formula "19") (term "0,1"))
                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "45")))
                     (rule "sub_literals" (formula "19") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "18") (inst "i=i"))
                     (rule "greater_literals" (formula "18") (term "0,1"))
                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "44")))
                     (rule "sub_literals" (formula "18") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "17") (inst "i=i"))
                     (rule "greater_literals" (formula "17") (term "0,1"))
                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "43")))
                     (rule "sub_literals" (formula "17") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "16") (inst "i=i"))
                     (rule "greater_literals" (formula "16") (term "0,1"))
                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "42")))
                     (rule "sub_literals" (formula "16") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                     (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "41") (ifseqformula "5"))
                     (rule "andLeft" (formula "41"))
                     (rule "notLeft" (formula "42"))
                     (rule "andLeft" (formula "41"))
                     (rule "notLeft" (formula "42"))
                     (rule "andLeft" (formula "41"))
                     (rule "notLeft" (formula "42"))
                     (rule "andLeft" (formula "41"))
                     (rule "andLeft" (formula "41"))
                     (rule "notLeft" (formula "43"))
                     (rule "andLeft" (formula "41"))
                     (rule "andLeft" (formula "41"))
                     (rule "andLeft" (formula "41"))
                     (rule "notLeft" (formula "41"))
                     (rule "nonNull" (formula "44") (inst "i=i"))
                     (rule "sub_literals" (formula "44") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "greater_literals" (formula "44") (term "0,1"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "andLeft" (formula "44"))
                     (rule "notLeft" (formula "44"))
                     (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "43") (inst "i=i"))
                     (rule "greater_literals" (formula "43") (term "0,1"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "sub_literals" (formula "43") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "notLeft" (formula "43"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "42") (inst "i=i"))
                     (rule "greater_literals" (formula "42") (term "0,1"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "sub_literals" (formula "42") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "andLeft" (formula "42"))
                     (rule "notLeft" (formula "42"))
                     (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "41") (inst "i=i"))
                     (rule "greater_literals" (formula "41") (term "0,1"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "sub_literals" (formula "41") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "andLeft" (formula "41"))
                     (rule "notLeft" (formula "41"))
                     (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_10"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                     (rule "replaceKnownSelect_taclet1000000_9" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_12" (formula "1") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "22"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "14"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_10"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                     (rule "replaceKnownSelect_taclet1000000_13" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_16" (formula "1") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "22"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "14"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_10"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                     (rule "replaceKnownSelect_taclet1000000_17" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_20" (formula "1") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "22"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "14"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_10"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                     (rule "replaceKnownSelect_taclet1000000_21" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_24" (formula "1") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "22"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "14"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_10"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                     (rule "replaceKnownSelect_taclet1000000_25" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_28" (formula "1") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "22"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "14"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "44") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_10"))
                     (rule "applyEq" (formula "45") (term "0,1,1,1,0,0") (ifseqformula "44"))
                     (rule "applyEq" (formula "49") (term "0") (ifseqformula "44"))
                     (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "67")))
                     (rule "replaceKnownSelect_taclet1000000_29" (formula "44") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_32" (formula "44") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0") (ifseqformula "29"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0") (ifseqformula "13"))
                     (rule "replace_known_left" (formula "44") (term "0,0,0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "applyEqReverse" (formula "45") (term "1,0,0,1,0") (ifseqformula "44"))
                     (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "44"))
                     (rule "applyEqReverse" (formula "45") (term "0,1,1,1,0,0") (ifseqformula "44"))
                     (rule "hideAuxiliaryEq" (formula "44"))
                     (rule "pullOutSelect" (formula "43") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_10"))
                     (rule "applyEq" (formula "48") (term "0") (ifseqformula "43"))
                     (rule "applyEq" (formula "44") (term "0,1,1,1,0,0") (ifseqformula "43"))
                     (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "66")))
                     (rule "replaceKnownSelect_taclet1000000_33" (formula "43") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_36" (formula "43") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0") (ifseqformula "29"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,0") (ifseqformula "13"))
                     (rule "replace_known_left" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "applyEqReverse" (formula "44") (term "0,1,1,1,0,0") (ifseqformula "43"))
                     (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "43"))
                     (rule "applyEqReverse" (formula "44") (term "1,0,0,1,0") (ifseqformula "43"))
                     (rule "hideAuxiliaryEq" (formula "43"))
                     (rule "pullOutSelect" (formula "42") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_10"))
                     (rule "applyEq" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
                     (rule "applyEq" (formula "47") (term "0") (ifseqformula "42"))
                     (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "65")))
                     (rule "replaceKnownSelect_taclet1000000_37" (formula "42") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_40" (formula "42") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0") (ifseqformula "29"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,0") (ifseqformula "13"))
                     (rule "replace_known_left" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "applyEqReverse" (formula "43") (term "1,0,0,1,0") (ifseqformula "42"))
                     (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "42"))
                     (rule "applyEqReverse" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
                     (rule "hideAuxiliaryEq" (formula "42"))
                     (rule "pullOutSelect" (formula "41") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_13"))
                     (rule "applyEq" (formula "46") (term "0") (ifseqformula "41"))
                     (rule "applyEq" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
                     (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "64")))
                     (rule "replaceKnownSelect_taclet1000000_3" (formula "41") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_5" (formula "41") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0") (ifseqformula "29"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0,0,0") (ifseqformula "13"))
                     (rule "replace_known_left" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "applyEqReverse" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
                     (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "41"))
                     (rule "applyEqReverse" (formula "42") (term "1,0,0,1,0") (ifseqformula "41"))
                     (rule "hideAuxiliaryEq" (formula "41"))
                     (rule "applyEq" (formula "41") (term "1,1,1,0,0") (ifseqformula "15"))
                     (rule "commute_or_2" (formula "36") (term "0"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "24") (term "0"))
                     (rule "nnf_imp2or" (formula "23") (term "0"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_imp2or" (formula "10") (term "0"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "result_2.length ≥ 1 TRUE"
                        (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "3")))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "55") (inst "iv=iv"))
                        (rule "lenOfSeqDef" (formula "55") (term "0,0"))
                        (rule "eqSymm" (formula "55") (term "0"))
                        (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                        (rule "mul_literals" (formula "55") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "55") (term "1,1,0"))
                        (rule "getOfSeqDef" (formula "55") (term "1,1,0,1"))
                        (rule "castDel" (formula "55") (term "1,1,1,0,1"))
                        (rule "castDel" (formula "55") (term "2,1,1,0,1"))
                        (rule "add_zero_right" (formula "55") (term "0,2,1,1,1,0,1"))
                        (rule "polySimp_elimSub" (formula "55") (term "1,1,0,1,1,0,1"))
                        (rule "times_zero_2" (formula "55") (term "1,1,1,0,1,1,0,1"))
                        (rule "add_zero_right" (formula "55") (term "1,1,0,1,1,0,1"))
                        (rule "getOfSeqDef" (formula "55") (term "0,1,0,1"))
                        (rule "castDel" (formula "55") (term "1,0,1,0,1"))
                        (rule "castDel" (formula "55") (term "2,0,1,0,1"))
                        (rule "add_zero_right" (formula "55") (term "0,2,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "55") (term "1,1,0,0,1,0,1"))
                        (rule "times_zero_2" (formula "55") (term "1,1,1,0,0,1,0,1"))
                        (rule "add_zero_right" (formula "55") (term "1,1,0,0,1,0,1"))
                        (rule "lenOfSeqDef" (formula "55") (term "1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "55") (term "1,1,1,0,0,1"))
                        (rule "times_zero_2" (formula "55") (term "1,1,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "55") (term "1,1,1,0,0,1"))
                        (rule "lenOfSeqDef" (formula "55") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "55") (term "1,0,0"))
                        (rule "times_zero_2" (formula "55") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "55") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "allRight" (formula "55") (inst "sk=iv_2"))
                        (rule "impRight" (formula "55"))
                        (rule "andLeft" (formula "1"))
                        (rule "replace_known_left" (formula "57") (term "0,0,1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "1")))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0"))
                        (rule "eqSymm" (formula "57"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "57") (term "0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0"))
                        (rule "eqSymm" (formula "57"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1"))
                        (rule "eqSymm" (formula "57"))
                        (rule "polySimp_addComm1" (formula "57") (term "0,0,0"))
                        (rule "eqSymm" (formula "57"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "57") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "57") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                        (rule "pullOutSelect" (formula "57") (term "1,1") (inst "selectSK=arr_21"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "25"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "17"))
                        (rule "pullOutSelect" (formula "58") (term "1,0") (inst "selectSK=arr_22"))
                        (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "26"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "18"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_23"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "19"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_24"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "nnf_imp2or" (formula "16") (term "0"))
                        (rule "nnf_imp2or" (formula "15") (term "0"))
                        (rule "nnf_imp2or" (formula "26") (term "0"))
                        (rule "commute_or_2" (formula "39") (term "0"))
                        (rule "nnf_imp2or" (formula "25") (term "0"))
                        (rule "commute_or_2" (formula "42") (term "0"))
                        (rule "nnf_imp2or" (formula "24") (term "0"))
                        (rule "commute_or_2" (formula "41") (term "0"))
                        (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                        (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "nnf_imp2or" (formula "24") (term "0"))
                        (rule "commute_or_2" (formula "41") (term "0"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                        (rule "andLeft" (formula "39"))
                        (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                        (rule "applyEq" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "41"))
                        (rule "applyEq" (formula "40") (term "0,0,1,0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "true_left" (formula "40"))
                        (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                        (builtin "One Step Simplification" (formula "39"))
                        (rule "true_left" (formula "39"))
                        (rule "nnf_imp2or" (formula "52") (term "0"))
                        (rule "nnf_imp2or" (formula "51") (term "0"))
                        (rule "nnf_imp2or" (formula "50") (term "0"))
                        (rule "nnf_imp2or" (formula "49") (term "0"))
                        (rule "nnf_notAnd" (formula "34") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                        (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "33") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                        (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "32") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                        (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "31") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                        (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "18") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "25") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "24") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                        (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "52") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                        (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                        (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "51") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0"))
                        (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                        (rule "mul_literals" (formula "51") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "51") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "50") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0"))
                        (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "50") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                        (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "50") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "50") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "49") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                        (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                        (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                        (rule "commute_or" (formula "44") (term "0,0"))
                        (rule "commute_or" (formula "40") (term "0,0"))
                        (rule "commute_or" (formula "43") (term "0,0"))
                        (rule "commute_or" (formula "42") (term "0,0"))
                        (rule "commute_or" (formula "41") (term "0,0"))
                        (rule "commute_or_2" (formula "34") (term "0"))
                        (rule "commute_or_2" (formula "33") (term "0"))
                        (rule "commute_or_2" (formula "32") (term "0"))
                        (rule "commute_or_2" (formula "31") (term "0"))
                        (rule "commute_or_2" (formula "18") (term "0"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "commute_or_2" (formula "27") (term "0"))
                        (rule "commute_or_2" (formula "26") (term "0"))
                        (rule "commute_or_2" (formula "25") (term "0"))
                        (rule "commute_or_2" (formula "24") (term "0"))
                        (rule "commute_or_2" (formula "52") (term "0"))
                        (rule "ifthenelse_split" (formula "6") (term "0"))
                        (branch " result_2[iv_1]@anon_heap_split«anonHeapFunction».length ≥ 1 TRUE"
                           (rule "replace_known_left" (formula "63") (term "0,1") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "7")))
                           (rule "arrayLengthIsAShort" (formula "45") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "true_left" (formula "45"))
                           (rule "arrayLengthNotNegative" (formula "45") (term "1,1,0"))
                           (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "9"))
                           (rule "leq_literals" (formula "45") (term "0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "true_left" (formula "45"))
                           (rule "commute_or_2" (formula "52") (term "0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬ result_2[iv_1]@anon_heap_split«anonHeapFunction» = null ∧ ¬ (result_2[iv_1]@anon_heap_split«anonHeapFunction»).<created> = TRUE TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "notLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "53"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                              (rule "ifthenelse_negated" (formula "3") (term "0"))
                              (rule "ifthenelse_negated" (formula "2") (term "0"))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "46") (ifseqformula "53"))
                              (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "36") (ifseqformula "53"))
                              (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "28") (ifseqformula "53"))
                              (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "19") (ifseqformula "53"))
                              (rule "commute_or_2" (formula "50") (term "0"))
                              (rule "commute_or_2" (formula "49") (term "0"))
                              (rule "commute_or" (formula "34") (term "0,0"))
                              (rule "commute_or" (formula "33") (term "0,0"))
                              (rule "commute_or" (formula "32") (term "0,0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "commute_or" (formula "18") (term "0,0"))
                              (rule "commute_or" (formula "17") (term "0,0"))
                              (rule "commute_or" (formula "16") (term "0,0"))
                              (rule "commute_or" (formula "15") (term "0,0"))
                              (rule "commute_or" (formula "27") (term "0,0"))
                              (rule "commute_or" (formula "26") (term "0,0"))
                              (rule "commute_or" (formula "25") (term "0,0"))
                              (rule "commute_or" (formula "24") (term "0,0"))
                              (rule "commute_or" (formula "52") (term "0,0"))
                              (rule "commute_or" (formula "51") (term "0,0"))
                              (rule "arrayLengthIsAShort" (formula "43") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "arrayLengthNotNegative" (formula "43") (term "1,1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,0") (ifseqformula "10"))
                              (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "arrayLengthIsAShort" (formula "43") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "arrayLengthNotNegative" (formula "43") (term "1,1,0"))
                              (rule "commute_or" (formula "53") (term "0,0"))
                              (rule "commute_or" (formula "52") (term "0,0"))
                              (rule "arrayLengthIsAShort" (formula "42") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "true_left" (formula "42"))
                              (rule "arrayLengthNotNegative" (formula "42") (term "1,1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "10"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "11"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "12"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "13"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "14"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "15"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "16"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "17"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "ifthenelse_split" (formula "9") (term "0"))
                              (branch " (result_2[iv_1]@anon_heap_split«anonHeapFunction»).<created>@anon_heap_readLength«anonHeapFunction» = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
                                 (rule "hideAuxiliaryEq" (formula "10"))
                                 (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "9"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "10"))
                                 (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
                                 (rule "hideAuxiliaryEq" (formula "10"))
                                 (rule "eqSymm" (formula "75"))
                                 (rule "replace_known_left" (formula "10") (term "0,0,0,0") (ifseqformula "9"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "75"))
                                 (rule "closeTrue" (formula "75"))
                              )
                              (branch " (result_2[iv_1]@anon_heap_split«anonHeapFunction»).<created>@anon_heap_readLength«anonHeapFunction» = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                 (rule "hideAuxiliaryEq" (formula "9"))
                                 (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "64"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "replace_known_right" (formula "10") (term "0,0,0,0") (ifseqformula "64"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "allLeft" (formula "55") (inst "t=iv_1"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                 (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                 (rule "leq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "notLeft" (formula "55"))
                                 (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_26"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "28"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "81"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")) (ifInst ""  (formula "80")))
                                 (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "64") (term "0") (ifseqformula "44") (ifseqformula "81"))
                                 (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "ifthenelse_split" (formula "9") (term "0"))
                                 (branch " (result_2[iv_1]@anon_heap_split«anonHeapFunction»).<created>@anon_heap_removeLength«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "10"))
                                    (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "eqSymm" (formula "76"))
                                    (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "76"))
                                    (rule "closeTrue" (formula "76"))
                                 )
                                 (branch " (result_2[iv_1]@anon_heap_split«anonHeapFunction»).<created>@anon_heap_removeLength«anonHeapFunction» = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                    (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "eqSymm" (formula "76"))
                                    (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "ifthenelse_split" (formula "9") (term "0"))
                                    (branch " result_2[iv_1].<created>@anon_heap_split«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "10"))
                                       (builtin "One Step Simplification" (formula "77"))
                                       (rule "closeTrue" (formula "77"))
                                    )
                                    (branch " result_2[iv_1].<created>@anon_heap_split«anonHeapFunction» = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "63") (ifseqformula "66"))
                                       (rule "close" (formula "63") (ifseqformula "43"))
                                    )
                                 )
                              )
                           )
                           (branch " ¬ result_2[iv_1]@anon_heap_split«anonHeapFunction» = null ∧ ¬ (result_2[iv_1]@anon_heap_split«anonHeapFunction»).<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "commute_or_2" (formula "50") (term "0"))
                              (rule "commute_or_2" (formula "49") (term "0"))
                              (rule "commute_or" (formula "34") (term "0,0"))
                              (rule "commute_or" (formula "33") (term "0,0"))
                              (rule "commute_or" (formula "32") (term "0,0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "commute_or" (formula "18") (term "0,0"))
                              (rule "commute_or" (formula "17") (term "0,0"))
                              (rule "commute_or" (formula "16") (term "0,0"))
                              (rule "commute_or" (formula "15") (term "0,0"))
                              (rule "commute_or" (formula "27") (term "0,0"))
                              (rule "commute_or" (formula "26") (term "0,0"))
                              (rule "commute_or" (formula "25") (term "0,0"))
                              (rule "commute_or" (formula "24") (term "0,0"))
                              (rule "commute_or" (formula "52") (term "0,0"))
                              (rule "commute_or" (formula "51") (term "0,0"))
                              (rule "commute_or" (formula "50") (term "0,0"))
                              (rule "commute_or" (formula "49") (term "0,0"))
                              (rule "arrayLengthIsAShort" (formula "43") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "arrayLengthNotNegative" (formula "43") (term "1,1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,0") (ifseqformula "10"))
                              (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "arrayLengthIsAShort" (formula "43") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "arrayLengthNotNegative" (formula "43") (term "1,1,0"))
                              (rule "arrayLengthIsAShort" (formula "42") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "true_left" (formula "42"))
                              (rule "arrayLengthNotNegative" (formula "42") (term "1,1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "10"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "11"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "12"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "13"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "14"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "15"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "16"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "17"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "ifthenelse_split" (formula "9") (term "0"))
                              (branch " ¬ result_2[iv_1]@anon_heap_split«anonHeapFunction» = null ∧ ¬( (result_2[iv_1]@anon_heap_split«anonHeapFunction»).<created> = TRUE ∨ (result_2[iv_1]@anon_heap_split«anonHeapFunction»).<created>@anon_heap_readLength«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "9"))
                                 (rule "notLeft" (formula "10"))
                                 (rule "notLeft" (formula "9"))
                                 (rule "orRight" (formula "66"))
                                 (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                 (rule "hideAuxiliaryEq" (formula "9"))
                                 (rule "replace_known_right" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "65"))
                                 (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "64")) (ifInst ""  (formula "66")))
                                 (rule "replace_known_right" (formula "10") (term "1,0,0,0,1,0,0") (ifseqformula "66"))
                                 (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "64")) (ifInst ""  (formula "65")))
                                 (rule "replace_known_right" (formula "67") (term "0,1") (ifseqformula "65"))
                                 (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "64")))
                                 (rule "closeTrue" (formula "67"))
                              )
                              (branch " ¬ result_2[iv_1]@anon_heap_split«anonHeapFunction» = null ∧ ¬( (result_2[iv_1]@anon_heap_split«anonHeapFunction»).<created> = TRUE ∨ (result_2[iv_1]@anon_heap_split«anonHeapFunction»).<created>@anon_heap_readLength«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                 (rule "hideAuxiliaryEq" (formula "9"))
                                 (rule "allLeft" (formula "55") (inst "t=iv_1"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                 (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                 (rule "leq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "notLeft" (formula "55"))
                                 (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_25"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "28"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "79"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")) (ifInst ""  (formula "80")))
                                 (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "64") (term "0") (ifseqformula "44") (ifseqformula "80"))
                                 (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "64"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "replace_known_right" (formula "10") (term "0,0,0,0") (ifseqformula "64"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "replace_known_right" (formula "66") (term "0,0") (ifseqformula "64"))
                                 (builtin "One Step Simplification" (formula "66"))
                                 (rule "notRight" (formula "66"))
                                 (rule "replace_known_left" (formula "10") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                 (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "10"))
                                 (rule "hideAuxiliaryEq" (formula "10"))
                                 (rule "replace_known_left" (formula "10") (term "0,0,0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "75")))
                                 (rule "closeFalse" (formula "10"))
                              )
                           )
                        )
                        (branch " result_2[iv_1]@anon_heap_split«anonHeapFunction».length ≥ 1 FALSE"
                           (rule "inEqSimp_geqRight" (formula "53"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "mul_literals" (formula "7") (term "1,0"))
                           (rule "add_zero_right" (formula "7") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                           (rule "mul_literals" (formula "7") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "closeFalse" (formula "6"))
                        )
                     )
                     (branch "result_2.length ≥ 1 FALSE"
                        (rule "inEqSimp_geqRight" (formula "45"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "times_zero_2" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "typeEqDerived" (formula "30") (term "0,1,1,1") (ifseqformula "28"))
                  (rule "typeEqDerived" (formula "30") (term "0,1,0,1,1") (ifseqformula "28"))
                  (rule "typeEqDerived" (formula "30") (term "0,0,0,1,1") (ifseqformula "28"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "28")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (ifseqformula "14"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "9"))
                  (rule "true_left" (formula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "14"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "20"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0") (ifseqformula "9"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1") (ifseqformula "9"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "14"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1") (ifseqformula "9"))
                  (rule "orRight" (formula "32"))
                  (rule "orRight" (formula "30"))
                  (rule "orRight" (formula "30"))
                  (rule "eqSymm" (formula "11"))
                  (rule "eqSymm" (formula "22"))
                  (rule "eqSymm" (formula "16"))
                  (rule "eqSymm" (formula "6"))
                  (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "28"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "38"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "29")))
                  (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                  (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                  (rule "nonNull" (formula "24") (inst "i=i"))
                  (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "33")))
                  (rule "greater_literals" (formula "24") (term "0"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                  (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "16"))
                  (rule "array2seqDef" (formula "6") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "6"))
                  (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "1") (ifseqformula "38"))
                  (rule "nonNull" (formula "39") (inst "i=i"))
                  (rule "sub_literals" (formula "39") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "33")))
                  (rule "greater_literals" (formula "39") (term "0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "allRight" (formula "39") (inst "sk=i_4"))
                  (rule "impRight" (formula "39"))
                  (rule "andLeft" (formula "1"))
                  (rule "notRight" (formula "41"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "eqSeqDef2" (formula "19") (inst "iv=iv") (ifseqformula "19"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "pullOutSelect" (formula "13") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_8"))
                  (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "39")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "13"))
                  (rule "hideAuxiliaryEq" (formula "13"))
                  (rule "pullOutSelect" (formula "23") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_9"))
                  (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "21"))
                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "39")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0") (ifseqformula "16"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0,0") (ifseqformula "11"))
                  (rule "replace_known_left" (formula "23") (term "0,0,0,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "39")))
                  (rule "replaceKnownSelect_taclet100000_0" (formula "23") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_1" (formula "23") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0") (ifseqformula "11"))
                  (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                  (rule "hideAuxiliaryEq" (formula "23"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_19"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "22"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "12"))
                  (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "20") (ifseqformula "34"))
                  (rule "nnf_imp2or" (formula "25") (term "0"))
                  (rule "nnf_notAnd" (formula "25") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "14") (ifseqformula "6"))
                  (rule "replaceKnownSelect_taclet100000_0" (formula "14") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_1" (formula "14") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "andLeft" (formula "14"))
                  (rule "notLeft" (formula "15"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "notLeft" (formula "16"))
                  (rule "andLeft" (formula "14"))
                  (rule "notLeft" (formula "16"))
                  (rule "notLeft" (formula "15"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "notLeft" (formula "14"))
                  (rule "nonNull" (formula "17") (inst "i=i"))
                  (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "greater_literals" (formula "17") (term "0,1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "notLeft" (formula "17"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "16") (inst "i=i"))
                  (rule "sub_literals" (formula "16") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "greater_literals" (formula "16") (term "0,1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "notLeft" (formula "16"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "15") (inst "i=i"))
                  (rule "greater_literals" (formula "15") (term "0,1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "notLeft" (formula "15"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "14") (inst "i=i"))
                  (rule "greater_literals" (formula "14") (term "0,1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "sub_literals" (formula "14") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "notLeft" (formula "14"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "17") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_6"))
                  (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "38") (term "0") (ifseqformula "17"))
                  (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "17"))
                  (rule "hideAuxiliaryEq" (formula "17"))
                  (rule "pullOutSelect" (formula "16") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_6"))
                  (rule "applyEq" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "16"))
                  (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0") (ifseqformula "16"))
                  (rule "applyEqReverse" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
                  (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "16"))
                  (rule "hideAuxiliaryEq" (formula "16"))
                  (rule "pullOutSelect" (formula "15") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_6"))
                  (rule "applyEq" (formula "36") (term "0") (ifseqformula "15"))
                  (rule "applyEq" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "15"))
                  (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "15"))
                  (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "15"))
                  (rule "hideAuxiliaryEq" (formula "15"))
                  (rule "nnf_imp2or" (formula "14") (term "0"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "nnf_imp2or" (formula "16") (term "0"))
                  (rule "nnf_imp2or" (formula "15") (term "0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "15") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "27") (ifseqformula "6"))
                  (rule "replaceKnownSelect_taclet100000_2" (formula "27") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_4" (formula "27") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "28"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "28"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "28"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "29"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "27"))
                  (rule "nonNull" (formula "30") (inst "i=i"))
                  (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "greater_literals" (formula "30") (term "0,1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "notLeft" (formula "30"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "29") (inst "i=i"))
                  (rule "greater_literals" (formula "29") (term "0,1"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "sub_literals" (formula "29") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "andLeft" (formula "29"))
                  (rule "notLeft" (formula "29"))
                  (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "28") (inst "i=i"))
                  (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "greater_literals" (formula "28") (term "0,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "notLeft" (formula "28"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "27") (inst "i=i"))
                  (rule "greater_literals" (formula "27") (term "0,1"))
                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "45")))
                  (rule "sub_literals" (formula "27") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                  (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_7"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                  (rule "replaceKnownSelect_taclet100000_8" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_9" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "12"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_7"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                  (rule "replaceKnownSelect_taclet100000_10" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_11" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "12"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_7"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                  (rule "replaceKnownSelect_taclet100000_12" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_13" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "12"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_7"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                  (rule "replaceKnownSelect_taclet100000_14" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_15" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "12"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_7"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                  (rule "replaceKnownSelect_taclet100000_16" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_17" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "12"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "30") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_7"))
                  (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "30"))
                  (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "57")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "19"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,0") (ifseqformula "11"))
                  (rule "replace_known_left" (formula "30") (term "0,0,0,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "19"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "57")))
                  (rule "replaceKnownSelect_taclet100000_18" (formula "30") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_19" (formula "30") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "11"))
                  (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                  (rule "hideAuxiliaryEq" (formula "30"))
                  (rule "pullOutSelect" (formula "29") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_7"))
                  (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "39") (term "0") (ifseqformula "29"))
                  (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "56")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0") (ifseqformula "19"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0,0") (ifseqformula "11"))
                  (rule "replace_known_left" (formula "29") (term "0,0,0,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "19"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "56")))
                  (rule "replaceKnownSelect_taclet100000_20" (formula "29") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_21" (formula "29") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0") (ifseqformula "11"))
                  (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "29"))
                  (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "29"))
                  (rule "hideAuxiliaryEq" (formula "29"))
                  (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_7"))
                  (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                  (rule "applyEq" (formula "38") (term "0") (ifseqformula "28"))
                  (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "55")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "19"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0,0") (ifseqformula "11"))
                  (rule "replace_known_left" (formula "28") (term "0,0,0,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "19"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "55")))
                  (rule "replaceKnownSelect_taclet100000_22" (formula "28") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_23" (formula "28") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "11"))
                  (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                  (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                  (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "28"))
                  (rule "hideAuxiliaryEq" (formula "28"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "21") (ifseqformula "6"))
                  (rule "replaceKnownSelect_taclet100000_25" (formula "21") (term "0,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_26" (formula "21") (term "0,0,1"))
                  (rule "replaceKnownSelect_taclet100000_28" (formula "21") (term "0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_29" (formula "21") (term "0,0,1,0"))
                  (rule "replaceKnownSelect_taclet100000_31" (formula "21") (term "0,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_32" (formula "21") (term "0,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet100000_40" (formula "21") (term "1,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet100000_34" (formula "21") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_41" (formula "21") (term "1,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_35" (formula "21") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet100000_43" (formula "21") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet100000_46" (formula "21") (term "1,1,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_44" (formula "21") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet100000_3" (formula "21") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_47" (formula "21") (term "1,1,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet100000_37" (formula "21") (term "0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_4" (formula "21") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_38" (formula "21") (term "0,0,0,0,0,0,0,0,0,0"))
                  (rule "andLeft" (formula "21"))
                  (rule "notLeft" (formula "22"))
                  (rule "andLeft" (formula "21"))
                  (rule "notLeft" (formula "22"))
                  (rule "andLeft" (formula "21"))
                  (rule "notLeft" (formula "22"))
                  (rule "andLeft" (formula "21"))
                  (rule "notLeft" (formula "22"))
                  (rule "andLeft" (formula "21"))
                  (rule "andLeft" (formula "21"))
                  (rule "andLeft" (formula "21"))
                  (rule "andLeft" (formula "21"))
                  (rule "notLeft" (formula "21"))
                  (rule "nonNull" (formula "24") (inst "i=i"))
                  (rule "greater_literals" (formula "24") (term "0,1"))
                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "43")))
                  (rule "sub_literals" (formula "24") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "23") (inst "i=i"))
                  (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "42")))
                  (rule "greater_literals" (formula "23") (term "0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "22") (inst "i=i"))
                  (rule "sub_literals" (formula "22") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "41")))
                  (rule "greater_literals" (formula "22") (term "0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "21") (inst "i=i"))
                  (rule "greater_literals" (formula "21") (term "0,1"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "40")))
                  (rule "sub_literals" (formula "21") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                  (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "9") (ifseqformula "6"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "10"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "10"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "10"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "10"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "9"))
                  (rule "nonNull" (formula "12") (inst "i=i"))
                  (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "46")))
                  (rule "greater_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "46"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "11") (inst "i=i"))
                  (rule "greater_literals" (formula "11") (term "0,1"))
                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "45")))
                  (rule "sub_literals" (formula "11") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "45"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "10") (inst "i=i"))
                  (rule "greater_literals" (formula "10") (term "0,1"))
                  (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "44")))
                  (rule "sub_literals" (formula "10") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "44"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "9") (inst "i=i"))
                  (rule "greater_literals" (formula "9") (term "0,1"))
                  (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "43")))
                  (rule "sub_literals" (formula "9") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "43"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                  (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "42") (ifseqformula "6"))
                  (rule "andLeft" (formula "42"))
                  (rule "notLeft" (formula "43"))
                  (rule "andLeft" (formula "42"))
                  (rule "notLeft" (formula "43"))
                  (rule "andLeft" (formula "42"))
                  (rule "notLeft" (formula "43"))
                  (rule "andLeft" (formula "42"))
                  (rule "notLeft" (formula "43"))
                  (rule "andLeft" (formula "42"))
                  (rule "andLeft" (formula "42"))
                  (rule "andLeft" (formula "42"))
                  (rule "andLeft" (formula "42"))
                  (rule "notLeft" (formula "42"))
                  (rule "nonNull" (formula "45") (inst "i=i"))
                  (rule "sub_literals" (formula "45") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "45"))
                  (rule "greater_literals" (formula "45") (term "0,1"))
                  (builtin "One Step Simplification" (formula "45"))
                  (rule "andLeft" (formula "45"))
                  (rule "notLeft" (formula "45"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "44") (inst "i=i"))
                  (rule "greater_literals" (formula "44") (term "0,1"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "sub_literals" (formula "44") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "notLeft" (formula "44"))
                  (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "43") (inst "i=i"))
                  (rule "greater_literals" (formula "43") (term "0,1"))
                  (builtin "One Step Simplification" (formula "43"))
                  (rule "sub_literals" (formula "43") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "43"))
                  (rule "andLeft" (formula "43"))
                  (rule "notLeft" (formula "43"))
                  (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "42") (inst "i=i"))
                  (rule "sub_literals" (formula "42") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "42"))
                  (rule "greater_literals" (formula "42") (term "0,1"))
                  (builtin "One Step Simplification" (formula "42"))
                  (rule "andLeft" (formula "42"))
                  (rule "notLeft" (formula "42"))
                  (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_8"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                  (rule "replaceKnownSelect_taclet100000_24" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_26" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_8"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                  (rule "replaceKnownSelect_taclet100000_27" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_29" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_8"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                  (rule "replaceKnownSelect_taclet100000_30" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_32" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_8"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                  (rule "replaceKnownSelect_taclet100000_33" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_35" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_8"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                  (rule "replaceKnownSelect_taclet100000_36" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_38" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "45") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_8"))
                  (rule "applyEq" (formula "50") (term "0") (ifseqformula "45"))
                  (rule "applyEq" (formula "46") (term "0,1,1,1,0,0") (ifseqformula "45"))
                  (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "40"))
                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "67")))
                  (rule "replaceKnownSelect_taclet100000_39" (formula "45") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_41" (formula "45") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0") (ifseqformula "22"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "45") (term "0,0,0,0,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "45"))
                  (rule "applyEqReverse" (formula "46") (term "0,1,1,1,0,0") (ifseqformula "45"))
                  (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "45"))
                  (rule "applyEqReverse" (formula "46") (term "1,0,0,1,0") (ifseqformula "45"))
                  (rule "hideAuxiliaryEq" (formula "45"))
                  (rule "pullOutSelect" (formula "44") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_8"))
                  (rule "applyEq" (formula "49") (term "0") (ifseqformula "44"))
                  (rule "applyEq" (formula "45") (term "0,1,1,1,0,0") (ifseqformula "44"))
                  (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "40"))
                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "66")))
                  (rule "replaceKnownSelect_taclet100000_42" (formula "44") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_44" (formula "44") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0") (ifseqformula "22"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "44") (term "0,0,0,0,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "applyEqReverse" (formula "45") (term "1,0,0,1,0") (ifseqformula "44"))
                  (rule "applyEqReverse" (formula "45") (term "0,1,1,1,0,0") (ifseqformula "44"))
                  (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "44"))
                  (rule "hideAuxiliaryEq" (formula "44"))
                  (rule "pullOutSelect" (formula "43") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_8"))
                  (rule "applyEq" (formula "48") (term "0") (ifseqformula "43"))
                  (rule "applyEq" (formula "44") (term "0,1,1,1,0,0") (ifseqformula "43"))
                  (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "40"))
                  (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "65")))
                  (rule "replaceKnownSelect_taclet100000_45" (formula "43") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_47" (formula "43") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0") (ifseqformula "22"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "43"))
                  (rule "applyEqReverse" (formula "44") (term "0,1,1,1,0,0") (ifseqformula "43"))
                  (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "43"))
                  (rule "applyEqReverse" (formula "44") (term "1,0,0,1,0") (ifseqformula "43"))
                  (rule "hideAuxiliaryEq" (formula "43"))
                  (rule "pullOutSelect" (formula "42") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_10"))
                  (rule "applyEq" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
                  (rule "applyEq" (formula "47") (term "0") (ifseqformula "42"))
                  (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "40"))
                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet100000_2" (formula "42") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_4" (formula "42") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0") (ifseqformula "22"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "42"))
                  (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "42"))
                  (rule "applyEqReverse" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
                  (rule "applyEqReverse" (formula "43") (term "1,0,0,1,0") (ifseqformula "42"))
                  (rule "hideAuxiliaryEq" (formula "42"))
                  (rule "applyEq" (formula "42") (term "1,1,1,0,0") (ifseqformula "16"))
                  (rule "commute_or_2" (formula "37") (term "0"))
                  (rule "nnf_imp2or" (formula "33") (term "0"))
                  (rule "nnf_imp2or" (formula "36") (term "0"))
                  (rule "nnf_imp2or" (formula "35") (term "0"))
                  (rule "commute_or_2" (formula "17") (term "0"))
                  (rule "nnf_imp2or" (formula "34") (term "0"))
                  (rule "commute_or_2" (formula "20") (term "0"))
                  (rule "commute_or_2" (formula "19") (term "0"))
                  (rule "commute_or_2" (formula "18") (term "0"))
                  (rule "nnf_imp2or" (formula "27") (term "0"))
                  (rule "nnf_imp2or" (formula "26") (term "0"))
                  (rule "nnf_imp2or" (formula "25") (term "0"))
                  (rule "nnf_imp2or" (formula "24") (term "0"))
                  (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                  (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "nnf_imp2or" (formula "13") (term "0"))
                  (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                  (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                  (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                  (rule "andLeft" (formula "34"))
                  (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                  (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                  (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "true_left" (formula "35"))
                  (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "nnf_imp2or" (formula "11") (term "0"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "nnf_imp2or" (formula "47") (term "0"))
                  (rule "nnf_imp2or" (formula "46") (term "0"))
                  (rule "nnf_imp2or" (formula "45") (term "0"))
                  (rule "nnf_imp2or" (formula "44") (term "0"))
                  (rule "nnf_notAnd" (formula "35") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                  (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                  (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "37") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "36") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "29") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                  (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                  (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "28") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                  (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                  (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "27") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                  (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                  (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "26") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                  (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                  (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "47") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "47") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
                  (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "47") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                  (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "46") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "46") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0"))
                  (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "46") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                  (rule "mul_literals" (formula "46") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "45") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0"))
                  (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "45") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                  (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "45") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "44") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
                  (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                  (rule "commute_or" (formula "39") (term "0,0"))
                  (rule "commute_or" (formula "19") (term "0,0"))
                  (rule "commute_or" (formula "22") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "commute_or" (formula "20") (term "0,0"))
                  (rule "commute_or_2" (formula "35") (term "0"))
                  (rule "commute_or_2" (formula "38") (term "0"))
                  (rule "commute_or_2" (formula "37") (term "0"))
                  (rule "commute_or_2" (formula "36") (term "0"))
                  (rule "commute_or_2" (formula "29") (term "0"))
                  (rule "commute_or_2" (formula "28") (term "0"))
                  (rule "commute_or_2" (formula "27") (term "0"))
                  (rule "commute_or_2" (formula "26") (term "0"))
                  (rule "commute_or_2" (formula "13") (term "0"))
                  (rule "commute_or_2" (formula "12") (term "0"))
                  (rule "commute_or_2" (formula "11") (term "0"))
                  (rule "commute_or_2" (formula "10") (term "0"))
                  (rule "commute_or_2" (formula "47") (term "0"))
                  (rule "commute_or_2" (formula "46") (term "0"))
                  (rule "commute_or_2" (formula "45") (term "0"))
                  (rule "commute_or_2" (formula "44") (term "0"))
                  (rule "commute_or" (formula "35") (term "0,0"))
                  (rule "commute_or" (formula "38") (term "0,0"))
                  (rule "commute_or" (formula "37") (term "0,0"))
                  (rule "commute_or" (formula "36") (term "0,0"))
                  (rule "commute_or" (formula "29") (term "0,0"))
                  (rule "commute_or" (formula "28") (term "0,0"))
                  (rule "commute_or" (formula "27") (term "0,0"))
                  (rule "commute_or" (formula "26") (term "0,0"))
                  (rule "commute_or" (formula "13") (term "0,0"))
                  (rule "commute_or" (formula "12") (term "0,0"))
                  (rule "commute_or" (formula "11") (term "0,0"))
                  (rule "commute_or" (formula "10") (term "0,0"))
                  (rule "commute_or" (formula "47") (term "0,0"))
                  (rule "commute_or" (formula "46") (term "0,0"))
                  (rule "commute_or" (formula "45") (term "0,0"))
                  (rule "commute_or" (formula "44") (term "0,0"))
                  (rule "arrayLengthNotNegative" (formula "22") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                  (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0,0") (ifseqformula "5"))
                  (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "52"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "35"))
                  (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "5"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "6"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "7"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "8"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "9"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "10"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "11"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "12"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "allLeft" (formula "51") (inst "t=i_4"))
                  (rule "replaceKnownSelect_taclet100000_6" (formula "51") (term "0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_7" (formula "51") (term "0,0,0,0"))
                  (rule "narrowSelectArrayType" (formula "51") (term "0,0,0,0") (ifseqformula "43") (ifseqformula "73"))
                  (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "51"))
                  (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "10"))
                  (rule "qeq_literals" (formula "51") (term "0,0"))
                  (builtin "One Step Simplification" (formula "51"))
                  (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "51"))
                  (rule "andLeft" (formula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "12"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0"))
                  (rule "add_zero_right" (formula "12") (term "0"))
                  (rule "leq_literals" (formula "12"))
                  (rule "closeFalse" (formula "12"))
               )
            )
            (branch "Case 2"
               (rule "typeEqDerived" (formula "30") (term "0,1,1,1") (ifseqformula "28"))
               (rule "typeEqDerived" (formula "30") (term "0,1,0,1,1") (ifseqformula "28"))
               (rule "typeEqDerived" (formula "30") (term "0,0,0,1,1") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "28")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "9"))
               (rule "true_left" (formula "30"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "20"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0") (ifseqformula "9"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1") (ifseqformula "9"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1") (ifseqformula "9"))
               (rule "orRight" (formula "32"))
               (rule "orRight" (formula "30"))
               (rule "orRight" (formula "30"))
               (rule "allRight" (formula "39") (inst "sk=f_1"))
               (rule "allRight" (formula "39") (inst "sk=o_1"))
               (rule "orRight" (formula "39"))
               (rule "eqSymm" (formula "16"))
               (rule "eqSymm" (formula "6"))
               (rule "eqSymm" (formula "11"))
               (rule "eqSymm" (formula "22"))
               (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "38"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "36"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
               (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "33"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
               (rule "nonNull" (formula "24") (inst "i=i"))
               (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "33")))
               (rule "greater_literals" (formula "24") (term "0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
               (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "16"))
               (rule "array2seqDef" (formula "6") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "6"))
               (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "1") (ifseqformula "38"))
               (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "eqSeqDef2" (formula "6") (inst "iv=iv") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_1_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "19"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "9"))
               (rule "eqSymm" (formula "39"))
               (rule "pullOutSelect" (formula "11") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_5"))
               (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "37")) (ifInst ""  (formula "3")))
               (rule "applyEqReverse" (formula "12") (term "0,0") (ifseqformula "11"))
               (rule "hideAuxiliaryEq" (formula "11"))
               (rule "pullOutSelect" (formula "21") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_6"))
               (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "37")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0,0") (ifseqformula "9"))
               (rule "replace_known_left" (formula "21") (term "0,0,0,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "37")))
               (rule "replaceKnownSelect_taclet10000_1" (formula "21") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_2" (formula "21") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0") (ifseqformula "9"))
               (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
               (rule "hideAuxiliaryEq" (formula "21"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_3"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "nnf_imp2or" (formula "25") (term "0"))
               (rule "nnf_notAnd" (formula "25") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
               (rule "mul_literals" (formula "25") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "24") (ifseqformula "6"))
               (rule "replaceKnownSelect_taclet10000_3" (formula "24") (term "1,1,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_5" (formula "24") (term "1,1,0,0,0,0,0,0,0"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "26"))
               (rule "notLeft" (formula "25"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "25"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "26"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "24"))
               (rule "nonNull" (formula "27") (inst "i=i"))
               (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "greater_literals" (formula "27") (term "0,1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "notLeft" (formula "27"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "26") (inst "i=i"))
               (rule "greater_literals" (formula "26") (term "0,1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "sub_literals" (formula "26") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "26"))
               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "25") (inst "i=i"))
               (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "greater_literals" (formula "25") (term "0,1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "notLeft" (formula "25"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "24") (inst "i=i"))
               (rule "greater_literals" (formula "24") (term "0,1"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "sub_literals" (formula "24") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "24"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
               (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
               (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_4"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_4"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_4"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_4"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_4"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "12"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_4"))
               (rule "applyEq" (formula "38") (term "0") (ifseqformula "27"))
               (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
               (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "16"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0,0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "27") (term "0,0,0,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "27"))
               (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "27"))
               (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
               (rule "hideAuxiliaryEq" (formula "27"))
               (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_4"))
               (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
               (rule "applyEq" (formula "37") (term "0") (ifseqformula "26"))
               (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0") (ifseqformula "16"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0,0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "26") (term "0,0,0,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
               (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "26"))
               (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "26"))
               (rule "hideAuxiliaryEq" (formula "26"))
               (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_4"))
               (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
               (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
               (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0") (ifseqformula "16"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0,0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "25") (term "0,0,0,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
               (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
               (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "25"))
               (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
               (rule "hideAuxiliaryEq" (formula "25"))
               (rule "nnf_imp2or" (formula "24") (term "0"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "nnf_imp2or" (formula "26") (term "0"))
               (rule "nnf_imp2or" (formula "25") (term "0"))
               (rule "nnf_notAnd" (formula "24") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
               (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
               (rule "mul_literals" (formula "24") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
               (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
               (rule "mul_literals" (formula "27") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "26") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
               (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
               (rule "mul_literals" (formula "26") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "25") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
               (rule "mul_literals" (formula "25") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "14") (ifseqformula "6"))
               (rule "replaceKnownSelect_taclet10000_12" (formula "14") (term "0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_13" (formula "14") (term "0,0,1"))
               (rule "replaceKnownSelect_taclet10000_16" (formula "14") (term "0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_17" (formula "14") (term "0,0,1,0"))
               (rule "replaceKnownSelect_taclet10000_20" (formula "14") (term "0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_21" (formula "14") (term "0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet10000_24" (formula "14") (term "0,0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet10000_32" (formula "14") (term "1,1,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_25" (formula "14") (term "0,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_33" (formula "14") (term "1,1,0,0,0,0"))
               (rule "replaceKnownSelect_taclet10000_36" (formula "14") (term "1,1,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet10000_40" (formula "14") (term "1,1,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_37" (formula "14") (term "1,1,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet10000_1" (formula "14") (term "1,1,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_41" (formula "14") (term "1,1,0,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet10000_28" (formula "14") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_2" (formula "14") (term "1,1,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_29" (formula "14") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "andLeft" (formula "14"))
               (rule "notLeft" (formula "15"))
               (rule "andLeft" (formula "14"))
               (rule "notLeft" (formula "15"))
               (rule "andLeft" (formula "14"))
               (rule "notLeft" (formula "15"))
               (rule "andLeft" (formula "14"))
               (rule "notLeft" (formula "15"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "notLeft" (formula "14"))
               (rule "nonNull" (formula "17") (inst "i=i"))
               (rule "greater_literals" (formula "17") (term "0,1"))
               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "40")))
               (rule "sub_literals" (formula "17") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "16") (inst "i=i"))
               (rule "greater_literals" (formula "16") (term "0,1"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "39")))
               (rule "sub_literals" (formula "16") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "15") (inst "i=i"))
               (rule "greater_literals" (formula "15") (term "0,1"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "38")))
               (rule "sub_literals" (formula "15") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "14") (inst "i=i"))
               (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "37")))
               (rule "greater_literals" (formula "14") (term "0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
               (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "9") (ifseqformula "6"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "9"))
               (rule "nonNull" (formula "12") (inst "i=i"))
               (rule "greater_literals" (formula "12") (term "0,1"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "43")))
               (rule "sub_literals" (formula "12") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "43"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "11") (inst "i=i"))
               (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "42")))
               (rule "greater_literals" (formula "11") (term "0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "42"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "10") (inst "i=i"))
               (rule "greater_literals" (formula "10") (term "0,1"))
               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "41")))
               (rule "sub_literals" (formula "10") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "41"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "9") (inst "i=i"))
               (rule "greater_literals" (formula "9") (term "0,1"))
               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "40")))
               (rule "sub_literals" (formula "9") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "40"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
               (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "24") (ifseqformula "6"))
               (rule "replaceKnownSelect_taclet10000_11" (formula "24") (term "0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_13" (formula "24") (term "0,0,1"))
               (rule "replaceKnownSelect_taclet10000_15" (formula "24") (term "0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_17" (formula "24") (term "0,0,1,0"))
               (rule "replaceKnownSelect_taclet10000_19" (formula "24") (term "0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_21" (formula "24") (term "0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet10000_23" (formula "24") (term "0,0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet10000_31" (formula "24") (term "1,1,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_25" (formula "24") (term "0,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_33" (formula "24") (term "1,1,0,0,0,0"))
               (rule "replaceKnownSelect_taclet10000_35" (formula "24") (term "1,1,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet10000_39" (formula "24") (term "1,1,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_37" (formula "24") (term "1,1,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet10000_4" (formula "24") (term "1,1,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_41" (formula "24") (term "1,1,0,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet10000_27" (formula "24") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_5" (formula "24") (term "1,1,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_29" (formula "24") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "25"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "25"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "25"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "25"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "24"))
               (rule "nonNull" (formula "27") (inst "i=i"))
               (rule "greater_literals" (formula "27") (term "0,1"))
               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "46")))
               (rule "sub_literals" (formula "27") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "26") (inst "i=i"))
               (rule "greater_literals" (formula "26") (term "0,1"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "45")))
               (rule "sub_literals" (formula "26") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "25") (inst "i=i"))
               (rule "greater_literals" (formula "25") (term "0,1"))
               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "44")))
               (rule "sub_literals" (formula "25") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "24") (inst "i=i"))
               (rule "greater_literals" (formula "24") (term "0,1"))
               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "43")))
               (rule "sub_literals" (formula "24") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
               (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "42") (ifseqformula "6"))
               (rule "andLeft" (formula "42"))
               (rule "andLeft" (formula "42"))
               (rule "notLeft" (formula "44"))
               (rule "notLeft" (formula "43"))
               (rule "andLeft" (formula "42"))
               (rule "notLeft" (formula "43"))
               (rule "andLeft" (formula "42"))
               (rule "notLeft" (formula "43"))
               (rule "andLeft" (formula "42"))
               (rule "andLeft" (formula "42"))
               (rule "andLeft" (formula "42"))
               (rule "andLeft" (formula "42"))
               (rule "notLeft" (formula "42"))
               (rule "nonNull" (formula "45") (inst "i=i"))
               (rule "greater_literals" (formula "45") (term "0,1"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "sub_literals" (formula "45") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "andLeft" (formula "45"))
               (rule "notLeft" (formula "45"))
               (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
               (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "44") (inst "i=i"))
               (rule "greater_literals" (formula "44") (term "0,1"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "sub_literals" (formula "44") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "notLeft" (formula "44"))
               (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "43") (inst "i=i"))
               (rule "sub_literals" (formula "43") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "greater_literals" (formula "43") (term "0,1"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "andLeft" (formula "43"))
               (rule "notLeft" (formula "43"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "42") (inst "i=i"))
               (rule "greater_literals" (formula "42") (term "0,1"))
               (builtin "One Step Simplification" (formula "42"))
               (rule "sub_literals" (formula "42") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "42"))
               (rule "andLeft" (formula "42"))
               (rule "notLeft" (formula "42"))
               (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
               (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
               (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_5"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
               (rule "replaceKnownSelect_taclet10000_10" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_13" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "15"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_5"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
               (rule "replaceKnownSelect_taclet10000_14" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_17" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "15"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_5"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
               (rule "replaceKnownSelect_taclet10000_18" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_21" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "15"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_5"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
               (rule "replaceKnownSelect_taclet10000_22" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_25" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "15"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_5"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
               (rule "replaceKnownSelect_taclet10000_26" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_29" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "15"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "45") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_5"))
               (rule "applyEq" (formula "46") (term "0,1,1,1,0,0") (ifseqformula "45"))
               (rule "applyEq" (formula "50") (term "0") (ifseqformula "45"))
               (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "40"))
               (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "67")))
               (rule "replaceKnownSelect_taclet10000_30" (formula "45") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_33" (formula "45") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0") (ifseqformula "30"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0") (ifseqformula "22"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0,0") (ifseqformula "14"))
               (rule "replace_known_left" (formula "45") (term "0,0,0,0,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "applyEqReverse" (formula "46") (term "1,0,0,1,0") (ifseqformula "45"))
               (rule "applyEqReverse" (formula "46") (term "0,1,1,1,0,0") (ifseqformula "45"))
               (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "45"))
               (rule "hideAuxiliaryEq" (formula "45"))
               (rule "pullOutSelect" (formula "44") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_5"))
               (rule "applyEq" (formula "45") (term "0,1,1,1,0,0") (ifseqformula "44"))
               (rule "applyEq" (formula "49") (term "0") (ifseqformula "44"))
               (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "40"))
               (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "66")))
               (rule "replaceKnownSelect_taclet10000_34" (formula "44") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_37" (formula "44") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0") (ifseqformula "30"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0") (ifseqformula "22"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0") (ifseqformula "14"))
               (rule "replace_known_left" (formula "44") (term "0,0,0,0,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "applyEqReverse" (formula "45") (term "1,0,0,1,0") (ifseqformula "44"))
               (rule "applyEqReverse" (formula "45") (term "0,1,1,1,0,0") (ifseqformula "44"))
               (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "44"))
               (rule "hideAuxiliaryEq" (formula "44"))
               (rule "pullOutSelect" (formula "43") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_5"))
               (rule "applyEq" (formula "44") (term "0,1,1,1,0,0") (ifseqformula "43"))
               (rule "applyEq" (formula "48") (term "0") (ifseqformula "43"))
               (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "40"))
               (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "65")))
               (rule "replaceKnownSelect_taclet10000_38" (formula "43") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_41" (formula "43") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0") (ifseqformula "30"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0") (ifseqformula "22"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,0") (ifseqformula "14"))
               (rule "replace_known_left" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "43"))
               (rule "applyEqReverse" (formula "44") (term "0,1,1,1,0,0") (ifseqformula "43"))
               (rule "applyEqReverse" (formula "44") (term "1,0,0,1,0") (ifseqformula "43"))
               (rule "hideAuxiliaryEq" (formula "43"))
               (rule "pullOutSelect" (formula "42") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_7"))
               (rule "applyEq" (formula "47") (term "0") (ifseqformula "42"))
               (rule "applyEq" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
               (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "40"))
               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "64")))
               (rule "replaceKnownSelect_taclet10000_3" (formula "42") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_5" (formula "42") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0") (ifseqformula "30"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0") (ifseqformula "22"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,0") (ifseqformula "14"))
               (rule "replace_known_left" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "42"))
               (rule "applyEqReverse" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
               (rule "applyEqReverse" (formula "43") (term "1,0,0,1,0") (ifseqformula "42"))
               (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "42"))
               (rule "hideAuxiliaryEq" (formula "42"))
               (rule "applyEq" (formula "42") (term "1,1,1,0,0") (ifseqformula "16"))
               (rule "commute_or_2" (formula "37") (term "0"))
               (rule "nnf_imp2or" (formula "20") (term "0"))
               (rule "nnf_imp2or" (formula "19") (term "0"))
               (rule "nnf_imp2or" (formula "18") (term "0"))
               (rule "nnf_imp2or" (formula "17") (term "0"))
               (rule "nnf_imp2or" (formula "12") (term "0"))
               (rule "nnf_imp2or" (formula "11") (term "0"))
               (rule "nnf_imp2or" (formula "10") (term "0"))
               (rule "nnf_imp2or" (formula "9") (term "0"))
               (rule "cut_direct" (formula "64") (term "0,0"))
               (branch "CUT: o_1 = null TRUE"
                  (builtin "One Step Simplification" (formula "65"))
                  (rule "false_right" (formula "65"))
                  (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "63")))
                  (rule "closeFalse" (formula "2"))
               )
               (branch "CUT: o_1 = null FALSE"
                  (builtin "One Step Simplification" (formula "65"))
                  (rule "notRight" (formula "65"))
                  (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "65"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "64")))
                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "63"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "64")))
                  (rule "closeFalse" (formula "2"))
               )
            )
         )
         (branch "Exceptional Post (checkBallots)"
            (builtin "One Step Simplification" (formula "27"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (ifseqformula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0") (ifseqformula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1") (ifseqformula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1") (ifseqformula "9"))
            (rule "andLeft" (formula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0") (ifseqformula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0,1,0") (ifseqformula "9"))
            (rule "orRight" (formula "31"))
            (rule "orRight" (formula "29"))
            (rule "andLeft" (formula "28"))
            (rule "orRight" (formula "30"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "30"))
            (rule "notLeft" (formula "28"))
            (rule "eqSymm" (formula "16"))
            (rule "eqSymm" (formula "22"))
            (rule "eqSymm" (formula "6"))
            (rule "eqSymm" (formula "11"))
            (rule "eqSymm" (formula "41") (term "1,0,0,1,0,1"))
            (rule "eqSymm" (formula "41") (term "0,1,0,0,0,1"))
            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "31"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "true_left" (formula "29"))
            (rule "replace_known_right" (formula "15") (term "1,0,1") (ifseqformula "36"))
            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "37")) (ifInst ""  (formula "35")))
            (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "andLeft" (formula "29"))
            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "35"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
            (rule "nonNull" (formula "24") (inst "i=i"))
            (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "35")))
            (rule "greater_literals" (formula "24") (term "0"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "41") (term "1,1,1,1,0,0,0,1") (inst "i=i"))
            (rule "greater_literals" (formula "41") (term "0,1,1,1,1,1,0,0,0,1"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "sub_literals" (formula "41") (term "2,1,0,1,1,1,1,1,0,0,0,1"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
            (rule "eqSymm" (formula "16"))
            (rule "array2seqDef" (formula "6") (term "1") (inst "u=u"))
            (rule "eqSymm" (formula "6"))
            (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "1") (ifseqformula "40"))
            (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "eqSeqDef2" (formula "6") (inst "iv=iv") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "pullOutSelect" (formula "20") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_3"))
            (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "38")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,0,0") (ifseqformula "13"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,0,0,0") (ifseqformula "8"))
            (rule "replace_known_left" (formula "20") (term "0,0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "38")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,0,0") (ifseqformula "8"))
            (rule "replace_known_left" (formula "20") (term "0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "20"))
            (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "38")) (ifInst ""  (formula "2")))
            (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
            (rule "applyEqReverse" (formula "10") (term "0,0") (ifseqformula "20"))
            (rule "hideAuxiliaryEq" (formula "20"))
            (rule "nnf_imp2or" (formula "22") (term "0"))
            (rule "nnf_notAnd" (formula "22") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
            (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
            (rule "mul_literals" (formula "22") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "39") (term "0,1,1,1,1,1,0,0,0,1"))
            (rule "nnf_notAnd" (formula "39") (term "0,0,1,1,1,1,1,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "mul_literals" (formula "39") (term "1,0,0,0,1,1,1,1,1,0,0,0,1"))
            (rule "commute_or_2" (formula "26"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "15") (ifseqformula "3"))
            (rule "replaceKnownSelect_taclet1000_1" (formula "15") (term "1,1,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_3" (formula "15") (term "1,1,0,0,0,0,0,0,0"))
            (rule "andLeft" (formula "15"))
            (rule "notLeft" (formula "16"))
            (rule "andLeft" (formula "15"))
            (rule "notLeft" (formula "16"))
            (rule "andLeft" (formula "15"))
            (rule "notLeft" (formula "16"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "notLeft" (formula "17"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "notLeft" (formula "15"))
            (rule "nonNull" (formula "18") (inst "i=i"))
            (rule "greater_literals" (formula "18") (term "0,1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "sub_literals" (formula "18") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "notLeft" (formula "18"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "17") (inst "i=i"))
            (rule "greater_literals" (formula "17") (term "0,1"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "sub_literals" (formula "17") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "17"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "16") (inst "i=i"))
            (rule "greater_literals" (formula "16") (term "0,1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "sub_literals" (formula "16") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "andLeft" (formula "16"))
            (rule "notLeft" (formula "16"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "15") (inst "i=i"))
            (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "greater_literals" (formula "15") (term "0,1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "notLeft" (formula "15"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
            (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "9"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "9"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "9"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "9"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "9"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "18") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_1"))
            (rule "applyEq" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "36") (term "0") (ifseqformula "18"))
            (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "50")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,0,0") (ifseqformula "8"))
            (rule "replace_known_left" (formula "18") (term "0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "50")) (ifInst ""  (formula "2")))
            (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "18"))
            (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
            (rule "applyEqReverse" (formula "19") (term "1,0,0,1,0") (ifseqformula "18"))
            (rule "hideAuxiliaryEq" (formula "18"))
            (rule "pullOutSelect" (formula "17") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_1"))
            (rule "applyEq" (formula "35") (term "0") (ifseqformula "17"))
            (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
            (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "50")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,0,0") (ifseqformula "8"))
            (rule "replace_known_left" (formula "17") (term "0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "50")) (ifInst ""  (formula "2")))
            (rule "applyEqReverse" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
            (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "17"))
            (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0") (ifseqformula "17"))
            (rule "hideAuxiliaryEq" (formula "17"))
            (rule "pullOutSelect" (formula "16") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_1"))
            (rule "applyEq" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
            (rule "applyEq" (formula "34") (term "0") (ifseqformula "16"))
            (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "50")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,0") (ifseqformula "8"))
            (rule "replace_known_left" (formula "16") (term "0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "50")) (ifInst ""  (formula "2")))
            (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0") (ifseqformula "16"))
            (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "16"))
            (rule "applyEqReverse" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
            (rule "hideAuxiliaryEq" (formula "16"))
            (rule "nnf_imp2or" (formula "15") (term "0"))
            (rule "nnf_imp2or" (formula "18") (term "0"))
            (rule "nnf_imp2or" (formula "17") (term "0"))
            (rule "nnf_imp2or" (formula "16") (term "0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "24") (ifseqformula "3"))
            (rule "replaceKnownSelect_taclet1000_0" (formula "24") (term "1,1,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_3" (formula "24") (term "1,1,0,0,0,0,0,0,0"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "25"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "25"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "26"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "26"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "24"))
            (rule "nonNull" (formula "27") (inst "i=i"))
            (rule "greater_literals" (formula "27") (term "0,1"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "sub_literals" (formula "27") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "notLeft" (formula "27"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "26") (inst "i=i"))
            (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "greater_literals" (formula "26") (term "0,1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "andLeft" (formula "26"))
            (rule "notLeft" (formula "26"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "25") (inst "i=i"))
            (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "greater_literals" (formula "25") (term "0,1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "25"))
            (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
            (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "24") (inst "i=i"))
            (rule "greater_literals" (formula "24") (term "0,1"))
            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "43")))
            (rule "sub_literals" (formula "24") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
            (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
            (rule "replaceKnownSelect_taclet1000_4" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_6" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
            (rule "replaceKnownSelect_taclet1000_7" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_9" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
            (rule "replaceKnownSelect_taclet1000_10" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_12" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
            (rule "replaceKnownSelect_taclet1000_13" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_15" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
            (rule "replaceKnownSelect_taclet1000_16" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_18" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_2"))
            (rule "applyEq" (formula "38") (term "0") (ifseqformula "27"))
            (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
            (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "56")))
            (rule "replaceKnownSelect_taclet1000_19" (formula "27") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_21" (formula "27") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "13"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0,0") (ifseqformula "8"))
            (rule "replace_known_left" (formula "27") (term "0,0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "27"))
            (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
            (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "27"))
            (rule "hideAuxiliaryEq" (formula "27"))
            (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_2"))
            (rule "applyEq" (formula "37") (term "0") (ifseqformula "26"))
            (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "55")))
            (rule "replaceKnownSelect_taclet1000_22" (formula "26") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_24" (formula "26") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0") (ifseqformula "13"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0,0") (ifseqformula "8"))
            (rule "replace_known_left" (formula "26") (term "0,0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
            (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "26"))
            (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "26"))
            (rule "hideAuxiliaryEq" (formula "26"))
            (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_2"))
            (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
            (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
            (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "54")))
            (rule "replaceKnownSelect_taclet1000_25" (formula "25") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_27" (formula "25") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0") (ifseqformula "13"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0,0") (ifseqformula "8"))
            (rule "replace_known_left" (formula "25") (term "0,0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
            (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
            (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "25"))
            (rule "hideAuxiliaryEq" (formula "25"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "6") (ifseqformula "3"))
            (rule "andLeft" (formula "6"))
            (rule "notLeft" (formula "7"))
            (rule "andLeft" (formula "6"))
            (rule "notLeft" (formula "7"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "notLeft" (formula "8"))
            (rule "notLeft" (formula "7"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "notLeft" (formula "6"))
            (rule "nonNull" (formula "9") (inst "i=i"))
            (rule "greater_literals" (formula "9") (term "0,1"))
            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "41")))
            (rule "sub_literals" (formula "9") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "41"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "8") (inst "i=i"))
            (rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "40")))
            (rule "greater_literals" (formula "8") (term "0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "40"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "7") (inst "i=i"))
            (rule "greater_literals" (formula "7") (term "0,1"))
            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "39")))
            (rule "sub_literals" (formula "7") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "39"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "6") (inst "i=i"))
            (rule "sub_literals" (formula "6") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "38")))
            (rule "greater_literals" (formula "6") (term "0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "38"))
            (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
            (rule "applyEq" (formula "6") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
            (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "14") (ifseqformula "3"))
            (rule "replaceKnownSelect_taclet1000_5" (formula "14") (term "0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_6" (formula "14") (term "0,0,1"))
            (rule "replaceKnownSelect_taclet1000_8" (formula "14") (term "0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_9" (formula "14") (term "0,0,1,0"))
            (rule "replaceKnownSelect_taclet1000_11" (formula "14") (term "0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_12" (formula "14") (term "0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1000_20" (formula "14") (term "1,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1000_14" (formula "14") (term "0,0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_21" (formula "14") (term "1,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_15" (formula "14") (term "0,0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet1000_23" (formula "14") (term "1,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1000_26" (formula "14") (term "1,1,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_24" (formula "14") (term "1,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1000_2" (formula "14") (term "1,1,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_27" (formula "14") (term "1,1,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1000_17" (formula "14") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_3" (formula "14") (term "1,1,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_18" (formula "14") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "notLeft" (formula "16"))
            (rule "notLeft" (formula "15"))
            (rule "andLeft" (formula "14"))
            (rule "notLeft" (formula "15"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "notLeft" (formula "16"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "notLeft" (formula "14"))
            (rule "nonNull" (formula "17") (inst "i=i"))
            (rule "greater_literals" (formula "17") (term "0,1"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "44")))
            (rule "sub_literals" (formula "17") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "16") (inst "i=i"))
            (rule "greater_literals" (formula "16") (term "0,1"))
            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "43")))
            (rule "sub_literals" (formula "16") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "15") (inst "i=i"))
            (rule "greater_literals" (formula "15") (term "0,1"))
            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "42")))
            (rule "sub_literals" (formula "15") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "14") (inst "i=i"))
            (rule "greater_literals" (formula "14") (term "0,1"))
            (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "41")))
            (rule "sub_literals" (formula "14") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
            (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "39") (ifseqformula "3"))
            (rule "andLeft" (formula "39"))
            (rule "notLeft" (formula "40"))
            (rule "andLeft" (formula "39"))
            (rule "notLeft" (formula "40"))
            (rule "andLeft" (formula "39"))
            (rule "andLeft" (formula "39"))
            (rule "notLeft" (formula "41"))
            (rule "notLeft" (formula "40"))
            (rule "andLeft" (formula "39"))
            (rule "andLeft" (formula "39"))
            (rule "andLeft" (formula "39"))
            (rule "andLeft" (formula "39"))
            (rule "notLeft" (formula "39"))
            (rule "nonNull" (formula "42") (inst "i=i"))
            (rule "greater_literals" (formula "42") (term "0,1"))
            (builtin "One Step Simplification" (formula "42"))
            (rule "sub_literals" (formula "42") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "42"))
            (rule "andLeft" (formula "42"))
            (rule "notLeft" (formula "42"))
            (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "41") (inst "i=i"))
            (rule "sub_literals" (formula "41") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "greater_literals" (formula "41") (term "0,1"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "andLeft" (formula "41"))
            (rule "notLeft" (formula "41"))
            (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "40") (inst "i=i"))
            (rule "greater_literals" (formula "40") (term "0,1"))
            (builtin "One Step Simplification" (formula "40"))
            (rule "sub_literals" (formula "40") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "40"))
            (rule "andLeft" (formula "40"))
            (rule "notLeft" (formula "40"))
            (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "39") (inst "i=i"))
            (rule "sub_literals" (formula "39") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "39"))
            (rule "greater_literals" (formula "39") (term "0,1"))
            (builtin "One Step Simplification" (formula "39"))
            (rule "andLeft" (formula "39"))
            (rule "notLeft" (formula "39"))
            (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
            (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_3"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
            (rule "replaceKnownSelect_taclet1000_28" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_29" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "12"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_3"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
            (rule "replaceKnownSelect_taclet1000_30" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_31" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "12"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_3"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
            (rule "replaceKnownSelect_taclet1000_32" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_33" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "12"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_3"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
            (rule "replaceKnownSelect_taclet1000_34" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_35" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "12"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_3"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
            (rule "replaceKnownSelect_taclet1000_36" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_37" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "12"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "42") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_3"))
            (rule "applyEq" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
            (rule "applyEq" (formula "48") (term "0") (ifseqformula "42"))
            (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "66")))
            (rule "replaceKnownSelect_taclet1000_38" (formula "42") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_39" (formula "42") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0") (ifseqformula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0") (ifseqformula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,0") (ifseqformula "11"))
            (rule "replace_known_left" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "42"))
            (rule "applyEqReverse" (formula "43") (term "1,0,0,1,0") (ifseqformula "42"))
            (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "42"))
            (rule "applyEqReverse" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
            (rule "hideAuxiliaryEq" (formula "42"))
            (rule "pullOutSelect" (formula "41") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_3"))
            (rule "applyEq" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
            (rule "applyEq" (formula "47") (term "0") (ifseqformula "41"))
            (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "65")))
            (rule "replaceKnownSelect_taclet1000_40" (formula "41") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_41" (formula "41") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0") (ifseqformula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0,0") (ifseqformula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0,0,0") (ifseqformula "11"))
            (rule "replace_known_left" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "41"))
            (rule "applyEqReverse" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
            (rule "applyEqReverse" (formula "42") (term "1,0,0,1,0") (ifseqformula "41"))
            (rule "hideAuxiliaryEq" (formula "41"))
            (rule "pullOutSelect" (formula "40") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_3"))
            (rule "applyEq" (formula "46") (term "0") (ifseqformula "40"))
            (rule "applyEq" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
            (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "64")))
            (rule "replaceKnownSelect_taclet1000_42" (formula "40") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_43" (formula "40") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0") (ifseqformula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,0") (ifseqformula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,0,0") (ifseqformula "11"))
            (rule "replace_known_left" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "40"))
            (rule "applyEqReverse" (formula "41") (term "1,0,0,1,0") (ifseqformula "40"))
            (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
            (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "40"))
            (rule "hideAuxiliaryEq" (formula "40"))
            (rule "pullOutSelect" (formula "39") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_4"))
            (rule "applyEq" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
            (rule "applyEq" (formula "45") (term "0") (ifseqformula "39"))
            (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "63")))
            (rule "replaceKnownSelect_taclet1000_0" (formula "39") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1000_3" (formula "39") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0") (ifseqformula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0,0") (ifseqformula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0,0,0") (ifseqformula "11"))
            (rule "replace_known_left" (formula "39") (term "0,0,0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "39"))
            (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "39"))
            (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
            (rule "applyEqReverse" (formula "40") (term "1,0,0,1,0") (ifseqformula "39"))
            (rule "hideAuxiliaryEq" (formula "39"))
            (rule "applyEq" (formula "39") (term "1,1,1,0,0") (ifseqformula "13"))
            (rule "commute_or_2" (formula "34") (term "0"))
            (rule "commute_or_2" (formula "38") (term "0"))
            (rule "nnf_imp2or" (formula "30") (term "0"))
            (rule "nnf_imp2or" (formula "33") (term "0"))
            (rule "methodCallParamThrow" (formula "63") (term "1"))
            (builtin "One Step Simplification" (formula "63"))
            (rule "nnf_imp2or" (formula "32") (term "0"))
            (rule "nnf_imp2or" (formula "31") (term "0"))
            (rule "nnf_imp2or" (formula "9") (term "0"))
            (rule "commute_or_2" (formula "21") (term "0"))
            (rule "nnf_imp2or" (formula "8") (term "0"))
            (rule "commute_or_2" (formula "24") (term "0"))
            (rule "nnf_imp2or" (formula "7") (term "0"))
            (rule "commute_or_2" (formula "23") (term "0"))
            (rule "nnf_imp2or" (formula "6") (term "0"))
            (rule "commute_or_2" (formula "22") (term "0"))
            (rule "nnf_imp2or" (formula "17") (term "0"))
            (rule "nnf_imp2or" (formula "16") (term "0"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
            (rule "andLeft" (formula "29"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
            (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "true_left" (formula "30"))
            (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "true_left" (formula "29"))
            (rule "arrayLengthNotNegative" (formula "13") (term "0"))
            (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
            (rule "arrayLengthIsAShort" (formula "14") (term "0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "nnf_imp2or" (formula "16") (term "0"))
            (rule "nnf_imp2or" (formula "15") (term "0"))
            (rule "nnf_imp2or" (formula "43") (term "0"))
            (rule "nnf_imp2or" (formula "42") (term "0"))
            (rule "nnf_imp2or" (formula "41") (term "0"))
            (rule "nnf_imp2or" (formula "40") (term "0"))
            (rule "nnf_notAnd" (formula "31") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
            (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
            (rule "mul_literals" (formula "31") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
            (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "32") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
            (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
            (rule "mul_literals" (formula "32") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "8") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "7") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
            (rule "mul_literals" (formula "7") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "6") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
            (rule "mul_literals" (formula "6") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
            (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "43") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
            (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
            (rule "mul_literals" (formula "43") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0"))
            (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "42") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "41") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
            (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
            (rule "mul_literals" (formula "41") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "40") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
            (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "40") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
            (rule "mul_literals" (formula "40") (term "1,0,0,0"))
            (rule "commute_or" (formula "35") (term "0,0"))
            (rule "commute_or_2" (formula "39") (term "0,0"))
            (rule "commute_or" (formula "22") (term "0,0"))
            (rule "commute_or" (formula "25") (term "0,0"))
            (rule "commute_or" (formula "24") (term "0,0"))
            (rule "commute_or" (formula "23") (term "0,0"))
            (rule "commute_or_2" (formula "31") (term "0"))
            (rule "commute_or_2" (formula "34") (term "0"))
            (rule "commute_or_2" (formula "33") (term "0"))
            (rule "commute_or_2" (formula "32") (term "0"))
            (rule "commute_or_2" (formula "9") (term "0"))
            (rule "commute_or_2" (formula "8") (term "0"))
            (rule "tryCatchThrow" (formula "64") (term "1"))
            (rule "commute_or_2" (formula "7") (term "0"))
            (rule "commute_or_2" (formula "6") (term "0"))
            (rule "commute_or_2" (formula "18") (term "0"))
            (rule "commute_or_2" (formula "17") (term "0"))
            (rule "commute_or_2" (formula "16") (term "0"))
            (rule "commute_or_2" (formula "15") (term "0"))
            (rule "commute_or_2" (formula "43") (term "0"))
            (rule "commute_or_2" (formula "42") (term "0"))
            (rule "commute_or_2" (formula "41") (term "0"))
            (rule "commute_or_2" (formula "40") (term "0"))
            (rule "commute_or" (formula "31") (term "0,0"))
            (rule "commute_or" (formula "34") (term "0,0"))
            (rule "commute_or" (formula "33") (term "0,0"))
            (rule "commute_or" (formula "32") (term "0,0"))
            (rule "commute_or" (formula "9") (term "0,0"))
            (rule "commute_or" (formula "8") (term "0,0"))
            (rule "commute_or" (formula "7") (term "0,0"))
            (rule "commute_or" (formula "6") (term "0,0"))
            (rule "commute_or" (formula "18") (term "0,0"))
            (rule "commute_or" (formula "17") (term "0,0"))
            (rule "commute_or" (formula "16") (term "0,0"))
            (rule "commute_or" (formula "15") (term "0,0"))
            (rule "commute_or" (formula "43") (term "0,0"))
            (rule "commute_or" (formula "42") (term "0,0"))
            (rule "commute_or" (formula "41") (term "0,0"))
            (rule "commute_or" (formula "40") (term "0,0"))
            (rule "arrayLengthIsAShort" (formula "35") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "true_left" (formula "35"))
            (rule "arrayLengthNotNegative" (formula "35") (term "1,1,0"))
            (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "26") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "arrayLengthIsAShort" (formula "24") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "arrayLengthNotNegative" (formula "24") (term "1,1,0"))
            (rule "arrayLengthNotNegative" (formula "23") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "24") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0,0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "50"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "7"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "8"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "ifElseUnfold" (formula "77") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "77") (term "1") (newnames "x"))
            (rule "equality_comparison_simple" (formula "77") (term "1"))
            (builtin "One Step Simplification" (formula "77"))
            (rule "replace_known_right" (formula "77") (term "0,0,1,0") (ifseqformula "67"))
            (builtin "One Step Simplification" (formula "77"))
            (rule "ifElseSplit" (formula "77"))
            (branch "if x true"
               (builtin "One Step Simplification" (formula "78"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x false"
               (builtin "One Step Simplification" (formula "78"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "77"))
               (branch "if exc_3 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "77") (term "1") (newnames "e"))
                  (rule "reference_type_cast" (formula "77") (term "1"))
                  (branch "Normal Execution (exc_3 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "78"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "77") (term "1"))
                     (builtin "One Step Simplification" (formula "77"))
                     (rule "emptyModality" (formula "77") (term "1"))
                     (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "57")))
                     (rule "eqSymm" (formula "77") (term "1,0,0,1"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "77") (term "0") (ifseqformula "11"))
                     (rule "replaceKnownSelect_taclet1000_44" (formula "77") (term "0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000_45" (formula "77") (term "0,0,1,0"))
                     (rule "replaceKnownSelect_taclet1000_46" (formula "77") (term "0,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000_47" (formula "77") (term "0,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1000_48" (formula "77") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000_49" (formula "77") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000_54" (formula "77") (term "1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000_50" (formula "77") (term "0,0,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000_55" (formula "77") (term "1,1,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000_51" (formula "77") (term "0,0,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000_56" (formula "77") (term "1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000_58" (formula "77") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000_57" (formula "77") (term "1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000_60" (formula "77") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000_59" (formula "77") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000_52" (formula "77") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000_61" (formula "77") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000_53" (formula "77") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replace_known_right" (formula "77") (term "0,1,0,0,0") (ifseqformula "64"))
                     (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "62")) (ifInst ""  (formula "63")) (ifInst ""  (formula "65")) (ifInst ""  (formula "66")))
                     (rule "nonNull" (formula "77") (term "1,0,0,0") (inst "i=i"))
                     (rule "sub_literals" (formula "77") (term "2,1,0,1,1,1,0,0,0"))
                     (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "59")))
                     (rule "greater_literals" (formula "77") (term "0,1,0,0,0"))
                     (builtin "One Step Simplification" (formula "77"))
                     (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,0,0"))
                     (rule "nonNull" (formula "77") (term "1,0,0") (inst "i=i"))
                     (rule "sub_literals" (formula "77") (term "2,1,0,1,1,1,0,0"))
                     (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "60")))
                     (rule "greater_literals" (formula "77") (term "0,1,0,0"))
                     (builtin "One Step Simplification" (formula "77"))
                     (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0,0"))
                     (rule "nonNull" (formula "77") (term "1,0") (inst "i=i"))
                     (rule "sub_literals" (formula "77") (term "2,1,0,1,1,1,0"))
                     (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "61")))
                     (rule "greater_literals" (formula "77") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "77"))
                     (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,0"))
                     (rule "nonNull" (formula "77") (term "0,0,0,0") (inst "i=i"))
                     (rule "greater_literals" (formula "77") (term "0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "58")))
                     (rule "sub_literals" (formula "77") (term "2,1,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "77"))
                     (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0,0,0,0"))
                     (rule "applyEq" (formula "77") (term "0,1,0,0,1,0,0,0,0,0,0") (ifseqformula "23"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0,0,0,0"))
                     (rule "nnf_imp2or" (formula "77") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "77") (term "0,1,0,0"))
                     (rule "nnf_imp2or" (formula "77") (term "0,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "77") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "77") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "77") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "77") (term "0,0,0,1,0"))
                     (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "77") (term "0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0"))
                     (rule "mul_literals" (formula "77") (term "1,0,0,0,1,0"))
                     (rule "nnf_imp2or" (formula "77") (term "0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "77") (term "0,0,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "77") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "77") (term "0,0,1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "77") (term "0,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "77") (term "0,0,0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "77") (term "1,0,0,0,1,0,0"))
                     (rule "nnf_notAnd" (formula "77") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "77") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "77") (term "0,0,1,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "77") (term "0,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "77") (term "1,0,0,0,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "77") (term "0,0,0,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "77") (term "1,0,0,0,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "77") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "77") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "77") (term "0,0,1,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "77") (term "0,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "77") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "77") (term "1,0,0,0,0,0,0,0"))
                     (rule "andRight" (formula "77"))
                     (branch
                        (rule "andRight" (formula "77"))
                        (branch
                           (rule "andRight" (formula "77"))
                           (branch
                              (rule "andRight" (formula "77"))
                              (branch
                                 (rule "allRight" (formula "77") (inst "sk=i_3"))
                                 (rule "orRight" (formula "77"))
                                 (rule "orRight" (formula "77"))
                                 (rule "notRight" (formula "79"))
                                 (rule "inEqSimp_leqRight" (formula "78"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "79"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_18"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "44"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "23"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "23"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "23"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "26")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "12") (ifseqformula "61"))
                                 (rule "allLeft" (formula "17") (inst "t=i_3"))
                                 (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "17") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "17"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch
                                 (rule "allRight" (formula "77") (inst "sk=i_2"))
                                 (rule "orRight" (formula "77"))
                                 (rule "notRight" (formula "78"))
                                 (rule "orRight" (formula "78"))
                                 (rule "inEqSimp_leqRight" (formula "78"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "79"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_17"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "44"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "23"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "23"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "23"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "5")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "12") (ifseqformula "62"))
                                 (rule "allLeft" (formula "18") (inst "t=i_2"))
                                 (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                 (rule "leq_literals" (formula "18") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "closeFalse" (formula "18"))
                              )
                           )
                           (branch
                              (rule "allRight" (formula "77") (inst "sk=i_1"))
                              (rule "orRight" (formula "77"))
                              (rule "orRight" (formula "77"))
                              (rule "notRight" (formula "79"))
                              (rule "inEqSimp_leqRight" (formula "78"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "79"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_16"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "44"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "23"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "23"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "23"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "6")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "12") (ifseqformula "63"))
                              (rule "allLeft" (formula "19") (inst "t=i_1"))
                              (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "19") (term "0,0,1"))
                              (rule "leq_literals" (formula "19") (term "0,1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "closeFalse" (formula "19"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "77") (inst "sk=i_0"))
                           (rule "orRight" (formula "77"))
                           (rule "orRight" (formula "77"))
                           (rule "notRight" (formula "79"))
                           (rule "inEqSimp_leqRight" (formula "78"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "79"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_15"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "44"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "23"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "8"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "23"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "23"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "8")))
                           (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "12") (ifseqformula "64"))
                           (rule "allLeft" (formula "20") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "20") (term "0,0,1"))
                           (rule "leq_literals" (formula "20") (term "0,1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "20"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch
                        (rule "allRight" (formula "77") (inst "sk=f_0"))
                        (rule "allRight" (formula "77") (inst "sk=o_0"))
                        (rule "orRight" (formula "77"))
                        (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "52"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "41"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "20"))
                        (rule "eqSymm" (formula "79"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "31"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "21"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "cut_direct" (formula "60") (term "1,0"))
                        (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                           (rule "instanceof_not_compatible_5" (formula "61") (term "1") (ifseqformula "60"))
                           (rule "instanceof_not_compatible_5" (formula "61") (term "0,0") (ifseqformula "60"))
                           (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "71")) (ifInst ""  (formula "71")))
                           (rule "true_left" (formula "61"))
                           (rule "cut_direct" (formula "55") (term "0,0,0,0"))
                           (branch "CUT: exc_3.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "true_left" (formula "56"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "61"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "61"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "60")))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "62")) (ifInst ""  (formula "61")))
                                 (rule "replace_known_right" (formula "82") (term "0,1") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "62")))
                                 (rule "closeTrue" (formula "82"))
                              )
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "60"))
                                    (rule "orRight" (formula "60"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "62"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "60")) (ifInst ""  (formula "61")))
                                    (rule "replace_known_right" (formula "83") (term "0,1") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "62")))
                                    (rule "closeTrue" (formula "83"))
                                 )
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_split«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "60"))
                                       (rule "orRight" (formula "60"))
                                       (rule "orRight" (formula "60"))
                                       (rule "applyEqReverse" (formula "86") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "85"))
                                       (rule "replace_known_right" (formula "84") (term "0,1") (ifseqformula "59"))
                                       (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "58")))
                                       (rule "closeTrue" (formula "84"))
                                    )
                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_split«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: exc_3.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "62"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "62")))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "61")) (ifInst ""  (formula "62")))
                                 (rule "replace_known_right" (formula "83") (term "0,0") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "61")))
                                 (rule "closeTrue" (formula "83"))
                              )
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "61"))
                                    (rule "orRight" (formula "61"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "60")) (ifInst ""  (formula "62")))
                                    (rule "replace_known_right" (formula "84") (term "0,0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "60")))
                                    (rule "closeTrue" (formula "84"))
                                 )
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_split«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "59"))
                                       (rule "orRight" (formula "59"))
                                       (rule "orRight" (formula "59"))
                                       (rule "applyEqReverse" (formula "87") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "86"))
                                       (rule "replace_known_right" (formula "85") (term "0,1") (ifseqformula "58"))
                                       (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "62")))
                                       (rule "closeTrue" (formula "85"))
                                    )
                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_split«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "83") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "60"))
                           (rule "cut_direct" (formula "55") (term "0,0,0,0"))
                           (branch "CUT: exc_3.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "true_left" (formula "56"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "61"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "61"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "62")) (ifInst ""  (formula "60")))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "61")))
                                 (rule "replace_known_right" (formula "83") (term "0,1") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "62")))
                                 (rule "closeTrue" (formula "83"))
                              )
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "60"))
                                    (rule "orRight" (formula "60"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "60")) (ifInst ""  (formula "61")))
                                    (rule "replace_known_right" (formula "84") (term "0,1") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "62")))
                                    (rule "closeTrue" (formula "84"))
                                 )
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_split«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "60"))
                                       (rule "orRight" (formula "60"))
                                       (rule "orRight" (formula "60"))
                                       (rule "applyEqReverse" (formula "87") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "86"))
                                       (rule "replace_known_right" (formula "85") (term "0,0") (ifseqformula "58"))
                                       (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "59")))
                                       (rule "closeTrue" (formula "85"))
                                    )
                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_split«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "83") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: exc_3.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "61"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "61")))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "62")) (ifInst ""  (formula "61")))
                                 (rule "replace_known_right" (formula "84") (term "0,0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "60")))
                                 (rule "closeTrue" (formula "84"))
                              )
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "61"))
                                    (rule "orRight" (formula "61"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "61")) (ifInst ""  (formula "62")))
                                    (rule "replace_known_right" (formula "85") (term "0,0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "60")))
                                    (rule "closeTrue" (formula "85"))
                                 )
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_split«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "60"))
                                       (rule "orRight" (formula "60"))
                                       (rule "orRight" (formula "60"))
                                       (rule "applyEqReverse" (formula "88") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "87"))
                                       (rule "replace_known_right" (formula "86") (term "0,0") (ifseqformula "58"))
                                       (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "59")))
                                       (rule "closeTrue" (formula "86"))
                                    )
                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_readLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_removeLength«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_split«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "84") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "ClassCastException (!(exc_3 instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "77"))
                     (rule "closeTrue" (formula "77"))
                  )
               )
               (branch "if exc_3 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Pre (checkBallots)"
            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "20"))
            (rule "wellFormedAnonEQ" (formula "32") (term "0") (ifseqformula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0") (ifseqformula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1") (ifseqformula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1") (ifseqformula "9"))
            (rule "wellFormedAnonEQ" (formula "32") (term "0,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "14"))
            (rule "wellFormedAnonEQ" (formula "32") (term "0,0,0") (ifseqformula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1") (ifseqformula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,1") (ifseqformula "9"))
            (rule "orRight" (formula "28"))
            (rule "orRight" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "eqSymm" (formula "22"))
            (rule "eqSymm" (formula "11"))
            (rule "eqSymm" (formula "6"))
            (rule "eqSymm" (formula "16"))
            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "34"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "32"))
            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
            (rule "replace_known_left" (formula "35") (term "1,0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "1")) (ifInst ""  (formula "8")) (ifInst ""  (formula "13")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "35")))
            (rule "closeFalse" (formula "21"))
         )
      )
      (branch "Exceptional Post (split)"
         (builtin "One Step Simplification" (formula "20"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,0,0,1,0,1,1") (ifseqformula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,0,0,0,1,0,1,1") (ifseqformula "9"))
         (rule "orRight" (formula "21"))
         (rule "andLeft" (formula "20"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,0") (ifseqformula "20"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1,0") (ifseqformula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1,0") (ifseqformula "9"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "21"))
         (rule "close" (formula "25") (ifseqformula "24"))
      )
      (branch "Pre (split)"
         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "14"))
         (rule "wellFormedAnonEQ" (formula "23") (term "0,1") (ifseqformula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,1") (ifseqformula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1") (ifseqformula "9"))
         (rule "wellFormedAnonEQ" (formula "23") (term "0,0,1") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1,1") (ifseqformula "9"))
         (rule "orRight" (formula "19"))
         (rule "eqSymm" (formula "24") (term "0"))
         (rule "eqSymm" (formula "16"))
         (rule "eqSymm" (formula "11"))
         (rule "eqSymm" (formula "6"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "19")) (ifInst ""  (formula "20")))
         (rule "replace_known_left" (formula "24") (term "1,0,1") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "1")) (ifInst ""  (formula "8")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "15")))
         (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
         (rule "eqSymm" (formula "16"))
         (rule "array2seqDef" (formula "6") (term "1") (inst "u=u"))
         (rule "eqSymm" (formula "6"))
         (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "1") (ifseqformula "23"))
         (rule "eqSeqDef2" (formula "6") (inst "iv=iv") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "eqSeqDef2" (formula "15") (inst "iv=iv") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "pullOutSelect" (formula "10") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_1"))
         (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "21")) (ifInst ""  (formula "2")))
         (rule "applyEqReverse" (formula "11") (term "0,0") (ifseqformula "10"))
         (rule "hideAuxiliaryEq" (formula "10"))
         (rule "pullOutSelect" (formula "22") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_2"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
         (rule "replaceKnownSelect_taclet200_0" (formula "1") (term "2,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet200_1" (formula "1") (term "2,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "9"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "1"))
         (rule "close" (formula "23") (ifseqformula "11"))
      )
   )
   (branch "Exceptional Post (removeLength)"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,0,1,0,1,1") (ifseqformula "9"))
      (rule "andLeft" (formula "14"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "14"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1,0") (ifseqformula "9"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "15"))
      (rule "close" (formula "18") (ifseqformula "17"))
   )
   (branch "Case 3"
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
      (rule "andRight" (formula "15") (userinteraction))
      (branch "Case 1"
         (rule "cut" (inst "cutFormula=  array2seq(heap, msg)
= array2seq(heapAfter_readLength, msg)") (userinteraction))
         (branch "CUT: array2seq(heap, msg) = array2seq(heapAfter_readLength, msg) TRUE"
            (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1") (userinteraction))
            (rule "applyEq" (formula "16") (term "0") (ifseqformula "7") (userinteraction))
            (rule "cut" (inst "cutFormula=  length(byte[][]::select(heap,
                          self,
                          verif.selectvoting.system.core.MixServer::$sorted))
= length(byte[][]::select(heapAfter_readLength,
                          self,
                          verif.selectvoting.system.core.MixServer::$sorted))") (userinteraction))
            (branch "CUT: self.sorted.length = self.sorted@heapAfter_readLength.length TRUE"
               (rule "applyEqReverse" (formula "17") (term "0,0,1") (ifseqformula "1") (userinteraction))
               (rule "cut" (inst "cutFormula=  array2seq2d(heap,
              byte[][]::select(heap,
                               self,
                               verif.selectvoting.system.core.MixServer::$sorted))
= array2seq2d(heapAfter_readLength,
              byte[][]::select(heapAfter_readLength,
                               self,
                               verif.selectvoting.system.core.MixServer::$sorted))") (userinteraction))
               (branch "CUT: array2seq2d(heap, self.sorted) = array2seq2d(heapAfter_readLength, self.sorted@heapAfter_readLength) TRUE"
                  (rule "applyEqReverse" (formula "18") (term "1,1,1") (ifseqformula "1") (userinteraction))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "closeTrue" (formula "18") (userinteraction))
               )
               (branch "CUT: array2seq2d(heap, self.sorted) = array2seq2d(heapAfter_readLength, self.sorted@heapAfter_readLength) FALSE"
                  (rule "hide_right" (formula "18") (userinteraction))
                  (rule "array2seq2dDef" (formula "15") (term "1") (inst "u=u") (userinteraction))
                  (rule "array2seq2dDef" (formula "15") (term "0") (inst "u=u") (userinteraction))
                  (rule "equalityToSeqGetAndSeqLenRight" (formula "15") (inst "iv=iv") (userinteraction))
                  (rule "eqSymm" (formula "1"))
                  (rule "eqSymm" (formula "15") (term "1,0,1"))
                  (rule "eqSymm" (formula "8"))
                  (rule "eqSymm" (formula "2"))
                  (rule "eqSymm" (formula "13"))
                  (rule "eqSymm" (formula "15") (term "0"))
                  (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "lenOfSeqDef" (formula "15") (term "1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "15") (term "1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "15") (term "1,1,1,1,0,0,1"))
                  (rule "add_zero_right" (formula "15") (term "1,1,1,0,0,1"))
                  (rule "getOfSeqDef" (formula "15") (term "0,1,0,1"))
                  (rule "castDel" (formula "15") (term "2,0,1,0,1"))
                  (rule "castDel" (formula "15") (term "1,0,1,0,1"))
                  (rule "add_zero_right" (formula "15") (term "0,2,1,1,0,1,0,1"))
                  (rule "eqSymm" (formula "15") (term "1,0,1"))
                  (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,1,0,1"))
                  (rule "times_zero_2" (formula "15") (term "1,1,1,0,1,1,0,1"))
                  (rule "add_zero_right" (formula "15") (term "1,1,0,1,1,0,1"))
                  (rule "lenOfSeqDef" (formula "15") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "15") (term "1,1,0"))
                  (rule "times_zero_2" (formula "15") (term "1,1,1,0"))
                  (rule "add_zero_right" (formula "15") (term "1,1,0"))
                  (rule "lenOfSeqDef" (formula "15") (term "0,0"))
                  (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                  (rule "times_zero_2" (formula "15") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "15") (term "1,0,0"))
                  (rule "getOfSeqDef" (formula "15") (term "0,1,0,1"))
                  (rule "castDel" (formula "15") (term "1,0,1,0,1"))
                  (rule "castDel" (formula "15") (term "2,0,1,0,1"))
                  (rule "add_zero_right" (formula "15") (term "0,2,1,1,0,1,0,1"))
                  (rule "eqSymm" (formula "15") (term "1,0,1"))
                  (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,1,0,1"))
                  (rule "times_zero_2" (formula "15") (term "1,1,1,0,1,1,0,1"))
                  (rule "add_zero_right" (formula "15") (term "1,1,0,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,1,0,0,1"))
                  (rule "add_zero_right" (formula "15") (term "0,0,1,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1"))
                  (rule "eqSymm" (formula "15") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1"))
                  (rule "eqSymm" (formula "15") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,1"))
                  (rule "apply_eq_monomials" (formula "15") (term "1,0,0,0,0") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "1,0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "15") (term "1,0,0,0,0"))
                  (rule "eqSymm" (formula "15") (term "0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
                  (rule "apply_eq_monomials" (formula "15") (term "1,0,0,1,0,0,1,0,1") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,1,0,0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,0,0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,1,0,0,1,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "1,0,0,1,0,0,1,0,1"))
                  (rule "add_literals" (formula "15") (term "1,1,1,0,0,1,0,0,1,0,1"))
                  (rule "times_zero_1" (formula "15") (term "1,1,0,0,1,0,0,1,0,1"))
                  (rule "add_zero_right" (formula "15") (term "1,0,0,1,0,0,1,0,1"))
                  (rule "eqSymm" (formula "15") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                  (rule "eqSymm" (formula "15") (term "0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1"))
                  (rule "eqSymm" (formula "15") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,1,0,1"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,1,1,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,1,1,1,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                  (rule "eqSymm" (formula "15") (term "0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1"))
                  (rule "eqSymm" (formula "15") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,1,0,1"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,1,1,0,1"))
                  (rule "array2seqDef" (formula "8") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "8"))
                  (rule "narrowSelectArrayType" (formula "8") (term "2,0") (ifseqformula "3") (ifseqformula "17"))
                  (rule "array2seqDef" (formula "2") (term "0") (inst "u=u"))
                  (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                  (rule "narrowSelectArrayType" (formula "2") (term "2,1") (ifseqformula "3") (ifseqformula "17"))
                  (rule "applyEq" (formula "2") (term "1") (ifseqformula "8"))
                  (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_22"))
                  (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "16") (term "1,1,1,1,1,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEqReverse" (formula "13") (term "0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "15") (term "1,1,1,1,1,0,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "15") (term "0,1,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "14") (term "1,1,1,0,0,1,0,1") (ifseqformula "12"))
                  (rule "eqSymm" (formula "14") (term "1,0,1"))
                  (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "12"))
                  (rule "eqSymm" (formula "14") (term "0"))
                  (rule "applyEq" (formula "14") (term "0,0,1,1,1,0,0,1") (ifseqformula "12"))
                  (rule "applyEq" (formula "14") (term "1,1,1,1,0,0,1") (ifseqformula "12"))
                  (rule "applyEq" (formula "7") (term "0,0,1") (ifseqformula "12"))
                  (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "12"))
                  (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "allRight" (formula "14") (inst "sk=iv_6"))
                  (rule "impRight" (formula "14"))
                  (rule "andLeft" (formula "1"))
                  (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "1")))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                  (rule "eqSymm" (formula "16"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                  (rule "eqSymm" (formula "16"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
                  (rule "eqSymm" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                  (rule "eqSymm" (formula "16"))
                  (rule "array2seqDef" (formula "16") (term "1,1") (inst "u=u"))
                  (rule "eqSymm" (formula "16"))
                  (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "eqSeqDef2" (formula "3") (inst "iv=iv") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "array2seqDef" (formula "14") (term "1,1") (inst "u=u"))
                  (rule "eqSymm" (formula "14"))
                  (rule "pullOutSelect" (formula "14") (term "0,1,1,0") (inst "selectSK=arr_37"))
                  (rule "applyEq" (formula "15") (term "1,2,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "9") (ifseqformula "6"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "10"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "11"))
                  (rule "notLeft" (formula "10"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "10"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "9"))
                  (rule "nonNull" (formula "12") (inst "i=i"))
                  (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "greater_literals" (formula "12") (term "0,1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "notLeft" (formula "12"))
                  (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "11") (inst "i=i"))
                  (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "greater_literals" (formula "11") (term "0,1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "notLeft" (formula "11"))
                  (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "10") (inst "i=i"))
                  (rule "greater_literals" (formula "10") (term "0,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "9") (inst "i=i"))
                  (rule "greater_literals" (formula "9") (term "0,1"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "9"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                  (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_imp2or" (formula "11") (term "0"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "nnf_imp2or" (formula "9") (term "0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "17") (ifseqformula "6"))
                  (rule "replaceKnownSelect_taclet100020_1" (formula "17") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100020_2" (formula "17") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "notLeft" (formula "19"))
                  (rule "notLeft" (formula "18"))
                  (rule "andLeft" (formula "17"))
                  (rule "notLeft" (formula "18"))
                  (rule "andLeft" (formula "17"))
                  (rule "notLeft" (formula "18"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "notLeft" (formula "17"))
                  (rule "nonNull" (formula "20") (inst "i=i"))
                  (rule "greater_literals" (formula "20") (term "0,1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "sub_literals" (formula "20") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "notLeft" (formula "20"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "19") (inst "i=i"))
                  (rule "greater_literals" (formula "19") (term "0,1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "sub_literals" (formula "19") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "notLeft" (formula "19"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "18") (inst "i=i"))
                  (rule "greater_literals" (formula "18") (term "0,1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "sub_literals" (formula "18") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "notLeft" (formula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "17") (inst "i=i"))
                  (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "29")))
                  (rule "greater_literals" (formula "17") (term "0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                  (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_13"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_13"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_13"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_13"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_13"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "20") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_13"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "20"))
                  (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                  (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "35")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "20"))
                  (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "20"))
                  (rule "hideAuxiliaryEq" (formula "20"))
                  (rule "pullOutSelect" (formula "19") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_13"))
                  (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "19"))
                  (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                  (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "19"))
                  (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0") (ifseqformula "19"))
                  (rule "hideAuxiliaryEq" (formula "19"))
                  (rule "pullOutSelect" (formula "18") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_13"))
                  (rule "applyEq" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "18"))
                  (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "19") (term "1,0,0,1,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "18"))
                  (rule "hideAuxiliaryEq" (formula "18"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "nnf_imp2or" (formula "20") (term "0"))
                  (rule "nnf_imp2or" (formula "19") (term "0"))
                  (rule "nnf_imp2or" (formula "18") (term "0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "19") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                  (rule "commute_or_2" (formula "12") (term "0"))
                  (rule "commute_or_2" (formula "11") (term "0"))
                  (rule "commute_or_2" (formula "10") (term "0"))
                  (rule "commute_or_2" (formula "9") (term "0"))
                  (rule "ifthenelse_split" (formula "3") (term "0"))
                  (branch "result_0 ≥ 1 TRUE"
                     (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "4")))
                     (rule "equalityToSeqGetAndSeqLenRight" (formula "31") (inst "iv=iv"))
                     (rule "getOfSeqDef" (formula "31") (term "0,1,0,1"))
                     (rule "castDel" (formula "31") (term "2,0,1,0,1"))
                     (rule "castDel" (formula "31") (term "1,0,1,0,1"))
                     (rule "add_zero_right" (formula "31") (term "0,2,1,0,1,0,1"))
                     (rule "eqSymm" (formula "31") (term "1,0,1"))
                     (rule "polySimp_elimSub" (formula "31") (term "1,1,0,1,1,0,1"))
                     (rule "times_zero_2" (formula "31") (term "1,1,1,0,1,1,0,1"))
                     (rule "add_zero_right" (formula "31") (term "1,1,0,1,1,0,1"))
                     (rule "lenOfSeqDef" (formula "31") (term "0,0"))
                     (rule "eqSymm" (formula "31") (term "0"))
                     (rule "polySimp_elimSub" (formula "31") (term "1,1,0"))
                     (rule "mul_literals" (formula "31") (term "1,1,1,0"))
                     (rule "add_zero_right" (formula "31") (term "1,1,0"))
                     (rule "lenOfSeqDef" (formula "31") (term "1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "31") (term "1,1,1,0,0,1"))
                     (rule "times_zero_2" (formula "31") (term "1,1,1,1,0,0,1"))
                     (rule "add_zero_right" (formula "31") (term "1,1,1,0,0,1"))
                     (rule "getOfSeqDef" (formula "31") (term "0,1,0,1"))
                     (rule "castDel" (formula "31") (term "1,0,1,0,1"))
                     (rule "castDel" (formula "31") (term "2,0,1,0,1"))
                     (rule "add_zero_right" (formula "31") (term "0,2,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "31") (term "1,1,0,0,1,0,1"))
                     (rule "times_zero_2" (formula "31") (term "1,1,1,0,0,1,0,1"))
                     (rule "add_zero_right" (formula "31") (term "1,1,0,0,1,0,1"))
                     (rule "lenOfSeqDef" (formula "31") (term "0,0"))
                     (rule "polySimp_elimSub" (formula "31") (term "1,0,0"))
                     (rule "times_zero_2" (formula "31") (term "1,1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,1,1,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,1,0,0,1"))
                     (rule "add_zero_right" (formula "31") (term "0,0,1,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,1,1,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,1,0,1"))
                     (rule "mul_literals" (formula "31") (term "0,1,1,0,1,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,1,1,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0,1"))
                     (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "0,0,0,1,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1"))
                     (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1"))
                     (rule "nnf_imp2or" (formula "31") (term "0,1"))
                     (rule "nnf_notAnd" (formula "31") (term "0,0,1"))
                     (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1"))
                     (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1"))
                     (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1"))
                     (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,1"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,1"))
                     (rule "add_literals" (formula "31") (term "0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1"))
                     (rule "mul_literals" (formula "31") (term "1,0,0,0,1"))
                     (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "3"))
                     (rule "leq_literals" (formula "17") (term "0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "commute_or_2" (formula "18") (term "0"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "commute_or_2" (formula "20") (term "0"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "self.sorted.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "32") (term "0,1,1,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0,1") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "32") (term "0,0,0,1,1,0,0,1") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "32") (term "0,0,0,1,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "allRight" (formula "32") (inst "sk=iv_7"))
                        (rule "orRight" (formula "32"))
                        (rule "orRight" (formula "32"))
                        (rule "applyEqReverse" (formula "34") (term "1,1,1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "eqSymm" (formula "33"))
                        (rule "inEqSimp_geqRight" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "32"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "replace_known_left" (formula "33") (term "0,0,1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "1")))
                        (rule "inEqSimp_homoInEq0" (formula "33") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                        (rule "mul_literals" (formula "33") (term "0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1"))
                        (rule "polySimp_elimOne" (formula "33") (term "1,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                        (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_38"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "34"))
                        (rule "commute_or_2" (formula "22") (term "0"))
                        (rule "commute_or" (formula "16") (term "0,0"))
                        (rule "commute_or" (formula "15") (term "0,0"))
                        (rule "commute_or" (formula "14") (term "0,0"))
                        (rule "commute_or" (formula "13") (term "0,0"))
                        (rule "commute_or" (formula "21") (term "0,0"))
                        (rule "commute_or" (formula "24") (term "0,0"))
                        (rule "commute_or" (formula "23") (term "0,0"))
                        (rule "commute_or" (formula "22") (term "0,0"))
                        (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                        (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "self.sorted[iv_6].length ≥ 1 TRUE"
                           (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "4")))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬self.sorted[iv_6] = null ∧ ¬self.sorted[iv_6].<created> = TRUE TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "referencedObjectIsCreatedRight" (formula "29") (ifseqformula "30"))
                              (rule "close" (formula "29") (ifseqformula "9"))
                           )
                           (branch " ¬self.sorted[iv_6] = null ∧ ¬self.sorted[iv_6].<created> = TRUE FALSE"
                              (rule "close" (formula "39") (ifseqformula "1"))
                           )
                        )
                        (branch "self.sorted[iv_6].length ≥ 1 FALSE"
                           (rule "inEqSimp_geqRight" (formula "28"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "times_zero_2" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                     (branch "self.sorted.<created> = TRUE FALSE"
                        (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "23"))
                        (rule "close" (formula "22") (ifseqformula "5"))
                     )
                  )
                  (branch "result_0 ≥ 1 FALSE"
                     (rule "inEqSimp_geqRight" (formula "21"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "times_zero_2" (formula "4") (term "1,0"))
                     (rule "add_zero_right" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
               )
            )
            (branch "CUT: self.sorted.length = self.sorted@heapAfter_readLength.length FALSE"
               (rule "eqSymm" (formula "7"))
               (rule "eqSymm" (formula "14"))
               (rule "eqSymm" (formula "17"))
               (rule "eqSymm" (formula "12"))
               (rule "eqSymm" (formula "1"))
               (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "applyEq" (formula "17") (term "1") (ifseqformula "7"))
               (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "7"))
               (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "2") (ifseqformula "16"))
               (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "1"))
               (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "2") (ifseqformula "16"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
               (rule "applyEq" (formula "7") (term "1") (ifseqformula "1"))
               (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "17"))
               (rule "narrowSelectArrayType" (formula "17") (term "2,0") (ifseqformula "2") (ifseqformula "16"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "7"))
               (rule "eqSymm" (formula "17"))
               (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "1"))
               (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "7"))
               (rule "equalityToSeqGetAndSeqLenRight" (formula "17") (inst "iv=iv"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1"))
               (rule "eqSeqDef" (formula "7") (inst "iv=iv"))
               (rule "andLeft" (formula "7"))
               (rule "getOfSeqDef" (formula "8") (term "1,1,0"))
               (rule "castDel" (formula "8") (term "1,1,1,0"))
               (rule "castDel" (formula "8") (term "2,1,1,0"))
               (rule "add_zero_right" (formula "8") (term "0,2,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "8") (term "1,1,0,1,1,0"))
               (rule "times_zero_2" (formula "8") (term "1,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "8") (term "1,1,0,1,1,0"))
               (rule "getOfSeqDef" (formula "8") (term "0,1,0"))
               (rule "castDel" (formula "8") (term "2,0,1,0"))
               (rule "castDel" (formula "8") (term "1,0,1,0"))
               (rule "add_zero_right" (formula "8") (term "0,2,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "8") (term "1,1,0,0,1,0"))
               (rule "times_zero_2" (formula "8") (term "1,1,1,0,0,1,0"))
               (rule "add_zero_right" (formula "8") (term "1,1,0,0,1,0"))
               (rule "lenOfSeqDef" (formula "7") (term "0"))
               (rule "eqSymm" (formula "7"))
               (rule "polySimp_elimSub" (formula "7") (term "1,1"))
               (rule "times_zero_2" (formula "7") (term "1,1,1"))
               (rule "add_zero_right" (formula "7") (term "1,1"))
               (rule "lenOfSeqDef" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_elimSub" (formula "8") (term "1,1,1,0,0"))
               (rule "times_zero_2" (formula "8") (term "1,1,1,1,0,0"))
               (rule "add_zero_right" (formula "8") (term "1,1,1,0,0"))
               (rule "lenOfSeqDef" (formula "7") (term "0"))
               (rule "polySimp_elimSub" (formula "7") (term "1,0"))
               (rule "mul_literals" (formula "7") (term "1,1,0"))
               (rule "add_zero_right" (formula "7") (term "1,0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,1,0"))
               (rule "eqSymm" (formula "7") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "7") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,1,0"))
               (rule "eqSymm" (formula "7") (term "1,0"))
               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,1,0"))
               (rule "eqSymm" (formula "7") (term "1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,1,1,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,1,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,0,1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,0,1,1,1,0,0"))
               (rule "array2seqDef" (formula "17") (term "0,1,0") (inst "u=u"))
               (rule "eqSymm" (formula "17") (term "0"))
               (rule "lenOfSeqDef" (formula "17") (term "0,0"))
               (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
               (rule "times_zero_2" (formula "17") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "17") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "0,0,0,0"))
               (rule "array2seqDef" (formula "17") (term "0,1,1,0,1") (inst "u=u"))
               (rule "eqSymm" (formula "17") (term "1,0,1"))
               (rule "getOfSeqDef" (formula "17") (term "0,1,0,1"))
               (rule "castDel" (formula "17") (term "2,0,1,0,1"))
               (rule "castDel" (formula "17") (term "1,0,1,0,1"))
               (rule "add_zero_right" (formula "17") (term "0,2,1,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0,1,0,1"))
               (rule "mul_literals" (formula "17") (term "1,1,1,0,0,1,0,1"))
               (rule "add_zero_right" (formula "17") (term "1,1,0,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0,1"))
               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0,1"))
               (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0,1"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0,1"))
               (rule "eqSeqDef2" (formula "1") (inst "iv=iv") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "pullOutSelect" (formula "13") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_21"))
               (rule "applyEq" (formula "17") (term "1,1,1,0,1,1,0,1") (ifseqformula "1"))
               (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "17") (term "0,0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
               (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "17") (term "0,0,0,0,1,1,0,1") (ifseqformula "1"))
               (rule "applyEq" (formula "17") (term "1,1,1,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "17") (term "1,1,1,0,1,1,1,0,0,1") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "3")))
               (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "closeTrue" (formula "14"))
            )
         )
         (branch "CUT: array2seq(heap, msg) = array2seq(heapAfter_readLength, msg) FALSE"
            (rule "equalityToSeqGetAndSeqLenRight" (formula "13") (inst "iv=iv") (userinteraction))
            (rule "eqSymm" (formula "6"))
            (rule "eqSymm" (formula "13") (term "0"))
            (rule "eqSymm" (formula "16"))
            (rule "eqSymm" (formula "13") (term "1,0,1"))
            (rule "eqSymm" (formula "11"))
            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1"))
            (rule "array2seqDef" (formula "6") (term "1") (inst "u=u"))
            (rule "eqSymm" (formula "6"))
            (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "1") (ifseqformula "15"))
            (rule "array2seqDef" (formula "13") (term "0,1,0") (inst "u=u"))
            (rule "eqSymm" (formula "13") (term "0"))
            (rule "lenOfSeqDef" (formula "13") (term "0,0"))
            (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
            (rule "mul_literals" (formula "13") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "13") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
            (rule "equalityToSeqGetAndSeqLenRight" (formula "16") (inst "iv=iv"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1"))
            (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1"))
            (rule "array2seqDef" (formula "13") (term "0,0,1,0,1") (inst "u=u"))
            (rule "getOfSeqDef" (formula "13") (term "0,1,0,1"))
            (rule "castDel" (formula "13") (term "1,0,1,0,1"))
            (rule "castDel" (formula "13") (term "2,0,1,0,1"))
            (rule "add_zero_right" (formula "13") (term "0,2,1,0,1,0,1"))
            (rule "polySimp_elimSub" (formula "13") (term "1,1,0,0,1,0,1"))
            (rule "mul_literals" (formula "13") (term "1,1,1,0,0,1,0,1"))
            (rule "add_zero_right" (formula "13") (term "1,1,0,0,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,1"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,1"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,1"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,1"))
            (rule "array2seqDef" (formula "13") (term "0,1,1,0,1") (inst "u=u"))
            (rule "eqSymm" (formula "13") (term "1,0,1"))
            (rule "getOfSeqDef" (formula "13") (term "0,1,0,1"))
            (rule "castDel" (formula "13") (term "1,0,1,0,1"))
            (rule "castDel" (formula "13") (term "2,0,1,0,1"))
            (rule "add_zero_right" (formula "13") (term "0,2,1,0,1,0,1"))
            (rule "polySimp_elimSub" (formula "13") (term "1,1,0,0,1,0,1"))
            (rule "mul_literals" (formula "13") (term "1,1,1,0,0,1,0,1"))
            (rule "add_zero_right" (formula "13") (term "1,1,0,0,1,0,1"))
            (rule "narrowSelectArrayType" (formula "13") (term "1,0,1,0,1") (ifseqformula "1") (ifseqformula "15"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,1"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,1"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,1"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,1"))
            (rule "eqSymm" (formula "13") (term "1,0,1"))
            (rule "array2seqDef" (formula "13") (term "0,1,1,1,0,0,1") (inst "u=u"))
            (rule "lenOfSeqDef" (formula "13") (term "1,1,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "13") (term "1,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "13") (term "1,1,1,1,1,0,0,1"))
            (rule "add_zero_right" (formula "13") (term "1,1,1,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,1,1,0,0,1"))
            (rule "add_zero_right" (formula "13") (term "0,0,1,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,1,0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,1,1,1,0,0,1"))
            (rule "array2seqDef" (formula "13") (term "0,1,0") (inst "u=u"))
            (rule "eqSymm" (formula "13") (term "0"))
            (rule "lenOfSeqDef" (formula "13") (term "0,0"))
            (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
            (rule "times_zero_2" (formula "13") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "13") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "allRight" (formula "13") (inst "sk=iv_5"))
            (rule "impRight" (formula "13"))
            (rule "andLeft" (formula "1"))
            (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")))
            (rule "inEqSimp_homoInEq0" (formula "2"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
            (rule "eqSymm" (formula "15"))
            (rule "polySimp_addComm1" (formula "15") (term "0,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
            (rule "eqSymm" (formula "15"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
            (rule "eqSymm" (formula "15"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,1"))
            (rule "mul_literals" (formula "15") (term "0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
            (rule "eqSymm" (formula "15"))
            (rule "array2seqDef" (formula "18") (term "0,1,0") (inst "u=u"))
            (rule "eqSymm" (formula "18") (term "0"))
            (rule "lenOfSeqDef" (formula "18") (term "0,0"))
            (rule "polySimp_elimSub" (formula "18") (term "1,0,0"))
            (rule "times_zero_2" (formula "18") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "18") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
            (rule "array2seqDef" (formula "18") (term "0,1,1,0,1") (inst "u=u"))
            (rule "eqSymm" (formula "18") (term "1,0,1"))
            (rule "getOfSeqDef" (formula "18") (term "0,1,0,1"))
            (rule "castDel" (formula "18") (term "2,0,1,0,1"))
            (rule "castDel" (formula "18") (term "1,0,1,0,1"))
            (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0,1"))
            (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0,1,0,1"))
            (rule "times_zero_2" (formula "18") (term "1,1,1,0,0,1,0,1"))
            (rule "add_zero_right" (formula "18") (term "1,1,0,0,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0,1"))
            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0,1"))
            (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0,1"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0,1"))
            (rule "eqSeqDef2" (formula "8") (inst "iv=iv") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "pullOutSelect" (formula "12") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_20"))
            (rule "applyEq" (formula "18") (term "1,1,1,0,1,0") (ifseqformula "12"))
            (rule "applyEq" (formula "18") (term "1,1,1,0,1,1,1,0,0,1") (ifseqformula "12"))
            (rule "applyEq" (formula "18") (term "0,0,0,0,1,0") (ifseqformula "12"))
            (rule "applyEq" (formula "18") (term "0,0,0,0,1,1,1,0,0,1") (ifseqformula "12"))
            (rule "applyEq" (formula "18") (term "0,0,0,0,1,1,0,1") (ifseqformula "12"))
            (rule "applyEq" (formula "18") (term "1,1,1,0,1,1,0,1") (ifseqformula "12"))
            (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "4")))
            (rule "applyEqReverse" (formula "13") (term "0,0") (ifseqformula "12"))
            (rule "applyEqReverse" (formula "18") (term "1,1,1,0,1,0") (ifseqformula "12"))
            (rule "applyEqReverse" (formula "18") (term "1,1,1,0,1,1,1,0,0,1") (ifseqformula "12"))
            (rule "applyEqReverse" (formula "18") (term "0,0,0,0,1,0") (ifseqformula "12"))
            (rule "applyEqReverse" (formula "18") (term "0,0,0,0,1,1,1,0,0,1") (ifseqformula "12"))
            (rule "applyEqReverse" (formula "18") (term "0,0,0,0,1,1,0,1") (ifseqformula "12"))
            (rule "applyEqReverse" (formula "18") (term "1,1,1,0,1,1,0,1") (ifseqformula "12"))
            (rule "hideAuxiliaryEq" (formula "12"))
            (rule "applyEq" (formula "17") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "12"))
            (rule "applyEq" (formula "17") (term "0,0,0,1,0") (ifseqformula "12"))
            (rule "applyEq" (formula "17") (term "0,0,0,1,1,0,1") (ifseqformula "12"))
            (rule "pullOutSelect" (formula "14") (term "1,0") (inst "selectSK=arr_36"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "7")))
            (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "narrowSelectArrayType" (formula "14") (term "1,0") (ifseqformula "3") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "closeTrue" (formula "14"))
         )
      )
      (branch "Case 2"
         (rule "wellFormedAnonEQ" (formula "15") (term "0") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "9"))
         (rule "eqSymm" (formula "6"))
         (rule "eqSymm" (formula "11"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
         (rule "closeTrue" (formula "15"))
      )
   )
)
(branch "Exceptional Post (readLength)"
   (builtin "One Step Simplification" (formula "9"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "andLeft" (formula "9"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "12"))
   (rule "notLeft" (formula "10"))
   (rule "close" (formula "13") (ifseqformula "12"))
)
(branch "Pre (readLength)"
   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "9")) (ifInst ""  (formula "1")) (ifInst ""  (formula "9")))
   (rule "eqSymm" (formula "6"))
   (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "9")))
   (rule "closeFalse" (formula "4"))
)
)

}
