\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jul 12 08:56:16 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Jul 12 08:56:16 CEST 2017
name=verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils\\:\\:compare([B,[B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils\\:\\:compare([B,[B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "4597")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "a1,a2,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "eqSymm" (formula "7") (term "1,0,1,1,0,0,0,0,0,0,1"))
(rule "eqSymm" (formula "7") (term "0,0,1,0,1"))
(rule "eqSymm" (formula "7") (term "1,0,0,1,0,0,0,0,1"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "6"))
(builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
(builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "1,1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,1,1,0,0,0,0,0,0,1"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "7") (term "0,0,1,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "7") (term "0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,1,0,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,1,0,0,0,0,1"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,1,0,0,0,0,1"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,0,0,0,0,1,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "7") (term "0,1,1,0,0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "7") (term "0,0,1,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,1,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,1,1,0,0,0,0,0,0,1"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,1,1,0,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "7") (term "0,0,0,0,0,1,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,0,0,0,1,1,0,0,0,0,0,0,1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_compare,savedHeapBefore_compare,_a1Before_compare,_a2Before_compare"))
(builtin "One Step Simplification" (formula "7"))
(rule "ifUnfold" (formula "7") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "x"))
(rule "compound_assignment_3_nonsimple" (formula "7") (term "1"))
(rule "ifElseUnfold" (formula "7") (term "1") (inst "#boolv=x_1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "x_1"))
(rule "compound_assignment_2" (formula "7") (term "1") (inst "#v=x_2"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "x_2"))
(rule "inequality_comparison_simple" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "replace_known_right" (formula "7") (term "0,0,1,0") (ifseqformula "5"))
(builtin "One Step Simplification" (formula "7"))
(rule "compound_assignment_1_new" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "ifElseSplit" (formula "7"))
(branch "if x_1 true"
   (builtin "One Step Simplification" (formula "8"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x_1 false"
   (builtin "One Step Simplification" (formula "8"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "inequality_comparison_simple" (formula "7") (term "1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "replace_known_right" (formula "7") (term "0,0,1,0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "blockEmpty" (formula "7") (term "1"))
   (rule "ifSplit" (formula "7"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "8"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "variableDeclarationAssign" (formula "7") (term "1"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "n1"))
      (rule "assignment_read_length" (formula "7") (term "1"))
      (branch "Normal Execution (_a1 != null)"
         (builtin "One Step Simplification" (formula "8"))
         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")))
         (rule "false_right" (formula "7"))
         (rule "variableDeclarationAssign" (formula "7") (term "1"))
         (rule "variableDeclaration" (formula "7") (term "1") (newnames "n2"))
         (rule "assignment_read_length" (formula "7") (term "1"))
         (branch "Normal Execution (_a2 != null)"
            (builtin "One Step Simplification" (formula "8"))
            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "6")))
            (rule "false_right" (formula "7"))
            (rule "variableDeclarationAssign" (formula "7") (term "1"))
            (rule "variableDeclaration" (formula "7") (term "1") (newnames "m"))
            (builtin "Use Operation Contract" (formula "7") (newnames "heapBefore_min,result_0,exc_0") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::min(int,int)].JML normal_behavior operation contract.0"))
            (branch "Post (min)"
               (builtin "One Step Simplification" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "eqSymm" (formula "7") (term "0,1,1"))
               (rule "eqSymm" (formula "7") (term "0,1"))
               (rule "eqSymm" (formula "6") (term "1"))
               (rule "inEqSimp_gtToGeq" (formula "7") (term "0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0"))
               (rule "assignment" (formula "10") (term "1"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,0"))
               (rule "for_to_while" (formula "10") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
               (rule "variableDeclarationAssign" (formula "10") (term "1"))
               (rule "variableDeclaration" (formula "10") (term "1") (newnames "i"))
               (rule "assignment" (formula "10") (term "1"))
               (builtin "One Step Simplification" (formula "10"))
               (builtin "Loop Invariant" (formula "10") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
               (branch "Invariant Initially Valid"
                  (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "1")))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "eqSymm" (formula "10") (term "1,0"))
                  (rule "eqSymm" (formula "10") (term "1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,1"))
                  (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1"))
                  (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "10") (term "0,1,0") (inst "min_sk=min_sk_17") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "11") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "1,1,0,0,1"))
                  (rule "boxToDiamond" (formula "1") (term "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "nnf_imp2or" (formula "11") (term "0,1"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "11") (term "0,1,0,0,1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "applyEq_and_int0" (formula "11"))
                  (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_min_10,savedHeapBefore_min_9"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "ifUnfold" (formula "8") (term "1") (inst "#boolv=x_3"))
                  (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_31"))
                  (rule "less_equal_than_comparison_simple" (formula "8") (term "1"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,1,0"))
                  (rule "ifSplit" (formula "8"))
                  (branch "if x_31 true"
                     (builtin "One Step Simplification" (formula "9"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "blockReturn" (formula "9") (term "1"))
                     (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "1") (term "1") (ifseqformula "7"))
                     (rule "applyEq" (formula "8") (term "1,0,1,1") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "notLeft" (formula "8"))
                     (rule "inEqSimp_leqRight" (formula "8"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "methodCallReturn" (formula "8") (term "1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "assignment" (formula "8") (term "1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "methodCallEmpty" (formula "8") (term "1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "emptyModality" (formula "8") (term "1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "notRight" (formula "8"))
                     (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_geqRight" (formula "11"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                     (rule "applyEq" (formula "9") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                     (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "10") (term "0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "closeFalse" (formula "10"))
                  )
                  (branch "if x_31 false"
                     (builtin "One Step Simplification" (formula "9"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "notLeft" (formula "6"))
                     (rule "inEqSimp_geqRight" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "notLeft" (formula "8"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                     (rule "eqSymm" (formula "8"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradEq7" (formula "8") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0"))
                     (rule "leq_literals" (formula "8") (term "0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "false_right" (formula "8"))
                     (rule "methodCallReturn" (formula "8") (term "1"))
                     (rule "assignment" (formula "8") (term "1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "methodCallEmpty" (formula "8") (term "1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "emptyModality" (formula "8") (term "1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "notRight" (formula "8"))
                     (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_geqRight" (formula "11"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "2"))
                     (rule "applyEq" (formula "9") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                     (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "closeFalse" (formula "9"))
                  )
               )
               (branch "Body Preserves Invariant"
                  (builtin "One Step Simplification" (formula "9"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "translateJavaSubInt" (formula "12") (term "0,1,1,1,1,0,1,1"))
                  (rule "translateJavaSubInt" (formula "12") (term "0,1,1,1,0,1"))
                  (rule "andLeft" (formula "9"))
                  (rule "impRight" (formula "13"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "eqSymm" (formula "13") (term "1,0"))
                  (rule "eqSymm" (formula "16") (term "1,0,1,0,0,1,1,1,0,1"))
                  (rule "eqSymm" (formula "16") (term "1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "eqSymm" (formula "16") (term "1,0,0,0,0,1,1,1,0,1"))
                  (rule "eqSymm" (formula "16") (term "1,0,0,0,1,1,1,0,1"))
                  (rule "eqSymm" (formula "16") (term "0,0,1,0,1,1,1,0,1"))
                  (rule "eqSymm" (formula "12"))
                  (rule "polySimp_elimSub" (formula "16") (term "0,1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "16") (term "0,1,1,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,1,1,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,1,1,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0,0,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,0,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "10"))
                  (rule "inEqSimp_commuteLeq" (formula "11"))
                  (rule "variableDeclarationAssign" (formula "1") (term "1"))
                  (rule "variableDeclarationAssign" (formula "16") (term "1"))
                  (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "rtrn"))
                  (rule "assignment" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "returnExpr"))
                  (rule "variableDeclarationAssign" (formula "16") (term "1"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "exc_1"))
                  (rule "assignment" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "thrownExc"))
                  (rule "blockThrow" (formula "16") (term "1,0,0,1"))
                  (rule "blockReturn" (formula "16") (term "1,0,1,0,1"))
                  (rule "blockThrow" (formula "16") (term "1,0,0,1"))
                  (rule "blockReturn" (formula "16") (term "1,0,1,0,1"))
                  (rule "blockThrow" (formula "16") (term "1,0,0,1"))
                  (rule "blockReturn" (formula "16") (term "1,0,1,0,1"))
                  (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "12") (term "0") (inst "min_sk=min_sk_3") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "eqSymm" (formula "13"))
                  (rule "eqSymm" (formula "12") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "boxToDiamond" (formula "1") (term "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "boxToDiamond" (formula "11") (term "1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "notLeft" (formula "11"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                  (rule "nnf_imp2or" (formula "17") (term "0,1,0,0,1,1,1,0,1"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0,0,1,1,1,0,1"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
                  (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
                  (rule "less_than_comparison_simple" (formula "14") (term "1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                  (rule "apply_eq_monomials" (formula "14") (term "1,0,0,0,0") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "1,0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "14") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                  (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_min_3,savedHeapBefore_min_2"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "methodCallEmpty" (formula "14") (term "1"))
                  (rule "emptyModality" (formula "14") (term "1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "notRight" (formula "14"))
                  (rule "arrayLengthNotNegative" (formula "8") (term "0,0,1,1"))
                  (rule "arrayLengthNotNegative" (formula "9") (term "1,0,1,1"))
                  (rule "arrayLengthIsAShort" (formula "10") (term "1,0,1,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "arrayLengthIsAShort" (formula "10") (term "0,0,1,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_7"))
                  (rule "less_than_comparison_simple" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
                  (rule "apply_eq_monomials" (formula "19") (term "1,0,0,0,1,0") (ifseqformula "14"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "1,0,0,0,1,0"))
                  (rule "add_literals" (formula "19") (term "1,1,1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "19") (term "1,1,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "19") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0"))
                  (rule "replace_known_left" (formula "19") (term "0,0,1,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x_3"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_8"))
                  (rule "less_equal_than_comparison_simple" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,1,0"))
                  (rule "ifSplit" (formula "19"))
                  (branch "if x_7 true"
                     (builtin "One Step Simplification" (formula "20"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclarationAssign" (formula "19") (term "1"))
                     (rule "variableDeclaration" (formula "19") (term "1") (newnames "b1"))
                     (rule "assignment" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "variableDeclarationAssign" (formula "19") (term "1"))
                     (rule "variableDeclaration" (formula "19") (term "1") (newnames "b2"))
                     (rule "assignment" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "assignment_array2" (formula "19") (term "1"))
                     (branch "Normal Execution (_a1 != null)"
                        (builtin "One Step Simplification" (formula "20"))
                        (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "17")))
                        (rule "orRight" (formula "19"))
                        (rule "inEqSimp_leqRight" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_ltRight" (formula "20"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "tryEmpty" (formula "20") (term "1"))
                        (rule "assignment_array2" (formula "20") (term "1"))
                        (branch "Normal Execution (_a2 != null)"
                           (builtin "One Step Simplification" (formula "21"))
                           (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
                           (rule "orRight" (formula "20"))
                           (rule "inEqSimp_leqRight" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_ltRight" (formula "21"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "tryEmpty" (formula "21") (term "1"))
                           (rule "ifUnfold" (formula "21") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_22"))
                           (rule "inequality_comparison_simple" (formula "21") (term "1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "eqSymm" (formula "21") (term "0,0,1,0"))
                           (rule "ifSplit" (formula "18"))
                           (branch "if x_8 true"
                              (builtin "One Step Simplification" (formula "19"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "blockReturn" (formula "19") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0"))
                              (rule "leq_literals" (formula "13") (term "0,0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "notLeft" (formula "13"))
                              (rule "methodCallReturn" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "assignment" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "methodCallEmpty" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "emptyModality" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "notRight" (formula "19"))
                              (rule "ifSplit" (formula "22"))
                              (branch "if x_22 true"
                                 (builtin "One Step Simplification" (formula "23"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "assignment" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "assignmentSubtractionInt" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "23") (term "0,1,0"))
                                 (rule "blockBreakNoLabel" (formula "23") (term "1"))
                                 (rule "blockBreakLabel" (formula "23") (term "1"))
                                 (rule "blockEmpty" (formula "23") (term "1"))
                                 (rule "tryEmpty" (formula "23") (term "1"))
                                 (rule "methodCallEmpty" (formula "23") (term "1"))
                                 (rule "emptyModality" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "methodCallReturn" (formula "23") (term "1"))
                                 (rule "assignment" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "methodCallEmpty" (formula "23") (term "1"))
                                 (rule "tryEmpty" (formula "23") (term "1"))
                                 (rule "emptyModality" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "2")))
                                 (rule "applyEq" (formula "23") (term "1,1,1,1,0,0,0,0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "11"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "21") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "21") (term "1,1,1,1,0,0,0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "false_right" (formula "18"))
                                 (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "20") (term "1,1,0,0,1,0") (inst "min_sk=min_sk_4") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1") (term "0,1"))
                                 (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "21") (term "1,1,1,0,0,0,0") (inst "min_sk=min_sk_5") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0"))
                                 (rule "qeq_literals" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "boxToDiamond" (formula "2") (term "1"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "boxToDiamond" (formula "1") (term "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_min_4,savedHeapBefore_min_3"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_min_5,savedHeapBefore_min_4"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "ifUnfold" (formula "17") (term "1") (inst "#boolv=x_3"))
                                 (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_25"))
                                 (rule "less_equal_than_comparison_simple" (formula "17") (term "1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,0"))
                                 (rule "replace_known_left" (formula "17") (term "0,0,1,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x_3"))
                                 (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_26"))
                                 (rule "less_equal_than_comparison_simple" (formula "16") (term "1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,1,0"))
                                 (rule "replace_known_left" (formula "16") (term "0,0,1,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "ifSplit" (formula "17"))
                                 (branch "if x_25 true"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "blockReturn" (formula "17") (term "1"))
                                    (rule "methodCallReturn" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "assignment" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "methodCallEmpty" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "emptyModality" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "notRight" (formula "17"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEqRigid" (formula "21") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                    (rule "ifSplit" (formula "17"))
                                    (branch "if x_26 true"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "blockReturn" (formula "17") (term "1"))
                                       (rule "methodCallReturn" (formula "17") (term "1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "assignment" (formula "17") (term "1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "methodCallEmpty" (formula "17") (term "1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "emptyModality" (formula "17") (term "1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "notRight" (formula "17"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "applyEq" (formula "21") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                                       (rule "equiv_right" (formula "21"))
                                       (branch "Case 1"
                                          (rule "inEqSimp_geqRight" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0"))
                                          (rule "qeq_literals" (formula "20") (term "0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "false_right" (formula "20"))
                                          (rule "orLeft" (formula "2"))
                                          (branch "∃ int i; ( i ≥ 0 ∧ i ≤ -1 + min_sk_3 ∧ ( a2[i] ≥ 1 + a1[i] ∧ ∀ int j; (j ≤ -1 ∨ j ≥ i ∨ a2[j] = a1[j])))"
                                             (rule "exLeft" (formula "2") (inst "sk=i_2"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "allLeft" (formula "22") (inst "t=i_2"))
                                             (rule "inEqSimp_contradEq7" (formula "22") (term "1") (ifseqformula "4"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                             (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                             (rule "leq_literals" (formula "22") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "22") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "allLeft" (formula "5") (inst "t=i_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                                             (rule "inEqSimp_contradEq3" (formula "5") (term "1") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                             (rule "qeq_literals" (formula "5") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "21"))
                                             (rule "qeq_literals" (formula "5") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "5"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "23"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,0"))
                                             (rule "times_zero_1" (formula "5") (term "0"))
                                             (rule "qeq_literals" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_homoInEq1" (formula "23"))
                                             (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                             (rule "add_literals" (formula "23") (term "1,0"))
                                             (rule "times_zero_1" (formula "23") (term "0"))
                                             (rule "leq_literals" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "applyEqRigid" (formula "4") (term "0,2,0") (ifseqformula "22"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "20"))
                                             (rule "applyEqRigid" (formula "2") (term "0,2,1,0") (ifseqformula "19"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "∀ int j; (j ≤ -1 ∨ j ≥ min_sk_3 ∨ a2[j] = a1[j])"
                                             (rule "allLeft" (formula "2") (inst "t=i_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                                             (rule "inEqSimp_contradEq3" (formula "2") (term "1") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                             (rule "qeq_literals" (formula "2") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                             (rule "leq_literals" (formula "2") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "18"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "orRight" (formula "22"))
                                          (rule "allRight" (formula "23") (inst "sk=j_1"))
                                          (rule "orRight" (formula "23"))
                                          (rule "orRight" (formula "23"))
                                          (rule "inEqSimp_leqRight" (formula "23"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "21"))
                                          (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0"))
                                          (rule "leq_literals" (formula "21") (term "0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "false_right" (formula "21"))
                                          (rule "nnf_ex2all" (formula "23"))
                                          (rule "nnf_notAnd" (formula "1") (term "0"))
                                          (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                          (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                          (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                          (rule "nnf_notOr" (formula "1") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,1,1,0"))
                                          (rule "ex_pull_out3" (formula "1") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                                          (rule "commute_or" (formula "1") (term "1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                                          (rule "ex_pull_out3" (formula "1") (term "0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                          (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                          (rule "commute_or" (formula "1") (term "0,1,0,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "1") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                                          (rule "commute_and_2" (formula "1") (term "0,0"))
                                          (rule "allLeft" (formula "21") (inst "t=j_1"))
                                          (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "21") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "commute_and" (formula "1") (term "0,0,0"))
                                          (rule "allLeft" (formula "1") (inst "t=i_0"))
                                          (rule "exLeft" (formula "1") (inst "sk=j_2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0") (ifseqformula "22"))
                                          (rule "qeq_literals" (formula "2") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,0") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "2") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "3") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "22"))
                                          (rule "qeq_literals" (formula "1") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "21"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "allLeft" (formula "24") (inst "t=j_2"))
                                          (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "24") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "3"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "inEqSimp_homoInEq1" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0"))
                                          (rule "add_zero_right" (formula "24") (term "0"))
                                          (rule "leq_literals" (formula "24"))
                                          (rule "closeFalse" (formula "24"))
                                       )
                                    )
                                    (branch "if x_26 false"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "if x_25 false"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "if x_22 false"
                                 (builtin "One Step Simplification" (formula "23"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "blockEmpty" (formula "23") (term "1"))
                                 (rule "unusedLabel" (formula "23") (term "1"))
                                 (rule "postincrement" (formula "23") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "23") (term "1") (inst "#v=x"))
                                 (rule "variableDeclarationAssign" (formula "23") (term "1"))
                                 (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_24"))
                                 (rule "remove_parentheses_right" (formula "23") (term "1"))
                                 (rule "assignmentAdditionInt" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "translateJavaAddInt" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "23") (term "1"))
                                 (rule "assignment" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "tryEmpty" (formula "23") (term "1"))
                                 (rule "methodCallEmpty" (formula "23") (term "1"))
                                 (rule "emptyModality" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,0,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,0,1"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0,1"))
                                 (rule "precOfInt" (formula "23") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                 (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,1,1"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                                 (rule "add_zero_right" (formula "23") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,1,1"))
                                 (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,1"))
                                 (rule "add_literals" (formula "23") (term "1,0,1,1"))
                                 (rule "times_zero_1" (formula "23") (term "0,1,1"))
                                 (rule "leq_literals" (formula "23") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                 (rule "times_zero_2" (formula "23") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "23") (term "0,1"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "23") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "22") (term "1,0,1") (ifseqformula "17"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,0,0") (ifseqformula "17"))
                                 (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "19") (term "1,0,1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "false_right" (formula "19"))
                                 (rule "applyEq" (formula "11") (term "1") (ifseqformula "17"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "16"))
                                 (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "20") (term "0,1,0,0") (inst "min_sk=min_sk_6") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                 (rule "mul_literals" (formula "21") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                 (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0"))
                                 (rule "qeq_literals" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_subsumption1" (formula "20") (term "0,0") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "20") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "boxToDiamond" (formula "1") (term "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_min_6,savedHeapBefore_min_5"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "ifUnfold" (formula "17") (term "1") (inst "#boolv=x_3"))
                                 (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_27"))
                                 (rule "less_equal_than_comparison_simple" (formula "17") (term "1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,0"))
                                 (rule "replace_known_left" (formula "17") (term "0,0,1,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "ifSplit" (formula "17"))
                                 (branch "if x_27 true"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "blockReturn" (formula "17") (term "1"))
                                    (rule "methodCallReturn" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "assignment" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "methodCallEmpty" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "emptyModality" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "notRight" (formula "17"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "allRight" (formula "20") (inst "sk=j_3"))
                                    (rule "orRight" (formula "20"))
                                    (rule "orRight" (formula "20"))
                                    (rule "inEqSimp_leqRight" (formula "20"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "21"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "allLeft" (formula "19") (inst "t=j_3"))
                                    (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "19") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "1"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "20"))
                                    (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "1,0"))
                                    (rule "times_zero_1" (formula "20") (term "0"))
                                    (rule "leq_literals" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "21") (term "0,2,0") (ifseqformula "17"))
                                    (rule "eqSymm" (formula "21"))
                                    (rule "applyEqRigid" (formula "21") (term "0,2,0") (ifseqformula "17"))
                                    (rule "eqSymm" (formula "21"))
                                    (rule "close" (formula "21") (ifseqformula "2"))
                                 )
                                 (branch "if x_27 false"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "if x_8 false"
                              (builtin "One Step Simplification" (formula "19"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "notLeft" (formula "9"))
                              (rule "inEqSimp_geqRight" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "notLeft" (formula "13"))
                              (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "false_right" (formula "18"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0"))
                              (rule "qeq_literals" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                              (rule "mul_literals" (formula "10") (term "0,0"))
                              (rule "add_zero_left" (formula "10") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                              (rule "leq_literals" (formula "12") (term "0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "methodCallReturn" (formula "19") (term "1"))
                              (rule "assignment" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "methodCallEmpty" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "emptyModality" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "notRight" (formula "19"))
                              (rule "ifSplit" (formula "22"))
                              (branch "if x_22 true"
                                 (builtin "One Step Simplification" (formula "23"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "assignment" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "assignmentSubtractionInt" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "translateJavaSubInt" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "23") (term "0,1,0"))
                                 (rule "blockBreakNoLabel" (formula "23") (term "1"))
                                 (rule "blockBreakLabel" (formula "23") (term "1"))
                                 (rule "blockEmpty" (formula "23") (term "1"))
                                 (rule "tryEmpty" (formula "23") (term "1"))
                                 (rule "methodCallEmpty" (formula "23") (term "1"))
                                 (rule "emptyModality" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "methodCallReturn" (formula "23") (term "1"))
                                 (rule "assignment" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "methodCallEmpty" (formula "23") (term "1"))
                                 (rule "tryEmpty" (formula "23") (term "1"))
                                 (rule "emptyModality" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "applyEq" (formula "23") (term "2,1,1,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "23") (term "0,1,1,0") (ifseqformula "13"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1,1,0"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "13"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "22") (term "2,1,1,0,0,0,1,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "21") (term "2,1,1,0,0,0,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "21") (term "1,1,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "18") (term "1") (ifseqformula "15"))
                                 (rule "applyEq" (formula "11") (term "1") (ifseqformula "15"))
                                 (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
                                 (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "21") (term "1,1,1,0,0,0,0") (inst "min_sk=min_sk_7") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1") (term "0,1"))
                                 (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "22") (term "1,1,0,0,0,1,0") (inst "min_sk=min_sk_8") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "3"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0"))
                                 (rule "leq_literals" (formula "20") (term "0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "false_right" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "1,1,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1,1,0"))
                                 (rule "leq_literals" (formula "22") (term "0,1,1,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0"))
                                 (rule "qeq_literals" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "boxToDiamond" (formula "2") (term "1"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "boxToDiamond" (formula "1") (term "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_min_7,savedHeapBefore_min_6"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_min_8,savedHeapBefore_min_7"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "ifUnfold" (formula "17") (term "1") (inst "#boolv=x_3"))
                                 (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_28"))
                                 (rule "less_equal_than_comparison_simple" (formula "17") (term "1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "17") (term "0,0,0,1,0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x_3"))
                                 (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_29"))
                                 (rule "less_equal_than_comparison_simple" (formula "16") (term "1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "16") (term "0,0,0,1,0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "ifSplit" (formula "17"))
                                 (branch "if x_28 true"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_28 false"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "methodCallReturn" (formula "17") (term "1"))
                                    (rule "assignment" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "methodCallEmpty" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "emptyModality" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "notRight" (formula "17"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEqRigid" (formula "21") (term "1,1,1,0,0,0") (ifseqformula "1"))
                                    (rule "ifSplit" (formula "17"))
                                    (branch "if x_29 true"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "if x_29 false"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "methodCallReturn" (formula "17") (term "1"))
                                       (rule "assignment" (formula "17") (term "1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "methodCallEmpty" (formula "17") (term "1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "emptyModality" (formula "17") (term "1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "notRight" (formula "17"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "equiv_right" (formula "21"))
                                       (branch "Case 1"
                                          (rule "exLeft" (formula "1") (inst "sk=i_3"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_geqRight" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "3"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_contradEq3" (formula "23") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0"))
                                          (rule "qeq_literals" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "false_right" (formula "23"))
                                          (rule "allLeft" (formula "5") (inst "t=i_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                                          (rule "inEqSimp_contradEq3" (formula "5") (term "1") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                          (rule "qeq_literals" (formula "5") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "21"))
                                          (rule "qeq_literals" (formula "5") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                          (rule "times_zero_1" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "allLeft" (formula "23") (inst "t=i_3"))
                                          (rule "inEqSimp_contradEq7" (formula "23") (term "1") (ifseqformula "4"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "24"))
                                          (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "1,0"))
                                          (rule "times_zero_1" (formula "24") (term "0"))
                                          (rule "leq_literals" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "applyEqRigid" (formula "4") (term "0,2,0") (ifseqformula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "23"))
                                          (rule "applyEqRigid" (formula "5") (term "1,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "20"))
                                          (rule "inEqSimp_homoInEq0" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "qeq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "19"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "19"))
                                          (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "false_right" (formula "19"))
                                          (rule "nnf_ex2all" (formula "21"))
                                          (rule "nnf_notAnd" (formula "1") (term "0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                          (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                          (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                          (rule "nnf_notOr" (formula "1") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,1,1,0"))
                                          (rule "ex_pull_out3" (formula "1") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                                          (rule "commute_or" (formula "1") (term "1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                                          (rule "ex_pull_out3" (formula "1") (term "0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                          (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                          (rule "commute_or" (formula "1") (term "0,1,0,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "1") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                                          (rule "commute_and_2" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "1") (term "0,0,0"))
                                          (rule "allLeft" (formula "1") (inst "t=i_0"))
                                          (rule "exLeft" (formula "1") (inst "sk=j_4"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "3") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "3") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "20"))
                                          (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "20"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "20"))
                                          (rule "qeq_literals" (formula "3") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "allLeft" (formula "21") (inst "t=j_4"))
                                          (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                          (rule "leq_literals" (formula "21") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "21"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                 )
                              )
                              (branch "if x_22 false"
                                 (builtin "One Step Simplification" (formula "23"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "blockEmpty" (formula "23") (term "1"))
                                 (rule "unusedLabel" (formula "23") (term "1"))
                                 (rule "postincrement" (formula "23") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "23") (term "1") (inst "#v=x"))
                                 (rule "variableDeclarationAssign" (formula "23") (term "1"))
                                 (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_23"))
                                 (rule "remove_parentheses_right" (formula "23") (term "1"))
                                 (rule "assignmentAdditionInt" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "translateJavaAddInt" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "23") (term "1"))
                                 (rule "assignment" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "tryEmpty" (formula "23") (term "1"))
                                 (rule "methodCallEmpty" (formula "23") (term "1"))
                                 (rule "emptyModality" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,0,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,0,1"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0,1"))
                                 (rule "precOfInt" (formula "23") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                 (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,1,1"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                                 (rule "add_zero_right" (formula "23") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,1,1"))
                                 (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,1"))
                                 (rule "add_literals" (formula "23") (term "1,0,1,1"))
                                 (rule "times_zero_1" (formula "23") (term "0,1,1"))
                                 (rule "leq_literals" (formula "23") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                 (rule "times_zero_2" (formula "23") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "23") (term "0,1"))
                                 (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "18"))
                                 (rule "applyEq" (formula "23") (term "2,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "21") (term "0,1,0,0,0") (ifseqformula "16"))
                                 (rule "replace_known_left" (formula "21") (term "1,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "18") (term "1") (ifseqformula "16"))
                                 (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "16"))
                                 (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "21") (term "0,1,0,0") (inst "min_sk=min_sk_9") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                 (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0"))
                                 (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "4"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "false_right" (formula "19"))
                                 (rule "inEqSimp_subsumption1" (formula "21") (term "0,0") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "21") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0"))
                                 (rule "qeq_literals" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "boxToDiamond" (formula "1") (term "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_min_9,savedHeapBefore_min_8"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "ifUnfold" (formula "17") (term "1") (inst "#boolv=x_3"))
                                 (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_30"))
                                 (rule "less_equal_than_comparison_simple" (formula "17") (term "1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,1,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "17") (term "0,0,0,1,0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "ifSplit" (formula "17"))
                                 (branch "if x_30 true"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_30 false"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "methodCallReturn" (formula "17") (term "1"))
                                    (rule "assignment" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "methodCallEmpty" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "emptyModality" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "notRight" (formula "17"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "allRight" (formula "20") (inst "sk=j_5"))
                                    (rule "orRight" (formula "20"))
                                    (rule "orRight" (formula "20"))
                                    (rule "inEqSimp_geqRight" (formula "21"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "21"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "allLeft" (formula "19") (inst "t=j_5"))
                                    (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "19") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "20"))
                                    (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "1,0"))
                                    (rule "times_zero_1" (formula "20") (term "0"))
                                    (rule "leq_literals" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "19"))
                                    (rule "applyEqRigid" (formula "22") (term "0,2,0") (ifseqformula "18"))
                                    (rule "eqSymm" (formula "22"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEqRigid" (formula "21") (term "0,2,0") (ifseqformula "17"))
                                    (rule "eqSymm" (formula "21"))
                                    (rule "close" (formula "21") (ifseqformula "2"))
                                 )
                              )
                           )
                        )
                        (branch "Null Reference (_a2 = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (_a2 != null, but i Out of Bounds!)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "1") (term "0,1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "10") (term "0,0"))
                           (rule "add_zero_left" (formula "10") (term "0"))
                           (rule "ifSplit" (formula "18"))
                           (branch "if x_8 true"
                              (builtin "One Step Simplification" (formula "19"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "blockReturn" (formula "19") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0"))
                              (rule "leq_literals" (formula "13") (term "0,0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "notLeft" (formula "13"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "apply_eq_monomials" (formula "1") (term "1,0") (ifseqformula "11"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "1,1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,1,0"))
                              (rule "add_zero_right" (formula "1") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "apply_eq_monomials" (formula "1") (term "1,0") (ifseqformula "17"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "1,1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,1,0"))
                              (rule "add_zero_right" (formula "1") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_8 false"
                              (builtin "One Step Simplification" (formula "19"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "notLeft" (formula "9"))
                              (rule "inEqSimp_geqRight" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "notLeft" (formula "13"))
                              (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "false_right" (formula "18"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "10") (term "0,0"))
                              (rule "add_zero_left" (formula "10") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                              (rule "leq_literals" (formula "12") (term "0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "methodCallReturn" (formula "19") (term "1"))
                              (rule "assignment" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "methodCallEmpty" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "emptyModality" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "notRight" (formula "19"))
                              (rule "methodCallReturn" (formula "22") (term "1,0,1,0,1"))
                              (rule "assignment" (formula "22") (term "1,0,1,0,1"))
                              (rule "methodCallParamThrow" (formula "22") (term "1,0,0,1"))
                              (rule "methodCallEmpty" (formula "22") (term "1,1,0,1,0,1"))
                              (rule "tryCatchThrow" (formula "22") (term "1,0,0,1"))
                              (rule "ifElseUnfold" (formula "22") (term "1,0,0,1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "22") (term "1,0,0,1") (newnames "x_18"))
                              (rule "equality_comparison_simple" (formula "22") (term "1,0,0,1"))
                              (rule "tryEmpty" (formula "22") (term "1,1,0,1,0,1"))
                              (rule "emptyModality" (formula "22") (term "1,1,0,1,0,1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "throwUnfold" (formula "22") (term "1") (inst "#v0=a"))
                              (rule "variableDeclarationAssign" (formula "22") (term "1"))
                              (rule "variableDeclaration" (formula "22") (term "1") (newnames "a_12"))
                              (rule "instanceCreationAssignment" (formula "22") (term "1") (inst "#v0=a_13"))
                              (rule "variableDeclarationAssign" (formula "22") (term "1"))
                              (rule "variableDeclaration" (formula "22") (term "1") (newnames "a_13"))
                              (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "22") (term "1") (inst "#v0=a_14"))
                              (rule "variableDeclaration" (formula "22") (term "1") (newnames "a_14"))
                              (rule "methodBodyExpand" (formula "22") (term "1") (newnames "heapBefore_<createObject>_2,savedHeapBefore_<createObject>_2"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "variableDeclaration" (formula "22") (term "1") (newnames "__NEW___3"))
                              (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "22") (term "1") (inst "#v0=a_15"))
                              (rule "variableDeclaration" (formula "22") (term "1") (newnames "a_15"))
                              (rule "allocateInstance" (formula "22"))
                              (builtin "One Step Simplification" (formula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "notLeft" (formula "1"))
                              (rule "blockEmpty" (formula "25") (term "1"))
                              (rule "assignment" (formula "25") (term "1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<create>_2,savedHeapBefore_<create>_2"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "assignment_write_attribute_this" (formula "25") (term "1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallWithinClass" (formula "25") (term "1"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepareEnter>_2,savedHeapBefore_<prepareEnter>_2"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallSuper" (formula "25") (term "1"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepare>_14,savedHeapBefore_<prepare>_14"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallSuper" (formula "25") (term "1"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepare>_15,savedHeapBefore_<prepare>_15"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallSuper" (formula "25") (term "1"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepare>_16,savedHeapBefore_<prepare>_16"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallSuper" (formula "25") (term "1"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepare>_17,savedHeapBefore_<prepare>_17"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallSuper" (formula "25") (term "1"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepare>_18,savedHeapBefore_<prepare>_18"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "blockEmpty" (formula "25") (term "1"))
                              (rule "assignment_write_attribute_this" (formula "25") (term "1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "castDel" (formula "25") (term "1,0,1,0"))
                              (rule "assignment_write_attribute_this" (formula "25") (term "1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "castDel" (formula "25") (term "1,0,1,0"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "blockEmpty" (formula "25") (term "1"))
                              (rule "methodCallReturnIgnoreResult" (formula "25") (term "1"))
                              (rule "methodCallReturn" (formula "25") (term "1"))
                              (rule "assignment" (formula "25") (term "1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "blockEmpty" (formula "25") (term "1"))
                              (rule "assignment" (formula "25") (term "1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>_17,savedHeapBefore_<init>_17"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallSuper" (formula "25") (term "1"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>_18,savedHeapBefore_<init>_18"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallSuper" (formula "25") (term "1"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>_19,savedHeapBefore_<init>_19"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallSuper" (formula "25") (term "1"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>_20,savedHeapBefore_<init>_20"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallSuper" (formula "25") (term "1"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>_21,savedHeapBefore_<init>_21"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallSuper" (formula "25") (term "1"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>_22,savedHeapBefore_<init>_22"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "blockEmpty" (formula "25") (term "1"))
                              (rule "assignment_write_attribute_this" (formula "25") (term "1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "castDel" (formula "25") (term "1,0,1,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "assignment_write_attribute_this" (formula "25") (term "1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "castDel" (formula "25") (term "1,0,1,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "methodCallEmpty" (formula "25") (term "1"))
                              (rule "blockEmpty" (formula "25") (term "1"))
                              (rule "assignment_write_attribute" (formula "25") (term "1"))
                              (branch "Normal Execution (a_13 != null)"
                                 (builtin "One Step Simplification" (formula "26"))
                                 (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "20")))
                                 (rule "false_right" (formula "25"))
                                 (rule "assignment" (formula "25") (term "1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "tryCatchThrow" (formula "25") (term "1"))
                                 (rule "ifElseUnfold" (formula "25") (term "1") (inst "#boolv=x"))
                                 (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_19"))
                                 (rule "equality_comparison_simple" (formula "25") (term "1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "replace_known_right" (formula "25") (term "0,0,1,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "ifElseSplit" (formula "25"))
                                 (branch "if x_19 true"
                                    (builtin "One Step Simplification" (formula "26"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_19 false"
                                    (builtin "One Step Simplification" (formula "26"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "ifElseSplit" (formula "25"))
                                    (branch "if a_12 instanceof Throwable true"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                       (rule "true_left" (formula "1"))
                                       (rule "variableDeclaration" (formula "25") (term "1") (newnames "t_3"))
                                       (rule "reference_type_cast" (formula "25") (term "1"))
                                       (branch "Normal Execution (a_12 instanceof Throwable)"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "blockEmpty" (formula "25") (term "1"))
                                          (rule "ifUnfold" (formula "25") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_20"))
                                          (rule "inequality_comparison_simple" (formula "25") (term "1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "ifSplit" (formula "25"))
                                          (branch "if x_20 true"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "assignment" (formula "26") (term "1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "assignmentSubtractionInt" (formula "26") (term "1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "translateJavaSubInt" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_elimSub" (formula "26") (term "0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "0,1,0"))
                                             (rule "blockBreakNoLabel" (formula "26") (term "1"))
                                             (rule "blockBreakLabel" (formula "26") (term "1"))
                                             (rule "blockEmpty" (formula "26") (term "1"))
                                             (rule "tryEmpty" (formula "26") (term "1"))
                                             (rule "methodCallEmpty" (formula "26") (term "1"))
                                             (rule "emptyModality" (formula "26") (term "1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "eqSymm" (formula "26") (term "0,0,1"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,0,1,0,0"))
                                             (rule "eqSymm" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,0,1,0,0"))
                                             (rule "eqSymm" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "26") (term "2,1,1,1,0,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "26") (term "0,1,1,0,0") (ifseqformula "14"))
                                             (rule "inEqSimp_commuteGeq" (formula "26") (term "1,1,0,0"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "26") (term "2,1,1,0,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "22") (term "1") (ifseqformula "17"))
                                             (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "17"))
                                             (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "25") (term "1,1,1,0,0,0,0,0") (inst "min_sk=min_sk_10") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "1") (term "0,1"))
                                             (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "26") (term "1,1,0,0,0,1,0,0") (inst "min_sk=min_sk_11") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0"))
                                             (rule "mul_literals" (formula "27") (term "1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "5"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0"))
                                             (rule "leq_literals" (formula "24") (term "0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "false_right" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "1,1,0,0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,1,1,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,1,1,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,1,1,0,0"))
                                             (rule "leq_literals" (formula "26") (term "0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "8"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "6"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0"))
                                             (rule "add_zero_right" (formula "6") (term "0"))
                                             (rule "leq_literals" (formula "6"))
                                             (rule "closeFalse" (formula "6"))
                                          )
                                          (branch "if x_20 false"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "blockEmpty" (formula "26") (term "1"))
                                             (rule "postincrement" (formula "26") (term "1"))
                                             (rule "compound_int_cast_expression" (formula "26") (term "1") (inst "#v=x"))
                                             (rule "variableDeclarationAssign" (formula "26") (term "1"))
                                             (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_21"))
                                             (rule "remove_parentheses_right" (formula "26") (term "1"))
                                             (rule "assignmentAdditionInt" (formula "26") (term "1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "translateJavaAddInt" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "0,1,0"))
                                             (rule "widening_identity_cast_5" (formula "26") (term "1"))
                                             (rule "assignment" (formula "26") (term "1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "blockEmptyLabel" (formula "26") (term "1"))
                                             (rule "blockEmpty" (formula "26") (term "1"))
                                             (rule "tryEmpty" (formula "26") (term "1"))
                                             (rule "methodCallEmpty" (formula "26") (term "1"))
                                             (rule "emptyModality" (formula "26") (term "1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "eqSymm" (formula "26") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "0,0,1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "0,0,1"))
                                             (rule "mul_literals" (formula "26") (term "0,0,0,1"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,0,0"))
                                             (rule "precOfInt" (formula "26") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,1"))
                                             (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,1,1"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1"))
                                             (rule "polySimp_pullOutFactor2b" (formula "26") (term "0,1,1"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,1,1"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,1,1"))
                                             (rule "add_zero_right" (formula "26") (term "0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,1,1"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1,1"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,1,1"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1,1"))
                                             (rule "add_literals" (formula "26") (term "1,0,1,1"))
                                             (rule "times_zero_1" (formula "26") (term "0,1,1"))
                                             (rule "leq_literals" (formula "26") (term "1,1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "1"))
                                             (rule "mul_literals" (formula "26") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "26") (term "0,1"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "15"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "25") (term "0,1,0,0,0,0") (ifseqformula "18"))
                                             (rule "replace_known_left" (formula "25") (term "1,0,0,0,0") (ifseqformula "7"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "4"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "22") (term "1") (ifseqformula "18"))
                                             (rule "applyEq" (formula "25") (term "2,0,1,0,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "25") (term "1,0,1") (ifseqformula "18"))
                                             (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "18"))
                                             (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "25") (term "0,1,0,0,0") (inst "min_sk=min_sk_12") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "26") (term "1,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                             (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "5"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0"))
                                             (rule "leq_literals" (formula "23") (term "0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "false_right" (formula "23"))
                                             (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "6"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0"))
                                             (rule "add_zero_right" (formula "8") (term "0"))
                                             (rule "leq_literals" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                       )
                                       (branch "ClassCastException (!(a_12 instanceof Throwable))"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "closeTrue" (formula "25"))
                                       )
                                    )
                                    (branch "if a_12 instanceof Throwable false"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch "Null Reference (a_13 = null)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                     (branch "Null Reference (_a1 = null)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (_a1 != null, but i Out of Bounds!)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_literals" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "13"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "10") (term "0,0"))
                        (rule "add_zero_left" (formula "10") (term "0"))
                        (rule "ifSplit" (formula "17"))
                        (branch "if x_8 true"
                           (builtin "One Step Simplification" (formula "18"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "blockReturn" (formula "18") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0,0"))
                           (rule "leq_literals" (formula "12") (term "0,0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "notLeft" (formula "12"))
                           (rule "methodCallReturn" (formula "18") (term "1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "assignment" (formula "18") (term "1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallEmpty" (formula "18") (term "1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "emptyModality" (formula "18") (term "1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "notRight" (formula "18"))
                           (rule "methodCallReturn" (formula "21") (term "1,0,1,0,1"))
                           (rule "assignment" (formula "21") (term "1,0,1,0,1"))
                           (rule "methodCallParamThrow" (formula "21") (term "1,0,0,1"))
                           (rule "methodCallEmpty" (formula "21") (term "1,1,0,1,0,1"))
                           (rule "tryCatchThrow" (formula "21") (term "1,0,0,1"))
                           (rule "ifElseUnfold" (formula "21") (term "1,0,0,1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "21") (term "1,0,0,1") (newnames "x_14"))
                           (rule "tryEmpty" (formula "21") (term "1,1,0,1,0,1"))
                           (rule "equality_comparison_simple" (formula "21") (term "1,0,0,1"))
                           (rule "emptyModality" (formula "21") (term "1,1,0,1,0,1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "throwUnfold" (formula "21") (term "1") (inst "#v0=a"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "a_8"))
                           (rule "instanceCreationAssignment" (formula "21") (term "1") (inst "#v0=a_9"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "a_9"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "21") (term "1") (inst "#v0=a_10"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "a_10"))
                           (rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_<createObject>_1,savedHeapBefore_<createObject>_1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "__NEW___2"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "21") (term "1") (inst "#v0=a_11"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "a_11"))
                           (rule "allocateInstance" (formula "21"))
                           (builtin "One Step Simplification" (formula "22"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "notLeft" (formula "1"))
                           (rule "blockEmpty" (formula "24") (term "1"))
                           (rule "assignment" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<create>_1,savedHeapBefore_<create>_1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallWithinClass" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepareEnter>_1,savedHeapBefore_<prepareEnter>_1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>_9,savedHeapBefore_<prepare>_9"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>_10,savedHeapBefore_<prepare>_10"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>_11,savedHeapBefore_<prepare>_11"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>_12,savedHeapBefore_<prepare>_12"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>_13,savedHeapBefore_<prepare>_13"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "blockEmpty" (formula "24") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "castDel" (formula "24") (term "1,0,1,0"))
                           (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "castDel" (formula "24") (term "1,0,1,0"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "blockEmpty" (formula "24") (term "1"))
                           (rule "methodCallReturnIgnoreResult" (formula "24") (term "1"))
                           (rule "methodCallReturn" (formula "24") (term "1"))
                           (rule "assignment" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "blockEmpty" (formula "24") (term "1"))
                           (rule "assignment" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_11,savedHeapBefore_<init>_11"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_12,savedHeapBefore_<init>_12"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_13,savedHeapBefore_<init>_13"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_14,savedHeapBefore_<init>_14"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_15,savedHeapBefore_<init>_15"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_16,savedHeapBefore_<init>_16"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "blockEmpty" (formula "24") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "castDel" (formula "24") (term "1,0,1,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "castDel" (formula "24") (term "1,0,1,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "blockEmpty" (formula "24") (term "1"))
                           (rule "assignment_write_attribute" (formula "24") (term "1"))
                           (branch "Normal Execution (a_9 != null)"
                              (builtin "One Step Simplification" (formula "25"))
                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "19")))
                              (rule "false_right" (formula "24"))
                              (rule "assignment" (formula "24") (term "1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "tryCatchThrow" (formula "24") (term "1"))
                              (rule "ifElseUnfold" (formula "24") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_15"))
                              (rule "equality_comparison_simple" (formula "24") (term "1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "replace_known_right" (formula "24") (term "0,0,1,0") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "ifElseSplit" (formula "24"))
                              (branch "if x_15 true"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_15 false"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "ifElseSplit" (formula "24"))
                                 (branch "if a_8 instanceof Throwable true"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                    (rule "true_left" (formula "1"))
                                    (rule "variableDeclaration" (formula "24") (term "1") (newnames "t_2"))
                                    (rule "reference_type_cast" (formula "24") (term "1"))
                                    (branch "Normal Execution (a_8 instanceof Throwable)"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "blockEmpty" (formula "24") (term "1"))
                                       (rule "assignment_array2" (formula "24") (term "1"))
                                       (branch "Normal Execution (_a2 != null)"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
                                          (rule "orRight" (formula "24"))
                                          (rule "dismissNonSelectedField" (formula "26") (term "0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "26") (term "0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "26") (term "0,1,0"))
                                          (rule "inEqSimp_leqRight" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_ltRight" (formula "25"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=arr_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00010020100001_1" (formula "25") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "tryEmpty" (formula "25") (term "1"))
                                          (rule "ifUnfold" (formula "25") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_16"))
                                          (rule "inequality_comparison_simple" (formula "25") (term "1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "eqSymm" (formula "25") (term "0,0,1,0"))
                                          (rule "ifSplit" (formula "25"))
                                          (branch "if x_16 true"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "assignment" (formula "26") (term "1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "assignmentSubtractionInt" (formula "26") (term "1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "translateJavaSubInt" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_elimSub" (formula "26") (term "0,1,0"))
                                             (rule "blockBreakNoLabel" (formula "26") (term "1"))
                                             (rule "blockBreakLabel" (formula "26") (term "1"))
                                             (rule "blockEmpty" (formula "26") (term "1"))
                                             (rule "tryEmpty" (formula "26") (term "1"))
                                             (rule "methodCallEmpty" (formula "26") (term "1"))
                                             (rule "emptyModality" (formula "26") (term "1"))
                                             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "4")))
                                             (rule "eqSymm" (formula "26") (term "0,0,1"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,1,0,0,0,0"))
                                             (rule "eqSymm" (formula "26") (term "1,0,1,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,1,0,0,0,0"))
                                             (rule "eqSymm" (formula "26") (term "1,0,1,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,1,0,0,0,0"))
                                             (rule "eqSymm" (formula "26") (term "1,0,1,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,1,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,1,0,0,0,0"))
                                             (rule "eqSymm" (formula "26") (term "1,0,1,1,0,0,0,0"))
                                             (rule "applyEq" (formula "26") (term "1,1,1,0,0,1,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "26") (term "1,1,1,1,0,0,0,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "applyEq" (formula "4") (term "1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "22") (term "1,0,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "false_right" (formula "22"))
                                             (rule "applyEq" (formula "24") (term "1,1,1,1,0,0,0,0,0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "17"))
                                             (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "24") (term "1,1,0,0,1,0,0") (inst "min_sk=min_sk_13") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "1") (term "0,1"))
                                             (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "25") (term "1,1,1,0,0,0,0,0") (inst "min_sk=min_sk_14") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "8"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "7"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0"))
                                             (rule "add_zero_right" (formula "7") (term "0"))
                                             (rule "leq_literals" (formula "7"))
                                             (rule "closeFalse" (formula "7"))
                                          )
                                          (branch "if x_16 false"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "blockEmpty" (formula "26") (term "1"))
                                             (rule "unusedLabel" (formula "26") (term "1"))
                                             (rule "postincrement" (formula "26") (term "1"))
                                             (rule "compound_int_cast_expression" (formula "26") (term "1") (inst "#v=x"))
                                             (rule "variableDeclarationAssign" (formula "26") (term "1"))
                                             (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_17"))
                                             (rule "remove_parentheses_right" (formula "26") (term "1"))
                                             (rule "assignmentAdditionInt" (formula "26") (term "1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "translateJavaAddInt" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "0,1,0"))
                                             (rule "widening_identity_cast_5" (formula "26") (term "1"))
                                             (rule "assignment" (formula "26") (term "1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "tryEmpty" (formula "26") (term "1"))
                                             (rule "methodCallEmpty" (formula "26") (term "1"))
                                             (rule "emptyModality" (formula "26") (term "1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "eqSymm" (formula "26") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "0,0,1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "0,0,1"))
                                             (rule "mul_literals" (formula "26") (term "0,0,0,1"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,0,0"))
                                             (rule "eqSymm" (formula "26") (term "1,0,1,0,0"))
                                             (rule "precOfInt" (formula "26") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,0,0"))
                                             (rule "eqSymm" (formula "26") (term "1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "26") (term "0,1,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,1"))
                                             (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,1,1"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1"))
                                             (rule "polySimp_pullOutFactor2b" (formula "26") (term "0,1,1"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,1,1"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,1,1"))
                                             (rule "add_zero_right" (formula "26") (term "0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,1,1"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1,1"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,1,1"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1,1"))
                                             (rule "add_literals" (formula "26") (term "1,0,1,1"))
                                             (rule "times_zero_1" (formula "26") (term "0,1,1"))
                                             (rule "leq_literals" (formula "26") (term "1,1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "1"))
                                             (rule "times_zero_2" (formula "26") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "26") (term "0,1"))
                                             (rule "applyEq" (formula "26") (term "1,0,1") (ifseqformula "19"))
                                             (rule "applyEq" (formula "26") (term "1,0,1,0,0,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "26") (term "0,1,0,0,0,0") (ifseqformula "19"))
                                             (rule "replace_known_left" (formula "26") (term "1,0,0,0,0") (ifseqformula "7"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "4"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "5") (term "1") (ifseqformula "4"))
                                             (rule "applyEq" (formula "22") (term "1,0,1") (ifseqformula "4"))
                                             (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "false_right" (formula "22"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "24") (term "1,1,0,0,0") (ifseqformula "18"))
                                             (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "24") (term "0,1,0,0,0") (inst "min_sk=min_sk_15") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "25") (term "1,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                             (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0"))
                                             (rule "qeq_literals" (formula "18") (term "0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "7"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0"))
                                             (rule "add_literals" (formula "8") (term "0"))
                                             (rule "leq_literals" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                       )
                                       (branch "Null Reference (_a2 = null)"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Index Out of Bounds (_a2 != null, but i Out of Bounds!)"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "16"))
                                          (rule "qeq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0"))
                                          (rule "apply_eq_monomials" (formula "4") (term "1,0") (ifseqformula "13"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "1,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "4") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "apply_eq_monomials" (formula "4") (term "1,0") (ifseqformula "19"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "1,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "4") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "7"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_literals" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                    )
                                    (branch "ClassCastException (!(a_8 instanceof Throwable))"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "closeTrue" (formula "24"))
                                    )
                                 )
                                 (branch "if a_8 instanceof Throwable false"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Null Reference (a_9 = null)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "if x_8 false"
                           (builtin "One Step Simplification" (formula "18"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "notLeft" (formula "8"))
                           (rule "inEqSimp_geqRight" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "notLeft" (formula "12"))
                           (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0"))
                           (rule "qeq_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "false_right" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                           (rule "mul_literals" (formula "9") (term "0,0"))
                           (rule "add_zero_left" (formula "9") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                           (rule "leq_literals" (formula "11") (term "0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "2"))
                           (rule "mul_literals" (formula "9") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "9"))
                           (rule "leq_literals" (formula "14") (term "0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "methodCallReturn" (formula "18") (term "1"))
                           (rule "assignment" (formula "18") (term "1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "methodCallEmpty" (formula "18") (term "1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "emptyModality" (formula "18") (term "1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "notRight" (formula "18"))
                           (rule "methodCallReturn" (formula "21") (term "1,0,1,0,1"))
                           (rule "assignment" (formula "21") (term "1,0,1,0,1"))
                           (rule "methodCallParamThrow" (formula "21") (term "1,0,0,1"))
                           (rule "methodCallEmpty" (formula "21") (term "1,1,0,1,0,1"))
                           (rule "tryCatchThrow" (formula "21") (term "1,0,0,1"))
                           (rule "ifElseUnfold" (formula "21") (term "1,0,0,1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "21") (term "1,0,0,1") (newnames "x_9"))
                           (rule "tryEmpty" (formula "21") (term "1,1,0,1,0,1"))
                           (rule "equality_comparison_simple" (formula "21") (term "1,0,0,1"))
                           (rule "emptyModality" (formula "21") (term "1,1,0,1,0,1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "throwUnfold" (formula "21") (term "1") (inst "#v0=a"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "a"))
                           (rule "instanceCreationAssignment" (formula "21") (term "1") (inst "#v0=a_1"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "a_1"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "21") (term "1") (inst "#v0=a_2"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "a_2"))
                           (rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "__NEW__"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "21") (term "1") (inst "#v0=a_3"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "a_3"))
                           (rule "allocateInstance" (formula "21"))
                           (builtin "One Step Simplification" (formula "22"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "notLeft" (formula "1"))
                           (rule "blockEmpty" (formula "24") (term "1"))
                           (rule "assignment" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallWithinClass" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "blockEmpty" (formula "24") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "castDel" (formula "24") (term "1,0,1,0"))
                           (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "castDel" (formula "24") (term "1,0,1,0"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "blockEmpty" (formula "24") (term "1"))
                           (rule "methodCallReturnIgnoreResult" (formula "24") (term "1"))
                           (rule "methodCallReturn" (formula "24") (term "1"))
                           (rule "assignment" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "blockEmpty" (formula "24") (term "1"))
                           (rule "assignment" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallSuper" (formula "24") (term "1"))
                           (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "blockEmpty" (formula "24") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "castDel" (formula "24") (term "1,0,1,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "assignment_write_attribute_this" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "castDel" (formula "24") (term "1,0,1,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "blockEmpty" (formula "24") (term "1"))
                           (rule "assignment_write_attribute" (formula "24") (term "1"))
                           (branch "Normal Execution (a_1 != null)"
                              (builtin "One Step Simplification" (formula "25"))
                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "19")))
                              (rule "false_right" (formula "24"))
                              (rule "assignment" (formula "24") (term "1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "tryCatchThrow" (formula "24") (term "1"))
                              (rule "ifElseUnfold" (formula "24") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_10"))
                              (rule "equality_comparison_simple" (formula "24") (term "1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "replace_known_right" (formula "24") (term "0,0,1,0") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "ifElseSplit" (formula "24"))
                              (branch "if x_10 true"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_10 false"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "ifElseSplit" (formula "24"))
                                 (branch "if a instanceof Throwable true"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                    (rule "true_left" (formula "1"))
                                    (rule "variableDeclaration" (formula "24") (term "1") (newnames "t"))
                                    (rule "reference_type_cast" (formula "24") (term "1"))
                                    (branch "Normal Execution (a instanceof Throwable)"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "blockEmpty" (formula "24") (term "1"))
                                       (rule "assignment_array2" (formula "24") (term "1"))
                                       (branch "Normal Execution (_a2 != null)"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
                                          (rule "orRight" (formula "24"))
                                          (rule "dismissNonSelectedField" (formula "26") (term "0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "26") (term "0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "26") (term "0,1,0"))
                                          (rule "inEqSimp_ltRight" (formula "25"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "pullOutSelect" (formula "26") (term "0,1,0") (inst "selectSK=arr_0"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00010120100001_1" (formula "26") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "6"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_literals" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Null Reference (_a2 = null)"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Index Out of Bounds (_a2 != null, but i Out of Bounds!)"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "12"))
                                          (rule "qeq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "14") (term "0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "throwUnfold" (formula "25") (term "1") (inst "#v0=a"))
                                          (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "a_4"))
                                          (rule "instanceCreationAssignment" (formula "25") (term "1") (inst "#v0=a_5"))
                                          (rule "variableDeclarationAssign" (formula "25") (term "1"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "a_5"))
                                          (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "25") (term "1") (inst "#v0=a_6"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "a_6"))
                                          (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<createObject>_0,savedHeapBefore_<createObject>_0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "__NEW___1"))
                                          (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "25") (term "1") (inst "#v0=a_7"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "a_7"))
                                          (rule "allocateInstance" (formula "25"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1"))
                                          (rule "blockEmpty" (formula "28") (term "1"))
                                          (rule "assignment" (formula "28") (term "1"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "wellFormedStoreObject" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                          (rule "wellFormedStoreObject" (formula "1") (term "0,0"))
                                          (rule "typeEqDerived2" (formula "1") (term "0,1,1,0,0") (ifseqformula "13"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "wellFormedCreate" (formula "1") (term "0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "21"))
                                          (rule "hideAuxiliaryEqConcrete2" (formula "23"))
                                          (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<create>_0,savedHeapBefore_<create>_0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallWithinClass" (formula "29") (term "1"))
                                          (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepareEnter>_0,savedHeapBefore_<prepareEnter>_0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallSuper" (formula "29") (term "1"))
                                          (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallSuper" (formula "29") (term "1"))
                                          (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>_5,savedHeapBefore_<prepare>_5"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallSuper" (formula "29") (term "1"))
                                          (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>_6,savedHeapBefore_<prepare>_6"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallSuper" (formula "29") (term "1"))
                                          (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>_7,savedHeapBefore_<prepare>_7"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallSuper" (formula "29") (term "1"))
                                          (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>_8,savedHeapBefore_<prepare>_8"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallEmpty" (formula "29") (term "1"))
                                          (rule "blockEmpty" (formula "29") (term "1"))
                                          (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "castDel" (formula "29") (term "1,0,1,0"))
                                          (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "castDel" (formula "29") (term "1,0,1,0"))
                                          (rule "methodCallEmpty" (formula "29") (term "1"))
                                          (rule "methodCallEmpty" (formula "29") (term "1"))
                                          (rule "methodCallEmpty" (formula "29") (term "1"))
                                          (rule "methodCallEmpty" (formula "29") (term "1"))
                                          (rule "methodCallEmpty" (formula "29") (term "1"))
                                          (rule "blockEmpty" (formula "29") (term "1"))
                                          (rule "methodCallReturnIgnoreResult" (formula "29") (term "1"))
                                          (rule "methodCallReturn" (formula "29") (term "1"))
                                          (rule "assignment" (formula "29") (term "1"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallEmpty" (formula "29") (term "1"))
                                          (rule "blockEmpty" (formula "29") (term "1"))
                                          (rule "assignment" (formula "29") (term "1"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_5,savedHeapBefore_<init>_5"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallSuper" (formula "29") (term "1"))
                                          (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_6,savedHeapBefore_<init>_6"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallSuper" (formula "29") (term "1"))
                                          (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_7,savedHeapBefore_<init>_7"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallSuper" (formula "29") (term "1"))
                                          (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_8,savedHeapBefore_<init>_8"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallSuper" (formula "29") (term "1"))
                                          (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_9,savedHeapBefore_<init>_9"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallSuper" (formula "29") (term "1"))
                                          (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_10,savedHeapBefore_<init>_10"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallEmpty" (formula "29") (term "1"))
                                          (rule "blockEmpty" (formula "29") (term "1"))
                                          (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "castDel" (formula "29") (term "1,0,1,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "castDel" (formula "29") (term "1,0,1,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "methodCallEmpty" (formula "29") (term "1"))
                                          (rule "methodCallEmpty" (formula "29") (term "1"))
                                          (rule "methodCallEmpty" (formula "29") (term "1"))
                                          (rule "methodCallEmpty" (formula "29") (term "1"))
                                          (rule "methodCallEmpty" (formula "29") (term "1"))
                                          (rule "blockEmpty" (formula "29") (term "1"))
                                          (rule "assignment_write_attribute" (formula "29") (term "1"))
                                          (branch "Normal Execution (a_5 != null)"
                                             (builtin "One Step Simplification" (formula "30"))
                                             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "23")))
                                             (rule "false_right" (formula "29"))
                                             (rule "assignment" (formula "29") (term "1"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "tryCatchThrow" (formula "29") (term "1"))
                                             (rule "ifElseUnfold" (formula "29") (term "1") (inst "#boolv=x"))
                                             (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_11"))
                                             (rule "equality_comparison_simple" (formula "29") (term "1"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "replace_known_right" (formula "29") (term "0,0,1,0") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "ifElseSplit" (formula "29"))
                                             (branch "if x_11 true"
                                                (builtin "One Step Simplification" (formula "30"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "if x_11 false"
                                                (builtin "One Step Simplification" (formula "30"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "ifElseSplit" (formula "29"))
                                                (branch "if a_4 instanceof Throwable true"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "variableDeclaration" (formula "29") (term "1") (newnames "t_1"))
                                                   (rule "reference_type_cast" (formula "29") (term "1"))
                                                   (branch "Normal Execution (a_4 instanceof Throwable)"
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "blockEmpty" (formula "29") (term "1"))
                                                      (rule "ifUnfold" (formula "29") (term "1") (inst "#boolv=x"))
                                                      (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_12"))
                                                      (rule "inequality_comparison_simple" (formula "29") (term "1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "ifSplit" (formula "29"))
                                                      (branch "if x_12 true"
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "if x_12 false"
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "blockEmpty" (formula "29") (term "1"))
                                                         (rule "unusedLabel" (formula "29") (term "1"))
                                                         (rule "postincrement" (formula "29") (term "1"))
                                                         (rule "compound_int_cast_expression" (formula "29") (term "1") (inst "#v=x"))
                                                         (rule "variableDeclarationAssign" (formula "29") (term "1"))
                                                         (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_13"))
                                                         (rule "remove_parentheses_right" (formula "29") (term "1"))
                                                         (rule "assignmentAdditionInt" (formula "29") (term "1"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "translateJavaAddInt" (formula "29") (term "0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "29") (term "0,1,0"))
                                                         (rule "widening_identity_cast_5" (formula "29") (term "1"))
                                                         (rule "assignment" (formula "29") (term "1"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "tryEmpty" (formula "29") (term "1"))
                                                         (rule "methodCallEmpty" (formula "29") (term "1"))
                                                         (rule "emptyModality" (formula "29") (term "1"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "eqSymm" (formula "29") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "0,0,1"))
                                                         (rule "mul_literals" (formula "29") (term "0,0,0,1"))
                                                         (rule "dismissNonSelectedField" (formula "29") (term "0,1,0,1,0,0"))
                                                         (rule "eqSymm" (formula "29") (term "1,0,1,0,0"))
                                                         (rule "precOfInt" (formula "29") (term "1"))
                                                         (rule "dismissNonSelectedField" (formula "29") (term "1,1,0,1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "29") (term "0,1,0,1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "29") (term "1,1,0,1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "29") (term "0,1,0,1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "29") (term "0,1,0,1,0,0"))
                                                         (rule "eqSymm" (formula "29") (term "1,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,1"))
                                                         (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "29") (term "0,0,1,1"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,1,1"))
                                                         (rule "add_literals" (formula "29") (term "1,1,0,1,1"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,1,1"))
                                                         (rule "add_zero_right" (formula "29") (term "0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "29") (term "0,0,1,1"))
                                                         (rule "add_literals" (formula "29") (term "0,0,0,1,1"))
                                                         (rule "add_zero_left" (formula "29") (term "0,0,1,1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "29") (term "0,1,1"))
                                                         (rule "add_literals" (formula "29") (term "1,0,1,1"))
                                                         (rule "times_zero_1" (formula "29") (term "0,1,1"))
                                                         (rule "leq_literals" (formula "29") (term "1,1"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                                                         (rule "mul_literals" (formula "29") (term "1,0,1"))
                                                         (rule "add_zero_right" (formula "29") (term "0,1"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "16"))
                                                         (rule "applyEq" (formula "4") (term "0") (ifseqformula "16"))
                                                         (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "4") (term "0") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "28") (term "1,0,1") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "28") (term "0,1,0,0,0,0") (ifseqformula "18"))
                                                         (rule "replace_known_left" (formula "28") (term "1,0,0,0,0") (ifseqformula "6"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "applyEq" (formula "15") (term "1") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "25") (term "1") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "14") (term "0") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "28") (term "2,0,1,0,0,0") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "28") (term "1,1,0,0,0") (ifseqformula "18"))
                                                         (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "28") (term "0,1,0,0,0") (inst "min_sk=min_sk_16") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "eqSymm" (formula "29") (term "1,0,0,0"))
                                                         (rule "eqSymm" (formula "1") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                                                         (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                         (rule "mul_literals" (formula "5") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                         (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "5"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "26") (term "0,0"))
                                                         (rule "leq_literals" (formula "26") (term "0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "false_right" (formula "26"))
                                                         (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "3"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0"))
                                                         (rule "add_zero_right" (formula "7") (term "0"))
                                                         (rule "leq_literals" (formula "7"))
                                                         (rule "closeFalse" (formula "7"))
                                                      )
                                                   )
                                                   (branch "ClassCastException (!(a_4 instanceof Throwable))"
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "closeTrue" (formula "29"))
                                                   )
                                                )
                                                (branch "if a_4 instanceof Throwable false"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                          (branch "Null Reference (a_5 = null)"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch "ClassCastException (!(a instanceof Throwable))"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "closeTrue" (formula "24"))
                                    )
                                 )
                                 (branch "if a instanceof Throwable false"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Null Reference (a_1 = null)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                  )
                  (branch "if x_7 false"
                     (builtin "One Step Simplification" (formula "20"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Use Case"
                  (builtin "One Step Simplification" (formula "12"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "eqSymm" (formula "12") (term "1,0"))
                  (rule "eqSymm" (formula "11"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9"))
                  (rule "inEqSimp_commuteLeq" (formula "10"))
                  (rule "variableDeclarationAssign" (formula "15") (term "1"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "b_1"))
                  (rule "blockEmpty" (formula "15") (term "1,0,1"))
                  (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "11") (term "0") (inst "min_sk=min_sk_0") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "eqSymm" (formula "12"))
                  (rule "eqSymm" (formula "11") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                  (rule "boxToDiamond" (formula "11") (term "1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "notLeft" (formula "11"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                  (rule "less_than_comparison_simple" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,0"))
                  (rule "apply_eq_monomials" (formula "16") (term "1,0,0,0,1,0") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "1,0,0,0,1,0"))
                  (rule "add_literals" (formula "16") (term "1,1,1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "16") (term "1,1,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "16") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0"))
                  (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_min_0,savedHeapBefore_min"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "methodCallEmpty" (formula "16") (term "1"))
                  (rule "emptyModality" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "impRight" (formula "16"))
                  (rule "notLeft" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "13"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "returnUnfold" (formula "17") (term "1") (inst "#v0=x"))
                  (rule "variableDeclarationAssign" (formula "17") (term "1"))
                  (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_3"))
                  (rule "assignmentSubtractionInt" (formula "17") (term "1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "translateJavaSubInt" (formula "17") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "17") (term "0,1,0"))
                  (rule "blockReturn" (formula "17") (term "1"))
                  (rule "methodCallReturn" (formula "17") (term "1"))
                  (rule "assignment" (formula "17") (term "1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "tryEmpty" (formula "17") (term "1"))
                  (rule "emptyModality" (formula "17") (term "1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "17") (term "1,1,1,0,0,0,0") (inst "min_sk=min_sk_1") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1") (term "0,1"))
                  (rule "Query_axiom_for_min_int_int__in_verif_selectvoting_system_core_Utils" (formula "18") (term "1,1,0,0,0,1,0") (inst "min_sk=min_sk_2") (inst "#p1=x_2") (inst "#p0=x_1") (inst "#res=x"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                  (rule "boxToDiamond" (formula "2") (term "1"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "notLeft" (formula "2"))
                  (rule "boxToDiamond" (formula "1") (term "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_min_1,savedHeapBefore_min_0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_min_2,savedHeapBefore_min_1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x_3"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_4"))
                  (rule "less_equal_than_comparison_simple" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,1,0"))
                  (rule "arrayLengthNotNegative" (formula "8") (term "0,0,1,1"))
                  (rule "arrayLengthNotNegative" (formula "9") (term "1,0,1,1"))
                  (rule "arrayLengthIsAShort" (formula "10") (term "0,0,1,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "arrayLengthIsAShort" (formula "10") (term "1,0,1,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "ifUnfold" (formula "17") (term "1") (inst "#boolv=x_3"))
                  (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_5"))
                  (rule "less_equal_than_comparison_simple" (formula "17") (term "1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,0"))
                  (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x_3"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_6"))
                  (rule "less_equal_than_comparison_simple" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,1,0"))
                  (rule "ifSplit" (formula "18"))
                  (branch "if x_4 true"
                     (builtin "One Step Simplification" (formula "19"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "replace_known_left" (formula "17") (term "0,0,1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "replace_known_left" (formula "18") (term "0,0,1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "1")))
                     (rule "orRight" (formula "22"))
                     (rule "allRight" (formula "23") (inst "sk=j_0"))
                     (rule "orRight" (formula "23"))
                     (rule "orRight" (formula "23"))
                     (rule "inEqSimp_geqRight" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "24"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "blockReturn" (formula "21") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0"))
                     (rule "leq_literals" (formula "13") (term "0,0"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "notLeft" (formula "13"))
                     (rule "nnf_ex2all" (formula "24"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "1,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                     (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                     (rule "nnf_notOr" (formula "1") (term "0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,1,0"))
                     (rule "methodCallReturn" (formula "22") (term "1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "assignment" (formula "22") (term "1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "methodCallEmpty" (formula "22") (term "1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "emptyModality" (formula "22") (term "1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "notRight" (formula "22"))
                     (rule "ex_pull_out3" (formula "2") (term "1,0"))
                     (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
                     (rule "commute_or" (formula "2") (term "1,0,1,0"))
                     (rule "cnf_rightDist" (formula "2") (term "0,0,1,0"))
                     (rule "commute_or" (formula "2") (term "1,0,0,1,0"))
                     (rule "ifSplit" (formula "21"))
                     (branch "if x_6 true"
                        (builtin "One Step Simplification" (formula "22"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "blockReturn" (formula "21") (term "1"))
                        (rule "methodCallReturn" (formula "21") (term "1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "assignment" (formula "21") (term "1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "methodCallEmpty" (formula "21") (term "1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "emptyModality" (formula "21") (term "1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "notRight" (formula "21"))
                        (rule "ex_pull_out3" (formula "3") (term "0"))
                        (rule "cnf_rightDist" (formula "3") (term "0,0"))
                        (rule "commute_or_2" (formula "3") (term "1,0,0"))
                        (rule "commute_or" (formula "3") (term "0,1,0,0"))
                        (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
                        (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                        (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                        (rule "commute_or" (formula "3") (term "0,1,0,0,0"))
                        (rule "ifSplit" (formula "22"))
                        (branch "if x_5 true"
                           (builtin "One Step Simplification" (formula "23"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "blockReturn" (formula "22") (term "1"))
                           (rule "methodCallReturn" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "assignment" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "methodCallEmpty" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "emptyModality" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "notRight" (formula "22"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                           (rule "eqSymm" (formula "14"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                           (rule "applyEq" (formula "7") (term "1") (ifseqformula "2"))
                           (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "14"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "4") (term "1,1,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "7") (term "1") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "4") (term "1,1,0,0,1,0,0,0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "4") (term "1,1,0,0,1,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                           (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "14"))
                           (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "3"))
                           (rule "applyEq" (formula "21") (term "1,0,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "false_right" (formula "21"))
                           (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "8"))
                           (rule "applyEq" (formula "4") (term "1,1,0,0,1,0,0") (ifseqformula "19"))
                           (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "19"))
                           (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq0" (formula "8"))
                           (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,0"))
                           (rule "times_zero_1" (formula "8") (term "0"))
                           (rule "qeq_literals" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "applyEqRigid" (formula "4") (term "1,1,0,0,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "4") (term "1,1,0,0,0,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "19"))
                           (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "1,0"))
                           (rule "times_zero_1" (formula "19") (term "0"))
                           (rule "leq_literals" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "1") (term "1") (ifseqformula "17"))
                           (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "17"))
                           (rule "applyEq" (formula "2") (term "1") (ifseqformula "17"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "17"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "mul_literals" (formula "6") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "5") (term "0,0"))
                           (rule "add_zero_left" (formula "5") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "5"))
                           (rule "leq_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "allLeft" (formula "18") (inst "t=j_0"))
                           (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "18") (term "0,0,1"))
                           (rule "leq_literals" (formula "18") (term "0,1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "18") (term "0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "closeFalse" (formula "18"))
                        )
                        (branch "if x_5 false"
                           (builtin "One Step Simplification" (formula "23"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "if x_6 false"
                        (builtin "One Step Simplification" (formula "22"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "if x_4 false"
                     (builtin "One Step Simplification" (formula "19"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_right" (formula "18") (term "0,0,1,0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "replace_known_right" (formula "22") (term "1,1,0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "16")))
                     (rule "notRight" (formula "22"))
                     (rule "exLeft" (formula "1") (inst "sk=i_1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "1"))
                     (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "notLeft" (formula "11"))
                     (rule "inEqSimp_geqRight" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "3"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "notLeft" (formula "15"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0"))
                     (rule "qeq_literals" (formula "20") (term "0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "false_right" (formula "20"))
                     (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "12") (term "0,0"))
                     (rule "add_zero_left" (formula "12") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                     (rule "mul_literals" (formula "12") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
                     (rule "leq_literals" (formula "14") (term "0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "methodCallReturn" (formula "23") (term "1"))
                     (rule "assignment" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "emptyModality" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "notRight" (formula "23"))
                     (rule "ifSplit" (formula "23"))
                     (branch "if x_5 true"
                        (builtin "One Step Simplification" (formula "24"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_5 false"
                        (builtin "One Step Simplification" (formula "24"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "methodCallReturn" (formula "23") (term "1"))
                        (rule "assignment" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "methodCallEmpty" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "emptyModality" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "notRight" (formula "23"))
                        (rule "ifSplit" (formula "23"))
                        (branch "if x_6 true"
                           (builtin "One Step Simplification" (formula "24"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_6 false"
                           (builtin "One Step Simplification" (formula "24"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "methodCallReturn" (formula "23") (term "1"))
                           (rule "assignment" (formula "23") (term "1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "methodCallEmpty" (formula "23") (term "1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "emptyModality" (formula "23") (term "1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "notRight" (formula "23"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                           (rule "eqSymm" (formula "17"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "21"))
                           (rule "eqSymm" (formula "17"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "3"))
                           (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                           (rule "applyEq" (formula "22") (term "1") (ifseqformula "20"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "4"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0"))
                           (rule "leq_literals" (formula "22") (term "0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "false_right" (formula "22"))
                           (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "9"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq0" (formula "9"))
                           (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "1,0"))
                           (rule "times_zero_1" (formula "9") (term "0"))
                           (rule "qeq_literals" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "18"))
                           (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                           (rule "add_literals" (formula "18") (term "1,0"))
                           (rule "times_zero_1" (formula "18") (term "0"))
                           (rule "leq_literals" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "applyEqRigid" (formula "18") (term "1") (ifseqformula "17"))
                           (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "17"))
                           (rule "applyEq" (formula "1") (term "1") (ifseqformula "17"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "17"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "mul_literals" (formula "6") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "5") (term "0,0"))
                           (rule "add_zero_left" (formula "5") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "5"))
                           (rule "leq_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "allLeft" (formula "19") (inst "t=i_1"))
                           (rule "inEqSimp_contradEq7" (formula "19") (term "1") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1"))
                           (rule "leq_literals" (formula "19") (term "0,1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "19") (term "0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "19"))
                           (rule "andLeft" (formula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "1,1,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0"))
                           (rule "add_zero_right" (formula "7") (term "0"))
                           (rule "leq_literals" (formula "7"))
                           (rule "closeFalse" (formula "7"))
                        )
                     )
                  )
               )
            )
            (branch "Exceptional Post (min)"
               (builtin "One Step Simplification" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "7"))
               (rule "notLeft" (formula "5"))
               (rule "close" (formula "9") (ifseqformula "8"))
            )
            (branch "Pre (min)"
               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
               (rule "closeTrue" (formula "7"))
            )
         )
         (branch "Null Reference (_a2 = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (_a1 = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "8"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
