\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Apr 07 13:53:37 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=30000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Apr 07 13:53:37 CEST 2016
name=verif.selectvoting.system.core.ConservativeExtension[verif.selectvoting.system.core.ConservativeExtension\\:\\:selSort([[B,int,int)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.ConservativeExtension[verif.selectvoting.system.core.ConservativeExtension\\:\\:selSort([[B,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))

(autoModeTime "99860")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "byteArrays,fromIndex,sorted,exc,heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,1,1,1,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,1,1,1,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "10"))
(rule "eqSymm" (formula "12") (term "1,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "10") (term "1,1,0,0"))
(rule "mul_literals" (formula "10") (term "1,1,1,0,0"))
(rule "polySimp_addComm0" (formula "12") (term "0,2,2,0,1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "0,2,2,0,1,0"))
(rule "polySimp_addComm0" (formula "10") (term "1,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "7") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "4"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
(rule "assignment" (formula "12") (term "1"))
(builtin "One Step Simplification" (formula "12"))
(rule "inEqSimp_sepNegMonomial0" (formula "7"))
(rule "polySimp_mulLiterals" (formula "7") (term "0"))
(rule "polySimp_elimOne" (formula "7") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,1,0,0,0,1"))
(rule "nonNull" (formula "11") (inst "i=i"))
(rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "11"))
(rule "greater_literals" (formula "11") (term "0,1"))
(builtin "One Step Simplification" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "12"))
(builtin "One Step Simplification" (formula "2"))
(rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
(rule "elementOfArrayRange" (formula "12") (term "0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,1,0,0,0,0,1,0,1"))
(rule "array2seqDef" (formula "12") (term "1,0,1,0,0,0,1") (inst "u=u"))
(rule "array2seqDef" (formula "12") (term "0,0,1,0,0,0,1") (inst "u=u"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_imp2or" (formula "10") (term "0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "10") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "12") (term "0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "12") (term "0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "12") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "12") (term "0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "commute_or_2" (formula "8") (term "0"))
(rule "commute_or" (formula "8") (term "0,0"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_selSort,savedHeapBefore_selSort"))
(builtin "One Step Simplification" (formula "12"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "key"))
(rule "assignment_array2" (formula "12") (term "1"))
(branch "Normal Execution (_byteArrays != null)"
   (builtin "One Step Simplification" (formula "13"))
   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
   (rule "orRight" (formula "12"))
   (rule "inEqSimp_ltRight" (formula "13"))
   (rule "times_zero_1" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (rule "inEqSimp_leqRight" (formula "12"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "i"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1"))
   (rule "polySimp_rightDist" (formula "1") (term "1"))
   (rule "mul_literals" (formula "1") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
   (rule "arrayLengthNotNegative" (formula "5") (term "0"))
   (rule "arrayLengthIsAShort" (formula "6") (term "0"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_shiftRight,result,exc_0,heapAfter_shiftRight,anon_heap_shiftRight") (contract "verif.selectvoting.system.core.ConservativeExtension[verif.selectvoting.system.core.ConservativeExtension::shiftRight([[B,int,int,[B)].JML normal_behavior operation contract.0"))
   (branch "Post (shiftRight)"
      (builtin "One Step Simplification" (formula "15"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "translateJavaSubInt" (formula "13") (term "0,2,1,0,1,0,1,1,1,0,1,1"))
      (rule "translateJavaSubInt" (formula "13") (term "0,2,1,1,0,0,1,0,1,1"))
      (rule "translateJavaAddInt" (formula "13") (term "0,2,2,0,1,1,1,1,1,0,1,1"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "eqSymm" (formula "16") (term "1,0"))
      (rule "polySimp_elimSub" (formula "19") (term "0,2,1,0,1"))
      (rule "mul_literals" (formula "19") (term "1,0,2,1,0,1"))
      (rule "polySimp_elimSub" (formula "16") (term "0,2,0,1,0"))
      (rule "mul_literals" (formula "16") (term "1,0,2,0,1,0"))
      (rule "polySimp_addComm0" (formula "20") (term "0,2,2,0,1"))
      (rule "polySimp_addComm0" (formula "19") (term "0,2,1,0,1"))
      (rule "polySimp_addComm0" (formula "16") (term "0,2,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "20") (term "0,0"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "18"))
      (rule "inEqSimp_commuteLeq" (formula "17"))
      (rule "assignment" (formula "22") (term "1"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "assignment_to_reference_array_component" (formula "22") (term "1"))
      (branch "Normal Execution (_byteArrays != null)"
         (builtin "One Step Simplification" (formula "23"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "array_self_reference" (formula "3") (ifseqformula "4") (ifseqformula "24"))
         (rule "true_left" (formula "3"))
         (rule "inEqSimp_ltToLeq" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "pullOutSelect" (formula "22") (term "2,0,1") (inst "selectSK=arr_2"))
         (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
         (rule "elementOfArrayRangeConcrete" (formula "22") (term "0,0"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
         (rule "inEqSimp_subsumption1" (formula "22") (term "0,0,0") (ifseqformula "19"))
         (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,0"))
         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
         (rule "qeq_literals" (formula "22") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "pullOutSelect" (formula "21") (term "1,0,1") (inst "selectSK=arr_3"))
         (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")) (ifInst ""  (formula "4")))
         (rule "elementOfArrayRangeConcrete" (formula "21") (term "0,0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
         (rule "inEqSimp_subsumption1" (formula "21") (term "1,0,0") (ifseqformula "20"))
         (rule "inEqSimp_homoInEq0" (formula "21") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
         (rule "qeq_literals" (formula "21") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "nnf_imp2or" (formula "17") (term "0"))
         (rule "nnf_imp2or" (formula "18") (term "0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or_2" (formula "18") (term "0"))
         (rule "tryEmpty" (formula "26") (term "1"))
         (rule "commute_or" (formula "17") (term "0,0"))
         (rule "commute_or" (formula "18") (term "0,0"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "tryEmpty" (formula "26") (term "1"))
         (rule "emptyModality" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "andRight" (formula "26") (userinteraction))
         (branch "Case 1"
            (rule "andRight" (formula "26") (userinteraction))
            (branch "Case 1"
               (rule "allRight" (formula "26") (inst "sk=i_3") (userinteraction))
               (rule "orRight" (formula "26") (userinteraction))
               (rule "cut" (inst "cutFormula=i_3 = result") (userinteraction))
               (branch "CUT: i_3 = result TRUE"
                  (opengoal " ")
               )
               (branch "Case 2"
                  (rule "cut" (inst "cutFormula=add(i_3, Z(1(#))) = result") (userinteraction))
                  (branch "CUT: i_3 + 1 = result TRUE"
                     (opengoal " ")
                  )
                  (branch "CUT: i_3 + 1 = result FALSE"
                     (opengoal " ")
                  )
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "26") (userinteraction))
               (branch "Case 1"
                  (rule "seqPermDef" (formula "26") (inst "s=s") (inst "iv=iv") (userinteraction))
                  (rule "andRight" (formula "26") (userinteraction))
                  (branch "Case 1"
                     (rule "lenOfSeqDef" (formula "26") (term "1"))
                     (rule "polySimp_elimSub" (formula "26") (term "1,1"))
                     (rule "times_zero_2" (formula "26") (term "1,1,1"))
                     (rule "add_zero_right" (formula "26") (term "1,1"))
                     (rule "lenOfSeqDef" (formula "26") (term "0"))
                     (rule "polySimp_elimSub" (formula "26") (term "1,0"))
                     (rule "times_zero_2" (formula "26") (term "1,1,0"))
                     (rule "add_zero_right" (formula "26") (term "1,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "closeTrue" (formula "26"))
                  )
                  (branch "Case 2"
                     (rule "exRightHide" (formula "26") (inst "t=seqDef{int u;}(Z(0(#)),
               length(byteArrays),
               \\if (lt(u, result))
                   \\then (u)
                   \\else (\\if (u = result)
                              \\then (sorted)
                              \\else (\\if (leq(u,
                                              sorted))
                                         \\then (sub(u,
                                                    Z(1(#))))
                                         \\else (u))))") (userinteraction))
                     (rule "andRight" (formula "26") (userinteraction))
                     (branch "Case 1"
                        (rule "andRight" (formula "26") (userinteraction))
                        (branch "Case 1"
                           (rule "eqSymm" (formula "26"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,2,2,2,0,1"))
                           (rule "mul_literals" (formula "26") (term "1,1,2,2,2,0,1"))
                           (rule "polySimp_addComm0" (formula "26") (term "1,2,2,2,0,1"))
                           (rule "lenOfSeqDef" (formula "26") (term "0"))
                           (rule "eqSymm" (formula "26"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,1"))
                           (rule "times_zero_2" (formula "26") (term "1,1,1"))
                           (rule "add_zero_right" (formula "26") (term "1,1"))
                           (rule "lenOfSeqDef" (formula "26") (term "0"))
                           (rule "polySimp_elimSub" (formula "26") (term "1,0"))
                           (rule "times_zero_2" (formula "26") (term "1,1,0"))
                           (rule "add_zero_right" (formula "26") (term "1,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "closeTrue" (formula "26"))
                        )
                        (branch "Case 2"
                           (rule "seqNPermDefReplace" (formula "26") (inst "iv=iv") (inst "jv=jv") (userinteraction))
                           (rule "allRight" (formula "26") (inst "sk=iv_3") (userinteraction))
                           (rule "impRight" (formula "26") (userinteraction))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_elimSub" (formula "28") (term "1,2,2,2,0,1,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "1,1,2,2,2,0,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "28") (term "1,2,2,2,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "1,1,2,2,2,0,0,1,0"))
                           (rule "polySimp_elimSub" (formula "2") (term "1,2,2,2,0,1"))
                           (rule "mul_literals" (formula "2") (term "1,1,2,2,2,0,1"))
                           (rule "polySimp_addComm0" (formula "28") (term "1,2,2,2,0,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "28") (term "1,2,2,2,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "1,2,2,2,0,1"))
                           (rule "lenOfSeqDef" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "28") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "1,1,1,1,0,0"))
                           (rule "add_zero_right" (formula "28") (term "1,1,1,0,0"))
                           (rule "getOfSeqDef" (formula "28") (term "0,1,0"))
                           (rule "castDel" (formula "28") (term "2,0,1,0"))
                           (rule "castDel" (formula "28") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "28") (term "2,2,2,1,0,1,0"))
                           (rule "add_zero_right" (formula "28") (term "1,1,2,2,1,0,1,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1,0,1,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,2,1,0,1,0"))
                           (rule "add_zero_right" (formula "28") (term "1,1,0,1,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,2,2,1,0,1,0"))
                           (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "times_zero_2" (formula "28") (term "1,1,1,0,0,1,0"))
                           (rule "add_zero_right" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "lenOfSeqDef" (formula "2") (term "1"))
                           (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "1,1,1"))
                           (rule "add_zero_right" (formula "2") (term "1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,1,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0,0,1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "nnf_ex2all" (formula "28"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "commute_or" (formula "1") (term "1,1,0"))
                           (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                           (rule "cnf_rightDist" (formula "1") (term "0"))
                           (rule "distr_forallAnd" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "commute_or" (formula "2") (term "0"))
                           (rule "shift_paren_or" (formula "1") (term "0"))
                           (rule "commute_or_2" (formula "1") (term "0,0"))
                           (rule "commute_or" (formula "2") (term "0,1,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0"))
                           (rule "distr_forallAnd" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "commute_or_2" (formula "3") (term "0"))
                           (rule "shift_paren_or" (formula "2") (term "0"))
                           (rule "commute_or_2" (formula "2") (term "0,0"))
                           (rule "inEqSimp_or_tautInEq0" (formula "2") (term "0,0,0"))
                           (rule "add_zero_right" (formula "2") (term "1,1,0,0,0"))
                           (rule "qeq_literals" (formula "2") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "shift_paren_or" (formula "2") (term "0,0"))
                           (rule "commute_or" (formula "2") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "ifthenelse_split" (formula "25") (term "0"))
                           (branch "result ≥ 1 + fromIndex TRUE"
                              (rule "applyEqReverse" (formula "27") (term "1,0,1") (ifseqformula "26"))
                              (rule "hideAuxiliaryEq" (formula "26"))
                              (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0"))
                              (rule "qeq_literals" (formula "23") (term "0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "ifthenelse_split" (formula "26") (term "0"))
                              (branch "sorted ≥ 1 + result TRUE"
                                 (rule "applyEqReverse" (formula "28") (term "2,0,1") (ifseqformula "27"))
                                 (rule "hideAuxiliaryEq" (formula "27"))
                                 (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "26"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0"))
                                 (rule "qeq_literals" (formula "23") (term "0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                 (rule "commute_or" (formula "1") (term "0,1,0"))
                                 (rule "cnf_rightDist" (formula "1") (term "0"))
                                 (rule "distr_forallAnd" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "commute_or_2" (formula "2") (term "0"))
                                 (rule "shift_paren_or" (formula "1") (term "0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "1") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "commute_or" (formula "1"))
                                 (rule "shift_paren_or" (formula "2") (term "0,0"))
                                 (rule "shift_paren_or" (formula "2") (term "0,0,0"))
                                 (rule "commute_or" (formula "2") (term "0,0,0,0"))
                                 (rule "ifthenelse_to_or_left2" (formula "2") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "2") (term "0"))
                                 (rule "distr_forallAnd" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "commute_or_2" (formula "3") (term "0"))
                                 (rule "shift_paren_or" (formula "2") (term "0"))
                                 (rule "commute_or_2" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,1,0,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                 (rule "qeq_literals" (formula "2") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "2") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "commute_or" (formula "2"))
                                 (rule "shift_paren_or" (formula "3") (term "0,0"))
                                 (rule "shift_paren_or" (formula "3") (term "0,0,0"))
                                 (rule "commute_or" (formula "3") (term "0,0,0,0"))
                                 (rule "inEqSimp_or_weaken2" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "1,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,1,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "3") (term "1,0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "ifthenelse_split" (formula "6") (term "0"))
                                 (branch "byteArrays.length ≥ 1 TRUE"
                                    (rule "replace_known_left" (formula "3") (term "0,1,1,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "4") (term "0,1,1,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,1") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "6"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                    (rule "leq_literals" (formula "2") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "leq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "8") (term "0,0"))
                                    (rule "add_zero_left" (formula "8") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1"))
                                    (rule "mul_literals" (formula "24") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "3") (term "1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "0,1,0,0"))
                                    (rule "leq_literals" (formula "3") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "allLeft" (formula "15") (inst "t=sorted"))
                                    (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "15") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "14"))
                                    (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                    (rule "leq_literals" (formula "15") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "notLeft" (formula "15"))
                                    (rule "ifthenelse_to_or_left2" (formula "2") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "2") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1,0,1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "2") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "commute_or" (formula "2") (term "1,1,0"))
                                    (rule "commute_or" (formula "2") (term "1,1,0"))
                                    (rule "cnf_rightDist" (formula "2") (term "0"))
                                    (rule "distr_forallAnd" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "commute_or_2" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "1,1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1,1"))
                                    (rule "leq_literals" (formula "3") (term "0,1,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "0,1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "3") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "commute_or" (formula "3"))
                                    (rule "shift_paren_or" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "2") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "commute_or" (formula "2"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), result)"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,2,2,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,2,2,0,1"))
                                    (rule "add_zero_left" (formula "18") (term "0,2,2,0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "28"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "allLeft" (formula "23") (inst "t=add(Z(neglit(1(#))), result)"))
                                    (rule "replaceKnownSelect_taclet000_1" (formula "23") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0101010000_3" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,1"))
                                    (rule "leq_literals" (formula "23") (term "1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                    (rule "leq_literals" (formula "23") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "23"))
                                    (rule "allLeft" (formula "25") (inst "t=sorted"))
                                    (rule "eqSymm" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "25") (term "0,1"))
                                    (rule "leq_literals" (formula "25") (term "1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "30"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_302"))
                                    (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "35")) (ifInst ""  (formula "10")))
                                    (rule "eqSymm" (formula "26"))
                                    (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "26"))
                                    (rule "hideAuxiliaryEq" (formula "26"))
                                    (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0,0"))
                                    (rule "add_literals" (formula "25") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "25") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), result)"))
                                    (rule "replaceKnownSelect_taclet000_0" (formula "26") (term "1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00101010000_4" (formula "26") (term "1,0,0"))
                                    (rule "eqSymm" (formula "26") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,2,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,2,1,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,2,1,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,1"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,1,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "26") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "31"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                    (rule "leq_literals" (formula "26") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "applyEq" (formula "32") (term "2,0") (ifseqformula "26"))
                                    (rule "allLeft" (formula "19") (inst "t=result"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "30"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "19") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "allLeft" (formula "20") (inst "t=fromIndex"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "20") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0"))
                                    (rule "allLeft" (formula "16") (inst "t=add(Z(neglit(1(#))), result)"))
                                    (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,1,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "16") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                    (rule "times_zero_2" (formula "16") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                    (rule "leq_literals" (formula "16") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), result)"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,2,2,0,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,2,2,0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "33"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "22") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), result)"))
                                    (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "allLeft" (formula "24") (inst "t=iv_3"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "34"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "24") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "cut_direct" (formula "3") (term "0"))
                                    (branch "CUT: result ≥ iv_3 TRUE"
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                       (rule "applyEq" (formula "34") (term "1,1,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "22") (term "0,2,1,0,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "30") (term "1,0,2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "24") (term "1,0,2,2,0,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "21") (term "1,0,2,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "31") (term "1,1,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "18") (term "1,1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "39") (term "0,2,2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,0"))
                                       (rule "times_zero_1" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "35") (term "1,0,2,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "16") (term "1,0,2,0,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "17") (term "1,0,2,0,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "32") (term "1,0,2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "23") (term "1,0,2,1,0,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "21") (term "1,0,2,2,0,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "20") (term "0,2,2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "25") (term "1,0,2,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "28") (term "0,2,1") (ifseqformula "2"))
                                       (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "32"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                       (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "35") (term "0,0"))
                                       (rule "leq_literals" (formula "35") (term "0"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "32"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                       (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "1,0"))
                                       (rule "times_zero_1" (formula "5") (term "0"))
                                       (rule "leq_literals" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0"))
                                       (rule "inEqSimp_invertInEq0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "times_zero_2" (formula "3") (term "1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1"))
                                       (rule "inEqSimp_subsumption0" (formula "17") (term "0") (ifseqformula "10"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "inEqSimp_subsumption0" (formula "16") (term "0") (ifseqformula "10"))
                                       (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "16") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "25"))
                                       (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "9"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "inEqSimp_homoInEq1" (formula "26"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0"))
                                       (rule "add_zero_right" (formula "26") (term "0"))
                                       (rule "leq_literals" (formula "26"))
                                       (rule "closeFalse" (formula "26"))
                                    )
                                    (branch "CUT: result ≥ iv_3 FALSE"
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_geqRight" (formula "39"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "41"))
                                       (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                       (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0"))
                                       (rule "leq_literals" (formula "41") (term "0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "false_right" (formula "41"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "2"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "1,0"))
                                       (rule "times_zero_1" (formula "7") (term "0"))
                                       (rule "leq_literals" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                       (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,1"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0,0"))
                                       (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "qeq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_invertInEq0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "times_zero_2" (formula "4") (term "1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "13"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "byteArrays.length ≥ 1 FALSE"
                                    (rule "replace_known_right" (formula "4") (term "0,1,1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "3") (term "0,1,1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_geqRight" (formula "29"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "1"))
                                    (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "times_zero_2" (formula "6") (term "1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "closeFalse" (formula "6"))
                                 )
                              )
                              (branch "sorted ≥ 1 + result FALSE"
                                 (rule "applyEqReverse" (formula "27") (term "2,0,1") (ifseqformula "26"))
                                 (rule "hideAuxiliaryEq" (formula "26"))
                                 (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "inEqSimp_geqRight" (formula "26"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "23") (term "1,1,1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "17") (term "0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "2") (term "1,2,0,0,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "19") (term "2,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "2") (term "1,0,2,2,0,0,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "23"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,0"))
                                 (rule "times_zero_1" (formula "1") (term "0"))
                                 (rule "qeq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "24") (term "0,2,2,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,0"))
                                 (rule "times_zero_1" (formula "22") (term "0"))
                                 (rule "leq_literals" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "22"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_or_tautInEq1" (formula "19") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "1,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,1,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,0"))
                                 (rule "add_literals" (formula "19") (term "1,0,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "0,1,0"))
                                 (rule "leq_literals" (formula "19") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                 (rule "commute_or" (formula "1") (term "0,1,0"))
                                 (rule "cnf_rightDist" (formula "1") (term "0"))
                                 (rule "distr_forallAnd" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "commute_or_2" (formula "2") (term "0"))
                                 (rule "commute_or" (formula "1") (term "1,0"))
                                 (rule "shift_paren_or" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "1") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "commute_or" (formula "1"))
                                 (rule "shift_paren_or" (formula "2") (term "0,0"))
                                 (rule "shift_paren_or" (formula "2") (term "0,0,0"))
                                 (rule "commute_or" (formula "2") (term "0,0,0,0"))
                                 (rule "ifthenelse_split" (formula "5") (term "0"))
                                 (branch "byteArrays.length ≥ 1 TRUE"
                                    (rule "replace_known_left" (formula "3") (term "0,1,1,0,0") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "2") (term "0,1,1,0,0") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "leq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "8") (term "0,0"))
                                    (rule "add_zero_left" (formula "8") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "3") (term "1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "0,1,0,0"))
                                    (rule "leq_literals" (formula "3") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "ifthenelse_to_or_left2" (formula "2") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "2") (term "0"))
                                    (rule "distr_forallAnd" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "commute_or_2" (formula "3") (term "0"))
                                    (rule "commute_or" (formula "2") (term "1,0"))
                                    (rule "shift_paren_or" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0,0"))
                                    (rule "qeq_literals" (formula "2") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "23"))
                                    (rule "inEqSimp_contradEq3" (formula "23") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "qeq_literals" (formula "23") (term "0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "false_right" (formula "23"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "7") (term "0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "qeq_literals" (formula "20") (term "0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "shift_paren_or" (formula "2") (term "0,0"))
                                    (rule "commute_or" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_or_weaken2" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,1,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "2") (term "1,0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "ifthenelse_to_or_left2" (formula "2") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "2") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1,0,1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "2") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "commute_or" (formula "2") (term "1,1,0"))
                                    (rule "commute_or" (formula "2") (term "1,1,0"))
                                    (rule "cnf_rightDist" (formula "2") (term "0"))
                                    (rule "distr_forallAnd" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "commute_or_2" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteGeq" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0,1") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "3") (term "0,0,0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "1,1") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1,1"))
                                    (rule "leq_literals" (formula "3") (term "0,1,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                                 (branch "byteArrays.length ≥ 1 FALSE"
                                    (rule "replace_known_right" (formula "3") (term "0,1,1,0,0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,1,0,0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_geqRight" (formula "23"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "times_zero_2" (formula "6") (term "1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                              )
                           )
                           (branch "result ≥ 1 + fromIndex FALSE"
                              (rule "applyEqReverse" (formula "26") (term "1,0,1") (ifseqformula "25"))
                              (rule "hideAuxiliaryEq" (formula "25"))
                              (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "inEqSimp_geqRight" (formula "27"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "24"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "25") (term "1") (ifseqformula "23"))
                              (rule "applyEq" (formula "25") (term "1,0,2,2,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "21") (term "1,1,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                              (rule "inEqSimp_homoInEq1" (formula "24"))
                              (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                              (rule "add_literals" (formula "24") (term "1,0"))
                              (rule "times_zero_1" (formula "24") (term "0"))
                              (rule "leq_literals" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "23"))
                              (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "23") (term "1,0,2,1,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "22"))
                              (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "22"))
                              (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0"))
                              (rule "qeq_literals" (formula "11") (term "0"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "inEqSimp_or_antiSymm1" (formula "19") (term "0"))
                              (rule "polySimp_homoEq" (formula "19") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "1,0,1,1,0"))
                              (rule "add_literals" (formula "19") (term "0,1,0,1,1,0"))
                              (rule "add_zero_left" (formula "19") (term "1,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "19") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0,1,0"))
                              (rule "add_literals" (formula "19") (term "1,0,0,1,0"))
                              (rule "times_zero_1" (formula "19") (term "0,0,1,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_301"))
                              (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")) (ifInst ""  (formula "7")))
                              (rule "eqSymm" (formula "20"))
                              (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "hideAuxiliaryEq" (formula "20"))
                              (rule "elementOfArrayRangeConcrete" (formula "19") (term "0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0"))
                              (rule "replace_known_left" (formula "19") (term "1,0,0") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0,0"))
                              (rule "add_literals" (formula "19") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "19") (term "0,0,0"))
                              (rule "qeq_literals" (formula "19") (term "0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                              (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                              (rule "cnf_rightDist" (formula "1") (term "0"))
                              (rule "distr_forallAnd" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "commute_or_2" (formula "2") (term "0"))
                              (rule "shift_paren_or" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "1") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "commute_or" (formula "1"))
                              (rule "shift_paren_or" (formula "2") (term "0,0"))
                              (rule "shift_paren_or" (formula "2") (term "0,0,0"))
                              (rule "commute_or" (formula "2") (term "0,0,0,0"))
                              (rule "ifthenelse_split" (formula "5") (term "0"))
                              (branch "byteArrays.length ≥ 1 TRUE"
                                 (rule "replace_known_left" (formula "3") (term "0,1,1,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "2") (term "0,1,1,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "12") (term "0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "leq_literals" (formula "1") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "3") (term "1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "0,1,0,0"))
                                 (rule "leq_literals" (formula "3") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "allLeft" (formula "13") (inst "t=sorted"))
                                 (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "11"))
                                 (rule "qeq_literals" (formula "13") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "12"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                 (rule "leq_literals" (formula "13") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "ifthenelse_to_or_left2" (formula "2") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "2") (term "0"))
                                 (rule "distr_forallAnd" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "commute_or_2" (formula "3") (term "0"))
                                 (rule "commute_or" (formula "2") (term "1,0"))
                                 (rule "shift_paren_or" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,1,0,0"))
                                 (rule "qeq_literals" (formula "2") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "11"))
                                 (rule "qeq_literals" (formula "2") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "shift_paren_or" (formula "2") (term "0,0"))
                                 (rule "commute_or" (formula "2") (term "0,0,0"))
                                 (rule "inEqSimp_or_weaken2" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,1,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "2") (term "1,0,1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "ifthenelse_split" (formula "22") (term "0"))
                                 (branch "sorted ≥ 1 + fromIndex TRUE"
                                    (rule "applyEqReverse" (formula "24") (term "2,0,1") (ifseqformula "23"))
                                    (rule "hideAuxiliaryEq" (formula "23"))
                                    (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "22"))
                                    (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "ifthenelse_to_or_left2" (formula "2") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "2") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1,0,1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "2") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "commute_or" (formula "2") (term "1,1,0"))
                                    (rule "commute_or" (formula "2") (term "1,1,0"))
                                    (rule "cnf_rightDist" (formula "2") (term "0"))
                                    (rule "distr_forallAnd" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "commute_or_2" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteGeq" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0,1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "3") (term "0,0,0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "1,1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1,1"))
                                    (rule "leq_literals" (formula "3") (term "0,1,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "commute_or" (formula "3"))
                                    (rule "shift_paren_or" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "2") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "commute_or" (formula "2"))
                                    (rule "allLeft" (formula "14") (inst "t=fromIndex"))
                                    (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "14") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,1"))
                                    (rule "leq_literals" (formula "14") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "allLeft" (formula "15") (inst "t=fromIndex"))
                                    (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "15") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_homoInEq1" (formula "15") (term "0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
                                    (rule "allLeft" (formula "16") (inst "t=iv_3"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "16") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "cut_direct" (formula "3") (term "1"))
                                    (branch "CUT: sorted ≥ iv_3 TRUE"
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "27"))
                                       (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "3"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0"))
                                       (rule "leq_literals" (formula "27") (term "0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "false_right" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "2"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "1,0"))
                                       (rule "times_zero_1" (formula "7") (term "0"))
                                       (rule "leq_literals" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "qeq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "12") (term "0,0"))
                                       (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1"))
                                       (rule "inEqSimp_invertInEq0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "times_zero_2" (formula "4") (term "1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "2"))
                                       (rule "andLeft" (formula "10"))
                                       (rule "inEqSimp_homoInEq1" (formula "10"))
                                       (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0"))
                                       (rule "add_zero_right" (formula "10") (term "0"))
                                       (rule "leq_literals" (formula "10"))
                                       (rule "closeFalse" (formula "10"))
                                    )
                                    (branch "CUT: sorted ≥ iv_3 FALSE"
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_geqRight" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_contradEq3" (formula "28") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0"))
                                       (rule "qeq_literals" (formula "28") (term "0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "false_right" (formula "28"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_subsumption0" (formula "16") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "16") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "3"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,0"))
                                       (rule "times_zero_1" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "3"))
                                       (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,0"))
                                       (rule "times_zero_1" (formula "3") (term "0"))
                                       (rule "qeq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_subsumption0" (formula "12") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "12") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "sorted ≥ 1 + fromIndex FALSE"
                                    (rule "applyEqReverse" (formula "23") (term "2,0,1") (ifseqformula "22"))
                                    (rule "hideAuxiliaryEq" (formula "22"))
                                    (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "inEqSimp_geqRight" (formula "22"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "24") (term "0,2,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "14"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,0,1,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "14"))
                                    (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                    (rule "inEqSimp_homoInEq1" (formula "14"))
                                    (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                    (rule "add_literals" (formula "14") (term "1,0"))
                                    (rule "times_zero_1" (formula "14") (term "0"))
                                    (rule "leq_literals" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "applyEq" (formula "19") (term "1,1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "15") (term "2,1,0") (ifseqformula "12"))
                                    (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "20"))
                                    (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "false_right" (formula "20"))
                                    (rule "inEqSimp_or_tautInEq0" (formula "13") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,1,0,0"))
                                    (rule "leq_literals" (formula "13") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "17") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "1,1,0"))
                                    (rule "add_literals" (formula "17") (term "0,1,1,0"))
                                    (rule "add_zero_left" (formula "17") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "17") (term "0,1,0"))
                                    (rule "add_literals" (formula "17") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "17") (term "0,1,0"))
                                    (rule "leq_literals" (formula "17") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "ifthenelse_to_or_left2" (formula "2") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "2") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1,0,1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "2") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "cnf_rightDist" (formula "2") (term "0"))
                                    (rule "distr_forallAnd" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "commute_or_2" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_commuteGeq" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,1"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,1"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,1"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1,0,1"))
                                    (rule "leq_literals" (formula "3") (term "0,1,0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "1,1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1,1"))
                                    (rule "leq_literals" (formula "3") (term "0,1,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                    (rule "leq_literals" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                              )
                              (branch "byteArrays.length ≥ 1 FALSE"
                                 (rule "replace_known_right" (formula "2") (term "0,1,1,0,0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "replace_known_right" (formula "3") (term "0,1,1,0,0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_geqRight" (formula "25"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "times_zero_2" (formula "6") (term "1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "26") (inst "sk=iv_2"))
                        (rule "impRight" (formula "26"))
                        (rule "andLeft" (formula "1"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,2,2,2,0,1,1"))
                        (rule "mul_literals" (formula "28") (term "1,1,2,2,2,0,1,1"))
                        (rule "polySimp_elimSub" (formula "2") (term "1,2,2,2,0,1"))
                        (rule "mul_literals" (formula "2") (term "1,1,2,2,2,0,1"))
                        (rule "polySimp_addComm0" (formula "28") (term "1,2,2,2,0,1,1"))
                        (rule "polySimp_addComm0" (formula "2") (term "1,2,2,2,0,1"))
                        (rule "getOfSeqDef" (formula "28") (term "0"))
                        (rule "castDel" (formula "28") (term "2,0"))
                        (rule "castDel" (formula "28") (term "1,0"))
                        (rule "add_zero_right" (formula "28") (term "0,2,1,0"))
                        (rule "eqSymm" (formula "28"))
                        (rule "replace_known_left" (formula "28") (term "0,0,1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,0,1"))
                        (rule "times_zero_2" (formula "28") (term "1,1,0,1"))
                        (rule "add_zero_right" (formula "28") (term "1,0,1"))
                        (rule "lenOfSeqDef" (formula "2") (term "1"))
                        (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                        (rule "times_zero_2" (formula "2") (term "1,1,1"))
                        (rule "add_zero_right" (formula "2") (term "1,1"))
                        (rule "getOfSeqDef" (formula "28") (term "0"))
                        (rule "castDel" (formula "28") (term "1,0"))
                        (rule "castDel" (formula "28") (term "2,0"))
                        (rule "add_zero_right" (formula "28") (term "0,2,1,0"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0"))
                        (rule "times_zero_2" (formula "28") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "1,1,0,0"))
                        (rule "getOfSeqDef" (formula "28") (term "1,0,0,0"))
                        (rule "castDel" (formula "28") (term "1,1,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,2,1,1,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,1,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "1,1,2,2,1,1,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "1,1,1,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,2,2,1,1,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "2,2,2,1,1,0,0,0"))
                        (rule "eqSymm" (formula "28") (term "0,2,1,1,0,0,0"))
                        (rule "replace_known_left" (formula "28") (term "0,0,1,0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,0,1,0,0,0"))
                        (rule "times_zero_2" (formula "28") (term "1,1,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "1,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                        (rule "getOfSeqDef" (formula "28") (term "0,1,0,0"))
                        (rule "castDel" (formula "28") (term "1,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,2,1,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "1,1,2,2,1,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "2,2,2,1,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,2,2,1,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "1,1,0,1,0,0"))
                        (rule "eqSymm" (formula "28") (term "0,2,1,0,1,0,0"))
                        (rule "replace_known_left" (formula "28") (term "0,0,0,1,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "times_zero_2" (formula "28") (term "1,1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "getOfSeqDef" (formula "28") (term "0,2,1,0"))
                        (rule "castDel" (formula "28") (term "1,0,2,1,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,0,2,1,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,2,1,0,2,1,0"))
                        (rule "add_zero_right" (formula "28") (term "1,1,0,2,1,0"))
                        (rule "add_zero_right" (formula "28") (term "1,1,2,2,1,0,2,1,0"))
                        (rule "add_zero_right" (formula "28") (term "2,2,2,1,0,2,1,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,2,2,1,0,2,1,0"))
                        (rule "eqSymm" (formula "28") (term "0,2,1,0,2,1,0"))
                        (rule "replace_known_left" (formula "28") (term "0,0,0,2,1,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,0,0,2,1,0"))
                        (rule "times_zero_2" (formula "28") (term "1,1,0,0,2,1,0"))
                        (rule "add_zero_right" (formula "28") (term "1,0,0,2,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "narrowSelectArrayType" (formula "28") (term "1,0") (ifseqformula "5") (ifseqformula "27"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,2,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,2,1,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0,2,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,2,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,2,1,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0,2,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28") (term "0,2,2,1,1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28") (term "0,2,2,1,0,2,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28") (term "0,2,2,1,1,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1,0,2,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1,0,2,1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,1,0,2,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,2,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,2,1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,0,2,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1,1,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1,1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,1,1,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,1,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,1,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                        (rule "pullOutSelect" (formula "28") (term "1,1") (inst "selectSK=arr_288"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_289"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "8")))
                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "7") (ifseqformula "29"))
                        (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "18") (ifseqformula "29"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                        (rule "ifthenelse_split" (formula "25") (term "0"))
                        (branch "result ≥ 1 + fromIndex TRUE"
                           (rule "applyEqReverse" (formula "27") (term "1,0,1") (ifseqformula "26"))
                           (rule "hideAuxiliaryEq" (formula "26"))
                           (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "25"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0"))
                           (rule "qeq_literals" (formula "23") (term "0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "ifthenelse_split" (formula "26") (term "0"))
                           (branch "sorted ≥ 1 + result TRUE"
                              (rule "applyEqReverse" (formula "28") (term "2,0,1") (ifseqformula "27"))
                              (rule "hideAuxiliaryEq" (formula "27"))
                              (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0"))
                              (rule "qeq_literals" (formula "23") (term "0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "ifthenelse_split" (formula "28") (term "2,1,0,2,1,0"))
                              (branch "result = iv_2 TRUE"
                                 (rule "replace_known_left" (formula "29") (term "0,2,1,0,1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "1")))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "21") (term "1,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "25") (term "1,0,2,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "1"))
                                 (rule "replace_known_left" (formula "27") (term "0,0,2,1,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "23") (term "1,0,2,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "27") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0"))
                                 (rule "leq_literals" (formula "27") (term "0,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0"))
                                 (rule "applyEq" (formula "27") (term "0,0,0,2,1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,2,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,2,1,0"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0,0,2,1,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,0,2,1,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,0,2,1,0"))
                                 (rule "leq_literals" (formula "27") (term "0,0,2,1,0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "orRight" (formula "27"))
                                 (rule "applyEq" (formula "27") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "27") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "12")))
                                 (rule "inEqSimp_geqRight" (formula "27"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "inEqSimp_homoInEq1" (formula "14"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0"))
                                 (rule "add_zero_right" (formula "14") (term "0"))
                                 (rule "leq_literals" (formula "14"))
                                 (rule "closeFalse" (formula "14"))
                              )
                              (branch "result = iv_2 FALSE"
                                 (rule "replace_known_right" (formula "29") (term "0,2,1,0,1,0,0") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "28")))
                                 (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch "byteArrays.length ≥ 1 TRUE"
                                    (rule "replace_known_left" (formula "29") (term "0,0,1,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "4")) (ifInst ""  (formula "4")) (ifInst ""  (formula "4")))
                                    (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "11") (term "0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "allLeft" (formula "14") (inst "t=sorted"))
                                    (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "14") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "13"))
                                    (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,1"))
                                    (rule "leq_literals" (formula "14") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "iv_2 ≥ fromIndex ∧ sorted ≥ iv_2 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "30") (term "0,2,0,2,1,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                                       (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), result)"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,2,2,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,2,2,0,1"))
                                       (rule "add_zero_left" (formula "17") (term "0,2,2,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "26"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "24"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))), result)"))
                                       (rule "replaceKnownSelect_taclet000_1" (formula "22") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet011010000_5" (formula "22") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "22") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,1"))
                                       (rule "add_literals" (formula "22") (term "0,1"))
                                       (rule "leq_literals" (formula "22") (term "1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "25"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "22"))
                                       (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), result)"))
                                       (rule "replaceKnownSelect_taclet000_0" (formula "24") (term "1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0011010000_6" (formula "24") (term "1,0,0"))
                                       (rule "eqSymm" (formula "24") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,2,1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,2,1,0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,2,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "24") (term "0,1,0"))
                                       (rule "qeq_literals" (formula "24") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                       (rule "leq_literals" (formula "24") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "24"))
                                       (rule "allLeft" (formula "25") (inst "t=sorted"))
                                       (rule "eqSymm" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,1"))
                                       (rule "add_literals" (formula "25") (term "0,1"))
                                       (rule "leq_literals" (formula "25") (term "1"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "25") (term "0,0,1"))
                                       (rule "leq_literals" (formula "25") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_298"))
                                       (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "33")) (ifInst ""  (formula "9")))
                                       (rule "eqSymm" (formula "26"))
                                       (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "26"))
                                       (rule "hideAuxiliaryEq" (formula "26"))
                                       (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0,0"))
                                       (rule "add_literals" (formula "25") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "25") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "ifthenelse_split" (formula "34") (term "0,1,0,0"))
                                       (branch "result ≥ 1 + iv_2 TRUE"
                                          (rule "replace_known_left" (formula "35") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
                                          (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                          (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "6"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0"))
                                          (rule "leq_literals" (formula "34") (term "0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "allLeft" (formula "16") (inst "t=iv_2"))
                                          (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                          (rule "leq_literals" (formula "16") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "16") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "notLeft" (formula "16"))
                                          (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), result)"))
                                          (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "16") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), result)"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,2,2,0,1"))
                                          (rule "add_literals" (formula "20") (term "0,0,2,2,0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "30"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "20") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "21") (inst "t=result"))
                                          (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "21") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "allLeft" (formula "22") (inst "t=fromIndex"))
                                          (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "22") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,0"))
                                          (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), result)"))
                                          (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,1,0"))
                                          (rule "inEqSimp_invertInEq1" (formula "17") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                          (rule "times_zero_2" (formula "17") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,1"))
                                          (rule "leq_literals" (formula "17") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "allLeft" (formula "29") (inst "t=iv_2"))
                                          (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                                          (rule "mul_literals" (formula "29") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "29") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "29") (term "0,0,1"))
                                          (rule "leq_literals" (formula "29") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_300"))
                                          (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "41")) (ifInst ""  (formula "10")))
                                          (rule "eqSymm" (formula "30"))
                                          (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "42")))
                                          (rule "notLeft" (formula "29"))
                                          (rule "hideAuxiliaryEq" (formula "29"))
                                          (rule "elementOfArrayRangeConcrete" (formula "37"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "inEqSimp_commuteLeq" (formula "37") (term "0"))
                                          (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "inEqSimp_leqRight" (formula "37"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_literals" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "result ≥ 1 + iv_2 FALSE"
                                          (rule "replace_known_right" (formula "35") (term "0,0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "34")))
                                          (rule "inEqSimp_geqRight" (formula "34"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0"))
                                          (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                          (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "34"))
                                          (rule "inEqSimp_contradEq3" (formula "34") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0"))
                                          (rule "qeq_literals" (formula "34") (term "0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "inEqSimp_subsumption1" (formula "34") (term "1,0,0") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq0" (formula "34") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                          (rule "qeq_literals" (formula "34") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                          (rule "mul_literals" (formula "28") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "28"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "7") (term "0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1"))
                                          (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "7"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "allLeft" (formula "15") (inst "t=iv_2"))
                                          (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "15") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                          (rule "leq_literals" (formula "15") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "notLeft" (formula "15"))
                                          (rule "allLeft" (formula "15") (inst "t=add(Z(1(#)), result)"))
                                          (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "15") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), result)"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,2,2,0,1"))
                                          (rule "add_literals" (formula "19") (term "0,0,2,2,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,1,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "30"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "19") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "allLeft" (formula "20") (inst "t=result"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "20") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "21") (inst "t=fromIndex"))
                                          (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "21") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                                          (rule "allLeft" (formula "16") (inst "t=add(Z(neglit(1(#))), result)"))
                                          (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,1,0"))
                                          (rule "inEqSimp_invertInEq1" (formula "16") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                          (rule "times_zero_2" (formula "16") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "16") (term "0,0,1"))
                                          (rule "leq_literals" (formula "16") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "allLeft" (formula "23") (inst "t=iv_2"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "33"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "32") (inst "t=iv_2"))
                                          (rule "eqSymm" (formula "32") (term "0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                          (rule "mul_literals" (formula "32") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "32") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "32") (term "0,0,1"))
                                          (rule "leq_literals" (formula "32") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_299"))
                                          (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "42")) (ifInst ""  (formula "9")))
                                          (rule "eqSymm" (formula "33"))
                                          (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "33"))
                                          (rule "hideAuxiliaryEq" (formula "33"))
                                          (rule "elementOfArrayRangeConcrete" (formula "32") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0"))
                                          (rule "replace_known_left" (formula "32") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_subsumption1" (formula "32") (term "0,0") (ifseqformula "34"))
                                          (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "42")))
                                          (rule "closeFalse" (formula "32"))
                                       )
                                    )
                                    (branch "iv_2 ≥ fromIndex ∧ sorted ≥ iv_2 FALSE"
                                       (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "29") (term "2,0,2,1,0"))
                                       (branch "sorted ≥ iv_2 TRUE"
                                          (rule "replace_known_left" (formula "30") (term "0,2,0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "1")))
                                          (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_geqRight" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), result)"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,2,2,0,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,2,2,0,1"))
                                          (rule "add_zero_left" (formula "17") (term "0,2,2,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "17") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "24"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0"))
                                          (rule "leq_literals" (formula "17") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))), result)"))
                                          (rule "replaceKnownSelect_taclet000_1" (formula "22") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet011010000_5" (formula "22") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,1"))
                                          (rule "add_literals" (formula "22") (term "0,1"))
                                          (rule "leq_literals" (formula "22") (term "1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "25"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "22") (term "0,0,1"))
                                          (rule "leq_literals" (formula "22") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "22"))
                                          (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), result)"))
                                          (rule "replaceKnownSelect_taclet000_0" (formula "24") (term "1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0011010000_6" (formula "24") (term "1,0,0"))
                                          (rule "eqSymm" (formula "24") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,2,1,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,2,1,0,0"))
                                          (rule "add_zero_left" (formula "24") (term "0,2,1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1,0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "24") (term "0,1,0"))
                                          (rule "qeq_literals" (formula "24") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,1"))
                                          (rule "add_zero_left" (formula "24") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "24"))
                                          (rule "allLeft" (formula "25") (inst "t=sorted"))
                                          (rule "eqSymm" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,1"))
                                          (rule "add_literals" (formula "25") (term "0,1"))
                                          (rule "leq_literals" (formula "25") (term "1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "25") (term "0,0,1"))
                                          (rule "leq_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_297"))
                                          (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "33")) (ifInst ""  (formula "10")))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "26"))
                                          (rule "hideAuxiliaryEq" (formula "26"))
                                          (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "16"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0,0"))
                                          (rule "add_literals" (formula "25") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "25") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "allLeft" (formula "15") (inst "t=iv_2"))
                                          (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "15") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,1"))
                                          (rule "leq_literals" (formula "15") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "notLeft" (formula "15"))
                                          (rule "ifthenelse_split" (formula "35") (term "0,2,1,0"))
                                          (branch "result ≥ 1 + iv_2 TRUE"
                                             (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")))
                                             (rule "orRight" (formula "36"))
                                             (rule "inEqSimp_leqRight" (formula "36"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0"))
                                             (rule "leq_literals" (formula "36") (term "0"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "false_right" (formula "36"))
                                             (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0"))
                                             (rule "add_literals" (formula "8") (term "0"))
                                             (rule "leq_literals" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                          (branch "result ≥ 1 + iv_2 FALSE"
                                             (rule "replace_known_right" (formula "36") (term "0,0,0,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "35")))
                                             (rule "inEqSimp_geqRight" (formula "35"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                                             (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "35"))
                                             (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0"))
                                             (rule "qeq_literals" (formula "35") (term "0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "false_right" (formula "35"))
                                             (rule "inEqSimp_subsumption1" (formula "35") (term "1,0,0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq0" (formula "35") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1"))
                                             (rule "mul_literals" (formula "28") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "28"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_literals" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "sorted ≥ iv_2 FALSE"
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")) (ifInst ""  (formula "1")))
                                          (rule "orRight" (formula "30"))
                                          (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "false_right" (formula "25"))
                                          (rule "inEqSimp_geqRight" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_leqRight" (formula "29"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_literals" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch "byteArrays.length ≥ 1 FALSE"
                                    (rule "inEqSimp_geqRight" (formula "26"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "times_zero_2" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                           )
                           (branch "sorted ≥ 1 + result FALSE"
                              (rule "applyEqReverse" (formula "27") (term "2,0,1") (ifseqformula "26"))
                              (rule "hideAuxiliaryEq" (formula "26"))
                              (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "inEqSimp_geqRight" (formula "26"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "1"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "17") (term "1,1,1,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "28") (term "1,2,1,0,1,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "28") (term "1,2,1,0,0,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "23"))
                              (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "28") (term "0,0,2,2,1,0,1,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "28") (term "0,0,2,2,1,0,2,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "28") (term "0,0,2,2,1,0,0,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "26") (term "0,2,2,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                              (rule "inEqSimp_homoInEq1" (formula "24"))
                              (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                              (rule "add_literals" (formula "24") (term "1,0"))
                              (rule "times_zero_1" (formula "24") (term "0"))
                              (rule "leq_literals" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "23"))
                              (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "26") (term "1,2,1,0,2,1,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "18") (term "2,1,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "22"))
                              (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "22"))
                              (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0"))
                              (rule "qeq_literals" (formula "14") (term "0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "inEqSimp_or_tautInEq1" (formula "19") (term "0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "1,1,0"))
                              (rule "add_literals" (formula "19") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "19") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,0"))
                              (rule "add_literals" (formula "19") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "19") (term "0,1,0"))
                              (rule "leq_literals" (formula "19") (term "1,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch "byteArrays.length ≥ 1 TRUE"
                                 (rule "replace_known_left" (formula "24") (term "0,0,1,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")))
                                 (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "12") (term "0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "iv_2 ≥ fromIndex ∧ result ≥ iv_2 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "24") (term "0,2,2,0,2,1,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "result = iv_2 TRUE"
                                       (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "24") (term "0,2,0,1,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "21") (term "0,2,2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "16") (term "2,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "20") (term "1,0,2,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "22") (term "0,0,0,0,0,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "leq_literals" (formula "22") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "17") (term "1,1,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "2,0,2,1,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "applyEq" (formula "21") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,0"))
                                       (rule "leq_literals" (formula "21") (term "0,0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0"))
                                       (rule "applyEq" (formula "21") (term "0,0,0,0") (ifseqformula "2"))
                                       (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "applyEq" (formula "21") (term "0,1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "0,2,1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "orRight" (formula "21"))
                                       (rule "inEqSimp_geqRight" (formula "21"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "result = iv_2 FALSE"
                                       (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "24") (term "0,2,0,0,0,0") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
                                       (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "22"))
                                       (rule "replace_known_left" (formula "24") (term "0,0,1,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                       (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "eqSymm" (formula "24"))
                                       (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "false_right" (formula "22"))
                                       (rule "allLeft" (formula "18") (inst "t=result"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "18") (term "0,1"))
                                       (rule "leq_literals" (formula "18") (term "1"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "21"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                       (rule "leq_literals" (formula "18") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_295"))
                                       (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")) (ifInst ""  (formula "9")))
                                       (rule "eqSymm" (formula "19"))
                                       (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "hideAuxiliaryEq" (formula "19"))
                                       (rule "elementOfArrayRangeConcrete" (formula "18") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "18") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "18") (term "1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "0,1,0,0"))
                                       (rule "qeq_literals" (formula "18") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_subsumption1" (formula "18") (term "0,0") (ifseqformula "21"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "allLeft" (formula "13") (inst "t=result"))
                                       (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "13") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                       (rule "leq_literals" (formula "13") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "notLeft" (formula "13"))
                                       (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), result)"))
                                       (rule "replaceKnownSelect_taclet000_1" (formula "19") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet011010000_5" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "19") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,1"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "19") (term "0,1"))
                                       (rule "leq_literals" (formula "19") (term "1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "22"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                       (rule "leq_literals" (formula "19") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "19"))
                                       (rule "allLeft" (formula "20") (inst "t=iv_2"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                                       (rule "mul_literals" (formula "20") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_296"))
                                       (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "27")) (ifInst ""  (formula "9")))
                                       (rule "eqSymm" (formula "21"))
                                       (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "28")))
                                       (rule "notLeft" (formula "20"))
                                       (rule "hideAuxiliaryEq" (formula "20"))
                                       (rule "elementOfArrayRangeConcrete" (formula "24"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_commuteLeq" (formula "24") (term "0"))
                                       (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_leqRight" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "iv_2 ≥ fromIndex ∧ result ≥ iv_2 FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "23") (term "2,0,2,1,0"))
                                    (branch "result = iv_2 TRUE"
                                       (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "23") (term "0,2,0,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")))
                                       (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "19") (term "0,2,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "19") (term "1,0,2,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "16") (term "1,1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "22") (term "2,0,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "2")))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1"))
                                       (rule "add_literals" (formula "19") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "19") (term "0,1"))
                                       (rule "leq_literals" (formula "19") (term "1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_geqRight" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "applyEq" (formula "14") (term "2,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "0,0,0,2,1,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,2,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,2,1,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0,2,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,2,1,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,2,1,0"))
                                       (rule "leq_literals" (formula "21") (term "0,0,2,1,0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "orRight" (formula "21"))
                                       (rule "inEqSimp_leqRight" (formula "21"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "applyEq" (formula "1") (term "2,1,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "22") (term "0,2,1") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                                       (rule "andLeft" (formula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0"))
                                       (rule "leq_literals" (formula "6"))
                                       (rule "closeFalse" (formula "6"))
                                    )
                                    (branch "result = iv_2 FALSE"
                                       (rule "replace_known_right" (formula "24") (term "0,2,0,0,0,0") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "allLeft" (formula "16") (inst "t=result"))
                                       (rule "inEqSimp_homoInEq1" (formula "16") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,1"))
                                       (rule "add_literals" (formula "16") (term "0,1"))
                                       (rule "leq_literals" (formula "16") (term "1"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "19"))
                                       (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                       (rule "leq_literals" (formula "16") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_294"))
                                       (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "23")) (ifInst ""  (formula "7")))
                                       (rule "eqSymm" (formula "17"))
                                       (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "hideAuxiliaryEq" (formula "17"))
                                       (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "0,1,0,0"))
                                       (rule "qeq_literals" (formula "16") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "16") (term "0,0") (ifseqformula "19"))
                                       (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "allLeft" (formula "11") (inst "t=result"))
                                       (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "11") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "11") (term "0,0,1"))
                                       (rule "leq_literals" (formula "11") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "notLeft" (formula "11"))
                                       (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), result)"))
                                       (rule "replaceKnownSelect_taclet000_1" (formula "17") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet011010000_5" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "17") (term "0,1"))
                                       (rule "leq_literals" (formula "17") (term "1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                       (rule "leq_literals" (formula "17") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "17"))
                                       (rule "ifthenelse_split" (formula "26") (term "2,0,1,0,0"))
                                       (branch "result ≥ iv_2 TRUE"
                                          (rule "replace_known_left" (formula "27") (term "0,2,0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "1")))
                                          (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_geqRight" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "26"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,2,1,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                                          (rule "orRight" (formula "27"))
                                          (rule "inEqSimp_leqRight" (formula "27"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "false_right" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "result ≥ iv_2 FALSE"
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "1")))
                                          (rule "orRight" (formula "27"))
                                          (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "false_right" (formula "23"))
                                          (rule "inEqSimp_geqRight" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_leqRight" (formula "26"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradEq3" (formula "26") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0"))
                                          (rule "qeq_literals" (formula "26") (term "0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "false_right" (formula "26"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                              )
                              (branch "byteArrays.length ≥ 1 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "22"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "times_zero_2" (formula "5") (term "1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                        )
                        (branch "result ≥ 1 + fromIndex FALSE"
                           (rule "applyEqReverse" (formula "26") (term "1,0,1") (ifseqformula "25"))
                           (rule "hideAuxiliaryEq" (formula "25"))
                           (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "inEqSimp_geqRight" (formula "27"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "1"))
                           (rule "applyEq" (formula "30") (term "0,0,1,0,0,0,0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0,0,0,0"))
                           (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "30") (term "0,0,2,1,0,2,1,0") (ifseqformula "24"))
                           (rule "eqSymm" (formula "30") (term "0,2,1,0,2,1,0"))
                           (rule "applyEq" (formula "27") (term "1,0,2,1,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "24"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "29") (term "0,0,1,0,2,1,0") (ifseqformula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,2,1,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0,1,0,2,1,0"))
                           (rule "applyEq" (formula "21") (term "1,1,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "23"))
                           (rule "eqSymm" (formula "2") (term "0,0"))
                           (rule "applyEq" (formula "25") (term "1") (ifseqformula "23"))
                           (rule "applyEq" (formula "28") (term "0,0,1,0,1,0,0") (ifseqformula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0,1,0,0"))
                           (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "25") (term "1,0,2,2,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "24"))
                           (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                           (rule "add_literals" (formula "24") (term "1,0"))
                           (rule "times_zero_1" (formula "24") (term "0"))
                           (rule "leq_literals" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "applyEq" (formula "27") (term "0,0,2,1,0,1,0,0") (ifseqformula "23"))
                           (rule "eqSymm" (formula "27") (term "0,2,1,0,1,0,0"))
                           (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "23"))
                           (rule "applyEq" (formula "26") (term "0,0,2,1,0,0,0,0") (ifseqformula "22"))
                           (rule "eqSymm" (formula "26") (term "0,2,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,2,1,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,2,1,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,2,1,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,1,0,2,1,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,2,1,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,2,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,1,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                           (rule "add_literals" (formula "11") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0"))
                           (rule "qeq_literals" (formula "11") (term "0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "inEqSimp_or_antiSymm1" (formula "19") (term "0"))
                           (rule "polySimp_homoEq" (formula "19") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "1,0,1,1,0"))
                           (rule "add_literals" (formula "19") (term "0,1,0,1,1,0"))
                           (rule "add_zero_left" (formula "19") (term "1,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "19") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "19") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0,1,0"))
                           (rule "add_literals" (formula "19") (term "1,0,0,1,0"))
                           (rule "times_zero_1" (formula "19") (term "0,0,1,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_290"))
                           (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")) (ifInst ""  (formula "7")))
                           (rule "eqSymm" (formula "20"))
                           (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "hideAuxiliaryEq" (formula "20"))
                           (rule "elementOfArrayRangeConcrete" (formula "19") (term "0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0"))
                           (rule "replace_known_left" (formula "19") (term "1,0,0") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0,0"))
                           (rule "add_literals" (formula "19") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "19") (term "0,0,0"))
                           (rule "qeq_literals" (formula "19") (term "0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "ifthenelse_split" (formula "25") (term "2,2,1,0,0,0,0"))
                           (branch "sorted ≥ iv_2 TRUE"
                              (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "replace_known_left" (formula "26") (term "0,2,2,1,0,2,1,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")))
                              (rule "ifthenelse_split" (formula "5") (term "0"))
                              (branch "byteArrays.length ≥ 1 TRUE"
                                 (rule "replace_known_left" (formula "27") (term "0,0,0,0,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                                 (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "12") (term "0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "allLeft" (formula "14") (inst "t=sorted"))
                                 (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "12"))
                                 (rule "qeq_literals" (formula "14") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "13"))
                                 (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,1"))
                                 (rule "leq_literals" (formula "14") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "ifthenelse_split" (formula "23") (term "0"))
                                 (branch "sorted ≥ 1 + fromIndex TRUE"
                                    (rule "applyEqReverse" (formula "25") (term "2,0,1") (ifseqformula "24"))
                                    (rule "hideAuxiliaryEq" (formula "24"))
                                    (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "23"))
                                    (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                    (rule "qeq_literals" (formula "15") (term "0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "ifthenelse_split" (formula "26") (term "2,0,0,0,0"))
                                    (branch "iv_2 = fromIndex TRUE"
                                       (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "26") (term "0,2,0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")))
                                       (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "0,2,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "0,0,0"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "25") (term "0,0,0,2,1,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,2,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,2,1,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0,0,2,1,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,0,2,1,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,0,2,1,0"))
                                       (rule "qeq_literals" (formula "25") (term "0,0,2,1,0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "orRight" (formula "25"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "23") (term "0,0,0,1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,1"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                       (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "23") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "9")))
                                       (rule "inEqSimp_geqRight" (formula "23"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "1"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "11"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0"))
                                       (rule "add_zero_right" (formula "11") (term "0"))
                                       (rule "leq_literals" (formula "11"))
                                       (rule "closeFalse" (formula "11"))
                                    )
                                    (branch "iv_2 = fromIndex FALSE"
                                       (rule "replace_known_right" (formula "27") (term "0,2,0,1,0,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")))
                                       (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "allLeft" (formula "13") (inst "t=fromIndex"))
                                       (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "13") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,1"))
                                       (rule "leq_literals" (formula "13") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "notLeft" (formula "13"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "iv_2 ≥ fromIndex TRUE"
                                          (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "26"))
                                          (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0"))
                                          (rule "leq_literals" (formula "26") (term "0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "false_right" (formula "26"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,2,1,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0,2,1,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,2,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,2,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,2,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,2,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,2,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,2,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0,2,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,2,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,2,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,2,1,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0,0,2,1,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,1,0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "26") (term "1,0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,1,0,0"))
                                          (rule "qeq_literals" (formula "26") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "allLeft" (formula "13") (inst "t=iv_2"))
                                          (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,1"))
                                          (rule "leq_literals" (formula "13") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "13") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "notLeft" (formula "13"))
                                          (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), fromIndex)"))
                                          (rule "eqSymm" (formula "19") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,2,1,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,2,1,0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0,2,1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,1,0"))
                                          (rule "qeq_literals" (formula "19") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,1"))
                                          (rule "add_zero_left" (formula "19") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                          (rule "leq_literals" (formula "19") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_291"))
                                          (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "16"))
                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "28")) (ifInst ""  (formula "8")))
                                          (rule "eqSymm" (formula "20"))
                                          (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "20"))
                                          (rule "hideAuxiliaryEq" (formula "20"))
                                          (rule "elementOfArrayRangeConcrete" (formula "19") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0"))
                                          (rule "replace_known_left" (formula "19") (term "1,0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "19") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "applyEq" (formula "23") (term "2,0") (ifseqformula "19"))
                                          (rule "allLeft" (formula "20") (inst "t=sorted"))
                                          (rule "eqSymm" (formula "20") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,1"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "20") (term "0,1"))
                                          (rule "leq_literals" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                          (rule "leq_literals" (formula "20") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_292"))
                                          (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "16"))
                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "29")) (ifInst ""  (formula "8")))
                                          (rule "eqSymm" (formula "21"))
                                          (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "21"))
                                          (rule "hideAuxiliaryEq" (formula "21"))
                                          (rule "elementOfArrayRangeConcrete" (formula "20") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "20") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "20") (term "1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "0,1,0,0"))
                                          (rule "qeq_literals" (formula "20") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (term "0,0") (ifseqformula "23"))
                                          (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "14") (inst "t=fromIndex"))
                                          (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "14") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "inEqSimp_homoInEq1" (formula "14") (term "0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0"))
                                          (rule "allLeft" (formula "15") (inst "t=iv_2"))
                                          (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "15") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "allLeft" (formula "23") (inst "t=iv_2"))
                                          (rule "eqSymm" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_293"))
                                          (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "18"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "32")) (ifInst ""  (formula "8")))
                                          (rule "eqSymm" (formula "24"))
                                          (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "24"))
                                          (rule "hideAuxiliaryEq" (formula "24"))
                                          (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0"))
                                          (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "applyEq" (formula "32") (term "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "orRight" (formula "32"))
                                          (rule "inEqSimp_geqRight" (formula "32"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "25") (term "0,2,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "times_zero_2" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "2") (term "1") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "3"))
                                          (rule "add_zero_right" (formula "5") (term "1"))
                                          (rule "applyEq" (formula "14") (term "1,0,2,2,0,1") (ifseqformula "3"))
                                          (rule "add_zero_right" (formula "14") (term "0,2,2,0,1"))
                                          (rule "applyEqRigid" (formula "14") (term "1,1,0") (ifseqformula "3"))
                                          (rule "add_zero_right" (formula "14") (term "1,0"))
                                          (rule "applyEq" (formula "27") (term "0,2,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "13") (term "0,2,1,0,1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "21") (term "1,0,2,1") (ifseqformula "2"))
                                          (rule "add_zero_right" (formula "21") (term "0,2,1"))
                                          (rule "applyEq" (formula "30") (term "1,0,2,1") (ifseqformula "2"))
                                          (rule "add_zero_right" (formula "30") (term "0,2,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "iv_2 ≥ fromIndex FALSE"
                                          (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "inEqSimp_geqRight" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "3")))
                                          (rule "orRight" (formula "27"))
                                          (rule "inEqSimp_leqRight" (formula "27"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0"))
                                          (rule "qeq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "false_right" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_literals" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch "sorted ≥ 1 + fromIndex FALSE"
                                    (rule "applyEqReverse" (formula "24") (term "2,0,1") (ifseqformula "23"))
                                    (rule "hideAuxiliaryEq" (formula "23"))
                                    (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "inEqSimp_geqRight" (formula "23"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                    (rule "inEqSimp_homoInEq1" (formula "16"))
                                    (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                    (rule "add_literals" (formula "16") (term "1,0"))
                                    (rule "times_zero_1" (formula "16") (term "0"))
                                    (rule "leq_literals" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "14"))
                                    (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "23") (term "1,2,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "16") (term "2,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "19") (term "1,1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "3") (term "0,2,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "23") (term "1,2,0,2,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                                    (rule "inEqSimp_commuteGeq" (formula "1"))
                                    (rule "applyEq" (formula "23") (term "1,2,0,0,0,0") (ifseqformula "13"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "inEqSimp_or_tautInEq0" (formula "14") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,1,0,0"))
                                    (rule "leq_literals" (formula "14") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "18") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "1,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,1,1,0"))
                                    (rule "add_zero_left" (formula "18") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "18") (term "0,1,0"))
                                    (rule "add_literals" (formula "18") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "0,1,0"))
                                    (rule "leq_literals" (formula "18") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "iv_2 ≥ fromIndex TRUE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,0"))
                                       (rule "leq_literals" (formula "21") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,2,1,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,2,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,2,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,2,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,2,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,2,1,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0,2,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,2,1,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,2,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,2,1,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,0,2,1,0"))
                                       (rule "leq_literals" (formula "21") (term "0,0,0,2,1,0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,1,0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,0,1,0,0"))
                                       (rule "leq_literals" (formula "21") (term "0,0,0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                       (rule "replace_known_left" (formula "22") (term "0,0,2,1,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "12")))
                                       (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "orRight" (formula "22"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_leqRight" (formula "21"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "qeq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,0"))
                                       (rule "times_zero_1" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "2"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                    (branch "iv_2 ≥ fromIndex FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "inEqSimp_geqRight" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "replace_known_left" (formula "21") (term "0,0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                       (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "eqSymm" (formula "21"))
                                       (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "closeTrue" (formula "21"))
                                    )
                                 )
                              )
                              (branch "byteArrays.length ≥ 1 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "25"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "times_zero_2" (formula "6") (term "1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                           )
                           (branch "sorted ≥ iv_2 FALSE"
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "25") (term "0,2,2,1,0,2,1,0") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")))
                              (rule "inEqSimp_geqRight" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1"))
                              (rule "polySimp_rightDist" (formula "14") (term "1"))
                              (rule "mul_literals" (formula "14") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "26") (term "0,2,1,0,2,1,0") (ifseqformula "14"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,2,1,0,2,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,2,1,0,2,1,0"))
                              (rule "add_literals" (formula "26") (term "1,1,0,0,0,2,1,0,2,1,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,0,2,1,0,2,1,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0,0,2,1,0,2,1,0"))
                              (rule "leq_literals" (formula "26") (term "0,0,2,1,0,2,1,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_contradEq7" (formula "2") (term "0,0") (ifseqformula "14"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "2") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "inEqSimp_contradEq7" (formula "25") (term "0,2,1,0,1,0,0") (ifseqformula "13"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,2,1,0,1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,2,1,0,1,0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,0,2,1,0,1,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,0,2,1,0,1,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,0,2,1,0,1,0,0"))
                              (rule "leq_literals" (formula "25") (term "0,0,2,1,0,1,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_contradEq7" (formula "25") (term "0,2,1,0,0,0,0") (ifseqformula "13"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,2,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,2,1,0,0,0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,0,2,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,0,2,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,0,2,1,0,0,0,0"))
                              (rule "leq_literals" (formula "25") (term "0,0,2,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "10") (term "0,0"))
                              (rule "add_zero_left" (formula "10") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "10"))
                              (rule "leq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "byteArrays.length ≥ 1 TRUE"
                                 (rule "replace_known_left" (formula "26") (term "0,0,0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
                                 (rule "orRight" (formula "26"))
                                 (rule "inEqSimp_homoInEq0" (formula "26") (term "1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                 (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_geqRight" (formula "26"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "11") (term "0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "closeFalse" (formula "11"))
                              )
                              (branch "byteArrays.length ≥ 1 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "24"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "times_zero_2" (formula "3") (term "1,0"))
                                 (rule "add_zero_right" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "10") (term "0"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "closeFalse" (formula "10"))
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "26") (inst "sk=i_1"))
                  (rule "orRight" (formula "26"))
                  (rule "orRight" (formula "26"))
                  (rule "notRight" (formula "28"))
                  (rule "inEqSimp_geqRight" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "28"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_47"))
                  (rule "simplifySelectOfStore" (formula "3"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "castDel" (formula "3") (term "1,0"))
                  (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                  (rule "ifEqualsNull" (formula "3"))
                  (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_48"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")) (ifInst ""  (formula "9")))
                  (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                  (rule "commute_and" (formula "4") (term "0"))
                  (rule "commute_and" (formula "4") (term "1"))
                  (rule "cnf_rightDist" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "commute_or" (formula "4"))
                  (rule "cnf_rightDist" (formula "5"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "commute_or" (formula "5"))
                  (rule "cnf_rightDist" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "commute_or" (formula "5"))
                  (rule "ifthenelse_split" (formula "28") (term "0"))
                  (branch "result ≥ 1 + fromIndex TRUE"
                     (rule "applyEqReverse" (formula "30") (term "1,0,1") (ifseqformula "29"))
                     (rule "hideAuxiliaryEq" (formula "29"))
                     (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "28"))
                     (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0"))
                     (rule "qeq_literals" (formula "26") (term "0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "ifthenelse_split" (formula "29") (term "0"))
                     (branch "sorted ≥ 1 + result TRUE"
                        (rule "applyEqReverse" (formula "31") (term "2,0,1") (ifseqformula "30"))
                        (rule "hideAuxiliaryEq" (formula "30"))
                        (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "29"))
                        (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0"))
                        (rule "qeq_literals" (formula "26") (term "0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "allLeft" (formula "18") (inst "t=sorted"))
                        (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "16"))
                        (rule "qeq_literals" (formula "18") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "17"))
                        (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "18") (term "0,0,1"))
                        (rule "leq_literals" (formula "18") (term "0,1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "notLeft" (formula "18"))
                        (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "notLeft" (formula "6"))
                        (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
                        (rule "true_left" (formula "5"))
                        (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                        (rule "ifEqualsNull" (formula "3"))
                        (rule "commute_and_2" (formula "3") (term "0"))
                        (rule "commute_and" (formula "3") (term "0,0"))
                        (rule "orLeft" (formula "3"))
                        (branch " byteArrays[i_1]@anon_heap_shiftRight«anonHeapFunction» = null ∧ i_1 ≥ fromIndex ∧ sorted ≥ i_1"
                           (rule "andLeft" (formula "3"))
                           (rule "andLeft" (formula "3"))
                           (rule "allLeft" (formula "18") (inst "t=i_1"))
                           (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "18") (term "0,0,1"))
                           (rule "leq_literals" (formula "18") (term "0,1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "18") (term "0,1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "allLeft" (formula "25") (inst "t=sorted"))
                           (rule "eqSymm" (formula "25") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1"))
                           (rule "add_literals" (formula "25") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "25") (term "1,0,1"))
                           (rule "add_literals" (formula "25") (term "0,1"))
                           (rule "leq_literals" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                           (rule "add_literals" (formula "25") (term "0,0,1"))
                           (rule "leq_literals" (formula "25") (term "0,1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_53"))
                           (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "35")) (ifInst ""  (formula "11")))
                           (rule "eqSymm" (formula "26"))
                           (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "26"))
                           (rule "hideAuxiliaryEq" (formula "26"))
                           (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                           (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0,0"))
                           (rule "add_literals" (formula "25") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "25") (term "0,0,0"))
                           (rule "qeq_literals" (formula "25") (term "0,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), result)"))
                           (rule "replaceKnownSelect_taclet000_0" (formula "26") (term "1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00110000_5" (formula "26") (term "1,0,0"))
                           (rule "eqSymm" (formula "26") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,2,1,0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,2,1,0,0"))
                           (rule "add_zero_left" (formula "26") (term "0,2,1,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,1"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                           (rule "add_literals" (formula "26") (term "0,0,0,1"))
                           (rule "add_zero_left" (formula "26") (term "0,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,1,0"))
                           (rule "add_literals" (formula "26") (term "1,1,0,1,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0,1,0"))
                           (rule "add_literals" (formula "26") (term "0,1,0"))
                           (rule "qeq_literals" (formula "26") (term "1,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "30"))
                           (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                           (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                           (rule "add_literals" (formula "26") (term "0,0,1"))
                           (rule "leq_literals" (formula "26") (term "0,1"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "applyEq" (formula "31") (term "2,0") (ifseqformula "26"))
                           (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), result)"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,2,2,0,1"))
                           (rule "add_literals" (formula "20") (term "0,0,2,2,0,1"))
                           (rule "add_zero_left" (formula "20") (term "0,2,2,0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,1,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "20") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0"))
                           (rule "leq_literals" (formula "20") (term "0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "allLeft" (formula "25") (inst "t=add(Z(neglit(1(#))), result)"))
                           (rule "replaceKnownSelect_taclet000_1" (formula "25") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0110000_4" (formula "25") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,1,0"))
                           (rule "add_zero_left" (formula "25") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,1"))
                           (rule "add_literals" (formula "25") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1"))
                           (rule "add_literals" (formula "25") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "25") (term "1,0,1"))
                           (rule "add_literals" (formula "25") (term "0,1"))
                           (rule "leq_literals" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "30"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                           (rule "add_literals" (formula "25") (term "0,0,1"))
                           (rule "leq_literals" (formula "25") (term "0,1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "25"))
                           (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), result)"))
                           (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                           (rule "add_literals" (formula "18") (term "0,0,1,0"))
                           (rule "add_zero_left" (formula "18") (term "0,1,0"))
                           (rule "inEqSimp_invertInEq1" (formula "18") (term "1,0"))
                           (rule "times_zero_2" (formula "18") (term "1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                           (rule "add_literals" (formula "18") (term "0,0,1"))
                           (rule "leq_literals" (formula "18") (term "0,1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), result)"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,2,2,0,1"))
                           (rule "add_literals" (formula "22") (term "0,0,2,2,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "22") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "allLeft" (formula "23") (inst "t=fromIndex"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0"))
                           (rule "qeq_literals" (formula "23") (term "0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0"))
                           (rule "allLeft" (formula "24") (inst "t=result"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "34"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), result)"))
                           (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                           (rule "add_literals" (formula "19") (term "0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "19") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "allLeft" (formula "34") (inst "t=i_1"))
                           (rule "replaceKnownSelect_taclet110000_3" (formula "34") (term "1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                           (rule "applyEqRigid" (formula "34") (term "1,0,0") (ifseqformula "6"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                           (rule "mul_literals" (formula "34") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                           (rule "add_literals" (formula "34") (term "0,0,1"))
                           (rule "leq_literals" (formula "34") (term "0,1"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "allLeft" (formula "26") (inst "t=i_1"))
                           (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                           (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "26") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "allLeft" (formula "32") (inst "t=i_1"))
                           (rule "replaceKnownSelect_taclet110000_3" (formula "32") (term "0,0,0"))
                           (rule "eqSymm" (formula "32") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                           (rule "applyEqRigid" (formula "32") (term "1,0,0") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                           (rule "mul_literals" (formula "32") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                           (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0"))
                           (rule "leq_literals" (formula "32") (term "0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_contradEq3" (formula "43") (ifseqformula "32"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0"))
                           (rule "qeq_literals" (formula "43") (term "0"))
                           (builtin "One Step Simplification" (formula "43"))
                           (rule "false_right" (formula "43"))
                           (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                           (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "36") (term "0,0,1"))
                           (rule "leq_literals" (formula "36") (term "0,1"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "32"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                           (rule "mul_literals" (formula "38") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0"))
                           (rule "add_literals" (formula "38") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1"))
                           (rule "polySimp_rightDist" (formula "38") (term "1"))
                           (rule "mul_literals" (formula "38") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "38"))
                           (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "qeq_literals" (formula "4") (term "0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "31"))
                           (rule "times_zero_1" (formula "8") (term "0,0"))
                           (rule "add_zero_left" (formula "8") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "mul_literals" (formula "8") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "8"))
                           (rule "leq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), i_1)"))
                           (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "add_zero_left" (formula "19") (term "0,0"))
                           (rule "inEqSimp_invertInEq1" (formula "19") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                           (rule "times_zero_2" (formula "19") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1"))
                           (rule "leq_literals" (formula "19") (term "0,1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "closeFalse" (formula "7"))
                        )
                        (branch " ¬(i_1 ≥ fromIndex ∧ sorted ≥ i_1) ∧ byteArrays[i_1] = null"
                           (rule "andLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "allLeft" (formula "16") (inst "t=i_1"))
                           (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "16") (term "0,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "2"))
                           (rule "andLeft" (formula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "16"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,1,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0"))
                           (rule "add_literals" (formula "16") (term "0"))
                           (rule "leq_literals" (formula "16"))
                           (rule "closeFalse" (formula "16"))
                        )
                     )
                     (branch "sorted ≥ 1 + result FALSE"
                        (rule "applyEqReverse" (formula "30") (term "2,0,1") (ifseqformula "29"))
                        (rule "hideAuxiliaryEq" (formula "29"))
                        (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "inEqSimp_geqRight" (formula "29"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "1"))
                        (rule "applyEq" (formula "30") (term "0,2,2,0") (ifseqformula "27"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "27"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "times_zero_1" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "20") (term "1,1,1,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "22") (term "2,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                        (rule "inEqSimp_homoInEq1" (formula "27"))
                        (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                        (rule "add_literals" (formula "27") (term "1,0"))
                        (rule "times_zero_1" (formula "27") (term "0"))
                        (rule "leq_literals" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "applyEq" (formula "6") (term "0,2,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "4") (term "0,2,0,1") (ifseqformula "26"))
                        (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "26"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
                        (rule "applyEq" (formula "24") (term "1,1,1,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "25"))
                        (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "25"))
                        (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                        (rule "add_literals" (formula "17") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0"))
                        (rule "qeq_literals" (formula "17") (term "0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "inEqSimp_or_tautInEq1" (formula "22") (term "0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "1,1,0"))
                        (rule "add_literals" (formula "22") (term "0,1,1,0"))
                        (rule "add_zero_left" (formula "22") (term "1,1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1,0"))
                        (rule "add_literals" (formula "22") (term "1,0,1,0"))
                        (rule "times_zero_1" (formula "22") (term "0,1,0"))
                        (rule "leq_literals" (formula "22") (term "1,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "allLeft" (formula "16") (inst "t=i_1"))
                        (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "16") (term "0,0,1"))
                        (rule "leq_literals" (formula "16") (term "0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "16") (term "0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "notLeft" (formula "16"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "i_1 ≥ fromIndex ∧ result ≥ i_1 TRUE"
                           (rule "andLeft" (formula "3"))
                           (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "commute_or" (formula "5"))
                           (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))), result)"))
                           (rule "replaceKnownSelect_taclet000_1" (formula "22") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0110000_4" (formula "22") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1"))
                           (rule "add_literals" (formula "22") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "22") (term "1,0,1"))
                           (rule "add_zero_right" (formula "22") (term "0,1"))
                           (rule "leq_literals" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_homoInEq0" (formula "22") (term "1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                           (rule "add_literals" (formula "22") (term "0,0,0,1"))
                           (rule "add_zero_left" (formula "22") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "22") (term "0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "25"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "22") (term "0,0,1"))
                           (rule "leq_literals" (formula "22") (term "0,1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "22"))
                           (rule "allLeft" (formula "23") (inst "t=result"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,1"))
                           (rule "add_zero_right" (formula "23") (term "0,1"))
                           (rule "leq_literals" (formula "23") (term "1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "26"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1"))
                           (rule "leq_literals" (formula "23") (term "0,1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_52"))
                           (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")) (ifInst ""  (formula "12")))
                           (rule "eqSymm" (formula "24"))
                           (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "hideAuxiliaryEq" (formula "24"))
                           (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,0,0"))
                           (rule "add_literals" (formula "23") (term "1,0,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "0,1,0,0"))
                           (rule "qeq_literals" (formula "23") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "26"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "23") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "17") (inst "t=result"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "17") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "17") (term "0,0,1"))
                           (rule "leq_literals" (formula "17") (term "0,1"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "notLeft" (formula "17"))
                           (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "notLeft" (formula "7"))
                           (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "27")))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "26"))
                           (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "4"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                           (rule "add_literals" (formula "26") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0"))
                           (rule "add_literals" (formula "26") (term "0,0"))
                           (rule "leq_literals" (formula "26") (term "0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "false_right" (formula "26"))
                           (rule "allLeft" (formula "15") (inst "t=add(Z(neglit(1(#))), result)"))
                           (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,1,0"))
                           (rule "add_zero_left" (formula "15") (term "0,1,0"))
                           (rule "inEqSimp_invertInEq1" (formula "15") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                           (rule "times_zero_2" (formula "15") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1"))
                           (rule "leq_literals" (formula "15") (term "0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "allLeft" (formula "23") (inst "t=i_1"))
                           (rule "replaceKnownSelect_taclet110000_3" (formula "23") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet010110000_6" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                           (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "5"))
                           (rule "eqSymm" (formula "23") (term "0,0"))
                           (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                           (rule "mul_literals" (formula "23") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1"))
                           (rule "leq_literals" (formula "23") (term "0,1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "23"))
                           (rule "andLeft" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                        (branch "i_1 ≥ fromIndex ∧ result ≥ i_1 FALSE"
                           (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                           (rule "true_left" (formula "5"))
                           (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                           (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1"))
                           (rule "add_literals" (formula "23") (term "1,0,1"))
                           (rule "times_zero_1" (formula "23") (term "0,1"))
                           (rule "leq_literals" (formula "23") (term "1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_geqRight" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "applyEq" (formula "22") (term "0") (ifseqformula "5"))
                           (rule "applyEq" (formula "18") (term "2,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "20") (term "1,1,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "22") (term "0,2,2,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "5"))
                           (rule "applyEq" (formula "21") (term "1,0,2,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "5"))
                           (rule "close" (formula "22") (ifseqformula "4"))
                        )
                     )
                  )
                  (branch "result ≥ 1 + fromIndex FALSE"
                     (rule "applyEqReverse" (formula "29") (term "1,0,1") (ifseqformula "28"))
                     (rule "hideAuxiliaryEq" (formula "28"))
                     (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "1"))
                     (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "27"))
                     (rule "applyEq" (formula "7") (term "0,0,1") (ifseqformula "27"))
                     (rule "eqSymm" (formula "7") (term "0,1"))
                     (rule "applyEq" (formula "25") (term "1,1,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                     (rule "inEqSimp_homoInEq1" (formula "28"))
                     (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                     (rule "add_literals" (formula "28") (term "1,0"))
                     (rule "times_zero_1" (formula "28") (term "0"))
                     (rule "leq_literals" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "applyEq" (formula "6") (term "0,1") (ifseqformula "27"))
                     (rule "eqSymm" (formula "6") (term "1"))
                     (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "27"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,0"))
                     (rule "times_zero_1" (formula "1") (term "0"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "28") (term "1,0,2,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "28") (term "1,0,2,2,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "26"))
                     (rule "applyEq" (formula "26") (term "1") (ifseqformula "25"))
                     (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "8"))
                     (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0"))
                     (rule "qeq_literals" (formula "14") (term "0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "inEqSimp_or_antiSymm1" (formula "22") (term "0"))
                     (rule "polySimp_homoEq" (formula "22") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "1,0,1,1,0"))
                     (rule "add_literals" (formula "22") (term "0,1,0,1,1,0"))
                     (rule "add_zero_left" (formula "22") (term "1,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "1,0,0,1,0"))
                     (rule "add_literals" (formula "22") (term "0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "22") (term "0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor1" (formula "22") (term "0,0,1,0"))
                     (rule "add_literals" (formula "22") (term "1,0,0,1,0"))
                     (rule "times_zero_1" (formula "22") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "castDel" (formula "22") (term "0,2,0"))
                     (rule "castDel" (formula "22") (term "0,2,1"))
                     (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=arr_49"))
                     (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "28")) (ifInst ""  (formula "10")))
                     (rule "eqSymm" (formula "23"))
                     (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "hideAuxiliaryEq" (formula "23"))
                     (rule "elementOfArrayRangeConcrete" (formula "22") (term "0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0"))
                     (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "22") (term "0,0,0"))
                     (rule "add_literals" (formula "22") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "22") (term "0,0,0"))
                     (rule "qeq_literals" (formula "22") (term "0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "allLeft" (formula "16") (inst "t=sorted"))
                     (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "16") (term "0,0,1"))
                     (rule "leq_literals" (formula "16") (term "0,1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "14"))
                     (rule "qeq_literals" (formula "16") (term "0,1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "notLeft" (formula "16"))
                     (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "notLeft" (formula "6"))
                     (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "26")))
                     (rule "true_left" (formula "5"))
                     (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                     (rule "ifEqualsNull" (formula "3"))
                     (rule "commute_and_2" (formula "3") (term "0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "orLeft" (formula "3"))
                     (branch " byteArrays[i_1]@anon_heap_shiftRight«anonHeapFunction» = null ∧ i_1 ≥ fromIndex ∧ sorted ≥ i_1"
                        (rule "andLeft" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "27"))
                        (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "4"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                        (rule "add_literals" (formula "27") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0"))
                        (rule "leq_literals" (formula "27") (term "0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "false_right" (formula "27"))
                        (rule "allLeft" (formula "16") (inst "t=i_1"))
                        (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "16") (term "0,0,1"))
                        (rule "leq_literals" (formula "16") (term "0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "16") (term "0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "notLeft" (formula "16"))
                        (rule "ifthenelse_split" (formula "25") (term "0"))
                        (branch "sorted ≥ 1 + fromIndex TRUE"
                           (rule "applyEqReverse" (formula "27") (term "2,0,1") (ifseqformula "26"))
                           (rule "hideAuxiliaryEq" (formula "26"))
                           (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "25"))
                           (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0"))
                           (rule "qeq_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "allLeft" (formula "16") (inst "t=fromIndex"))
                           (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "16") (term "0,0,1"))
                           (rule "leq_literals" (formula "16") (term "0,1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "12"))
                           (rule "qeq_literals" (formula "16") (term "0,1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "notLeft" (formula "16"))
                           (rule "allLeft" (formula "22") (inst "t=i_1"))
                           (rule "replaceKnownSelect_taclet110000_3" (formula "22") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                           (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "6"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                           (rule "mul_literals" (formula "22") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "22") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                           (rule "add_literals" (formula "22") (term "0,0,1"))
                           (rule "leq_literals" (formula "22") (term "0,1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "allLeft" (formula "23") (inst "t=sorted"))
                           (rule "eqSymm" (formula "23") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,1"))
                           (rule "add_literals" (formula "23") (term "0,1"))
                           (rule "leq_literals" (formula "23") (term "1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "26"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                           (rule "add_literals" (formula "23") (term "0,0,1"))
                           (rule "leq_literals" (formula "23") (term "0,1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_50"))
                           (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "32")) (ifInst ""  (formula "10")))
                           (rule "eqSymm" (formula "24"))
                           (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "24"))
                           (rule "hideAuxiliaryEq" (formula "24"))
                           (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,0,0"))
                           (rule "add_literals" (formula "23") (term "1,0,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "0,1,0,0"))
                           (rule "qeq_literals" (formula "23") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "26"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "23") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), fromIndex)"))
                           (rule "eqSymm" (formula "24") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,2,1,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,2,1,0,0"))
                           (rule "add_zero_left" (formula "24") (term "0,2,1,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                           (rule "add_literals" (formula "24") (term "0,0,0,1"))
                           (rule "add_zero_left" (formula "24") (term "0,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,1,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,1,0"))
                           (rule "add_literals" (formula "24") (term "0,1,0"))
                           (rule "qeq_literals" (formula "24") (term "1,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "27"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "24") (term "0,0,1"))
                           (rule "leq_literals" (formula "24") (term "0,1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_51"))
                           (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "33")) (ifInst ""  (formula "10")))
                           (rule "eqSymm" (formula "25"))
                           (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "25"))
                           (rule "hideAuxiliaryEq" (formula "25"))
                           (rule "elementOfArrayRangeConcrete" (formula "24") (term "0,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0"))
                           (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0"))
                           (rule "qeq_literals" (formula "24") (term "0,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "24"))
                           (rule "allLeft" (formula "17") (inst "t=fromIndex"))
                           (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0"))
                           (rule "qeq_literals" (formula "17") (term "0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                           (rule "allLeft" (formula "18") (inst "t=i_1"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,1,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "18") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "allLeft" (formula "16") (inst "t=add(Z(neglit(1(#))), i_1)"))
                           (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0"))
                           (rule "add_zero_left" (formula "16") (term "0,0"))
                           (rule "inEqSimp_invertInEq1" (formula "16") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                           (rule "times_zero_2" (formula "16") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "16") (term "0,0,1"))
                           (rule "leq_literals" (formula "16") (term "0,1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "16"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                           (rule "leq_literals" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "applyEq" (formula "6") (term "1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "1"))
                           (rule "add_zero_right" (formula "3") (term "1"))
                           (rule "applyEqRigid" (formula "18") (term "0,2,1,0,1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "times_zero_2" (formula "5") (term "1,0"))
                           (rule "add_zero_right" (formula "5") (term "0"))
                           (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                           (rule "add_zero_right" (formula "18") (term "1,0"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEqRigid" (formula "17") (term "1,0,2,2,0,1") (ifseqformula "1"))
                           (rule "add_zero_right" (formula "17") (term "0,2,2,0,1"))
                           (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "23") (term "1,0,2,0") (ifseqformula "1"))
                           (rule "add_zero_right" (formula "23") (term "0,2,0"))
                           (rule "applyEq" (formula "31") (term "0,2,0") (ifseqformula "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "2"))
                           (rule "leq_literals" (formula "12") (term "0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "11") (term "0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "closeFalse" (formula "11"))
                        )
                        (branch "sorted ≥ 1 + fromIndex FALSE"
                           (rule "applyEqReverse" (formula "26") (term "2,0,1") (ifseqformula "25"))
                           (rule "hideAuxiliaryEq" (formula "25"))
                           (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "inEqSimp_geqRight" (formula "25"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "1"))
                           (rule "applyEq" (formula "22") (term "2,1,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "18"))
                           (rule "applyEq" (formula "27") (term "0,2,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "24") (term "1,1,1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "19") (term "1,1,1,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "16"))
                           (rule "inEqSimp_commuteGeq" (formula "6"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "16"))
                           (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,0"))
                           (rule "times_zero_1" (formula "16") (term "0"))
                           (rule "leq_literals" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                     (branch " ¬(i_1 ≥ fromIndex ∧ sorted ≥ i_1) ∧ byteArrays[i_1] = null"
                        (rule "andLeft" (formula "3"))
                        (rule "notLeft" (formula "3"))
                        (rule "allLeft" (formula "14") (inst "t=i_1"))
                        (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "14") (term "0,0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "14"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_literals" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
               )
            )
         )
         (branch "Case 2"
            (rule "allRight" (formula "26") (inst "sk=f_1"))
            (rule "allRight" (formula "26") (inst "sk=o_1"))
            (rule "orRight" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "eqSymm" (formula "28"))
            (rule "eqSymm" (formula "26") (term "0,0,0,1"))
            (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=f_1_0"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "29"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
            (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
            (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "commute_and" (formula "1") (term "0,0"))
            (rule "ifthenelse_split" (formula "24") (term "0"))
            (branch "sorted ≥ 1 + result TRUE"
               (rule "applyEqReverse" (formula "26") (term "2,0,1") (ifseqformula "25"))
               (rule "hideAuxiliaryEq" (formula "25"))
               (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "24"))
               (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
               (rule "add_literals" (formula "21") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0"))
               (rule "qeq_literals" (formula "21") (term "0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "ifthenelse_split" (formula "21") (term "0"))
               (branch "result ≥ 1 + fromIndex TRUE"
                  (rule "applyEqReverse" (formula "23") (term "1,0,1") (ifseqformula "22"))
                  (rule "hideAuxiliaryEq" (formula "22"))
                  (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "21"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                  (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0"))
                  (rule "qeq_literals" (formula "20") (term "0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "allLeft" (formula "12") (inst "t=sorted"))
                  (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "11"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1"))
                  (rule "leq_literals" (formula "12") (term "0,1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "10"))
                  (rule "qeq_literals" (formula "12") (term "0,1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "notLeft" (formula "12"))
                  (rule "allLeft" (formula "18") (inst "t=result"))
                  (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1"))
                  (rule "add_literals" (formula "18") (term "1,1,0,1"))
                  (rule "times_zero_1" (formula "18") (term "1,0,1"))
                  (rule "add_zero_right" (formula "18") (term "0,1"))
                  (rule "leq_literals" (formula "18") (term "1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "21"))
                  (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "18") (term "0,0,1"))
                  (rule "leq_literals" (formula "18") (term "0,1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_46"))
                  (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "27")) (ifInst ""  (formula "5")))
                  (rule "eqSymm" (formula "19"))
                  (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "19"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "hideAuxiliaryEq" (formula "19"))
                  (rule "elementOfArrayRangeConcrete" (formula "18") (term "0,0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "18") (term "1,0,0") (ifseqformula "23"))
                  (rule "inEqSimp_homoInEq0" (formula "18") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                  (rule "qeq_literals" (formula "18") (term "0,1,0,0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_subsumption1" (formula "18") (term "0,0") (ifseqformula "21"))
                  (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "18") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "allLeft" (formula "12") (inst "t=result"))
                  (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "12") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1"))
                  (rule "leq_literals" (formula "12") (term "0,1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "notLeft" (formula "12"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch "f_1 = arr(result) ∧ o_1 = byteArrays TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "2"))
                     (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "notRight" (formula "30"))
                     (rule "applyEq" (formula "31") (term "2,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "30") (term "1,0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "3"))
                     (rule "narrowSelectArrayType" (formula "31") (term "0") (ifseqformula "6") (ifseqformula "29"))
                     (rule "eqSymm" (formula "31"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                     (rule "nnf_ex2all" (formula "29"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                     (rule "commute_or" (formula "1") (term "0,0"))
                     (rule "commute_or_2" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "0,0"))
                     (rule "castDel" (formula "1") (term "0,1"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "25"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,1"))
                     (rule "leq_literals" (formula "1") (term "0,1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "23"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_literals" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "f_1 = arr(result) ∧ o_1 = byteArrays FALSE"
                     (rule "close" (formula "31") (ifseqformula "1"))
                  )
               )
               (branch "result ≥ 1 + fromIndex FALSE"
                  (rule "applyEqReverse" (formula "22") (term "1,0,1") (ifseqformula "21"))
                  (rule "hideAuxiliaryEq" (formula "21"))
                  (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "inEqSimp_geqRight" (formula "23"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "1"))
                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "21"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                  (rule "inEqSimp_homoInEq1" (formula "21"))
                  (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                  (rule "add_literals" (formula "21") (term "1,0"))
                  (rule "times_zero_1" (formula "21") (term "0"))
                  (rule "leq_literals" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "20"))
                  (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,0"))
                  (rule "times_zero_1" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "21") (term "1,0,2,2,0") (ifseqformula "19"))
                  (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "19"))
                  (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "19"))
                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                  (rule "add_zero_right" (formula "8") (term "0,0"))
                  (rule "qeq_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "19"))
                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0"))
                  (rule "qeq_literals" (formula "11") (term "0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "inEqSimp_or_antiSymm1" (formula "15") (term "0"))
                  (rule "polySimp_homoEq" (formula "15") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "1,0,1,1,0"))
                  (rule "add_literals" (formula "15") (term "0,1,0,1,1,0"))
                  (rule "add_zero_left" (formula "15") (term "1,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "1,0,0,1,0"))
                  (rule "add_literals" (formula "15") (term "0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "15") (term "0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0,1,0"))
                  (rule "add_literals" (formula "15") (term "1,0,0,1,0"))
                  (rule "times_zero_1" (formula "15") (term "0,0,1,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "castDel" (formula "15") (term "0,2,0"))
                  (rule "castDel" (formula "15") (term "0,2,1"))
                  (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_45"))
                  (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "21")) (ifInst ""  (formula "4")))
                  (rule "eqSymm" (formula "16"))
                  (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "hideAuxiliaryEq" (formula "16"))
                  (rule "elementOfArrayRangeConcrete" (formula "15") (term "0,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "1,0,0,0,0"))
                  (rule "times_zero_1" (formula "15") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "15") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_subsumption1" (formula "15") (term "0,0") (ifseqformula "18"))
                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "15") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "allLeft" (formula "10") (inst "t=sorted"))
                  (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "10") (term "0,0,1"))
                  (rule "leq_literals" (formula "10") (term "0,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "10") (term "0,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "cut_direct" (formula "23") (term "0,0"))
                  (branch "CUT: o_1 = null TRUE"
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "false_right" (formula "24"))
                     (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "22") (term "0"))
                     (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "false_right" (formula "22"))
                     (rule "applyEqRigid" (formula "22") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "closeTrue" (formula "22"))
                  )
                  (branch "CUT: o_1 = null FALSE"
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "notRight" (formula "24"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_1 = arr(fromIndex) ∧ o_1 = byteArrays TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "2"))
                        (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "1"))
                        (rule "narrowSelectArrayType" (formula "24") (term "0") (ifseqformula "4") (ifseqformula "22"))
                        (rule "eqSymm" (formula "24"))
                        (rule "nnf_ex2all" (formula "23"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0,1"))
                        (rule "castDel" (formula "1") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "20"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "f_1 = arr(fromIndex) ∧ o_1 = byteArrays FALSE"
                        (rule "close" (formula "26") (ifseqformula "2"))
                     )
                  )
               )
            )
            (branch "sorted ≥ 1 + result FALSE"
               (rule "applyEqReverse" (formula "25") (term "2,0,1") (ifseqformula "24"))
               (rule "hideAuxiliaryEq" (formula "24"))
               (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "inEqSimp_geqRight" (formula "24"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "1"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "22"))
               (rule "inEqSimp_homoInEq0" (formula "1"))
               (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,0"))
               (rule "times_zero_1" (formula "1") (term "0"))
               (rule "qeq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "13") (term "0") (ifseqformula "21"))
               (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
               (rule "inEqSimp_homoInEq1" (formula "21"))
               (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
               (rule "add_literals" (formula "21") (term "1,0"))
               (rule "times_zero_1" (formula "21") (term "0"))
               (rule "leq_literals" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "applyEq" (formula "10") (term "0") (ifseqformula "20"))
               (rule "applyEq" (formula "21") (term "0,2,2,0,1") (ifseqformula "19"))
               (rule "applyEq" (formula "12") (term "1,1,1,0,0") (ifseqformula "19"))
               (rule "applyEq" (formula "1") (term "0,2,1,0") (ifseqformula "19"))
               (rule "applyEq" (formula "23") (term "1,1,0,1") (ifseqformula "19"))
               (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "19"))
               (rule "applyEq" (formula "16") (term "1,1,1,0") (ifseqformula "18"))
               (rule "applyEq" (formula "13") (term "2,1,0") (ifseqformula "18"))
               (rule "inEqSimp_or_tautInEq1" (formula "16") (term "0"))
               (rule "polySimp_addAssoc" (formula "16") (term "1,1,0"))
               (rule "add_literals" (formula "16") (term "0,1,1,0"))
               (rule "add_zero_left" (formula "16") (term "1,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
               (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,0"))
               (rule "add_literals" (formula "16") (term "1,0,1,0"))
               (rule "times_zero_1" (formula "16") (term "0,1,0"))
               (rule "leq_literals" (formula "16") (term "1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "ifthenelse_split" (formula "18") (term "0"))
               (branch "result ≥ 1 + fromIndex TRUE"
                  (rule "applyEqReverse" (formula "20") (term "1,0,1") (ifseqformula "19"))
                  (rule "hideAuxiliaryEq" (formula "19"))
                  (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "18"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0"))
                  (rule "qeq_literals" (formula "16") (term "0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "allLeft" (formula "10") (inst "t=result"))
                  (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "10") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "10") (term "0,0,1"))
                  (rule "leq_literals" (formula "10") (term "0,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "allLeft" (formula "15") (inst "t=result"))
                  (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1"))
                  (rule "add_literals" (formula "15") (term "1,1,0,1"))
                  (rule "times_zero_1" (formula "15") (term "1,0,1"))
                  (rule "add_zero_right" (formula "15") (term "0,1"))
                  (rule "leq_literals" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "18"))
                  (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "15") (term "0,0,1"))
                  (rule "leq_literals" (formula "15") (term "0,1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_44"))
                  (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "22")) (ifInst ""  (formula "5")))
                  (rule "eqSymm" (formula "16"))
                  (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "hideAuxiliaryEq" (formula "16"))
                  (rule "elementOfArrayRangeConcrete" (formula "15") (term "0,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1,0,0"))
                  (rule "add_literals" (formula "15") (term "1,0,1,0,0"))
                  (rule "times_zero_1" (formula "15") (term "0,1,0,0"))
                  (rule "qeq_literals" (formula "15") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_subsumption1" (formula "15") (term "0,0") (ifseqformula "18"))
                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "15") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch "f_1 = arr(result) ∧ o_1 = byteArrays TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "2"))
                     (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "notRight" (formula "24"))
                     (rule "applyEq" (formula "25") (term "2,0") (ifseqformula "2"))
                     (rule "narrowSelectArrayType" (formula "25") (term "0") (ifseqformula "6") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "closeTrue" (formula "25"))
                  )
                  (branch "f_1 = arr(result) ∧ o_1 = byteArrays FALSE"
                     (rule "close" (formula "25") (ifseqformula "1"))
                  )
               )
               (branch "result ≥ 1 + fromIndex FALSE"
                  (rule "applyEqReverse" (formula "19") (term "1,0,1") (ifseqformula "18"))
                  (rule "hideAuxiliaryEq" (formula "18"))
                  (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "19"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "inEqSimp_geqRight" (formula "18"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "1"))
                  (rule "applyEq" (formula "21") (term "1,1,0,1") (ifseqformula "17"))
                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "17"))
                  (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "16"))
                  (rule "applyEq" (formula "15") (term "1,1,1,0") (ifseqformula "16"))
                  (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "16"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,0"))
                  (rule "times_zero_1" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "1") (term "0,2,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "12") (term "2,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq1" (formula "16"))
                  (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "1,0"))
                  (rule "times_zero_1" (formula "16") (term "0"))
                  (rule "leq_literals" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "16") (term "1") (ifseqformula "15"))
                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                  (rule "add_zero_right" (formula "8") (term "0,0"))
                  (rule "qeq_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_or_tautInEq0" (formula "9") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,1,1,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,1,0,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0,1,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,1,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,1,0,0"))
                  (rule "leq_literals" (formula "9") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_or_antiSymm1" (formula "12") (term "0"))
                  (rule "polySimp_homoEq" (formula "12") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "1,0,1,1,0"))
                  (rule "add_literals" (formula "12") (term "0,1,0,1,1,0"))
                  (rule "add_zero_left" (formula "12") (term "1,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "1,0,0,1,0"))
                  (rule "add_literals" (formula "12") (term "0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0,1,0"))
                  (rule "add_literals" (formula "12") (term "1,0,0,1,0"))
                  (rule "times_zero_1" (formula "12") (term "0,0,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "castDel" (formula "12") (term "0,2,0"))
                  (rule "castDel" (formula "12") (term "0,2,1"))
                  (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=arr_43"))
                  (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "4")))
                  (rule "eqSymm" (formula "13"))
                  (rule "applyEqReverse" (formula "12") (term "1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "hideAuxiliaryEq" (formula "13"))
                  (rule "elementOfArrayRangeConcrete" (formula "12") (term "0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0,0"))
                  (rule "add_literals" (formula "12") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "12") (term "0,0,0"))
                  (rule "qeq_literals" (formula "12") (term "0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "cut_direct" (formula "17") (term "0,0"))
                  (branch "CUT: o_1 = null TRUE"
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "false_right" (formula "18"))
                     (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "17") (term "0"))
                     (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "false_right" (formula "17"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "17")))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "CUT: o_1 = null FALSE"
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "notRight" (formula "18"))
                     (rule "cut_direct" (formula "17") (term "0"))
                     (branch "CUT: o_1 = byteArrays TRUE"
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                        (rule "nnf_ex2all" (formula "17"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                        (rule "inEqSimp_or_antiSymm1" (formula "1") (term "0"))
                        (rule "polySimp_homoEq" (formula "1") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "1,0,1,1,0"))
                        (rule "add_literals" (formula "1") (term "0,1,0,1,1,0"))
                        (rule "add_zero_left" (formula "1") (term "1,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "1,0,0,1,0"))
                        (rule "add_literals" (formula "1") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,1,0"))
                        (rule "add_literals" (formula "1") (term "1,0,0,1,0"))
                        (rule "times_zero_1" (formula "1") (term "0,0,1,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0,0,0"))
                        (rule "notLeft" (formula "1"))
                        (rule "eqSymm" (formula "16"))
                        (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "18")))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "CUT: o_1 = byteArrays FALSE"
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "false_right" (formula "18"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
               )
            )
         )
      )
      (branch "Null Reference (_byteArrays = null)"
         (builtin "One Step Simplification" (formula "23"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (_byteArrays != null, but i Out of Bounds!)"
         (builtin "One Step Simplification" (formula "23"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_literals" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "pullOutSelect" (formula "21") (term "2,0,1") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "23")) (ifInst ""  (formula "3")))
         (rule "elementOfArrayRangeConcrete" (formula "21") (term "0,0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
         (rule "inEqSimp_subsumption1" (formula "21") (term "0,0,0") (ifseqformula "18"))
         (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0"))
         (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
         (rule "qeq_literals" (formula "21") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "pullOutSelect" (formula "20") (term "1,0,1") (inst "selectSK=arr_1"))
         (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")))
         (rule "elementOfArrayRangeConcrete" (formula "20") (term "0,0"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
         (rule "inEqSimp_subsumption1" (formula "20") (term "1,0,0") (ifseqformula "19"))
         (rule "inEqSimp_homoInEq0" (formula "20") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
         (rule "qeq_literals" (formula "20") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_imp2or" (formula "17") (term "0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
         (rule "commute_or" (formula "1"))
         (rule "commute_or_2" (formula "16") (term "0"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or" (formula "16") (term "0,0"))
         (rule "commute_or" (formula "17") (term "0,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "2,0") (ifseqformula "2"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,0") (ifseqformula "13"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0") (ifseqformula "13"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "2,0") (ifseqformula "2"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "1,0,1") (ifseqformula "2"))
         (rule "throwUnfold" (formula "30") (term "1") (inst "#v0=a"))
         (rule "variableDeclarationAssign" (formula "30") (term "1"))
         (rule "variableDeclaration" (formula "30") (term "1") (newnames "a"))
         (rule "instanceCreationAssignment" (formula "30") (term "1") (inst "#v0=a_1"))
         (rule "variableDeclarationAssign" (formula "30") (term "1"))
         (rule "variableDeclaration" (formula "30") (term "1") (newnames "a_1"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "30") (term "1") (inst "#v0=a_2"))
         (rule "variableDeclaration" (formula "30") (term "1") (newnames "a_2"))
         (rule "methodBodyExpand" (formula "30") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "variableDeclaration" (formula "30") (term "1") (newnames "__NEW__"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "30") (term "1") (inst "#v0=a_3"))
         (rule "variableDeclaration" (formula "30") (term "1") (newnames "a_3"))
         (rule "allocateInstance" (formula "30"))
         (builtin "One Step Simplification" (formula "31"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0") (ifseqformula "15"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
         (rule "notLeft" (formula "1"))
         (rule "orRight" (formula "30"))
         (rule "blockEmpty" (formula "34") (term "1"))
         (rule "assignment" (formula "34") (term "1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "assignment_write_attribute_this" (formula "34") (term "1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallWithinClass" (formula "34") (term "1"))
         (rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallSuper" (formula "34") (term "1"))
         (rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallSuper" (formula "34") (term "1"))
         (rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallSuper" (formula "34") (term "1"))
         (rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallSuper" (formula "34") (term "1"))
         (rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallSuper" (formula "34") (term "1"))
         (rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "blockEmpty" (formula "34") (term "1"))
         (rule "assignment_write_attribute_this" (formula "34") (term "1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "castDel" (formula "34") (term "1,0,1,0"))
         (rule "assignment_write_attribute_this" (formula "34") (term "1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "castDel" (formula "34") (term "1,0,1,0"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "blockEmpty" (formula "34") (term "1"))
         (rule "methodCallReturnIgnoreResult" (formula "34") (term "1"))
         (rule "methodCallReturn" (formula "34") (term "1"))
         (rule "assignment" (formula "34") (term "1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "blockEmpty" (formula "34") (term "1"))
         (rule "assignment" (formula "34") (term "1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallSuper" (formula "34") (term "1"))
         (rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallSuper" (formula "34") (term "1"))
         (rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallSuper" (formula "34") (term "1"))
         (rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallSuper" (formula "34") (term "1"))
         (rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallSuper" (formula "34") (term "1"))
         (rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "blockEmpty" (formula "34") (term "1"))
         (rule "assignment_write_attribute_this" (formula "34") (term "1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "castDel" (formula "34") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "assignment_write_attribute_this" (formula "34") (term "1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "castDel" (formula "34") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "methodCallEmpty" (formula "34") (term "1"))
         (rule "blockEmpty" (formula "34") (term "1"))
         (rule "assignment_write_attribute" (formula "34") (term "1"))
         (branch "Normal Execution (a_1 != null)"
            (builtin "One Step Simplification" (formula "35"))
            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
            (rule "false_right" (formula "34"))
            (rule "assignment" (formula "34") (term "1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "tryCatchThrow" (formula "34") (term "1"))
            (rule "ifElseUnfold" (formula "34") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "34") (term "1") (newnames "x"))
            (rule "equality_comparison_simple" (formula "34") (term "1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "replace_known_right" (formula "34") (term "0,0,1,0") (ifseqformula "32"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "ifElseSplit" (formula "34"))
            (branch "if x true"
               (builtin "One Step Simplification" (formula "35"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x false"
               (builtin "One Step Simplification" (formula "35"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "34"))
               (branch "if a instanceof Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "34") (term "1") (newnames "t"))
                  (rule "reference_type_cast" (formula "34") (term "1"))
                  (branch "Normal Execution (a instanceof Throwable)"
                     (builtin "One Step Simplification" (formula "35"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "methodCallEmpty" (formula "34") (term "1"))
                     (rule "tryEmpty" (formula "34") (term "1"))
                     (rule "emptyModality" (formula "34") (term "1"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "eqSymm" (formula "34") (term "1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "34") (term "2,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "0,0,1,0,1,1,0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "1,0,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "2,0,1,0,0,0"))
                     (rule "narrowSelectArrayType" (formula "34") (term "2,1,0,1,0") (ifseqformula "3") (ifseqformula "33"))
                     (rule "dismissNonSelectedField" (formula "34") (term "2,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "0,0,1,0,1,1,0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "1,0,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "2,0,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "2,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "0,0,1,0,1,1,0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "1,0,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "2,0,1,0,0,0"))
                     (rule "ex_pull_out1" (formula "34") (term "0,0,0,0,1"))
                     (rule "ifthenelse_split" (formula "23") (term "0"))
                     (branch "result ≥ 1 + fromIndex TRUE"
                        (rule "applyEqReverse" (formula "25") (term "1,0,1") (ifseqformula "24"))
                        (rule "hideAuxiliaryEq" (formula "24"))
                        (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "23"))
                        (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0"))
                        (rule "qeq_literals" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "ifthenelse_split" (formula "26") (term "0"))
                        (branch "sorted ≥ 1 + result TRUE"
                           (rule "applyEqReverse" (formula "29") (term "2,0,1") (ifseqformula "27"))
                           (rule "hideAuxiliaryEq" (formula "27"))
                           (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "26"))
                           (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0"))
                           (rule "qeq_literals" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "allLeft" (formula "11") (inst "t=sorted"))
                           (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                           (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "11") (term "0,0,1"))
                           (rule "leq_literals" (formula "11") (term "0,1"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "11") (term "0,1"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "notLeft" (formula "11"))
                           (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), result)"))
                           (rule "replaceKnownSelect_taclet200_1" (formula "17") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010200_2" (formula "17") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,1,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
                           (rule "add_literals" (formula "17") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
                           (rule "add_literals" (formula "17") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "17") (term "1,0,1"))
                           (rule "add_zero_right" (formula "17") (term "0,1"))
                           (rule "leq_literals" (formula "17") (term "1"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "17") (term "0,0,1"))
                           (rule "leq_literals" (formula "17") (term "0,1"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "20") (term "1,0,1") (ifseqformula "17"))
                           (rule "allLeft" (formula "19") (inst "t=sorted"))
                           (rule "eqSymm" (formula "19") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1"))
                           (rule "add_literals" (formula "19") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,1"))
                           (rule "leq_literals" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "27"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1"))
                           (rule "leq_literals" (formula "19") (term "0,1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_42"))
                           (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "35")) (ifInst ""  (formula "4")))
                           (rule "eqSymm" (formula "20"))
                           (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "20"))
                           (rule "hideAuxiliaryEq" (formula "20"))
                           (rule "elementOfArrayRangeConcrete" (formula "19") (term "0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                           (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0,0"))
                           (rule "add_literals" (formula "19") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "19") (term "0,0,0"))
                           (rule "qeq_literals" (formula "19") (term "0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), result)"))
                           (rule "replaceKnownSelect_taclet200_0" (formula "20") (term "1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000010200_3" (formula "20") (term "1,0,0"))
                           (rule "eqSymm" (formula "20") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,2,1,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,2,1,0,0"))
                           (rule "add_zero_left" (formula "20") (term "0,2,1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,1,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,1,0"))
                           (rule "qeq_literals" (formula "20") (term "1,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,1"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                           (rule "add_literals" (formula "20") (term "0,0,0,1"))
                           (rule "add_zero_left" (formula "20") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "28"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "20") (term "0,0,1"))
                           (rule "leq_literals" (formula "20") (term "0,1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "30") (term "2,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "27") (term "1,0,1") (ifseqformula "20"))
                           (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))), result)"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,2,2,0,1"))
                           (rule "add_literals" (formula "13") (term "0,0,2,2,0,1"))
                           (rule "add_zero_left" (formula "13") (term "0,2,2,0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,1,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "25"))
                           (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "13") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0"))
                           (rule "leq_literals" (formula "13") (term "0,0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "cut_direct" (formula "27") (term "0"))
                           (branch "CUT: byteArrays[1 + result] = null TRUE"
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "cut_direct" (formula "24") (term "0"))
                              (branch "CUT: byteArrays[-1 + result] = null TRUE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "18") (term "1") (ifseqformula "23"))
                                 (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "23"))
                                 (rule "cut_direct" (formula "2") (term "1"))
                                 (branch "CUT: byteArrays.length ≤ result TRUE"
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "25"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                    (rule "times_zero_1" (formula "7") (term "0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "30"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "inEqSimp_homoInEq1" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0"))
                                    (rule "add_zero_right" (formula "11") (term "0"))
                                    (rule "leq_literals" (formula "11"))
                                    (rule "closeFalse" (formula "11"))
                                 )
                                 (branch "CUT: byteArrays.length ≤ result FALSE"
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_leqRight" (formula "31"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "3"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "add_literals" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "25"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "closeFalse" (formula "7"))
                                 )
                              )
                              (branch "CUT: byteArrays[-1 + result] = null FALSE"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "cut_direct" (formula "2") (term "1"))
                                 (branch "CUT: byteArrays.length ≤ result TRUE"
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "30"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "inEqSimp_homoInEq1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0"))
                                    (rule "add_zero_right" (formula "10") (term "0"))
                                    (rule "leq_literals" (formula "10"))
                                    (rule "closeFalse" (formula "10"))
                                 )
                                 (branch "CUT: byteArrays.length ≤ result FALSE"
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_leqRight" (formula "32"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "3"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "add_literals" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "26"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "closeFalse" (formula "7"))
                                 )
                              )
                           )
                           (branch "CUT: byteArrays[1 + result] = null FALSE"
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "cut_direct" (formula "24") (term "0"))
                              (branch "CUT: byteArrays[-1 + result] = null TRUE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "18") (term "1") (ifseqformula "23"))
                                 (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "23"))
                                 (rule "cut_direct" (formula "2") (term "1"))
                                 (branch "CUT: byteArrays.length ≤ result TRUE"
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "25"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "29"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "inEqSimp_homoInEq1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0"))
                                    (rule "add_literals" (formula "10") (term "0"))
                                    (rule "leq_literals" (formula "10"))
                                    (rule "closeFalse" (formula "10"))
                                 )
                                 (branch "CUT: byteArrays.length ≤ result FALSE"
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_leqRight" (formula "31"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "3"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "add_literals" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "25") (term "0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "closeFalse" (formula "25"))
                                 )
                              )
                              (branch "CUT: byteArrays[-1 + result] = null FALSE"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "cut_direct" (formula "2") (term "1"))
                                 (branch "CUT: byteArrays.length ≤ result TRUE"
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "10"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "inEqSimp_homoInEq1" (formula "30"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0"))
                                    (rule "add_zero_right" (formula "30") (term "0"))
                                    (rule "leq_literals" (formula "30"))
                                    (rule "closeFalse" (formula "30"))
                                 )
                                 (branch "CUT: byteArrays.length ≤ result FALSE"
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_leqRight" (formula "32"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "3"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "add_literals" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "26"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "closeFalse" (formula "7"))
                                 )
                              )
                           )
                        )
                        (branch "sorted ≥ 1 + result FALSE"
                           (rule "applyEqReverse" (formula "28") (term "2,0,1") (ifseqformula "26"))
                           (rule "hideAuxiliaryEq" (formula "26"))
                           (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "inEqSimp_geqRight" (formula "27"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
                           (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "15") (term "2,1,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "24") (term "0,2,2,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "20"))
                           (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                           (rule "add_literals" (formula "20") (term "1,0"))
                           (rule "times_zero_1" (formula "20") (term "0"))
                           (rule "leq_literals" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "applyEq" (formula "31") (term "1,1,0,0,0,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "19"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "19"))
                           (rule "applyEq" (formula "26") (term "0,2,1,0,1") (ifseqformula "19"))
                           (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "26") (term "0,2,0,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "19"))
                           (rule "applyEq" (formula "31") (term "1,1,1,0,0,0,0,0,1") (ifseqformula "19"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1"))
                           (rule "leq_literals" (formula "2") (term "0,1"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0"))
                           (rule "qeq_literals" (formula "12") (term "0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "closeFalse" (formula "9"))
                        )
                     )
                     (branch "result ≥ 1 + fromIndex FALSE"
                        (rule "applyEqReverse" (formula "24") (term "1,0,1") (ifseqformula "23"))
                        (rule "hideAuxiliaryEq" (formula "23"))
                        (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "inEqSimp_geqRight" (formula "28"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
                        (rule "applyEq" (formula "24") (term "1,0,2,1,0,1") (ifseqformula "20"))
                        (rule "applyEq" (formula "22") (term "1") (ifseqformula "20"))
                        (rule "applyEq" (formula "24") (term "1,0,2,0,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "26") (term "1,0,2,2,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "times_zero_1" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "23") (term "1,0,2,1,0,1") (ifseqformula "19"))
                        (rule "applyEq" (formula "21") (term "1,0,2,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "21") (term "1,0,2,1,0,1") (ifseqformula "19"))
                        (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "24") (term "1,0,2,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                        (rule "inEqSimp_homoInEq1" (formula "20"))
                        (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                        (rule "add_literals" (formula "20") (term "1,0"))
                        (rule "times_zero_1" (formula "20") (term "0"))
                        (rule "leq_literals" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "19"))
                        (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "17") (term "1,1,1,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "21") (term "1,0,2,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "23") (term "1,0,2,1,0,1") (ifseqformula "19"))
                        (rule "applyEq" (formula "24") (term "1,0,2,1,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "19"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "6"))
                        (rule "qeq_literals" (formula "2") (term "0,0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "2"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                        (rule "applyEq" (formula "10") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "10"))
                        (rule "polySimp_addComm1" (formula "10") (term "0"))
                        (rule "applyEq" (formula "31") (term "1,1,0,0,1,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "8"))
                        (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "1,0"))
                        (rule "times_zero_1" (formula "8") (term "0"))
                        (rule "leq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,0"))
                        (rule "times_zero_1" (formula "2") (term "0"))
                        (rule "qeq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "29") (term "1,1,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "29") (term "1,0,0,1,0") (ifseqformula "6"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1"))
                        (rule "polySimp_rightDist" (formula "8") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                        (rule "mul_literals" (formula "8") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                        (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0"))
                        (rule "leq_literals" (formula "24") (term "0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "10"))
                        (rule "andLeft" (formula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "8"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                        (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "1,1,0"))
                        (rule "times_zero_1" (formula "8") (term "1,0"))
                        (rule "add_literals" (formula "8") (term "0"))
                        (rule "leq_literals" (formula "8"))
                        (rule "closeFalse" (formula "8"))
                     )
                  )
                  (branch "ClassCastException (!(a instanceof Throwable))"
                     (builtin "One Step Simplification" (formula "35"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "closeTrue" (formula "34"))
                  )
               )
               (branch "if a instanceof Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (a_1 = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Array Store Exception (incompatible dynamic element type of _byteArrays and key)"
         (builtin "One Step Simplification" (formula "23"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "3"))
         (rule "array_self_reference" (formula "23") (ifseqformula "3") (ifseqformula "24"))
         (rule "closeTrue" (formula "23"))
      )
   )
   (branch "Exceptional Post (shiftRight)"
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "translateJavaAddInt" (formula "13") (term "0,2,2,0,1,1,1,1,1,0,1,1"))
      (rule "translateJavaSubInt" (formula "13") (term "0,2,1,1,0,0,1,0,1,1"))
      (rule "translateJavaSubInt" (formula "13") (term "0,2,1,0,1,0,1,1,1,0,1,1"))
      (rule "andLeft" (formula "13"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,0") (ifseqformula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "16"))
      (rule "notLeft" (formula "14"))
      (rule "close" (formula "17") (ifseqformula "16"))
   )
   (branch "Pre (shiftRight)"
      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")) (ifInst ""  (formula "12")) (ifInst ""  (formula "2")))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0"))
      (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0"))
      (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "4"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0"))
      (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
      (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
      (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "nonNull" (formula "13") (term "0,0") (inst "i=i_1"))
      (rule "greater_literals" (formula "13") (term "0,1,0,0"))
      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")))
      (rule "sub_literals" (formula "13") (term "2,1,0,0,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0,0,0") (ifseqformula "1") (ifseqformula "12"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,0"))
      (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0"))
      (rule "allLeft" (formula "9") (inst "t=sorted"))
      (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "8"))
      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
      (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "9") (term "0,0,1"))
      (rule "leq_literals" (formula "9") (term "0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "7"))
      (rule "qeq_literals" (formula "9") (term "0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "notLeft" (formula "9"))
      (rule "replace_known_right" (formula "14") (term "0,1,0") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "12")))
      (rule "cut_direct" (formula "14") (term "1"))
      (branch "CUT: byteArrays[sorted].<created> = TRUE TRUE"
         (builtin "One Step Simplification" (formula "15"))
         (rule "allRight" (formula "15") (inst "sk=i_1_0"))
         (rule "orRight" (formula "15"))
         (rule "orRight" (formula "15"))
         (rule "notRight" (formula "17"))
         (rule "inEqSimp_leqRight" (formula "16"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "17"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "allLeft" (formula "13") (inst "t=i_1_0"))
         (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "13") (term "0,0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "1"))
         (rule "andLeft" (formula "13"))
         (rule "inEqSimp_homoInEq1" (formula "13"))
         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
         (rule "add_literals" (formula "13") (term "1,1,0"))
         (rule "times_zero_1" (formula "13") (term "1,0"))
         (rule "add_zero_right" (formula "13") (term "0"))
         (rule "leq_literals" (formula "13"))
         (rule "closeFalse" (formula "13"))
      )
      (branch "CUT: byteArrays[sorted].<created> = TRUE FALSE"
         (builtin "One Step Simplification" (formula "15"))
         (rule "referencedObjectIsCreatedRight" (formula "14") (ifseqformula "12"))
         (rule "close" (formula "14") (ifseqformula "1"))
      )
   )
)
(branch "Null Reference (_byteArrays = null)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
   (rule "closeFalse" (formula "1"))
)
(branch "Index Out of Bounds (_byteArrays != null, but _sorted Out of Bounds!)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
   (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
   (rule "add_literals" (formula "1") (term "0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
   (rule "mul_literals" (formula "1") (term "1,1"))
   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "7"))
   (rule "qeq_literals" (formula "1") (term "0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
   (rule "andLeft" (formula "1"))
   (rule "inEqSimp_homoInEq1" (formula "1"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "1,1,0"))
   (rule "times_zero_1" (formula "1") (term "1,0"))
   (rule "add_zero_right" (formula "1") (term "0"))
   (rule "leq_literals" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
)

}
