\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jul 18 20:20:22 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue Jul 18 20:20:22 CEST 2017
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:decryptBallots([[B)].JML behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:decryptBallots([[B)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))
(keyLog "3" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))
(keyLog "4" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))
(keyLog "5" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))
(keyLog "6" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))
(keyLog "7" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "1076714")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "msg,self,result,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "assignment" (formula "12") (term "1") (userinteraction))
(builtin "One Step Simplification" (formula "12"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_decryptBallots,savedHeapBefore_decryptBallots,_msgBefore_decryptBallots") (userinteraction))
(rule "variableDeclarationAssign" (formula "12") (term "1,1") (userinteraction))
(rule "variableDeclaration" (formula "12") (term "1,1") (newnames "res") (userinteraction))
(rule "arrayCreation" (formula "12") (term "1,1") (inst "#v0=x_arr_arr") (userinteraction))
(rule "variableDeclaration" (formula "12") (term "1,1") (newnames "x_arr_arr") (userinteraction))
(rule "variableDeclarationAssign" (formula "12") (term "1,1") (userinteraction))
(rule "variableDeclaration" (formula "12") (term "1,1") (newnames "dim0") (userinteraction))
(rule "assignment_read_length" (formula "12") (term "1,1") (userinteraction))
(branch "Normal Execution (_msg != null)"
   (builtin "One Step Simplification" (formula "12"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "ifUnfold" (formula "13") (term "1") (inst "#boolv=x") (userinteraction))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x") (userinteraction))
   (rule "less_than_comparison_simple" (formula "13") (term "1") (userinteraction))
   (rule "if" (formula "13") (term "1,1") (userinteraction))
   (builtin "One Step Simplification" (formula "13"))
   (rule "ifthenelse_split_for" (formula "13") (userinteraction))
   (branch "msg.length < 0 TRUE"
      (builtin "One Step Simplification" (formula "9"))
      (rule "eqSymm" (formula "8"))
      (rule "eqSymm" (formula "9") (term "0,1,0,1,0"))
      (rule "eqSymm" (formula "9") (term "0,1,0,0,1,0"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "inEqSimp_ltToLeq" (formula "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,1,0"))
      (rule "blockThrow" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "11") (inst "i=i"))
      (rule "greater_literals" (formula "11") (term "0,1"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "13")))
      (rule "sub_literals" (formula "11") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "13"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
      (rule "array2seqDef" (formula "9") (term "0,0,1,0,1,0") (inst "u=u"))
      (rule "array2seqDef" (formula "9") (term "1,0,1,0,1,0") (inst "u=u"))
      (rule "nonNull" (formula "14") (term "1,1,1,0,0,1") (inst "i=i"))
      (rule "greater_literals" (formula "14") (term "0,1,1,1,1,0,0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "sub_literals" (formula "14") (term "2,1,0,1,1,1,1,0,0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,1,1,1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,1,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,1,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,1,1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,1,1,0,0,1"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,1,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,1,1,0,0,1"))
      (rule "eqSeqDef" (formula "9") (term "0,1,0,1,0") (inst "iv=iv"))
      (rule "lenOfSeqDef" (formula "9") (term "0,0,0,1,0,1,0"))
      (rule "eqSymm" (formula "9") (term "0,0,1,0,1,0"))
      (rule "polySimp_elimSub" (formula "9") (term "1,1,0,0,1,0,1,0"))
      (rule "times_zero_2" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "1,1,0,0,1,0,1,0"))
      (rule "getOfSeqDef" (formula "9") (term "0,1,0,1,0,1,0,1,0"))
      (rule "castDel" (formula "9") (term "1,0,1,0,1,0,1,0,1,0"))
      (rule "castDel" (formula "9") (term "2,0,1,0,1,0,1,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,2,1,0,1,0,1,0,1,0,1,0"))
      (rule "eqSymm" (formula "9") (term "1,0,1,0,1,0,1,0"))
      (rule "polySimp_elimSub" (formula "9") (term "1,1,0,1,1,0,1,0,1,0,1,0"))
      (rule "times_zero_2" (formula "9") (term "1,1,1,0,1,1,0,1,0,1,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "1,1,0,1,1,0,1,0,1,0,1,0"))
      (rule "lenOfSeqDef" (formula "9") (term "1,1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_elimSub" (formula "9") (term "1,1,1,0,0,1,0,1,0,1,0"))
      (rule "times_zero_2" (formula "9") (term "1,1,1,1,0,0,1,0,1,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "1,1,1,0,0,1,0,1,0,1,0"))
      (rule "lenOfSeqDef" (formula "9") (term "0,0,0,1,0,1,0"))
      (rule "eqSymm" (formula "9") (term "0,0,1,0,1,0"))
      (rule "polySimp_elimSub" (formula "9") (term "1,1,0,0,1,0,1,0"))
      (rule "times_zero_2" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "1,1,0,0,1,0,1,0"))
      (rule "getOfSeqDef" (formula "9") (term "0,1,0,1,0,1,0,1,0"))
      (rule "castDel" (formula "9") (term "1,0,1,0,1,0,1,0,1,0"))
      (rule "castDel" (formula "9") (term "2,0,1,0,1,0,1,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,2,1,0,1,0,1,0,1,0,1,0"))
      (rule "eqSymm" (formula "9") (term "1,0,1,0,1,0,1,0"))
      (rule "polySimp_elimSub" (formula "9") (term "1,1,0,1,1,0,1,0,1,0,1,0"))
      (rule "times_zero_2" (formula "9") (term "1,1,1,0,1,1,0,1,0,1,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "1,1,0,1,1,0,1,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,1,0,0,1,0,1,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,1,1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,0,0,1,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0,1,0,1,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,1,0,1,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,1,1,0,1,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1,1,0,1,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,1,1,0,1,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0,1,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,0,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,0,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "0,0,1,0,0,1,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,0,1,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,0,0,1,0,1,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,1,0,1,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,1,0,1,0,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,1,1,0,1,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,1,0,1,0,1,0,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,1,0,1,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,1,0,1,0,1,0,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,1,1,0,1,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,1,0,1,0,1,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,0,0,1,0,1,0,1,0"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_imp2or" (formula "14") (term "0,1,1,1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
      (rule "nnf_imp2or" (formula "9") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "nnf_notAnd" (formula "9") (term "1,0,1,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,1,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,1,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,1,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0,0,1,0"))
      (rule "nnf_notAll" (formula "9") (term "1,1,0,1,0"))
      (rule "nnf_notAnd" (formula "14") (term "0,0,1,1,1,1,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1,1,1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1,1,1,1,0,0,1"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1,1,1,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,1,1,1,0,0,1"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,1,1,1,0,0,1"))
      (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1,1,1,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1,1,1,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,1,1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1,1,1,1,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1,1,1,1,0,0,1"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,1,1,1,1,0,0,1"))
      (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,1,1,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,1,1,1,0,0,1"))
      (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1,1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "9") (term "0,0,1,1,0,1,0"))
      (rule "nnf_notOr" (formula "9") (term "0,1,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "commute_or_2" (formula "11") (term "0"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "10") (ifseqformula "4"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "11"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "12"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "12"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "12"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "11"))
      (rule "notLeft" (formula "10"))
      (rule "nonNull" (formula "12") (inst "i=i"))
      (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "greater_literals" (formula "12") (term "0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "14"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "11") (inst "i=i"))
      (rule "greater_literals" (formula "11") (term "0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "sub_literals" (formula "11") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "11"))
      (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "14"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "10") (inst "i=i"))
      (rule "greater_literals" (formula "10") (term "0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "sub_literals" (formula "10") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "10"))
      (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "14"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
      (rule "commute_or" (formula "13") (term "0,0"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "11") (term "0"))
      (rule "commute_or_2" (formula "10") (term "0"))
      (rule "throwUnfold" (formula "25") (term "1") (inst "#v0=n"))
      (rule "variableDeclarationAssign" (formula "25") (term "1"))
      (rule "variableDeclaration" (formula "25") (term "1") (newnames "n"))
      (rule "commute_or" (formula "12") (term "0,0"))
      (rule "commute_or" (formula "11") (term "0,0"))
      (rule "commute_or" (formula "10") (term "0,0"))
      (rule "commute_and_2" (formula "9") (term "0,1,1,0,1,0"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "msg.length < 0 FALSE"
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "14") (term "1") (inst "#v0=x_arr_arr_1") (userinteraction))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_arr_arr_1") (userinteraction))
      (rule "variableDeclarationAssign" (formula "14") (term "1") (userinteraction))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "length_1") (userinteraction))
      (rule "assignment" (formula "14") (term "1") (userinteraction))
      (rule "methodBodyExpand" (formula "14") (term "1,1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>") (userinteraction))
      (rule "variableDeclaration" (formula "14") (term "1,1,1") (newnames "newObject") (userinteraction))
      (builtin "One Step Simplification" (formula "14"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "14") (term "1") (inst "#v0=x_arr_arr_2") (userinteraction))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_arr_arr_2") (userinteraction))
      (rule "variableDeclarationAssign" (formula "14") (term "1") (userinteraction))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "length_2") (userinteraction))
      (rule "assignment" (formula "14") (term "1") (userinteraction))
      (builtin "One Step Simplification" (formula "14"))
      (rule "allocateInstanceWithLength" (formula "14") (userinteraction))
      (rule "blockEmpty" (formula "15") (term "1,1") (userinteraction))
      (rule "assignment" (formula "15") (term "1,1") (userinteraction))
      (rule "methodCall" (formula "15") (term "1,1,1") (userinteraction))
      (branch "Normal Execution (newObject != null )"
         (rule "methodBodyExpand" (formula "16") (term "1,1,1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>") (userinteraction))
         (builtin "One Step Simplification" (formula "15"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "assignment_write_attribute_this" (formula "16") (term "1") (userinteraction))
         (rule "methodCallWithinClass" (formula "16") (term "1,1") (userinteraction))
         (rule "methodBodyExpand" (formula "16") (term "1,1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0") (userinteraction))
         (rule "arrayInitialisation" (formula "16") (term "1,1,1") (userinteraction))
         (rule "methodCallEmpty" (formula "16") (term "1,1,1,1") (userinteraction))
         (rule "blockEmpty" (formula "16") (term "1,1,1,1") (userinteraction))
         (rule "assignment_write_attribute_this" (formula "16") (term "1,1,1,1") (userinteraction))
         (rule "methodCallReturnIgnoreResult" (formula "16") (term "1,1,1,1,1") (userinteraction))
         (rule "blockEmpty" (formula "16") (term "1,1,1,1,1") (userinteraction))
         (rule "methodCallReturn" (formula "16") (term "1,1,1,1,1") (userinteraction))
         (rule "assignment" (formula "16") (term "1,1,1,1,1") (userinteraction))
         (rule "methodCallEmpty" (formula "16") (term "1,1,1,1,1,1") (userinteraction))
         (rule "blockEmpty" (formula "16") (term "1,1,1,1,1,1") (userinteraction))
         (rule "assignment" (formula "16") (term "1,1,1,1,1,1") (userinteraction))
         (rule "blockEmpty" (formula "16") (term "1,1,1,1,1,1,1") (userinteraction))
         (rule "assignment" (formula "16") (term "1,1,1,1,1,1,1") (userinteraction))
         (builtin "One Step Simplification" (formula "16"))
         (rule "for_to_while" (formula "16") (term "1") (inst "#innerLabel=_label2") (inst "#outerLabel=_label3") (userinteraction))
         (rule "variableDeclarationAssign" (formula "16") (term "1") (userinteraction))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "i_1") (userinteraction))
         (rule "assignment" (formula "16") (term "1") (userinteraction))
         (builtin "One Step Simplification" (formula "16"))
         (rule "elim_double_block_3" (formula "16") (term "1") (userinteraction))
         (builtin "Loop Invariant" (formula "16") (newnames "variant_0,b_0,heapBefore_LOOP_0,i_1Before_LOOP,i_1_0,heap_After_LOOP_0,anon_heap_LOOP_0,o,f"))
         (branch "Invariant Initially Valid"
            (builtin "One Step Simplification" (formula "9"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "2")))
            (builtin "One Step Simplification" (formula "16"))
            (rule "wellFormedStorePrimitive" (formula "16") (term "1"))
            (rule "leq_literals" (formula "16") (term "0,1,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "eqSymm" (formula "9"))
            (rule "eqSymm" (formula "10") (term "0,1,0,1,0"))
            (rule "eqSymm" (formula "10") (term "0,1,0,0,1,0"))
            (opengoal " ")
         )
         (branch "Body Preserves Invariant"
            (builtin "One Step Simplification" (formula "13"))
            (opengoal " ")
         )
         (branch "Use Case"
            (builtin "One Step Simplification" (formula "13"))
            (opengoal " ")
         )
      )
      (branch "Null Reference (newObject = null)"
         (builtin "One Step Simplification" (formula "10"))
         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "notLeft" (formula "2"))
         (rule "close" (formula "14") (ifseqformula "1"))
      )
   )
)
(branch "Null Reference (_msg = null)"
   (rule "nonNull" (formula "11") (inst "i=i") (userinteraction))
   (builtin "One Step Simplification" (formula "9"))
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "greater_literals" (formula "11") (term "0,1"))
   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "1")))
   (rule "closeFalse" (formula "11"))
)
)

}
