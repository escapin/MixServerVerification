\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Jul 30 08:36:55 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sat Jul 30 08:36:55 CEST 2016
name=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:reverseByteArrOfInt2([B,int)].JML model_behavior operation contract.0
contract=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:reverseByteArrOfInt2([B,int)].JML model_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))

(autoModeTime "5381")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "a,value,result,heapAtPre,heapBefore,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "8"))
(builtin "One Step Simplification" (formula "9"))
(builtin "Evaluate Query" (formula "9") (term "0") (newnames "b,callee,queryResult,res_byteArrayToInt"))
(rule "variableDeclaration" (formula "1") (term "1,0") (newnames "queryResult") (userinteraction))
(rule "notLeft" (formula "1") (userinteraction))
(builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_byteArrayToInt,result_0,exc,heapAfter_byteArrayToInt,anon_heap_byteArrayToInt") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0"))
(branch "Post (byteArrayToInt)"
   (rule "assignment" (formula "10") (term "1,1") (userinteraction))
   (rule "methodCallEmpty" (formula "10") (term "1,1,1") (userinteraction))
   (rule "emptyModality" (formula "10") (term "1,1,1") (userinteraction))
   (builtin "One Step Simplification" (formula "10"))
   (rule "notRight" (formula "10") (userinteraction))
   (builtin "One Step Simplification" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "14") (term "0") (userinteraction))
   (builtin "Evaluate Query" (formula "12") (term "1,0,0,0,1") (newnames "b_0,callee,queryResult_0,res_unsign"))
   (rule "notLeft" (formula "1") (userinteraction))
   (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt,int_select(heapAfter_byteArrayToInt,a,arr(Z(0(#)))))_0_1" (formula "12") (term "1,0,0,0,1") (userinteraction))
   (builtin "Evaluate Query" (formula "12") (term "1,1,0,0,1") (newnames "b_1,callee,queryResult_0,res_unsign_0"))
   (rule "notLeft" (formula "1") (userinteraction))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "queryResult_0") (userinteraction))
   (builtin "Evaluate Query" (formula "12") (term "1,1,0,1") (newnames "b_2,callee,queryResult_1,res_unsign_1"))
   (rule "notLeft" (formula "1") (userinteraction))
   (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt,int_select(heapAfter_byteArrayToInt,a,arr(Z(1(#)))))_0_2" (formula "12") (term "1,1,0,0,1") (userinteraction))
   (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt,int_select(heapAfter_byteArrayToInt,a,arr(Z(2(#)))))_0_3" (formula "12") (term "1,1,0,1") (userinteraction))
   (builtin "Evaluate Query" (formula "12") (term "1,1") (newnames "b_3,callee,queryResult_1,res_unsign_2"))
   (rule "notLeft" (formula "1") (userinteraction))
   (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt,int_select(heapAfter_byteArrayToInt,a,arr(Z(3(#)))))_0_4" (formula "12") (term "1,1") (userinteraction))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "queryResult_1") (userinteraction))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "queryResult_1_1") (userinteraction))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "queryResult_0_1") (userinteraction))
   (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_unsign,result_1,exc_0") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
   (branch "Post (unsign)"
      (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_unsign_0,result_2,exc_1") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
      (branch "Post (unsign)"
         (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_unsign_1,result_3,exc_2") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
         (branch "Post (unsign)"
            (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_unsign_2,result_4,exc_3") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
            (branch "Post (unsign)"
               (builtin "One Step Simplification" (formula "17"))
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "15"))
               (builtin "One Step Simplification" (formula "14"))
               (builtin "One Step Simplification" (formula "13"))
               (builtin "One Step Simplification" (formula "4"))
               (builtin "One Step Simplification" (formula "20"))
               (builtin "One Step Simplification" (formula "19"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "4"))
               (rule "translateJavaAddInt" (formula "11") (term "1"))
               (rule "translateJavaAddInt" (formula "15") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "14") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "13") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "12") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "11") (term "0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "1,0,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "0,0,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "1,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "0,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,0,1"))
               (rule "translateJavaAddInt" (formula "11") (term "0,0,1"))
               (rule "replace_int_MAX" (formula "6") (term "1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
               (rule "mul_literals" (formula "11") (term "0,0,0,0,1"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "13"))
               (rule "eqSymm" (formula "25"))
               (rule "eqSymm" (formula "20") (term "0,0,1"))
               (rule "eqSymm" (formula "23") (term "0,0,1"))
               (rule "eqSymm" (formula "22") (term "0,0,1"))
               (rule "eqSymm" (formula "21") (term "0,0,1"))
               (rule "eqSymm" (formula "19"))
               (rule "eqSymm" (formula "17"))
               (rule "eqSymm" (formula "15"))
               (rule "eqSymm" (formula "13"))
               (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1"))
               (rule "polySimp_addComm0" (formula "19") (term "1,0"))
               (rule "polySimp_addComm0" (formula "17") (term "1,0"))
               (rule "polySimp_addComm0" (formula "15") (term "1,0"))
               (rule "polySimp_addComm0" (formula "13") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "assignment" (formula "23") (term "1"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "assignment" (formula "22") (term "1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "assignment" (formula "21") (term "1"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
               (rule "polySimp_homoEq" (formula "11"))
               (rule "polySimp_addComm1" (formula "11") (term "0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
               (rule "polySimp_sepPosMonomial" (formula "11"))
               (rule "polySimp_mulComm0" (formula "11") (term "1"))
               (rule "polySimp_rightDist" (formula "11") (term "1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
               (rule "polySimp_rightDist" (formula "11") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1"))
               (rule "polySimp_mulAssoc" (formula "11") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1"))
               (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1"))
               (rule "applyEqRigid" (formula "20") (term "0,0,0,1") (ifseqformula "11"))
               (rule "polySimp_homoEq" (formula "20") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,1,0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,1"))
               (rule "polySimp_sepPosMonomial" (formula "20") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "20") (term "1,0,0,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0"))
               (rule "mul_literals" (formula "15") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0"))
               (rule "mul_literals" (formula "13") (term "1,0,0"))
               (rule "pullOutSelect" (formula "19") (term "2,0") (inst "selectSK=arr_0"))
               (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "19"))
               (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "19"))
               (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")) (ifInst ""  (formula "3")))
               (rule "applyEqReverse" (formula "20") (term "2,0") (ifseqformula "19"))
               (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "19"))
               (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "19"))
               (rule "hideAuxiliaryEq" (formula "19"))
               (rule "pullOutSelect" (formula "17") (term "2,0") (inst "selectSK=arr_1"))
               (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "17"))
               (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "17"))
               (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "25")) (ifInst ""  (formula "3")))
               (rule "applyEqReverse" (formula "18") (term "2,0") (ifseqformula "17"))
               (rule "applyEqReverse" (formula "18") (term "0,0,0") (ifseqformula "17"))
               (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "17"))
               (rule "hideAuxiliaryEq" (formula "17"))
               (rule "pullOutSelect" (formula "15") (term "2,0") (inst "selectSK=arr_2"))
               (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "15"))
               (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "25")) (ifInst ""  (formula "3")))
               (rule "applyEqReverse" (formula "16") (term "2,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "16") (term "1,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "15"))
               (rule "hideAuxiliaryEq" (formula "15"))
               (rule "pullOutSelect" (formula "13") (term "2,0") (inst "selectSK=arr_3"))
               (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "13"))
               (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "25")) (ifInst ""  (formula "3")))
               (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
               (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEqReverse" (formula "14") (term "0,0,0") (ifseqformula "13"))
               (rule "hideAuxiliaryEq" (formula "13"))
               (rule "Contract_axiom_for_isByteArrOfInt_in_MessageTools" (formula "7") (term "0"))
               (rule "translateJavaCastByte" (formula "7") (term "1,1,0,1,1,1,1"))
               (rule "translateJavaCastByte" (formula "7") (term "1,1,1,1,1,1,1"))
               (rule "translateJavaCastByte" (formula "7") (term "1,1,0,1,1"))
               (rule "translateJavaCastByte" (formula "7") (term "1,1,0,1,1,1"))
               (rule "translateJavaMod" (formula "7") (term "1,1,0,1,1,1,1"))
               (rule "translateJavaMod" (formula "7") (term "1,1,1,1,1,1,1"))
               (rule "translateJavaDivInt" (formula "7") (term "0,0,1,1,0,1,1"))
               (rule "translateJavaDivInt" (formula "7") (term "0,1,1,0,1,1,1"))
               (rule "translateJavaDivInt" (formula "7") (term "0,1,1,0,1,1,1,1"))
               (rule "translateJavaDivInt" (formula "7") (term "0,1,1,0,1,1"))
               (rule "translateJavaMod" (formula "7") (term "1,1,0,1,1,1"))
               (rule "translateJavaMod" (formula "7") (term "1,1,0,1,1"))
               (rule "translateJavaDivInt" (formula "7") (term "0,0,1,1,0,1,1,1"))
               (rule "translateJavaDivInt" (formula "7") (term "0,0,0,1,1,0,1,1"))
               (rule "replace_known_left" (formula "7") (term "0,1,1,1,1,1") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")) (ifInst ""  (formula "25")) (ifInst ""  (formula "2")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "10"))
               (rule "applyEq" (formula "18") (term "2,0") (ifseqformula "11"))
               (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "11"))
               (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "8"))
               (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "9"))
               (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "9"))
               (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "10"))
               (rule "applyEq" (formula "20") (term "2,0") (ifseqformula "10"))
               (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "8"))
               (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "9"))
               (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "8"))
               (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "10"))
               (rule "jmod_axiom" (formula "11") (term "1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
               (rule "jmod_axiom" (formula "18") (term "2,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,2,0"))
               (rule "jmod_axiom" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
               (rule "jmod_axiom" (formula "18") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
               (rule "Definition_axiom_for_isByteArrOfInt_in_verif_utils_MessageTools" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "7")))
               (rule "translateJavaCastByte" (formula "12") (term "1,1,0,0"))
               (rule "translateJavaDivInt" (formula "12") (term "0,0,1,1,0"))
               (rule "translateJavaCastByte" (formula "12") (term "1,0,0,0"))
               (rule "translateJavaCastByte" (formula "12") (term "1,1"))
               (rule "translateJavaDivInt" (formula "12") (term "0,1,1,0,0"))
               (rule "translateJavaMod" (formula "12") (term "0,1,1,0"))
               (rule "translateJavaDivInt" (formula "12") (term "0,1,0,0,0"))
               (rule "translateJavaMod" (formula "12") (term "1,1"))
               (rule "translateJavaDivInt" (formula "12") (term "0,0,1,1,0,0"))
               (rule "translateJavaCastByte" (formula "12") (term "1,1,0"))
               (rule "translateJavaDivInt" (formula "12") (term "0,0,1,0,0,0"))
               (rule "translateJavaMod" (formula "12") (term "1,1,0,0"))
               (rule "translateJavaMod" (formula "12") (term "1,0,0,0"))
               (rule "translateJavaDivInt" (formula "12") (term "0,0,0,1,0,0,0"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
               (rule "eqSymm" (formula "12"))
               (rule "jmod_axiom" (formula "12") (term "0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "methodCallEmpty" (formula "27") (term "1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "methodCallEmpty" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "methodCallEmpty" (formula "25") (term "1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "methodCallEmpty" (formula "24") (term "1"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "emptyModality" (formula "27") (term "1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "notRight" (formula "27"))
               (rule "eqSymm" (formula "1"))
               (rule "applyEq" (formula "24") (term "1") (ifseqformula "1"))
               (rule "emptyModality" (formula "27") (term "1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "notRight" (formula "27"))
               (rule "eqSymm" (formula "1"))
               (rule "applyEq" (formula "23") (term "1") (ifseqformula "1"))
               (rule "emptyModality" (formula "27") (term "1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "notRight" (formula "27"))
               (rule "eqSymm" (formula "1"))
               (rule "applyEq" (formula "22") (term "1") (ifseqformula "1"))
               (rule "emptyModality" (formula "27") (term "1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "notRight" (formula "27"))
               (rule "polySimp_homoEq" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "polySimp_sepNegMonomial" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "applyEq" (formula "21") (term "1") (ifseqformula "1"))
               (rule "jdiv_axiom" (formula "12") (term "0,0,0,1"))
               (rule "eqSymm" (formula "12"))
               (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "eqSymm" (formula "12"))
               (rule "applyEq" (formula "24") (term "0,2,0") (ifseqformula "12"))
               (rule "applyEq" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "28") (term "0,0,0,2,0") (ifseqformula "12"))
               (rule "applyEq" (formula "24") (term "0,1,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "28") (term "0,0,0,1,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "24") (term "0,0,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "26") (term "0,0,0,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "26") (term "0,0,1,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "22") (term "0,0,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "22") (term "0,1,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "22") (term "0,1,2,0") (ifseqformula "12"))
               (rule "applyEq" (formula "26") (term "0,0,2,0") (ifseqformula "12"))
               (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "12"))
               (rule "applyEq" (formula "13") (term "0,0,0,1") (ifseqformula "12"))
               (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "12"))
               (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "12"))
               (rule "arrayLengthIsAShort" (formula "11") (term "0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "arrayLengthNotNegative" (formula "11") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
               (rule "leq_literals" (formula "11") (term "0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "div_axiom" (formula "12") (term "1") (inst "quotient=quotient_0"))
               (rule "qeq_literals" (formula "12") (term "0,1,1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "equal_literals" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "mul_literals" (formula "12") (term "1,1,1"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "polySimp_addComm1" (formula "14") (term "1"))
               (rule "add_literals" (formula "14") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "13"))
               (rule "inEqSimp_homoInEq1" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "applyEq" (formula "27") (term "0,0,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "27") (term "0,1,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "31") (term "0,0,0,2,0") (ifseqformula "12"))
               (rule "applyEq" (formula "31") (term "0,0,0,1,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "25") (term "0,1,1,0") (ifseqformula "12"))
               (rule "polySimp_addComm1" (formula "25") (term "1,0"))
               (rule "applyEq" (formula "29") (term "0,0,0,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "27") (term "0,2,0") (ifseqformula "12"))
               (rule "applyEq" (formula "29") (term "0,0,2,0") (ifseqformula "12"))
               (rule "applyEq" (formula "25") (term "0,1,2,0") (ifseqformula "12"))
               (rule "polySimp_addComm0" (formula "25") (term "2,0"))
               (rule "applyEq" (formula "31") (term "0,0,0,0,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "29") (term "0,0,1,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "25") (term "0,0,0,0") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
               (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "12"))
               (rule "polySimp_addComm0" (formula "19") (term "1"))
               (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "12"))
               (rule "applyEq" (formula "17") (term "0,0,1") (ifseqformula "12"))
               (rule "applyEq" (formula "16") (term "0,0,0,1") (ifseqformula "12"))
               (rule "jmod_axiom" (formula "27") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
               (rule "jmod_axiom" (formula "27") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "1,0"))
               (rule "jmod_axiom" (formula "27") (term "2,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,2,0"))
               (rule "jmod_axiom" (formula "18") (term "1"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1"))
               (rule "polySimp_rightDist" (formula "14") (term "1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
               (rule "mul_literals" (formula "14") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "13"))
               (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0"))
               (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
               (rule "leq_literals" (formula "25") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "polySimp_homoEq" (formula "25"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0"))
               (rule "polySimp_sepNegMonomial" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
               (rule "polySimp_elimOne" (formula "25") (term "0"))
               (rule "applyEq" (formula "33") (term "0") (ifseqformula "25"))
               (rule "polySimp_homoEq" (formula "33"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "0,0,0,1,0"))
               (rule "polySimp_mulAssoc" (formula "33") (term "0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
               (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "25"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "25"))
               (rule "inEqSimp_homoInEq0" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "0,0,0,1,0"))
               (rule "polySimp_mulAssoc" (formula "14") (term "0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
               (rule "applyEq" (formula "9") (term "0") (ifseqformula "25"))
               (rule "applyEq" (formula "10") (term "0") (ifseqformula "25"))
               (rule "inEqSimp_homoInEq0" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "0,0,0,1,0"))
               (rule "polySimp_mulAssoc" (formula "10") (term "0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
               (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "25"))
               (rule "applyEq" (formula "13") (term "0") (ifseqformula "25"))
               (rule "inEqSimp_homoInEq1" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "0,0,0,1,0"))
               (rule "polySimp_mulAssoc" (formula "13") (term "0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "13") (term "1,0,0,0,0,0"))
               (rule "times_zero_1" (formula "13") (term "0,0,0,0,0"))
               (rule "add_zero_left" (formula "13") (term "0,0,0,0"))
               (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "25"))
               (rule "polySimp_addAssoc" (formula "19") (term "1"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,0,0,1"))
               (rule "add_literals" (formula "19") (term "1,0,0,0,0,1"))
               (rule "times_zero_1" (formula "19") (term "0,0,0,0,1"))
               (rule "add_zero_left" (formula "19") (term "0,0,0,1"))
               (rule "polySimp_sepPosMonomial" (formula "33"))
               (rule "polySimp_mulComm0" (formula "33") (term "1"))
               (rule "polySimp_rightDist" (formula "33") (term "1"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
               (rule "polySimp_rightDist" (formula "33") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1"))
               (rule "polySimp_rightDist" (formula "14") (term "1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
               (rule "polySimp_rightDist" (formula "14") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "14") (term "0,0,1"))
               (rule "mul_literals" (formula "14") (term "0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1"))
               (rule "polySimp_elimOne" (formula "14") (term "1,0,0,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1"))
               (rule "polySimp_rightDist" (formula "10") (term "1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
               (rule "polySimp_rightDist" (formula "10") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
               (rule "polySimp_elimOne" (formula "10") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "10") (term "0,0,0,1"))
               (rule "mul_literals" (formula "10") (term "0,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1"))
               (rule "polySimp_rightDist" (formula "13") (term "1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
               (rule "polySimp_rightDist" (formula "13") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
               (rule "polySimp_mulAssoc" (formula "13") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "13") (term "0,0,1"))
               (rule "elimGcdEq" (formula "33") (inst "elimGcdRightDiv=add(add(quotient_0,
        mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))),
    mul(res_unsign_0, Z(neglit(6(5(2(#)))))))") (inst "elimGcdLeftDiv=res_unsign_1") (inst "elimGcd=Z(6(5(2(#))))"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,0,0"))
               (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
               (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
               (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "33") (term "0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "33") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,1,0"))
               (rule "add_literals" (formula "33") (term "1,1,0,1,0"))
               (rule "times_zero_1" (formula "33") (term "1,0,1,0"))
               (rule "add_zero_right" (formula "33") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,1"))
               (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "33") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "33") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0,0"))
               (rule "add_literals" (formula "33") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "33") (term "0,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "33") (term "1,0,0"))
               (rule "add_zero_right" (formula "33") (term "0,0"))
               (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0"))
               (rule "add_literals" (formula "33") (term "1,0,0"))
               (rule "times_zero_1" (formula "33") (term "0,0"))
               (rule "qeq_literals" (formula "33") (term "0"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "33") (term "1,0,0"))
               (rule "add_zero_right" (formula "33") (term "0,0"))
               (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0"))
               (rule "add_literals" (formula "33") (term "1,0,0"))
               (rule "times_zero_1" (formula "33") (term "0,0"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "polyDiv_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=mul(res_unsign_1, Z(neglit(1(#))))"))
               (rule "equal_literals" (formula "12") (term "0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0"))
               (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,0"))
               (rule "polySimp_homoEq" (formula "12"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0"))
               (rule "polySimp_sepPosMonomial" (formula "12"))
               (rule "polySimp_mulComm0" (formula "12") (term "1"))
               (rule "polySimp_rightDist" (formula "12") (term "1"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "12") (term "0,1"))
               (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "12"))
               (rule "polySimp_mulComm0" (formula "9") (term "0"))
               (rule "polySimp_rightDist" (formula "9") (term "0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "9") (term "1,0,0,0,0,0"))
               (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "12"))
               (rule "polySimp_mulComm0" (formula "13") (term "0"))
               (rule "polySimp_rightDist" (formula "13") (term "0"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
               (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "12"))
               (rule "polySimp_mulComm0" (formula "14") (term "0"))
               (rule "polySimp_rightDist" (formula "14") (term "0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
               (rule "applyEq" (formula "33") (term "0") (ifseqformula "12"))
               (rule "polySimp_homoEq" (formula "33"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
               (rule "polySimp_pullOutFactor3" (formula "33") (term "0,0,0,0"))
               (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "12"))
               (rule "polySimp_mulComm0" (formula "10") (term "0"))
               (rule "polySimp_rightDist" (formula "10") (term "0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0"))
               (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "12"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "15") (term "1,0,0,0,0,0,0"))
               (rule "applyEq" (formula "27") (term "1") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "25") (term "0,1,1") (ifseqformula "12"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1"))
               (rule "polySimp_mulAssoc" (formula "25") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "1"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1"))
               (rule "polySimp_addComm1" (formula "25") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,0,0,1"))
               (rule "add_literals" (formula "25") (term "1,0,0,0,0,1"))
               (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "12"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1"))
               (rule "polySimp_mulAssoc" (formula "19") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "19") (term "1"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
               (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "12"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
               (rule "polySimp_rightDist" (formula "1") (term "1,1"))
               (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1"))
               (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "23") (term "0,1,1") (ifseqformula "12"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
               (rule "polySimp_rightDist" (formula "23") (term "1,1"))
               (rule "polySimp_mulAssoc" (formula "23") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "23") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "23") (term "1"))
               (rule "polySimp_addComm1" (formula "23") (term "0,1"))
               (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
               (rule "polySimp_sepNegMonomial" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
               (rule "polySimp_elimOne" (formula "33") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polyDiv_pullOut" (formula "10") (term "0,0") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(6(5(2(#))))))"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0,0"))
               (rule "equal_literals" (formula "10") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0"))
               (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0"))
               (rule "polySimp_rightDist" (formula "10") (term "0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "times_zero_1" (formula "10") (term "1,0"))
               (rule "add_zero_right" (formula "10") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polyDiv_pullOut" (formula "14") (term "0,0") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(6(5(2(#))))))"))
               (rule "equal_literals" (formula "14") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0"))
               (rule "polySimp_rightDist" (formula "14") (term "0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
               (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "times_zero_1" (formula "14") (term "1,0"))
               (rule "add_zero_right" (formula "14") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
               (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(6(5(2(#))))))"))
               (rule "equal_literals" (formula "13") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "0"))
               (rule "polySimp_rightDist" (formula "13") (term "0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
               (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "times_zero_1" (formula "13") (term "1,0"))
               (rule "add_zero_right" (formula "13") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "polyDiv_pullOut" (formula "9") (term "0,0") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(6(5(2(#))))))"))
               (rule "equal_literals" (formula "9") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0"))
               (rule "polySimp_rightDist" (formula "9") (term "0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "times_zero_1" (formula "9") (term "1,0"))
               (rule "add_zero_right" (formula "9") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "polyDiv_pullOut" (formula "33") (term "0") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(6(5(2(#))))))"))
               (rule "equal_literals" (formula "33") (term "0,0"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
               (rule "polySimp_homoEq" (formula "33"))
               (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "33") (term "1,1,0,0,0,1,0"))
               (rule "times_zero_1" (formula "33") (term "1,0,0,0,1,0"))
               (rule "add_zero_right" (formula "33") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "times_zero_1" (formula "33") (term "1,0"))
               (rule "add_zero_right" (formula "33") (term "0"))
               (rule "polySimp_sepNegMonomial" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
               (rule "polySimp_elimOne" (formula "33") (term "0"))
               (rule "polyDiv_pullOut" (formula "23") (term "0,1,1") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(6(5(2(#))))))"))
               (rule "equal_literals" (formula "23") (term "0,0,1,1"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,1"))
               (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,1"))
               (rule "add_zero_right" (formula "23") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
               (rule "polySimp_rightDist" (formula "23") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "23") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "23") (term "1"))
               (rule "polySimp_addComm1" (formula "23") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "23") (term "1"))
               (rule "add_literals" (formula "23") (term "1,1,1"))
               (rule "times_zero_1" (formula "23") (term "1,1"))
               (rule "add_zero_right" (formula "23") (term "1"))
               (rule "polyDiv_pullOut" (formula "2") (term "1,1") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(6(5(2(#))))))"))
               (rule "equal_literals" (formula "2") (term "0,1,1"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,1,1"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,1,1"))
               (rule "times_zero_1" (formula "2") (term "1,0,0,1,1"))
               (rule "add_zero_right" (formula "2") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "2") (term "1"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(6(5(2(#))))))"))
               (rule "equal_literals" (formula "1") (term "0,0,1,1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
               (rule "polySimp_rightDist" (formula "1") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "1"))
               (rule "add_literals" (formula "1") (term "1,1,1"))
               (rule "times_zero_1" (formula "1") (term "1,1"))
               (rule "add_zero_right" (formula "1") (term "1"))
               (rule "polyDiv_pullOut" (formula "19") (term "0,1,1") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(6(5(2(#))))))"))
               (rule "equal_literals" (formula "19") (term "0,0,1,1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,1"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,1"))
               (rule "add_zero_right" (formula "19") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "19") (term "1"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "19") (term "1"))
               (rule "add_literals" (formula "19") (term "1,1,1"))
               (rule "times_zero_1" (formula "19") (term "1,1"))
               (rule "add_zero_right" (formula "19") (term "1"))
               (rule "polyDiv_pullOut" (formula "25") (term "0,1,1") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(6(5(2(#))))))"))
               (rule "equal_literals" (formula "25") (term "0,0,1,1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "25") (term "1,1,0,0,0,1,1"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,1"))
               (rule "add_zero_right" (formula "25") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "1"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "25") (term "1"))
               (rule "add_literals" (formula "25") (term "1,1,1"))
               (rule "times_zero_1" (formula "25") (term "1,1"))
               (rule "add_zero_right" (formula "25") (term "1"))
               (rule "polyDiv_pullOut" (formula "27") (term "1,1") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(6(5(2(#))))))"))
               (rule "equal_literals" (formula "27") (term "0,1,1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1,1"))
               (rule "add_literals" (formula "27") (term "1,1,0,0,1,1"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,1,1"))
               (rule "add_zero_right" (formula "27") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "27") (term "1"))
               (rule "polyDiv_pullOut" (formula "15") (term "0,1,0,0") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(6(5(2(#))))))"))
               (rule "equal_literals" (formula "15") (term "0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,0,0"))
               (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
               (rule "add_literals" (formula "15") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0"))
               (rule "polyDiv_pullOut" (formula "12") (term "1,1") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(6(5(2(#))))))"))
               (rule "equal_literals" (formula "12") (term "0,1,1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,1,1"))
               (rule "add_literals" (formula "12") (term "1,1,0,0,1,1"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,1,1"))
               (rule "add_zero_right" (formula "12") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "12") (term "1"))
               (rule "polyDiv_pullOut" (formula "12") (term "1,0,1") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "equal_literals" (formula "12") (term "0,1,0,1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1,0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,1,0,1"))
               (rule "add_literals" (formula "12") (term "1,1,0,0,1,0,1"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,1"))
               (rule "add_zero_right" (formula "12") (term "0,0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
               (rule "polyDiv_pullOut" (formula "15") (term "0,1,0,0") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "equal_literals" (formula "15") (term "0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,0,0"))
               (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
               (rule "add_literals" (formula "15") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0"))
               (rule "polyDiv_pullOut" (formula "27") (term "1,0,1") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "equal_literals" (formula "27") (term "0,1,0,1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1,0,1"))
               (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,1"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,1"))
               (rule "add_zero_right" (formula "27") (term "0,0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
               (rule "polyDiv_pullOut" (formula "25") (term "0,1,1") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "equal_literals" (formula "25") (term "0,0,1,1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "25") (term "1,1,0,0,0,1,1"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,1"))
               (rule "add_zero_right" (formula "25") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "1"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "25") (term "1"))
               (rule "add_literals" (formula "25") (term "1,1,1"))
               (rule "times_zero_1" (formula "25") (term "1,1"))
               (rule "add_zero_right" (formula "25") (term "1"))
               (rule "polyDiv_pullOut" (formula "19") (term "0,1,1") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "equal_literals" (formula "19") (term "0,0,1,1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,1"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,1"))
               (rule "add_zero_right" (formula "19") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "19") (term "1"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "19") (term "1"))
               (rule "add_literals" (formula "19") (term "1,1,1"))
               (rule "times_zero_1" (formula "19") (term "1,1"))
               (rule "add_zero_right" (formula "19") (term "1"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "equal_literals" (formula "1") (term "0,0,1,1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
               (rule "polySimp_rightDist" (formula "1") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "1"))
               (rule "add_literals" (formula "1") (term "1,1,1"))
               (rule "times_zero_1" (formula "1") (term "1,1"))
               (rule "add_zero_right" (formula "1") (term "1"))
               (rule "polyDiv_pullOut" (formula "2") (term "1,0,1") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "equal_literals" (formula "2") (term "0,1,0,1"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,1,0,1"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,1"))
               (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,1"))
               (rule "add_zero_right" (formula "2") (term "0,0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "polyDiv_pullOut" (formula "23") (term "0,1,1") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "equal_literals" (formula "23") (term "0,0,1,1"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1"))
               (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,1"))
               (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,1"))
               (rule "add_zero_right" (formula "23") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
               (rule "polySimp_rightDist" (formula "23") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "23") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "23") (term "1"))
               (rule "polySimp_addComm1" (formula "23") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "23") (term "1"))
               (rule "add_literals" (formula "23") (term "1,1,1"))
               (rule "times_zero_1" (formula "23") (term "1,1"))
               (rule "add_zero_right" (formula "23") (term "1"))
               (rule "polyDiv_pullOut" (formula "33") (term "0") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "equal_literals" (formula "33") (term "0,0"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
               (rule "polySimp_homoEq" (formula "33"))
               (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "33") (term "1,1,0,0,0,1,0"))
               (rule "times_zero_1" (formula "33") (term "1,0,0,0,1,0"))
               (rule "add_zero_right" (formula "33") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "times_zero_1" (formula "33") (term "1,0"))
               (rule "add_zero_right" (formula "33") (term "0"))
               (rule "polySimp_sepNegMonomial" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
               (rule "polySimp_elimOne" (formula "33") (term "0"))
               (rule "polyDiv_pullOut" (formula "9") (term "0,0") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0,0"))
               (rule "equal_literals" (formula "9") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0"))
               (rule "polySimp_rightDist" (formula "9") (term "0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "times_zero_1" (formula "9") (term "1,0"))
               (rule "add_zero_right" (formula "9") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,0"))
               (rule "equal_literals" (formula "13") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "0"))
               (rule "polySimp_rightDist" (formula "13") (term "0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
               (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "times_zero_1" (formula "13") (term "1,0"))
               (rule "add_zero_right" (formula "13") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "polyDiv_pullOut" (formula "14") (term "0,0") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "equal_literals" (formula "14") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0"))
               (rule "polySimp_rightDist" (formula "14") (term "0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
               (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "times_zero_1" (formula "14") (term "1,0"))
               (rule "add_zero_right" (formula "14") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
               (rule "polyDiv_pullOut" (formula "10") (term "0,0") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "equal_literals" (formula "10") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0"))
               (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0"))
               (rule "polySimp_rightDist" (formula "10") (term "0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "times_zero_1" (formula "10") (term "1,0"))
               (rule "add_zero_right" (formula "10") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polyDiv_pullOut" (formula "10") (term "0,0") (inst "polyDivCoeff=quotient_0"))
               (rule "equal_literals" (formula "10") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0"))
               (rule "polySimp_addComm0" (formula "10") (term "1,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "10") (term "1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "10") (term "0,0,1,1,0"))
               (rule "add_zero_left" (formula "10") (term "0,1,1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0"))
               (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polyDiv_pullOut" (formula "14") (term "0,0") (inst "polyDivCoeff=quotient_0"))
               (rule "equal_literals" (formula "14") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0"))
               (rule "polySimp_addComm0" (formula "14") (term "1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "14") (term "1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "14") (term "0,0,1,1,0"))
               (rule "add_zero_left" (formula "14") (term "0,1,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
               (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
               (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=quotient_0"))
               (rule "equal_literals" (formula "13") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "0"))
               (rule "polySimp_addComm0" (formula "13") (term "1,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "13") (term "1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "13") (term "0,0,1,1,0"))
               (rule "add_zero_left" (formula "13") (term "0,1,1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "0"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
               (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0"))
               (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0"))
               (rule "add_literals" (formula "13") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "13") (term "0,0,0"))
               (rule "add_zero_left" (formula "13") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "polyDiv_pullOut" (formula "9") (term "0,0") (inst "polyDivCoeff=quotient_0"))
               (rule "equal_literals" (formula "9") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "9") (term "1,0,0,0,1,0"))
               (rule "times_zero_1" (formula "9") (term "0,0,0,1,0"))
               (rule "add_zero_left" (formula "9") (term "0,0,1,0"))
               (rule "polySimp_addComm0" (formula "9") (term "1,0"))
               (rule "polySimp_rightDist" (formula "9") (term "0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0"))
               (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0"))
               (rule "add_literals" (formula "9") (term "1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "polyDiv_pullOut" (formula "33") (term "0") (inst "polyDivCoeff=quotient_0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,2,0"))
               (rule "equal_literals" (formula "33") (term "0,0"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "polySimp_homoEq" (formula "33"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0,0,1,1,0"))
               (rule "add_literals" (formula "33") (term "1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "33") (term "0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "33") (term "0,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0"))
               (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0"))
               (rule "add_literals" (formula "33") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "33") (term "0,0"))
               (rule "polySimp_sepNegMonomial" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
               (rule "polySimp_elimOne" (formula "33") (term "0"))
               (rule "polyDiv_pullOut" (formula "23") (term "0,1,1") (inst "polyDivCoeff=quotient_0"))
               (rule "equal_literals" (formula "23") (term "0,0,1,1"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
               (rule "polySimp_addComm0" (formula "23") (term "1,1,1"))
               (rule "polySimp_addComm1" (formula "23") (term "0,1,1,1,1"))
               (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,1,1,1"))
               (rule "add_literals" (formula "23") (term "1,0,0,1,1,1,1"))
               (rule "times_zero_1" (formula "23") (term "0,0,1,1,1,1"))
               (rule "add_zero_left" (formula "23") (term "0,1,1,1,1"))
               (rule "polySimp_rightDist" (formula "23") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "23") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "23") (term "1"))
               (rule "polySimp_addComm1" (formula "23") (term "0,1"))
               (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1"))
               (rule "add_literals" (formula "23") (term "1,0,0,1"))
               (rule "times_zero_1" (formula "23") (term "0,0,1"))
               (rule "add_zero_left" (formula "23") (term "0,1"))
               (rule "polyDiv_pullOut" (formula "2") (term "1,0,0,1") (inst "polyDivCoeff=quotient_0"))
               (rule "equal_literals" (formula "2") (term "0,1,0,0,1"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "2") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "2") (term "0,1,1,0,0,1"))
               (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,1,0,0,1"))
               (rule "add_literals" (formula "2") (term "1,0,0,1,1,0,0,1"))
               (rule "times_zero_1" (formula "2") (term "0,0,1,1,0,0,1"))
               (rule "add_zero_left" (formula "2") (term "0,1,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
               (rule "polySimp_pullOutFactor2" (formula "2") (term "0,0,0,1"))
               (rule "add_literals" (formula "2") (term "1,0,0,0,1"))
               (rule "times_zero_1" (formula "2") (term "0,0,0,1"))
               (rule "add_zero_left" (formula "2") (term "0,0,1"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=quotient_0"))
               (rule "equal_literals" (formula "1") (term "0,0,1,1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1,1"))
               (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,1,1,1"))
               (rule "add_literals" (formula "1") (term "1,0,0,1,1,1,1"))
               (rule "times_zero_1" (formula "1") (term "0,0,1,1,1,1"))
               (rule "add_zero_left" (formula "1") (term "0,1,1,1,1"))
               (rule "polySimp_rightDist" (formula "1") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "1,0,0,1"))
               (rule "times_zero_1" (formula "1") (term "0,0,1"))
               (rule "add_zero_left" (formula "1") (term "0,1"))
               (rule "polyDiv_pullOut" (formula "19") (term "0,1,1") (inst "polyDivCoeff=quotient_0"))
               (rule "equal_literals" (formula "19") (term "0,0,1,1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
               (rule "polySimp_addComm0" (formula "19") (term "1,1,1"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1,1,1,1"))
               (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,1,1,1,1"))
               (rule "add_literals" (formula "19") (term "1,0,0,1,1,1,1"))
               (rule "times_zero_1" (formula "19") (term "0,0,1,1,1,1"))
               (rule "add_zero_left" (formula "19") (term "0,1,1,1,1"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "19") (term "1"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1"))
               (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,1"))
               (rule "add_literals" (formula "19") (term "1,0,0,1"))
               (rule "times_zero_1" (formula "19") (term "0,0,1"))
               (rule "add_zero_left" (formula "19") (term "0,1"))
               (rule "polyDiv_pullOut" (formula "25") (term "0,1,1") (inst "polyDivCoeff=quotient_0"))
               (rule "equal_literals" (formula "25") (term "0,0,1,1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
               (rule "polySimp_addComm0" (formula "25") (term "1,1,1"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1,1,1,1"))
               (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,1,1,1,1"))
               (rule "add_literals" (formula "25") (term "1,0,0,1,1,1,1"))
               (rule "times_zero_1" (formula "25") (term "0,0,1,1,1,1"))
               (rule "add_zero_left" (formula "25") (term "0,1,1,1,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "1"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1"))
               (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,1"))
               (rule "add_literals" (formula "25") (term "1,0,0,1"))
               (rule "polyDiv_pullOut" (formula "27") (term "1,0,0,1") (inst "polyDivCoeff=quotient_0"))
               (rule "equal_literals" (formula "27") (term "0,1,0,0,1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "27") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "27") (term "0,1,1,0,0,1"))
               (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,1,1,0,0,1"))
               (rule "add_literals" (formula "27") (term "1,0,0,1,1,0,0,1"))
               (rule "times_zero_1" (formula "27") (term "0,0,1,1,0,0,1"))
               (rule "add_zero_left" (formula "27") (term "0,1,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
               (rule "polySimp_pullOutFactor2" (formula "27") (term "0,0,0,1"))
               (rule "add_literals" (formula "27") (term "1,0,0,0,1"))
               (rule "times_zero_1" (formula "27") (term "0,0,0,1"))
               (rule "add_zero_left" (formula "27") (term "0,0,1"))
               (rule "polyDiv_pullOut" (formula "15") (term "0,1,0,0") (inst "polyDivCoeff=quotient_0"))
               (rule "equal_literals" (formula "15") (term "0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,0,0"))
               (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1,1,1,0,0"))
               (rule "add_literals" (formula "15") (term "1,0,0,1,1,1,0,0"))
               (rule "times_zero_1" (formula "15") (term "0,0,1,1,1,0,0"))
               (rule "add_zero_left" (formula "15") (term "0,1,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0,0"))
               (rule "add_literals" (formula "15") (term "1,0,0,0,0"))
               (rule "polyDiv_pullOut" (formula "12") (term "1,0,0,1") (inst "polyDivCoeff=quotient_0"))
               (rule "equal_literals" (formula "12") (term "0,1,0,0,1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0,0,1"))
               (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,1,1,0,0,1"))
               (rule "add_literals" (formula "12") (term "1,0,0,1,1,0,0,1"))
               (rule "times_zero_1" (formula "12") (term "0,0,1,1,0,0,1"))
               (rule "add_zero_left" (formula "12") (term "0,1,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
               (rule "polySimp_pullOutFactor2" (formula "12") (term "0,0,0,1"))
               (rule "add_literals" (formula "12") (term "1,0,0,0,1"))
               (rule "times_zero_1" (formula "12") (term "0,0,0,1"))
               (rule "add_zero_left" (formula "12") (term "0,0,1"))
               (rule "inEqSimp_exactShadow0" (formula "14") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "greater_literals" (formula "14") (term "0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "0,0"))
               (rule "mul_literals" (formula "14") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "times_zero_1" (formula "14") (term "1,0"))
               (rule "add_zero_right" (formula "14") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14"))
               (rule "mul_literals" (formula "14") (term "1"))
               (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
               (rule "leq_literals" (formula "14") (term "0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0"))
               (rule "leq_literals" (formula "14") (term "0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_exactShadow0" (formula "10") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "greater_literals" (formula "10") (term "0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "times_zero_1" (formula "10") (term "1,0"))
               (rule "add_zero_right" (formula "10") (term "0"))
               (rule "polySimp_rightDist" (formula "10") (term "0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
               (rule "mul_literals" (formula "10") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
               (rule "leq_literals" (formula "10") (term "0,0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
               (rule "neg_literal" (formula "10") (term "0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
               (rule "add_literals" (formula "10") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "10") (term "1,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0"))
               (rule "qeq_literals" (formula "10") (term "0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "jdiv_axiom" (formula "33") (term "0,0,2,0"))
               (rule "eqSymm" (formula "33"))
               (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "eqSymm" (formula "33"))
               (rule "applyEqRigid" (formula "31") (term "0,1,1,0") (ifseqformula "33"))
               (rule "applyEq" (formula "34") (term "0,0,2,0") (ifseqformula "33"))
               (rule "applyEqRigid" (formula "31") (term "0,0,0,0") (ifseqformula "33"))
               (rule "applyEqRigid" (formula "29") (term "0,1,1,0") (ifseqformula "33"))
               (rule "applyEq" (formula "31") (term "0,2,0") (ifseqformula "33"))
               (rule "applyEq" (formula "29") (term "0,0,0,0") (ifseqformula "33"))
               (rule "applyEq" (formula "29") (term "0,1,2,0") (ifseqformula "33"))
               (rule "applyEq" (formula "34") (term "0,0,0,0,0") (ifseqformula "33"))
               (rule "applyEq" (formula "34") (term "0,0,1,1,0") (ifseqformula "33"))
               (rule "applyEq" (formula "20") (term "0,1,1") (ifseqformula "33"))
               (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "33"))
               (rule "applyEq" (formula "18") (term "0,0,1") (ifseqformula "33"))
               (rule "div_axiom" (formula "11") (term "0,0") (inst "quotient=quotient_1"))
               (rule "qeq_literals" (formula "11") (term "0,1,1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "mul_literals" (formula "11") (term "1,1,1,1"))
               (rule "equal_literals" (formula "11") (term "0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "polySimp_addComm1" (formula "13") (term "1"))
               (rule "add_literals" (formula "13") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "12"))
               (rule "inEqSimp_homoInEq1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "applyEq" (formula "39") (term "0") (ifseqformula "11"))
               (rule "eqSymm" (formula "39"))
               (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "11"))
               (rule "inEqSimp_homoInEq1" (formula "19"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0"))
               (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "11"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0"))
               (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
               (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "11"))
               (rule "inEqSimp_commuteLeq" (formula "17"))
               (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "11"))
               (rule "inEqSimp_homoInEq0" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0"))
               (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "11"))
               (rule "inEqSimp_homoInEq1" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0"))
               (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "11"))
               (rule "polySimp_addComm0" (formula "1") (term "1"))
               (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "11"))
               (rule "polySimp_addComm0" (formula "26") (term "1"))
               (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "11"))
               (rule "polySimp_addComm1" (formula "28") (term "1"))
               (rule "polySimp_addComm0" (formula "28") (term "0,1"))
               (rule "applyEqRigid" (formula "22") (term "0,1,1") (ifseqformula "11"))
               (rule "polySimp_addComm0" (formula "22") (term "1"))
               (rule "applyEq" (formula "2") (term "0,0,1") (ifseqformula "11"))
               (rule "applyEqRigid" (formula "30") (term "0,0,1") (ifseqformula "11"))
               (rule "applyEq" (formula "16") (term "0,0,1") (ifseqformula "11"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1"))
               (rule "polySimp_rightDist" (formula "13") (term "1"))
               (rule "mul_literals" (formula "13") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1"))
               (rule "polySimp_rightDist" (formula "9") (term "1"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1"))
               (rule "polySimp_rightDist" (formula "14") (term "1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
               (rule "polySimp_rightDist" (formula "14") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
               (rule "mul_literals" (formula "14") (term "0,0,1"))
               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
               (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
               (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "12") (ifseqformula "10"))
               (rule "greater_literals" (formula "12") (term "0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "mul_literals" (formula "12") (term "0,0"))
               (rule "leq_literals" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
               (rule "polySimp_rightDist" (formula "9") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
               (rule "mul_literals" (formula "9") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "18"))
               (rule "greater_literals" (formula "9") (term "0,0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "times_zero_1" (formula "9") (term "1,0"))
               (rule "leq_literals" (formula "9") (term "0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "div_axiom" (formula "34") (term "1") (inst "quotient=quotient_2"))
               (rule "mul_literals" (formula "34") (term "1,1,1,1,1"))
               (rule "equal_literals" (formula "34") (term "0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "qeq_literals" (formula "34") (term "0,1"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "34"))
               (rule "polySimp_addComm1" (formula "36") (term "1"))
               (rule "add_literals" (formula "36") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "35"))
               (rule "inEqSimp_homoInEq1" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0"))
               (rule "applyEq" (formula "32") (term "0,0,0,0") (ifseqformula "34"))
               (rule "applyEq" (formula "38") (term "0,0,0,0,0") (ifseqformula "34"))
               (rule "applyEq" (formula "30") (term "0,1,2,0") (ifseqformula "34"))
               (rule "polySimp_addComm0" (formula "30") (term "2,0"))
               (rule "applyEqRigid" (formula "30") (term "0,0,0,0") (ifseqformula "34"))
               (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "applyEq" (formula "38") (term "0,0,2,0") (ifseqformula "34"))
               (rule "applyEq" (formula "32") (term "0,2,0") (ifseqformula "34"))
               (rule "applyEqRigid" (formula "32") (term "0,1,1,0") (ifseqformula "34"))
               (rule "applyEq" (formula "30") (term "0,1,1,0") (ifseqformula "34"))
               (rule "polySimp_addComm1" (formula "30") (term "1,0"))
               (rule "applyEqRigid" (formula "38") (term "0,0,1,1,0") (ifseqformula "34"))
               (rule "applyEqRigid" (formula "20") (term "0,1") (ifseqformula "34"))
               (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "34"))
               (rule "polySimp_addComm0" (formula "21") (term "1"))
               (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "34"))
               (rule "applyEq" (formula "19") (term "0,0,1") (ifseqformula "34"))
               (rule "jmod_axiom" (formula "32") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
               (rule "jmod_axiom" (formula "32") (term "2,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,2,0"))
               (rule "jmod_axiom" (formula "32") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "1,0"))
               (rule "jmod_axiom" (formula "20") (term "1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "36"))
               (rule "polySimp_mulComm0" (formula "36") (term "1"))
               (rule "polySimp_rightDist" (formula "36") (term "1"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
               (rule "mul_literals" (formula "36") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
               (rule "mul_literals" (formula "32") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "35"))
               (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0"))
               (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
               (rule "leq_literals" (formula "30") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "polySimp_homoEq" (formula "30"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0"))
               (rule "polySimp_sepNegMonomial" (formula "30"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0"))
               (rule "newSym_eq" (formula "30") (inst "l=l_0") (inst "newSymDef=add(add(add(quotient_2, mul(quotient_1, Z(0(#)))),
        mul(quotient_0, Z(0(#)))),
    mul(res_unsign, Z(neglit(6(5(2(#)))))))"))
               (rule "times_zero_1" (formula "30") (term "1,0,0,1,1"))
               (rule "times_zero_1" (formula "30") (term "1,0,1,1"))
               (rule "add_zero_right" (formula "30") (term "0,0,1,1"))
               (rule "add_zero_right" (formula "30") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "30") (term "1"))
               (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
               (rule "polySimp_mulComm0" (formula "31") (term "0"))
               (rule "polySimp_rightDist" (formula "31") (term "0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
               (rule "polySimp_homoEq" (formula "31"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0"))
               (rule "polySimp_mulAssoc" (formula "31") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0"))
               (rule "polySimp_addComm1" (formula "31") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "31") (term "0"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "times_zero_1" (formula "31") (term "1,0"))
               (rule "add_zero_right" (formula "31") (term "0"))
               (rule "polySimp_addComm1" (formula "31") (term "0"))
               (rule "polySimp_addComm1" (formula "31") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0"))
               (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "31") (term "0,0,0"))
               (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "30"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
               (rule "polySimp_rightDist" (formula "2") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "2") (term "1"))
               (rule "polySimp_addComm1" (formula "2") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "1"))
               (rule "add_literals" (formula "2") (term "1,1,1"))
               (rule "times_zero_1" (formula "2") (term "1,1"))
               (rule "add_zero_right" (formula "2") (term "1"))
               (rule "polySimp_addComm0" (formula "2") (term "1"))
               (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "30"))
               (rule "applyEqRigid" (formula "33") (term "1") (ifseqformula "30"))
               (rule "applyEqRigid" (formula "16") (term "0,1,1") (ifseqformula "30"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
               (rule "polySimp_rightDist" (formula "16") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "16") (term "1"))
               (rule "polySimp_addComm1" (formula "16") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "16") (term "1"))
               (rule "add_literals" (formula "16") (term "1,1,1"))
               (rule "times_zero_1" (formula "16") (term "1,1"))
               (rule "add_zero_right" (formula "16") (term "1"))
               (rule "polySimp_addComm0" (formula "16") (term "1"))
               (rule "polySimp_sepNegMonomial" (formula "31"))
               (rule "polySimp_mulLiterals" (formula "31") (term "0"))
               (rule "polySimp_elimOne" (formula "31") (term "0"))
               (rule "applyEqRigid" (formula "35") (term "0,0") (ifseqformula "31"))
               (rule "applyEq" (formula "37") (term "0") (ifseqformula "31"))
               (rule "inEqSimp_homoInEq0" (formula "37"))
               (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
               (rule "polySimp_rightDist" (formula "37") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "37") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "37") (term "0"))
               (rule "polySimp_addComm1" (formula "37") (term "0,0"))
               (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "31"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "9") (term "1"))
               (rule "polySimp_addComm0" (formula "9") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "1"))
               (rule "add_literals" (formula "9") (term "1,1,1"))
               (rule "times_zero_1" (formula "9") (term "1,1"))
               (rule "add_zero_right" (formula "9") (term "1"))
               (rule "applyEqRigid" (formula "14") (term "0,1,1") (ifseqformula "31"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1"))
               (rule "polySimp_mulAssoc" (formula "14") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "14") (term "1"))
               (rule "polySimp_addComm1" (formula "14") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "14") (term "1"))
               (rule "add_literals" (formula "14") (term "1,1,1"))
               (rule "times_zero_1" (formula "14") (term "1,1"))
               (rule "add_zero_right" (formula "14") (term "1"))
               (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "31"))
               (rule "applyEqRigid" (formula "38") (term "0,0") (ifseqformula "31"))
               (rule "applyEq" (formula "36") (term "0") (ifseqformula "31"))
               (rule "inEqSimp_homoInEq1" (formula "36"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0"))
               (rule "polySimp_addComm0" (formula "36") (term "0,0"))
               (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "31"))
               (rule "polySimp_homoEq" (formula "41"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "41") (term "0"))
               (rule "polySimp_addComm0" (formula "41") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
               (rule "add_literals" (formula "41") (term "1,1,0"))
               (rule "times_zero_1" (formula "41") (term "1,0"))
               (rule "add_zero_right" (formula "41") (term "0"))
               (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "31"))
               (rule "inEqSimp_homoInEq0" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "applyEq" (formula "18") (term "1") (ifseqformula "31"))
               (rule "applyEqRigid" (formula "18") (term "0,1,0,0,0") (ifseqformula "31"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,0"))
               (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "18") (term "0,0,0"))
               (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "31"))
               (rule "polySimp_addAssoc" (formula "21") (term "1"))
               (rule "polySimp_addComm0" (formula "21") (term "0,1"))
               (rule "applyEq" (formula "28") (term "0,1,0,1") (ifseqformula "31"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
               (rule "polySimp_addComm0" (formula "28") (term "0,0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,1"))
               (rule "add_literals" (formula "28") (term "1,1,0,1"))
               (rule "times_zero_1" (formula "28") (term "1,0,1"))
               (rule "add_zero_right" (formula "28") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "37"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0"))
               (rule "polySimp_elimOne" (formula "37") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0"))
               (rule "polySimp_elimOne" (formula "36") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polySimp_elimOne" (formula "10") (term "0"))
               (rule "elimGcdEq" (formula "41") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
               (builtin "One Step Simplification" (formula "41"))
               (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
               (rule "add_zero_left" (formula "41") (term "0,1,0"))
               (rule "add_zero_left" (formula "41") (term "0,0,1"))
               (rule "add_literals" (formula "41") (term "1,0,0"))
               (rule "add_zero_left" (formula "41") (term "0,0,0"))
               (rule "times_zero_1" (formula "41") (term "0,1,0"))
               (rule "times_zero_1" (formula "41") (term "0,0,1"))
               (builtin "One Step Simplification" (formula "41"))
               (rule "leq_literals" (formula "41") (term "0,0"))
               (builtin "One Step Simplification" (formula "41"))
               (rule "qeq_literals" (formula "41") (term "0"))
               (builtin "One Step Simplification" (formula "41"))
               (rule "polyDiv_pullOut" (formula "35") (term "0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
               (rule "equal_literals" (formula "35") (term "0,0"))
               (builtin "One Step Simplification" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
               (rule "polySimp_homoEq" (formula "35"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,0,1,1,0"))
               (rule "add_literals" (formula "35") (term "1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "35") (term "0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "35") (term "0,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0"))
               (rule "polySimp_addComm0" (formula "35") (term "0,0"))
               (rule "polySimp_sepNegMonomial" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0"))
               (rule "polySimp_elimOne" (formula "35") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
               (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
               (rule "polySimp_addComm0" (formula "12") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "12") (ifseqformula "10"))
               (rule "greater_literals" (formula "12") (term "0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
               (rule "mul_literals" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0"))
               (rule "qeq_literals" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "10"))
               (rule "polySimp_rightDist" (formula "36") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "36") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
               (rule "polySimp_addComm0" (formula "36") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
               (rule "add_literals" (formula "36") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "36") (term "1,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0"))
               (rule "elimGcdLeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(5(2(#))))"))
               (rule "leq_literals" (formula "36") (term "0,0"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "neg_literal" (formula "36") (term "0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
               (rule "add_literals" (formula "36") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
               (rule "add_literals" (formula "36") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "36") (term "1,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0"))
               (rule "qeq_literals" (formula "36") (term "0"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "38"))
               (rule "polySimp_mulAssoc" (formula "17") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
               (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
               (rule "add_literals" (formula "17") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
               (rule "mul_literals" (formula "17") (term "1"))
               (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(5(2(#))))"))
               (rule "leq_literals" (formula "17") (term "0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
               (rule "add_literals" (formula "17") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0"))
               (rule "leq_literals" (formula "17") (term "0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1"))
               (rule "polySimp_rightDist" (formula "9") (term "1"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
               (rule "mul_literals" (formula "9") (term "0,1"))
               (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "19"))
               (rule "greater_literals" (formula "9") (term "0,0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_mulAssoc" (formula "9") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0"))
               (rule "qeq_literals" (formula "9") (term "0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "jdiv_axiom" (formula "41") (term "0,0,0,0"))
               (rule "eqSymm" (formula "41"))
               (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "41"))
               (rule "eqSymm" (formula "41"))
               (rule "applyEqRigid" (formula "42") (term "0,2,0") (ifseqformula "41"))
               (rule "applyEqRigid" (formula "42") (term "0,1,1,0") (ifseqformula "41"))
               (rule "applyEqRigid" (formula "34") (term "0,1,2,0") (ifseqformula "41"))
               (rule "applyEqRigid" (formula "34") (term "0,0,0,0") (ifseqformula "41"))
               (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "41"))
               (rule "applyEq" (formula "42") (term "0,0,0,0") (ifseqformula "41"))
               (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "41"))
               (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "41"))
               (rule "jdiv_axiom" (formula "40") (term "0"))
               (rule "eqSymm" (formula "40"))
               (rule "polySimp_mulComm0" (formula "40") (term "0,0,2,0"))
               (rule "polySimp_rightDist" (formula "40") (term "0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,2,0"))
               (rule "applyEqRigid" (formula "40") (term "1") (ifseqformula "41"))
               (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
               (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "40"))
               (rule "polyDiv_pullOut" (formula "40") (term "0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
               (rule "equal_literals" (formula "40") (term "0,0"))
               (builtin "One Step Simplification" (formula "40"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
               (rule "polySimp_homoEq" (formula "40"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
               (rule "polySimp_addComm0" (formula "40") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "40") (term "0,1,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,1,1,1,0"))
               (rule "add_literals" (formula "40") (term "1,0,0,1,1,1,0"))
               (rule "times_zero_1" (formula "40") (term "0,0,1,1,1,0"))
               (rule "add_zero_left" (formula "40") (term "0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "40") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "40") (term "0"))
               (rule "polySimp_addComm0" (formula "40") (term "0,0"))
               (rule "applyEqRigid" (formula "40") (term "0,1,0") (ifseqformula "36"))
               (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
               (rule "add_literals" (formula "40") (term "1,0"))
               (rule "times_zero_1" (formula "40") (term "0"))
               (builtin "One Step Simplification" (formula "40"))
               (rule "true_left" (formula "40"))
               (rule "jdiv_axiom" (formula "19") (term "0"))
               (rule "eqSymm" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "0,0,2,0"))
               (rule "polySimp_rightDist" (formula "19") (term "0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,2,0"))
               (rule "applyEqRigid" (formula "19") (term "1") (ifseqformula "20"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
               (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "polyDiv_pullOut" (formula "19") (term "0") (inst "polyDivCoeff=mul(l_0, Z(neglit(6(5(2(#))))))"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,2,0"))
               (rule "equal_literals" (formula "19") (term "0,0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_homoEq" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
               (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,1,1,1,0"))
               (rule "add_literals" (formula "19") (term "1,0,0,1,1,1,0"))
               (rule "times_zero_1" (formula "19") (term "0,0,1,1,1,0"))
               (rule "add_zero_left" (formula "19") (term "0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0"))
               (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,0"))
               (rule "add_literals" (formula "19") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "19") (term "0,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0"))
               (rule "applyEqRigid" (formula "19") (term "0,1,0") (ifseqformula "11"))
               (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
               (rule "add_literals" (formula "19") (term "1,0"))
               (rule "times_zero_1" (formula "19") (term "0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "div_axiom" (formula "36") (term "0") (inst "quotient=quotient_3"))
               (rule "equal_literals" (formula "36") (term "0"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "qeq_literals" (formula "36") (term "0,1"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "mul_literals" (formula "36") (term "1,1,1"))
               (rule "andLeft" (formula "36"))
               (rule "andLeft" (formula "36"))
               (rule "polySimp_addComm1" (formula "38") (term "1"))
               (rule "add_literals" (formula "38") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "37"))
               (rule "inEqSimp_homoInEq1" (formula "38"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1,0"))
               (rule "polySimp_addComm1" (formula "38") (term "0"))
               (rule "applyEq" (formula "39") (term "0") (ifseqformula "36"))
               (rule "polySimp_homoEq" (formula "39"))
               (rule "polySimp_addComm1" (formula "39") (term "0"))
               (rule "polySimp_addComm0" (formula "39") (term "0,0"))
               (rule "polySimp_sepPosMonomial" (formula "39"))
               (rule "polySimp_mulComm0" (formula "39") (term "1"))
               (rule "polySimp_rightDist" (formula "39") (term "1"))
               (rule "polySimp_mulAssoc" (formula "39") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "39") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "39") (term "0,1"))
               (rule "polySimp_elimOne" (formula "39") (term "0,1"))
               (rule "applyEqRigid" (formula "34") (term "0,0,1,1,0") (ifseqformula "39"))
               (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "39"))
               (rule "applyEqRigid" (formula "41") (term "0,1,1") (ifseqformula "39"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,1"))
               (rule "polySimp_rightDist" (formula "41") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "41") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "41") (term "1"))
               (rule "polySimp_addComm0" (formula "41") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "41") (term "1"))
               (rule "add_literals" (formula "41") (term "1,1,1"))
               (rule "times_zero_1" (formula "41") (term "1,1"))
               (rule "add_zero_right" (formula "41") (term "1"))
               (rule "applyEq" (formula "34") (term "0,0,1,2,0") (ifseqformula "39"))
               (rule "applyEq" (formula "34") (term "1,1,0,0") (ifseqformula "39"))
               (rule "polySimp_addAssoc" (formula "34") (term "1,0,0"))
               (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "39"))
               (rule "applyEqRigid" (formula "44") (term "0,0,0,0,0") (ifseqformula "39"))
               (rule "applyEq" (formula "44") (term "0,0,1,1,0") (ifseqformula "39"))
               (rule "applyEq" (formula "44") (term "0,0,2,0") (ifseqformula "39"))
               (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "39"))
               (rule "inEqSimp_homoInEq0" (formula "40"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
               (rule "polySimp_rightDist" (formula "40") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "40") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "40") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "40") (term "0"))
               (rule "applyEq" (formula "41") (term "0,1,1") (ifseqformula "39"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,1"))
               (rule "polySimp_rightDist" (formula "41") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "41") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "41") (term "1"))
               (rule "polySimp_addComm1" (formula "41") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "41") (term "1"))
               (rule "add_literals" (formula "41") (term "1,1,1"))
               (rule "times_zero_1" (formula "41") (term "1,1"))
               (rule "add_zero_right" (formula "41") (term "1"))
               (rule "applyEqRigid" (formula "34") (term "0,0,0,0,0") (ifseqformula "39"))
               (rule "applyEqRigid" (formula "20") (term "0,0,1") (ifseqformula "39"))
               (rule "applyEqRigid" (formula "42") (term "1") (ifseqformula "39"))
               (rule "applyEqRigid" (formula "34") (term "0,2,0") (ifseqformula "39"))
               (rule "applyEq" (formula "21") (term "0,0,1,1") (ifseqformula "39"))
               (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "39"))
               (rule "applyEqRigid" (formula "34") (term "1,0,1,0") (ifseqformula "39"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
               (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "39"))
               (rule "applyEq" (formula "34") (term "1,0,1") (ifseqformula "39"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,1"))
               (rule "polySimp_addComm0" (formula "34") (term "0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,1"))
               (rule "add_literals" (formula "34") (term "1,1,0,1"))
               (rule "times_zero_1" (formula "34") (term "1,0,1"))
               (rule "add_zero_right" (formula "34") (term "0,1"))
               (rule "applyEqRigid" (formula "16") (term "0,1,0,1") (ifseqformula "39"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
               (rule "polySimp_addComm0" (formula "16") (term "0,0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,1"))
               (rule "add_literals" (formula "16") (term "1,1,0,1"))
               (rule "times_zero_1" (formula "16") (term "1,0,1"))
               (rule "add_zero_right" (formula "16") (term "0,1"))
               (rule "applyEq" (formula "3") (term "1,0,1") (ifseqformula "39"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "1,1,0,1"))
               (rule "times_zero_1" (formula "3") (term "1,0,1"))
               (rule "add_zero_right" (formula "3") (term "0,1"))
               (rule "applyEq" (formula "22") (term "0,1,0,1") (ifseqformula "39"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
               (rule "polySimp_addComm0" (formula "22") (term "0,0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,1"))
               (rule "add_literals" (formula "22") (term "1,1,0,1"))
               (rule "times_zero_1" (formula "22") (term "1,0,1"))
               (rule "add_zero_right" (formula "22") (term "0,1"))
               (rule "applyEqRigid" (formula "31") (term "1,0,1") (ifseqformula "39"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
               (rule "polySimp_addComm0" (formula "31") (term "0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,1"))
               (rule "add_literals" (formula "31") (term "1,1,0,1"))
               (rule "times_zero_1" (formula "31") (term "1,0,1"))
               (rule "add_zero_right" (formula "31") (term "0,1"))
               (rule "applyEq" (formula "2") (term "0,1,0,1") (ifseqformula "39"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "1,1,0,1"))
               (rule "times_zero_1" (formula "2") (term "1,0,1"))
               (rule "add_zero_right" (formula "2") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "38"))
               (rule "polySimp_mulComm0" (formula "38") (term "1"))
               (rule "polySimp_rightDist" (formula "38") (term "1"))
               (rule "mul_literals" (formula "38") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "17"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0"))
               (rule "polySimp_elimOne" (formula "17") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "39"))
               (rule "polySimp_mulComm0" (formula "39") (term "1"))
               (rule "polySimp_rightDist" (formula "39") (term "1"))
               (rule "mul_literals" (formula "39") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
               (rule "polySimp_elimOne" (formula "39") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "10"))
               (rule "polySimp_mulAssoc" (formula "37") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "37") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "37") (term "0"))
               (rule "polySimp_addComm0" (formula "37") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "37"))
               (rule "polySimp_mulComm0" (formula "37") (term "1"))
               (rule "polySimp_rightDist" (formula "37") (term "1"))
               (rule "mul_literals" (formula "37") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
               (rule "inEqSimp_subsumption6" (formula "37") (ifseqformula "40"))
               (rule "greater_literals" (formula "37") (term "0,0"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "polySimp_rightDist" (formula "37") (term "1,0"))
               (rule "mul_literals" (formula "37") (term "0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "37") (term "0"))
               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
               (rule "mul_literals" (formula "37") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
               (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
               (rule "add_literals" (formula "37") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
               (rule "add_literals" (formula "37") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "37") (term "1,0,0"))
               (rule "add_zero_right" (formula "37") (term "0,0"))
               (rule "qeq_literals" (formula "37") (term "0"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "true_left" (formula "37"))
               (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "40"))
               (rule "polySimp_mulAssoc" (formula "18") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
               (rule "polySimp_addComm0" (formula "18") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "18"))
               (rule "polySimp_mulLiterals" (formula "18") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "18") (ifseqformula "17"))
               (rule "greater_literals" (formula "18") (term "0,0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
               (rule "add_literals" (formula "18") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "18") (term "1,0,0"))
               (rule "add_zero_right" (formula "18") (term "0,0"))
               (rule "qeq_literals" (formula "18") (term "0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "div_axiom" (formula "34") (term "0,1,1,0") (inst "quotient=quotient_4"))
               (rule "equal_literals" (formula "34") (term "0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "qeq_literals" (formula "34") (term "0,1"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "mul_literals" (formula "34") (term "1,1,1"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "34"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
               (rule "polySimp_addComm1" (formula "36") (term "1"))
               (rule "polySimp_addComm1" (formula "36") (term "0,1"))
               (rule "add_literals" (formula "36") (term "0,0,1"))
               (rule "inEqSimp_homoInEq0" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0"))
               (rule "polySimp_addComm0" (formula "35") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0"))
               (rule "polySimp_addComm1" (formula "36") (term "0,0"))
               (rule "applyEqRigid" (formula "46") (term "0,2,0") (ifseqformula "34"))
               (rule "applyEq" (formula "46") (term "0,1,1,0") (ifseqformula "34"))
               (rule "applyEq" (formula "37") (term "0,0,0,0") (ifseqformula "34"))
               (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
               (rule "applyEqRigid" (formula "37") (term "0,1,2,0") (ifseqformula "34"))
               (rule "polySimp_addComm1" (formula "37") (term "2,0"))
               (rule "polySimp_addComm0" (formula "37") (term "0,2,0"))
               (rule "applyEq" (formula "37") (term "0,1,1,0") (ifseqformula "34"))
               (rule "polySimp_addComm1" (formula "37") (term "1,0"))
               (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
               (rule "applyEq" (formula "46") (term "0,0,0,0") (ifseqformula "34"))
               (rule "applyEq" (formula "45") (term "1") (ifseqformula "34"))
               (rule "applyEqRigid" (formula "20") (term "0,1") (ifseqformula "34"))
               (rule "applyEqRigid" (formula "21") (term "0,1,1") (ifseqformula "34"))
               (rule "polySimp_addComm1" (formula "21") (term "1"))
               (rule "polySimp_addComm0" (formula "21") (term "0,1"))
               (rule "jmod_axiom" (formula "46") (term "2,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,2,0"))
               (rule "jmod_axiom" (formula "46") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "46") (term "1,0"))
               (rule "jmod_axiom" (formula "46") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
               (rule "jmod_axiom" (formula "20") (term "1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0"))
               (rule "polySimp_elimOne" (formula "35") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0"))
               (rule "polySimp_elimOne" (formula "36") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
               (rule "mul_literals" (formula "46") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
               (rule "inEqSimp_contradInEq0" (formula "37") (term "0,0") (ifseqformula "35"))
               (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0"))
               (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,0"))
               (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
               (rule "leq_literals" (formula "37") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "polySimp_homoEq" (formula "37"))
               (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
               (rule "polySimp_rightDist" (formula "37") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "37") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "37") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1,0"))
               (rule "polySimp_addComm1" (formula "37") (term "0"))
               (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
               (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "37") (term "0,0,0"))
               (rule "polySimp_sepNegMonomial" (formula "37"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0"))
               (rule "newSym_eq" (formula "37") (inst "l=l_1") (inst "newSymDef=add(quotient_4, mul(l_0, Z(0(#))))"))
               (rule "times_zero_1" (formula "37") (term "1,1,1"))
               (rule "add_zero_right" (formula "37") (term "1,1"))
               (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "37"))
               (rule "polySimp_mulComm0" (formula "38") (term "0"))
               (rule "polySimp_rightDist" (formula "38") (term "0"))
               (rule "polySimp_homoEq" (formula "38"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "0,1,1,0"))
               (rule "polySimp_rightDist" (formula "38") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0"))
               (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "38") (term "0"))
               (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
               (rule "polySimp_addComm0" (formula "38") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
               (rule "add_literals" (formula "38") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "38") (term "1,0,0"))
               (rule "add_zero_right" (formula "38") (term "0,0"))
               (rule "applyEq" (formula "47") (term "1") (ifseqformula "37"))
               (rule "applyEq" (formula "4") (term "1") (ifseqformula "37"))
               (rule "applyEqRigid" (formula "31") (term "0,1,1") (ifseqformula "37"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
               (rule "polySimp_rightDist" (formula "31") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "31") (term "0,1,1"))
               (rule "polySimp_addComm0" (formula "31") (term "1"))
               (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "37"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
               (rule "polySimp_rightDist" (formula "3") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "3") (term "0,1,1"))
               (rule "polySimp_addComm0" (formula "3") (term "1"))
               (rule "polySimp_sepPosMonomial" (formula "38"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1"))
               (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
               (rule "applyEqRigid" (formula "34") (term "0,1,0,0") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "34") (term "0,0"))
               (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "38"))
               (rule "inEqSimp_homoInEq1" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0"))
               (rule "polySimp_addComm1" (formula "36") (term "0,0"))
               (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1"))
               (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "38"))
               (rule "inEqSimp_commuteLeq" (formula "17"))
               (rule "applyEq" (formula "35") (term "0") (ifseqformula "38"))
               (rule "inEqSimp_homoInEq0" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0"))
               (rule "polySimp_addComm0" (formula "35") (term "0,0"))
               (rule "applyEq" (formula "49") (term "0") (ifseqformula "38"))
               (rule "applyEq" (formula "46") (term "0,1,0,0") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "46") (term "0,0"))
               (rule "applyEqRigid" (formula "14") (term "0,1,1") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
               (rule "applyEq" (formula "43") (term "0") (ifseqformula "38"))
               (rule "inEqSimp_homoInEq1" (formula "43"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
               (rule "polySimp_addComm1" (formula "43") (term "0"))
               (rule "applyEq" (formula "45") (term "0,0,0,0") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0"))
               (rule "applyEq" (formula "42") (term "0,1,1") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
               (rule "polySimp_addComm0" (formula "42") (term "1"))
               (rule "applyEqRigid" (formula "19") (term "0,0,0,0") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
               (rule "applyEqRigid" (formula "45") (term "0,1,1") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
               (rule "polySimp_addComm0" (formula "45") (term "1"))
               (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
               (rule "polySimp_addComm1" (formula "21") (term "1"))
               (rule "polySimp_addComm0" (formula "21") (term "0,1"))
               (rule "applyEqRigid" (formula "19") (term "0,0,1") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
               (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0,1"))
               (rule "applyEq" (formula "32") (term "0,0,1") (ifseqformula "38"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "36"))
               (rule "polySimp_mulComm0" (formula "36") (term "1"))
               (rule "polySimp_rightDist" (formula "36") (term "1"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
               (rule "polySimp_rightDist" (formula "36") (term "0,1"))
               (rule "mul_literals" (formula "36") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "35"))
               (rule "polySimp_mulComm0" (formula "35") (term "1"))
               (rule "polySimp_rightDist" (formula "35") (term "1"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "35") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "43"))
               (rule "polySimp_mulComm0" (formula "43") (term "1"))
               (rule "polySimp_rightDist" (formula "43") (term "1"))
               (rule "mul_literals" (formula "43") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
               (rule "elimGcdEq" (formula "49") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(5(2(#))))"))
               (builtin "One Step Simplification" (formula "49"))
               (rule "times_zero_1" (formula "49") (term "1,0,0,0"))
               (rule "add_literals" (formula "49") (term "1,0,0"))
               (rule "times_zero_1" (formula "49") (term "1,0,1,0"))
               (rule "add_zero_left" (formula "49") (term "0,0,1"))
               (rule "add_zero_left" (formula "49") (term "0,0,0"))
               (rule "add_zero_left" (formula "49") (term "0,1,0"))
               (rule "times_zero_1" (formula "49") (term "0,0,1"))
               (builtin "One Step Simplification" (formula "49"))
               (rule "leq_literals" (formula "49") (term "0,0"))
               (builtin "One Step Simplification" (formula "49"))
               (rule "qeq_literals" (formula "49") (term "0"))
               (builtin "One Step Simplification" (formula "49"))
               (rule "polyDiv_pullOut" (formula "34") (term "0") (inst "polyDivCoeff=mul(l_1, Z(neglit(1(#))))"))
               (rule "equal_literals" (formula "34") (term "0,0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
               (rule "polySimp_homoEq" (formula "34"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
               (rule "polySimp_addComm0" (formula "34") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "34") (term "0,1,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "34") (term "0,0,1,1,1,0"))
               (rule "add_literals" (formula "34") (term "1,0,0,1,1,1,0"))
               (rule "times_zero_1" (formula "34") (term "0,0,1,1,1,0"))
               (rule "add_zero_left" (formula "34") (term "0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "34") (term "0"))
               (rule "polySimp_addComm0" (formula "34") (term "0,0"))
               (rule "polySimp_sepNegMonomial" (formula "34"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
               (rule "polySimp_elimOne" (formula "34") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
               (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
               (rule "polySimp_addComm0" (formula "12") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "12") (ifseqformula "10"))
               (rule "greater_literals" (formula "12") (term "0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
               (rule "mul_literals" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0"))
               (rule "qeq_literals" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "36"))
               (rule "polySimp_mulAssoc" (formula "17") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
               (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
               (rule "add_literals" (formula "17") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
               (rule "mul_literals" (formula "17") (term "1"))
               (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcd=Z(6(5(2(#))))"))
               (rule "leq_literals" (formula "17") (term "0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
               (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
               (rule "add_literals" (formula "17") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0"))
               (rule "leq_literals" (formula "17") (term "0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "44"))
               (rule "polySimp_rightDist" (formula "36") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "36") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
               (rule "polySimp_addComm0" (formula "36") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
               (rule "add_literals" (formula "36") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "36") (term "1,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0"))
               (rule "elimGcdLeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcd=Z(6(5(2(#))))"))
               (rule "leq_literals" (formula "36") (term "0,0"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
               (rule "neg_literal" (formula "36") (term "0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
               (rule "add_literals" (formula "36") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
               (rule "add_literals" (formula "36") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "36") (term "1,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0"))
               (rule "qeq_literals" (formula "36") (term "0"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "46"))
               (rule "polySimp_mulAssoc" (formula "19") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0"))
               (rule "polySimp_addComm0" (formula "19") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "1"))
               (rule "polySimp_rightDist" (formula "19") (term "1"))
               (rule "mul_literals" (formula "19") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
               (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "18"))
               (rule "greater_literals" (formula "19") (term "0,0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "polySimp_mulAssoc" (formula "19") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
               (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
               (rule "add_literals" (formula "19") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0"))
               (rule "qeq_literals" (formula "19") (term "0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1"))
               (rule "polySimp_rightDist" (formula "9") (term "1"))
               (rule "mul_literals" (formula "9") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
               (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "20"))
               (rule "greater_literals" (formula "9") (term "0,0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0"))
               (rule "qeq_literals" (formula "9") (term "0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "10"))
               (rule "polySimp_mulAssoc" (formula "43") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "0,0"))
               (rule "polySimp_addComm0" (formula "43") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "43"))
               (rule "polySimp_mulLiterals" (formula "43") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "43") (ifseqformula "46"))
               (rule "greater_literals" (formula "43") (term "0,0"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "polySimp_rightDist" (formula "43") (term "0,0"))
               (rule "mul_literals" (formula "43") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "43") (term "0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
               (rule "mul_literals" (formula "43") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
               (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
               (rule "add_literals" (formula "43") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
               (rule "add_literals" (formula "43") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "43") (term "1,0,0"))
               (rule "add_zero_right" (formula "43") (term "0,0"))
               (rule "qeq_literals" (formula "43") (term "0"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "true_left" (formula "43"))
               (rule "jdiv_axiom" (formula "49") (term "0,1,2,0"))
               (rule "eqSymm" (formula "49"))
               (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "49"))
               (rule "eqSymm" (formula "49"))
               (rule "applyEq" (formula "50") (term "0,0,0,0") (ifseqformula "49"))
               (rule "applyEqRigid" (formula "50") (term "0,1,1,0") (ifseqformula "49"))
               (rule "applyEq" (formula "50") (term "0,1,2,0") (ifseqformula "49"))
               (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "49"))
               (rule "jdiv_axiom" (formula "48") (term "0"))
               (rule "eqSymm" (formula "48"))
               (rule "polySimp_mulComm0" (formula "48") (term "0,0,2,0"))
               (rule "polySimp_rightDist" (formula "48") (term "0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "0,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,2,0"))
               (rule "applyEq" (formula "48") (term "1") (ifseqformula "49"))
               (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
               (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "48"))
               (rule "polyDiv_pullOut" (formula "48") (term "0") (inst "polyDivCoeff=mul(l_1, Z(neglit(1(#))))"))
               (rule "equal_literals" (formula "48") (term "0,0"))
               (builtin "One Step Simplification" (formula "48"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
               (rule "polySimp_homoEq" (formula "48"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
               (rule "polySimp_addComm1" (formula "48") (term "0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "48") (term "0,0,0,1,1,0"))
               (rule "add_literals" (formula "48") (term "1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "48") (term "0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "48") (term "0,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "48") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "48") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "48") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "48") (term "0"))
               (rule "polySimp_addComm0" (formula "48") (term "0,0"))
               (rule "applyEq" (formula "48") (term "0,1,0") (ifseqformula "35"))
               (rule "polySimp_pullOutFactor1" (formula "48") (term "0"))
               (rule "add_literals" (formula "48") (term "1,0"))
               (rule "times_zero_1" (formula "48") (term "0"))
               (builtin "One Step Simplification" (formula "48"))
               (rule "true_left" (formula "48"))
               (rule "jdiv_axiom" (formula "47") (term "0"))
               (rule "eqSymm" (formula "47"))
               (rule "polySimp_mulComm0" (formula "47") (term "0,0,2,0"))
               (rule "polySimp_rightDist" (formula "47") (term "0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,2,0"))
               (rule "applyEqRigid" (formula "47") (term "1") (ifseqformula "48"))
               (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
               (rule "replace_known_left" (formula "47") (term "0,0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "47"))
               (rule "polyDiv_pullOut" (formula "47") (term "0") (inst "polyDivCoeff=mul(l_1, Z(neglit(6(5(2(#))))))"))
               (rule "equal_literals" (formula "47") (term "0,0"))
               (builtin "One Step Simplification" (formula "47"))
               (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
               (rule "polySimp_homoEq" (formula "47"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
               (rule "polySimp_addComm1" (formula "47") (term "0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,0,1,1,0"))
               (rule "add_literals" (formula "47") (term "1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "47") (term "0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "47") (term "0,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "47") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "47") (term "0"))
               (rule "polySimp_addComm1" (formula "47") (term "0,0"))
               (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,0"))
               (rule "add_literals" (formula "47") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "47") (term "0,0,0"))
               (rule "add_zero_left" (formula "47") (term "0,0"))
               (rule "applyEq" (formula "47") (term "0,1,0") (ifseqformula "42"))
               (rule "polySimp_pullOutFactor1" (formula "47") (term "0"))
               (rule "add_literals" (formula "47") (term "1,0"))
               (rule "times_zero_1" (formula "47") (term "0"))
               (builtin "One Step Simplification" (formula "47"))
               (rule "true_left" (formula "47"))
               (rule "jdiv_axiom" (formula "20") (term "0"))
               (rule "eqSymm" (formula "20"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,0,2,0"))
               (rule "polySimp_rightDist" (formula "20") (term "0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,2,0"))
               (rule "applyEqRigid" (formula "20") (term "1") (ifseqformula "21"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
               (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "polyDiv_pullOut" (formula "20") (term "0") (inst "polyDivCoeff=mul(l_1, Z(neglit(6(3(5(5(6(#))))))))"))
               (rule "equal_literals" (formula "20") (term "0,0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_homoEq" (formula "20"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,0,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,0,1,1,0"))
               (rule "add_literals" (formula "20") (term "1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "20") (term "0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "20") (term "0,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "20") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,0"))
               (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,0"))
               (rule "add_literals" (formula "20") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "20") (term "0,0,0"))
               (rule "add_zero_left" (formula "20") (term "0,0"))
               (rule "applyEqRigid" (formula "20") (term "0,1,0") (ifseqformula "11"))
               (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "1,0"))
               (rule "times_zero_1" (formula "20") (term "0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "div_axiom" (formula "35") (term "0") (inst "quotient=quotient_5"))
               (rule "mul_literals" (formula "35") (term "1,1,1,1,1"))
               (rule "qeq_literals" (formula "35") (term "0,1,1"))
               (builtin "One Step Simplification" (formula "35"))
               (rule "equal_literals" (formula "35") (term "0"))
               (builtin "One Step Simplification" (formula "35"))
               (rule "andLeft" (formula "35"))
               (rule "andLeft" (formula "35"))
               (rule "polySimp_addComm1" (formula "37") (term "1"))
               (rule "add_literals" (formula "37") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "36"))
               (rule "inEqSimp_homoInEq1" (formula "37"))
               (rule "polySimp_mulLiterals" (formula "37") (term "1,0"))
               (rule "polySimp_addComm1" (formula "37") (term "0"))
               (rule "applyEq" (formula "35") (term "0") (ifseqformula "38"))
               (rule "polySimp_homoEq" (formula "35"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0"))
               (rule "polySimp_sepNegMonomial" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0"))
               (rule "polySimp_elimOne" (formula "35") (term "0"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "35"))
               (rule "applyEq" (formula "53") (term "0,0,1,1,0") (ifseqformula "35"))
               (rule "applyEqRigid" (formula "53") (term "0,0,1,2,0") (ifseqformula "35"))
               (rule "applyEq" (formula "53") (term "0,0,0,0,0") (ifseqformula "35"))
               (rule "applyEqRigid" (formula "52") (term "0,0") (ifseqformula "35"))
               (rule "applyEq" (formula "53") (term "1,1,0,0") (ifseqformula "35"))
               (rule "polySimp_addAssoc" (formula "53") (term "1,0,0"))
               (rule "applyEqRigid" (formula "41") (term "0,1,1") (ifseqformula "35"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,1"))
               (rule "polySimp_rightDist" (formula "41") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "41") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "41") (term "1"))
               (rule "polySimp_addComm1" (formula "41") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "41") (term "1"))
               (rule "add_literals" (formula "41") (term "1,1,1"))
               (rule "times_zero_1" (formula "41") (term "1,1"))
               (rule "add_zero_right" (formula "41") (term "1"))
               (rule "applyEqRigid" (formula "40") (term "0,1,1") (ifseqformula "35"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,1"))
               (rule "polySimp_rightDist" (formula "40") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "40") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "40") (term "1"))
               (rule "polySimp_addComm0" (formula "40") (term "0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "40") (term "1"))
               (rule "add_literals" (formula "40") (term "1,1,1"))
               (rule "times_zero_1" (formula "40") (term "1,1"))
               (rule "add_zero_right" (formula "40") (term "1"))
               (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "35"))
               (rule "inEqSimp_homoInEq0" (formula "39"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
               (rule "polySimp_rightDist" (formula "39") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "39") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "39") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "39") (term "0"))
               (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "35"))
               (rule "polySimp_addAssoc" (formula "41") (term "1"))
               (rule "polySimp_addComm0" (formula "41") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "41") (term "1"))
               (rule "add_literals" (formula "41") (term "1,1,1"))
               (rule "times_zero_1" (formula "41") (term "1,1"))
               (rule "add_zero_right" (formula "41") (term "1"))
               (rule "applyEq" (formula "50") (term "1") (ifseqformula "35"))
               (rule "applyEqRigid" (formula "52") (term "0,2,0") (ifseqformula "35"))
               (rule "applyEqRigid" (formula "52") (term "1,0,1,0") (ifseqformula "35"))
               (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
               (rule "applyEqRigid" (formula "38") (term "1,1") (ifseqformula "35"))
               (rule "polySimp_addAssoc" (formula "38") (term "1"))
               (rule "polySimp_addComm0" (formula "38") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "38") (term "1"))
               (rule "add_literals" (formula "38") (term "1,1,1"))
               (rule "times_zero_1" (formula "38") (term "1,1"))
               (rule "add_zero_right" (formula "38") (term "1"))
               (rule "applyEqRigid" (formula "21") (term "0,0,1,1") (ifseqformula "35"))
               (rule "applyEqRigid" (formula "51") (term "0,1") (ifseqformula "35"))
               (rule "applyEq" (formula "52") (term "1,1") (ifseqformula "35"))
               (rule "polySimp_addAssoc" (formula "52") (term "1"))
               (rule "polySimp_addComm0" (formula "52") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "52") (term "1"))
               (rule "add_literals" (formula "52") (term "1,1,1"))
               (rule "times_zero_1" (formula "52") (term "1,1"))
               (rule "add_zero_right" (formula "52") (term "1"))
               (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "35"))
               (rule "polySimp_addAssoc" (formula "4") (term "1"))
               (rule "polySimp_addComm0" (formula "4") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "4") (term "1"))
               (rule "add_literals" (formula "4") (term "1,1,1"))
               (rule "times_zero_1" (formula "4") (term "1,1"))
               (rule "add_zero_right" (formula "4") (term "1"))
               (rule "applyEq" (formula "32") (term "0,1,0,1") (ifseqformula "35"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
               (rule "polySimp_addComm0" (formula "32") (term "0,0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,1"))
               (rule "add_literals" (formula "32") (term "1,1,0,1"))
               (rule "times_zero_1" (formula "32") (term "1,0,1"))
               (rule "add_zero_right" (formula "32") (term "0,1"))
               (rule "applyEqRigid" (formula "22") (term "0,1,0,1") (ifseqformula "35"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
               (rule "polySimp_addComm0" (formula "22") (term "0,0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,1"))
               (rule "add_literals" (formula "22") (term "1,1,0,1"))
               (rule "times_zero_1" (formula "22") (term "1,0,1"))
               (rule "add_zero_right" (formula "22") (term "0,1"))
               (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "35"))
               (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "35"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "1,1,0,1"))
               (rule "times_zero_1" (formula "3") (term "1,0,1"))
               (rule "add_zero_right" (formula "3") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "37"))
               (rule "polySimp_mulComm0" (formula "37") (term "1"))
               (rule "polySimp_rightDist" (formula "37") (term "1"))
               (rule "mul_literals" (formula "37") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "17"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0"))
               (rule "polySimp_elimOne" (formula "17") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "38"))
               (rule "polySimp_mulComm0" (formula "38") (term "1"))
               (rule "polySimp_rightDist" (formula "38") (term "1"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
               (rule "mul_literals" (formula "38") (term "0,1"))
               (rule "polySimp_elimOne" (formula "38") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "39"))
               (rule "polySimp_mulAssoc" (formula "18") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
               (rule "polySimp_addComm0" (formula "18") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "18"))
               (rule "polySimp_mulLiterals" (formula "18") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "18") (ifseqformula "17"))
               (rule "greater_literals" (formula "18") (term "0,0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
               (rule "add_literals" (formula "18") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "18") (term "1,0,0"))
               (rule "add_zero_right" (formula "18") (term "0,0"))
               (rule "qeq_literals" (formula "18") (term "0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "46"))
               (rule "polySimp_mulAssoc" (formula "36") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0"))
               (rule "polySimp_addComm0" (formula "36") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "36"))
               (rule "polySimp_mulComm0" (formula "36") (term "1"))
               (rule "polySimp_rightDist" (formula "36") (term "1"))
               (rule "mul_literals" (formula "36") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
               (rule "inEqSimp_subsumption6" (formula "36") (ifseqformula "39"))
               (rule "greater_literals" (formula "36") (term "0,0"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0"))
               (rule "mul_literals" (formula "36") (term "0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
               (rule "mul_literals" (formula "36") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
               (rule "add_literals" (formula "36") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
               (rule "add_literals" (formula "36") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "36") (term "1,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0"))
               (rule "qeq_literals" (formula "36") (term "0"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "true_left" (formula "36"))
               (rule "div_axiom" (formula "51") (term "0,1,1,0") (inst "quotient=quotient_6"))
               (rule "mul_literals" (formula "51") (term "1,1,1,1,1"))
               (rule "equal_literals" (formula "51") (term "0"))
               (builtin "One Step Simplification" (formula "51"))
               (rule "qeq_literals" (formula "51") (term "0,1"))
               (builtin "One Step Simplification" (formula "51"))
               (rule "andLeft" (formula "51"))
               (rule "andLeft" (formula "51"))
               (rule "polySimp_addAssoc" (formula "53") (term "0,1"))
               (rule "polySimp_addComm1" (formula "53") (term "1"))
               (rule "polySimp_addComm1" (formula "53") (term "0,1"))
               (rule "add_literals" (formula "53") (term "0,0,1"))
               (rule "inEqSimp_homoInEq0" (formula "52"))
               (rule "polySimp_mulLiterals" (formula "52") (term "1,0"))
               (rule "polySimp_addComm1" (formula "52") (term "0"))
               (rule "polySimp_addComm0" (formula "52") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "53"))
               (rule "polySimp_mulLiterals" (formula "53") (term "1,0"))
               (rule "polySimp_addComm1" (formula "53") (term "0"))
               (rule "polySimp_addComm1" (formula "53") (term "0,0"))
               (rule "applyEqRigid" (formula "54") (term "0,0,0,0") (ifseqformula "51"))
               (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0"))
               (rule "applyEq" (formula "54") (term "0,1,2,0") (ifseqformula "51"))
               (rule "polySimp_addComm1" (formula "54") (term "2,0"))
               (rule "polySimp_addComm0" (formula "54") (term "0,2,0"))
               (rule "applyEq" (formula "54") (term "0,1,1,0") (ifseqformula "51"))
               (rule "polySimp_addComm1" (formula "54") (term "1,0"))
               (rule "polySimp_addComm1" (formula "54") (term "0,1,0"))
               (rule "applyEqRigid" (formula "21") (term "0,1,1") (ifseqformula "51"))
               (rule "polySimp_addComm1" (formula "21") (term "1"))
               (rule "polySimp_addComm0" (formula "21") (term "0,1"))
               (rule "applyEq" (formula "50") (term "1") (ifseqformula "51"))
               (rule "inEqSimp_sepNegMonomial1" (formula "52"))
               (rule "polySimp_mulLiterals" (formula "52") (term "0"))
               (rule "polySimp_elimOne" (formula "52") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "53"))
               (rule "polySimp_mulLiterals" (formula "53") (term "0"))
               (rule "polySimp_elimOne" (formula "53") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "54") (term "0,0,0"))
               (rule "inEqSimp_contradInEq0" (formula "54") (term "0,0") (ifseqformula "52"))
               (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0,0"))
               (rule "add_literals" (formula "54") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "54") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0,0,0"))
               (rule "add_literals" (formula "54") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "54") (term "0,0,0,0"))
               (rule "leq_literals" (formula "54") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "54"))
               (rule "polySimp_homoEq" (formula "54"))
               (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
               (rule "polySimp_rightDist" (formula "54") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "54") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "54") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "54") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
               (rule "polySimp_addComm0" (formula "54") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0"))
               (rule "add_literals" (formula "54") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0"))
               (rule "add_zero_right" (formula "54") (term "0,0"))
               (rule "polySimp_sepPosMonomial" (formula "54"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1"))
               (rule "applyEq" (formula "46") (term "0,1,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
               (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "54"))
               (rule "inEqSimp_homoInEq1" (formula "53"))
               (rule "polySimp_mulLiterals" (formula "53") (term "1,0"))
               (rule "polySimp_addComm1" (formula "53") (term "0"))
               (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
               (rule "add_literals" (formula "53") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "53") (term "1,0,0"))
               (rule "add_zero_right" (formula "53") (term "0,0"))
               (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1"))
               (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "54"))
               (rule "inEqSimp_homoInEq1" (formula "38"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1,0"))
               (rule "polySimp_addComm1" (formula "38") (term "0"))
               (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "54"))
               (rule "inEqSimp_commuteLeq" (formula "17"))
               (rule "applyEqRigid" (formula "14") (term "0,1,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
               (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "54"))
               (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
               (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1"))
               (rule "applyEq" (formula "52") (term "0") (ifseqformula "54"))
               (rule "inEqSimp_homoInEq0" (formula "52"))
               (rule "polySimp_mulLiterals" (formula "52") (term "1,0"))
               (rule "polySimp_addComm1" (formula "52") (term "0"))
               (rule "polySimp_pullOutFactor0" (formula "52") (term "0,0"))
               (rule "add_literals" (formula "52") (term "1,0,0"))
               (rule "times_zero_1" (formula "52") (term "0,0"))
               (rule "add_zero_left" (formula "52") (term "0"))
               (rule "applyEq" (formula "50") (term "0,1,0,0") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "50") (term "0,0"))
               (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "51") (term "0,0"))
               (rule "applyEqRigid" (formula "19") (term "0,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1"))
               (rule "applyEqRigid" (formula "49") (term "0,1,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
               (rule "polySimp_addComm0" (formula "49") (term "1"))
               (rule "applyEqRigid" (formula "48") (term "0,0,0,0") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0"))
               (rule "applyEq" (formula "49") (term "0,0,0,0") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "49") (term "0,0,0"))
               (rule "applyEqRigid" (formula "41") (term "0,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1"))
               (rule "applyEq" (formula "20") (term "0,0,0,0") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
               (rule "applyEqRigid" (formula "35") (term "0,1,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
               (rule "polySimp_addComm0" (formula "35") (term "1"))
               (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
               (rule "polySimp_addComm1" (formula "21") (term "1"))
               (rule "polySimp_pullOutFactor0" (formula "21") (term "0,1"))
               (rule "add_literals" (formula "21") (term "1,0,1"))
               (rule "times_zero_1" (formula "21") (term "0,1"))
               (rule "add_zero_left" (formula "21") (term "1"))
               (rule "applyEqRigid" (formula "48") (term "0,0,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "48") (term "0,1"))
               (rule "applyEqRigid" (formula "45") (term "0,0,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "45") (term "0,1"))
               (rule "applyEqRigid" (formula "20") (term "0,0,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
               (rule "applyEqRigid" (formula "30") (term "0,0,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0,1"))
               (rule "applyEqRigid" (formula "33") (term "0,0,1") (ifseqformula "54"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
               (rule "polySimp_invertEq" (formula "56"))
               (rule "polySimp_mulLiterals" (formula "56") (term "0"))
               (rule "times_zero_2" (formula "56") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "53"))
               (rule "mul_literals" (formula "53") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "38"))
               (rule "polySimp_mulComm0" (formula "38") (term "1"))
               (rule "polySimp_rightDist" (formula "38") (term "1"))
               (rule "mul_literals" (formula "38") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
               (rule "elimGcdEq" (formula "56") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcd=Z(6(5(2(#))))"))
               (builtin "One Step Simplification" (formula "56"))
               (rule "times_zero_1" (formula "56") (term "1,0,0,0"))
               (rule "add_zero_left" (formula "56") (term "0,1,0"))
               (rule "add_zero_left" (formula "56") (term "0,0,1"))
               (rule "add_literals" (formula "56") (term "1,0,0"))
               (rule "add_zero_left" (formula "56") (term "0,0,0"))
               (rule "times_zero_1" (formula "56") (term "0,1,0"))
               (rule "times_zero_1" (formula "56") (term "0,0,1"))
               (builtin "One Step Simplification" (formula "56"))
               (rule "leq_literals" (formula "56") (term "0,0"))
               (builtin "One Step Simplification" (formula "56"))
               (rule "qeq_literals" (formula "56") (term "0"))
               (builtin "One Step Simplification" (formula "56"))
               (rule "polyDiv_pullOut" (formula "51") (term "0") (inst "polyDivCoeff=quotient_6"))
               (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,2,0"))
               (rule "equal_literals" (formula "51") (term "0,0"))
               (builtin "One Step Simplification" (formula "51"))
               (rule "polySimp_homoEq" (formula "51"))
               (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
               (rule "polySimp_addComm0" (formula "51") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "51") (term "0,1,1,1,0"))
               (rule "polySimp_pullOutFactor0" (formula "51") (term "0,0,1,1,1,0"))
               (rule "add_literals" (formula "51") (term "1,0,0,1,1,1,0"))
               (rule "times_zero_1" (formula "51") (term "0,0,1,1,1,0"))
               (rule "add_zero_left" (formula "51") (term "0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "51") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "51") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "51") (term "0"))
               (rule "polySimp_pullOutFactor1" (formula "51") (term "0,0"))
               (rule "add_literals" (formula "51") (term "1,0,0"))
               (rule "times_zero_1" (formula "51") (term "0,0"))
               (rule "add_zero_left" (formula "51") (term "0"))
               (rule "polySimp_invertEq" (formula "51"))
               (rule "polySimp_mulLiterals" (formula "51") (term "0"))
               (rule "times_zero_2" (formula "51") (term "1"))
               (rule "polySimp_elimOne" (formula "51") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "46"))
               (rule "polySimp_mulAssoc" (formula "36") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
               (rule "polySimp_addComm0" (formula "36") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "36") (ifseqformula "39"))
               (rule "greater_literals" (formula "36") (term "0,0"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "polySimp_rightDist" (formula "36") (term "0,0"))
               (rule "mul_literals" (formula "36") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
               (rule "mul_literals" (formula "36") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
               (rule "add_literals" (formula "36") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
               (rule "add_literals" (formula "36") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "36") (term "1,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0"))
               (rule "qeq_literals" (formula "36") (term "0"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "true_left" (formula "36"))
               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "53"))
               (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
               (rule "polySimp_addComm0" (formula "17") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
               (rule "mul_literals" (formula "17") (term "1"))
               (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcd=Z(6(5(2(#))))"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
               (rule "leq_literals" (formula "17") (term "0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
               (rule "add_literals" (formula "17") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0"))
               (rule "leq_literals" (formula "17") (term "0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "57"))
               (rule "add_zero_right" (formula "17") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "57") (ifseqformula "17"))
               (rule "times_zero_1" (formula "57") (term "1,0,0"))
               (rule "add_zero_right" (formula "57") (term "0,0"))
               (rule "leq_literals" (formula "57") (term "0"))
               (builtin "One Step Simplification" (formula "57"))
               (rule "false_right" (formula "57"))
               (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "10"))
               (rule "polySimp_mulAssoc" (formula "45") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "45") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "0,0"))
               (rule "polySimp_addComm0" (formula "45") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "45"))
               (rule "polySimp_mulLiterals" (formula "45") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "45") (ifseqformula "48"))
               (rule "greater_literals" (formula "45") (term "0,0"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "polySimp_rightDist" (formula "45") (term "0,0"))
               (rule "mul_literals" (formula "45") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "45") (term "0"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "45") (term "1,0,0"))
               (rule "mul_literals" (formula "45") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
               (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
               (rule "add_literals" (formula "45") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
               (rule "add_literals" (formula "45") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "45") (term "1,0,0"))
               (rule "add_zero_right" (formula "45") (term "0,0"))
               (rule "qeq_literals" (formula "45") (term "0"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "true_left" (formula "45"))
               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
               (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
               (rule "polySimp_addComm0" (formula "12") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "inEqSimp_subsumption4" (formula "12") (ifseqformula "10"))
               (rule "greater_literals" (formula "12") (term "0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
               (rule "mul_literals" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0"))
               (rule "qeq_literals" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1"))
               (rule "polySimp_rightDist" (formula "9") (term "1"))
               (rule "mul_literals" (formula "9") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
               (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "21"))
               (rule "greater_literals" (formula "9") (term "0,0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0"))
               (rule "qeq_literals" (formula "9") (term "0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "39"))
               (rule "times_zero_1" (formula "53") (term "0,0"))
               (rule "add_zero_left" (formula "53") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "53"))
               (rule "polySimp_mulLiterals" (formula "53") (term "0"))
               (rule "inEqSimp_contradInEq5" (formula "53") (ifseqformula "17"))
               (rule "greater_literals" (formula "53") (term "0,0"))
               (builtin "One Step Simplification" (formula "53"))
               (rule "mul_literals" (formula "53") (term "1,0"))
               (rule "qeq_literals" (formula "53") (term "0"))
               (builtin "One Step Simplification" (formula "53"))
               (rule "closeFalse" (formula "53"))
            )
            (branch "Exceptional Post (unsign)"
               (builtin "One Step Simplification" (formula "17"))
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "15"))
               (builtin "One Step Simplification" (formula "14"))
               (builtin "One Step Simplification" (formula "13"))
               (builtin "One Step Simplification" (formula "4"))
               (builtin "One Step Simplification" (formula "20"))
               (builtin "One Step Simplification" (formula "19"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "4"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "9"))
               (rule "translateJavaAddInt" (formula "11") (term "1"))
               (rule "translateJavaAddInt" (formula "15") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "14") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "13") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "12") (term "1,1,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "1,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "1,0,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "0,0,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "0,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,1"))
               (rule "translateJavaAddInt" (formula "11") (term "0,1"))
               (rule "translateJavaAddInt" (formula "11") (term "0,0,1"))
               (rule "replace_int_MAX" (formula "6") (term "1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
               (rule "mul_literals" (formula "11") (term "0,0,0,0,1"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "20"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "13"))
               (rule "notLeft" (formula "18"))
               (rule "close" (formula "21") (ifseqformula "20"))
            )
            (branch "Pre (unsign)"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "15"))
               (builtin "One Step Simplification" (formula "14"))
               (builtin "One Step Simplification" (formula "13"))
               (builtin "One Step Simplification" (formula "4"))
               (builtin "One Step Simplification" (formula "19"))
               (builtin "One Step Simplification" (formula "18"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "4"))
               (rule "wellFormedAnonEQ" (formula "18") (ifseqformula "9"))
               (rule "translateJavaAddInt" (formula "11") (term "1"))
               (rule "translateJavaAddInt" (formula "14") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "13") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "12") (term "1,1,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "1,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "1,0,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "0,0,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "0,1,0,0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,0,1"))
               (rule "translateJavaAddInt" (formula "11") (term "0,0,1"))
               (rule "translateJavaAddInt" (formula "11") (term "0,1"))
               (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,1"))
               (rule "replace_int_MAX" (formula "6") (term "1"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1"))
               (rule "mul_literals" (formula "11") (term "0,0,0,0,1"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "13"))
               (rule "eqSymm" (formula "23"))
               (rule "eqSymm" (formula "18") (term "0,0,1"))
               (rule "eqSymm" (formula "20") (term "0,0,1"))
               (rule "eqSymm" (formula "19") (term "0,0,1"))
               (rule "eqSymm" (formula "17"))
               (rule "eqSymm" (formula "15"))
               (rule "eqSymm" (formula "13"))
               (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "2")))
               (rule "closeTrue" (formula "21"))
            )
         )
         (branch "Exceptional Post (unsign)"
            (builtin "One Step Simplification" (formula "15"))
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "13"))
            (builtin "One Step Simplification" (formula "4"))
            (builtin "One Step Simplification" (formula "18"))
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "4"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,0") (ifseqformula "9"))
            (rule "translateJavaAddInt" (formula "11") (term "1"))
            (rule "translateJavaAddInt" (formula "14") (term "1,1,0,1"))
            (rule "translateJavaAddInt" (formula "13") (term "1,1,0,1"))
            (rule "translateJavaAddInt" (formula "12") (term "1,1,0,1"))
            (rule "translateJavaAddInt" (formula "11") (term "0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "1,0,1"))
            (rule "translateJavaAddInt" (formula "11") (term "0,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "1,0,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "0,0,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "0,1,0,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,0,1"))
            (rule "replace_int_MAX" (formula "6") (term "1"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
            (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1"))
            (rule "mul_literals" (formula "11") (term "0,0,0,0,1"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "13"))
            (rule "notLeft" (formula "16"))
            (rule "close" (formula "19") (ifseqformula "18"))
         )
         (branch "Pre (unsign)"
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "13"))
            (builtin "One Step Simplification" (formula "4"))
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "4"))
            (rule "wellFormedAnonEQ" (formula "16") (ifseqformula "9"))
            (rule "translateJavaAddInt" (formula "11") (term "1"))
            (rule "translateJavaAddInt" (formula "13") (term "1,1,0,1"))
            (rule "translateJavaAddInt" (formula "12") (term "1,1,0,1"))
            (rule "translateJavaAddInt" (formula "11") (term "0,1"))
            (rule "translateJavaAddInt" (formula "11") (term "0,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "1,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "0,1,0,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "1,0,0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "0,0,0,1"))
            (rule "replace_int_MAX" (formula "6") (term "1"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1"))
            (rule "mul_literals" (formula "11") (term "0,0,0,0,1"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "13"))
            (rule "eqSymm" (formula "19") (term "0,0,1"))
            (rule "eqSymm" (formula "21"))
            (rule "eqSymm" (formula "17") (term "0,0,1"))
            (rule "eqSymm" (formula "16") (term "0,0,1"))
            (rule "eqSymm" (formula "15"))
            (rule "eqSymm" (formula "13"))
            (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "8")))
            (rule "closeTrue" (formula "18"))
         )
      )
      (branch "Exceptional Post (unsign)"
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "4"))
         (builtin "One Step Simplification" (formula "16"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "4"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "9"))
         (rule "translateJavaAddInt" (formula "11") (term "1"))
         (rule "translateJavaAddInt" (formula "13") (term "1,1,0,1"))
         (rule "translateJavaAddInt" (formula "12") (term "1,1,0,1"))
         (rule "translateJavaAddInt" (formula "11") (term "0,1"))
         (rule "translateJavaMulInt" (formula "11") (term "1,0,1"))
         (rule "translateJavaAddInt" (formula "11") (term "0,0,1"))
         (rule "translateJavaMulInt" (formula "11") (term "1,0,0,1"))
         (rule "translateJavaMulInt" (formula "11") (term "0,0,0,1"))
         (rule "translateJavaMulInt" (formula "11") (term "0,1,0,0,1"))
         (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,1"))
         (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,0,1"))
         (rule "replace_int_MAX" (formula "6") (term "1"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
         (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1"))
         (rule "mul_literals" (formula "11") (term "0,0,0,0,1"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "14"))
         (rule "close" (formula "17") (ifseqformula "16"))
      )
      (branch "Pre (unsign)"
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "4"))
         (builtin "One Step Simplification" (formula "15"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "true_left" (formula "4"))
         (rule "wellFormedAnonEQ" (formula "14") (ifseqformula "9"))
         (rule "translateJavaAddInt" (formula "11") (term "1"))
         (rule "translateJavaAddInt" (formula "12") (term "1,1,0,1"))
         (rule "translateJavaMulInt" (formula "11") (term "1,0,1"))
         (rule "translateJavaAddInt" (formula "11") (term "0,0,1"))
         (rule "translateJavaMulInt" (formula "11") (term "0,1,0,0,1"))
         (rule "translateJavaMulInt" (formula "11") (term "0,0,0,1"))
         (rule "translateJavaMulInt" (formula "11") (term "1,0,0,1"))
         (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,0,1"))
         (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,1"))
         (rule "translateJavaAddInt" (formula "11") (term "0,1"))
         (rule "replace_int_MAX" (formula "6") (term "1"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1"))
         (rule "mul_literals" (formula "11") (term "0,0,0,0,1"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "13"))
         (rule "eqSymm" (formula "17") (term "0,0,1"))
         (rule "eqSymm" (formula "16") (term "0,0,1"))
         (rule "eqSymm" (formula "19"))
         (rule "eqSymm" (formula "14") (term "0,0,1"))
         (rule "eqSymm" (formula "13"))
         (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
         (rule "closeTrue" (formula "15"))
      )
   )
   (branch "Exceptional Post (unsign)"
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "4"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "4"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "9"))
      (rule "translateJavaAddInt" (formula "11") (term "1"))
      (rule "translateJavaAddInt" (formula "12") (term "1,1,0,1"))
      (rule "translateJavaMulInt" (formula "11") (term "1,0,1"))
      (rule "translateJavaMulInt" (formula "11") (term "1,0,0,1"))
      (rule "translateJavaMulInt" (formula "11") (term "0,0,0,1"))
      (rule "translateJavaMulInt" (formula "11") (term "0,1,0,0,1"))
      (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,1"))
      (rule "translateJavaAddInt" (formula "11") (term "0,1"))
      (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,0,1"))
      (rule "translateJavaAddInt" (formula "11") (term "0,0,1"))
      (rule "replace_int_MAX" (formula "6") (term "1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
      (rule "mul_literals" (formula "11") (term "0,0,0,0,1"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "14"))
      (rule "notLeft" (formula "12"))
      (rule "close" (formula "15") (ifseqformula "14"))
   )
   (branch "Pre (unsign)"
      (builtin "One Step Simplification" (formula "4"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "4"))
      (rule "wellFormedAnonEQ" (formula "12") (ifseqformula "9"))
      (rule "translateJavaAddInt" (formula "11") (term "1"))
      (rule "translateJavaMulInt" (formula "11") (term "1,0,0,1"))
      (rule "translateJavaMulInt" (formula "11") (term "1,0,1"))
      (rule "translateJavaMulInt" (formula "11") (term "0,0,0,1"))
      (rule "translateJavaMulInt" (formula "11") (term "0,1,0,0,1"))
      (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,0,1"))
      (rule "translateJavaAddInt" (formula "11") (term "0,1"))
      (rule "translateJavaAddInt" (formula "11") (term "0,0,1"))
      (rule "translateJavaMulInt" (formula "11") (term "0,0,0,0,1"))
      (rule "replace_int_MAX" (formula "6") (term "1"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1"))
      (rule "mul_literals" (formula "11") (term "0,0,0,0,1"))
      (rule "eqSymm" (formula "13") (term "0,0,1"))
      (rule "eqSymm" (formula "14") (term "0,0,1"))
      (rule "eqSymm" (formula "15") (term "0,0,1"))
      (rule "eqSymm" (formula "17"))
      (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "2"))
      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "8")))
      (rule "closeTrue" (formula "12"))
   )
)
(branch "Exceptional Post (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "9"))
   (builtin "One Step Simplification" (formula "3"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "true_left" (formula "3"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "11") (term "0"))
   (rule "translateJavaAddInt" (formula "8") (term "1,0,1,1"))
   (rule "translateJavaAddInt" (formula "8") (term "0,1,0,1,1"))
   (rule "translateJavaMulInt" (formula "8") (term "1,0,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "8") (term "0,0,1,0,1,1"))
   (rule "translateJavaMulInt" (formula "8") (term "0,0,0,1,0,1,1"))
   (rule "translateJavaMulInt" (formula "8") (term "0,1,0,0,1,0,1,1"))
   (rule "translateJavaMulInt" (formula "8") (term "0,0,0,0,1,0,1,1"))
   (rule "translateJavaMulInt" (formula "8") (term "1,0,0,1,0,1,1"))
   (rule "translateJavaMulInt" (formula "8") (term "0,0,0,0,0,1,0,1,1"))
   (rule "replace_int_MAX" (formula "5") (term "1"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,1,1"))
   (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,1,0,1,1"))
   (rule "mul_literals" (formula "8") (term "0,0,0,0,1,0,1,1"))
   (rule "andLeft" (formula "8"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,0") (ifseqformula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "9"))
   (rule "notLeft" (formula "9"))
   (rule "close" (formula "12") (ifseqformula "11"))
)
(branch "Pre (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "3"))
   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "9")) (ifInst ""  (formula "1")) (ifInst ""  (formula "9")))
   (rule "true_left" (formula "3"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "9") (term "0"))
   (rule "replace_int_MAX" (formula "5") (term "1"))
   (rule "eqSymm" (formula "9"))
   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "2"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "inEqSimp_geqRight" (formula "7"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "Contract_axiom_for_isByteArrOfInt_in_MessageTools" (formula "7") (term "0"))
   (rule "translateJavaCastByte" (formula "7") (term "1,1,0,1,1,1"))
   (rule "translateJavaCastByte" (formula "7") (term "1,1,0,1,1"))
   (rule "translateJavaCastByte" (formula "7") (term "1,1,0,1,1,1,1"))
   (rule "translateJavaCastByte" (formula "7") (term "1,1,1,1,1,1,1"))
   (rule "translateJavaDivInt" (formula "7") (term "0,0,1,1,0,1,1,1"))
   (rule "translateJavaMod" (formula "7") (term "1,1,0,1,1"))
   (rule "translateJavaMod" (formula "7") (term "1,1,0,1,1,1,1"))
   (rule "translateJavaMod" (formula "7") (term "1,1,1,1,1,1,1"))
   (rule "translateJavaDivInt" (formula "7") (term "0,1,1,0,1,1,1"))
   (rule "translateJavaDivInt" (formula "7") (term "0,1,1,0,1,1"))
   (rule "translateJavaDivInt" (formula "7") (term "0,1,1,0,1,1,1,1"))
   (rule "translateJavaMod" (formula "7") (term "1,1,0,1,1,1"))
   (rule "translateJavaDivInt" (formula "7") (term "0,0,1,1,0,1,1"))
   (rule "translateJavaDivInt" (formula "7") (term "0,0,0,1,1,0,1,1"))
   (rule "replace_known_left" (formula "7") (term "0,0,1,1,1") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")) (ifInst ""  (formula "9")) (ifInst ""  (formula "2")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "10"))
   (rule "jmod_axiom" (formula "11") (term "1"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
   (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
   (rule "qeq_literals" (formula "7") (term "0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "closeFalse" (formula "7"))
)
)

}
