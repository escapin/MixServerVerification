\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Jul 29 18:28:48 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=6000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Jul 29 18:28:48 CEST 2016
name=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:reverseByteArrOfInt([B,int)].JML model_behavior operation contract.0
contract=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:reverseByteArrOfInt([B,int)].JML model_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))

(autoModeTime "32169")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "a,value,result,heapAtPre,heapBefore,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "7"))
(builtin "One Step Simplification" (formula "8"))
(builtin "Evaluate Query" (formula "8") (term "0") (newnames "b,callee,queryResult,res_byteArrayToInt"))
(rule "notLeft" (formula "1") (userinteraction))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "queryResult") (userinteraction))
(builtin "Use Operation Contract" (formula "7") (newnames "heapBefore_byteArrayToInt,result_0,exc,heapAfter_byteArrayToInt,anon_heap_byteArrayToInt") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0"))
(branch "Post (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "8") (userinteraction))
   (rule "andLeft" (formula "9") (userinteraction))
   (rule "andLeft" (formula "10") (userinteraction))
   (builtin "Evaluate Query" (formula "10") (term "1,0,0,0,1") (newnames "b_0,callee,queryResult_0,res_unsign"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt,int_select(heapAfter_byteArrayToInt,a,arr(Z(0(#)))))_0_1" (formula "11") (term "1,0,0,0,1") (userinteraction))
   (builtin "Evaluate Query" (formula "11") (term "1,1,0,0,1") (newnames "b_1,callee,queryResult_0,res_unsign_0"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt,int_select(heapAfter_byteArrayToInt,a,arr(Z(1(#)))))_0_2" (formula "12") (term "1,1,0,0,1") (userinteraction))
   (rule "Definition_axiom_for_isByteArrOfInt_in_verif_utils_MessageTools" (formula "8") (term "0") (userinteraction))
   (builtin "One Step Simplification" (formula "8"))
   (builtin "Evaluate Query" (formula "12") (term "1,1,0,1") (newnames "b_2,callee,queryResult_0,res_unsign_1"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt,int_select(heapAfter_byteArrayToInt,a,arr(Z(2(#)))))_0_3" (formula "13") (term "1,1,0,1") (userinteraction))
   (builtin "Evaluate Query" (formula "13") (term "1,1") (newnames "b_3,callee,queryResult_0,res_unsign_2"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_unsign(heapAfter_byteArrayToInt,int_select(heapAfter_byteArrayToInt,a,arr(Z(3(#)))))_0_4" (formula "14") (term "1,1") (userinteraction))
   (rule "variableDeclaration" (formula "1") (term "1,0") (newnames "queryResult_0") (userinteraction))
   (rule "notLeft" (formula "1") (userinteraction))
   (rule "notLeft" (formula "1") (userinteraction))
   (rule "notLeft" (formula "1") (userinteraction))
   (rule "notLeft" (formula "1") (userinteraction))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "queryResult_0_1") (userinteraction))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "queryResult_0_2") (userinteraction))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "queryResult_0_3") (userinteraction))
   (builtin "One Step Simplification" (formula "15"))
   (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_unsign,result_1,exc_0") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
   (branch "Post (unsign)"
      (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_unsign_0,result_2,exc_1") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
      (branch "Post (unsign)"
         (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_unsign_1,result_3,exc_2") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
         (branch "Post (unsign)"
            (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_unsign_2,result_4,exc_3") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
            (branch "Post (unsign)"
               (builtin "One Step Simplification" (formula "14"))
               (builtin "One Step Simplification" (formula "13"))
               (builtin "One Step Simplification" (formula "12"))
               (builtin "One Step Simplification" (formula "11"))
               (builtin "One Step Simplification" (formula "3"))
               (builtin "One Step Simplification" (formula "18"))
               (builtin "One Step Simplification" (formula "17"))
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "3"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "20") (term "0"))
               (rule "translateJavaMod" (formula "5") (term "1,1,0,0,0"))
               (rule "translateJavaMod" (formula "5") (term "1,1,0,0"))
               (rule "translateJavaMod" (formula "5") (term "1,1,0"))
               (rule "translateJavaMod" (formula "5") (term "1,1"))
               (rule "translateJavaAddInt" (formula "9") (term "1"))
               (rule "translateJavaAddInt" (formula "13") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "12") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "11") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "10") (term "1,1,0,1"))
               (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0,0"))
               (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0"))
               (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0"))
               (rule "translateJavaMulInt" (formula "9") (term "1,0,1"))
               (rule "translateJavaMulInt" (formula "9") (term "0,0,0,1"))
               (rule "translateJavaMulInt" (formula "9") (term "1,0,0,1"))
               (rule "translateJavaAddInt" (formula "9") (term "0,1"))
               (rule "translateJavaAddInt" (formula "9") (term "0,0,1"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "eqSymm" (formula "26") (term "0,0,1"))
               (rule "eqSymm" (formula "25") (term "0,0,1"))
               (rule "eqSymm" (formula "24") (term "0,0,1"))
               (rule "eqSymm" (formula "23") (term "0,0,1"))
               (rule "eqSymm" (formula "22") (term "0,0,1"))
               (rule "eqSymm" (formula "28"))
               (rule "eqSymm" (formula "21"))
               (rule "eqSymm" (formula "19"))
               (rule "eqSymm" (formula "17"))
               (rule "eqSymm" (formula "15"))
               (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,1"))
               (rule "polySimp_addComm0" (formula "21") (term "1,0"))
               (rule "polySimp_addComm0" (formula "19") (term "1,0"))
               (rule "polySimp_addComm0" (formula "17") (term "1,0"))
               (rule "polySimp_addComm0" (formula "15") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
               (rule "assignment" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "assignment" (formula "25") (term "1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "assignment" (formula "24") (term "1"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "assignment" (formula "23") (term "1"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "assignment" (formula "22") (term "1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "jmod_axiom" (formula "9") (term "1"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0"))
               (rule "mul_literals" (formula "21") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0"))
               (rule "mul_literals" (formula "15") (term "1,0,0"))
               (rule "pullOutSelect" (formula "21") (term "2,0") (inst "selectSK=arr_0"))
               (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")))
               (rule "replaceKnownSelect_taclet00000_5" (formula "22") (term "1,1,0"))
               (rule "replaceKnownSelect_taclet00000_5" (formula "22") (term "0,0,0"))
               (rule "hideAuxiliaryEq" (formula "21"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_6" (formula "21") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_6" (formula "21") (term "0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_6" (formula "21") (term "1,1,0"))
               (rule "pullOutSelect" (formula "19") (term "2,0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")))
               (rule "replaceKnownSelect_taclet00000_7" (formula "20") (term "1,1,0"))
               (rule "replaceKnownSelect_taclet00000_7" (formula "20") (term "0,0,0"))
               (rule "hideAuxiliaryEq" (formula "19"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_8" (formula "19") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_8" (formula "19") (term "0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_8" (formula "19") (term "1,1,0"))
               (rule "pullOutSelect" (formula "17") (term "2,0") (inst "selectSK=arr_2"))
               (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")))
               (rule "replaceKnownSelect_taclet00000_9" (formula "18") (term "1,1,0"))
               (rule "replaceKnownSelect_taclet00000_9" (formula "18") (term "0,0,0"))
               (rule "hideAuxiliaryEq" (formula "17"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_10" (formula "17") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_10" (formula "17") (term "0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_10" (formula "17") (term "1,1,0"))
               (rule "pullOutSelect" (formula "15") (term "2,0") (inst "selectSK=arr_3"))
               (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")))
               (rule "replaceKnownSelect_taclet00000_11" (formula "16") (term "1,1,0"))
               (rule "replaceKnownSelect_taclet00000_11" (formula "16") (term "0,0,0"))
               (rule "hideAuxiliaryEq" (formula "15"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_12" (formula "15") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_12" (formula "15") (term "0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_12" (formula "15") (term "1,1,0"))
               (rule "methodCallEmpty" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "methodCallEmpty" (formula "25") (term "1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "methodCallEmpty" (formula "24") (term "1"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "methodCallEmpty" (formula "23") (term "1"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "methodCallEmpty" (formula "22") (term "1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "emptyModality" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "notRight" (formula "26"))
               (rule "eqSymm" (formula "1"))
               (rule "emptyModality" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "notRight" (formula "26"))
               (rule "eqSymm" (formula "1"))
               (rule "emptyModality" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "notRight" (formula "26"))
               (rule "eqSymm" (formula "1"))
               (rule "emptyModality" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "notRight" (formula "26"))
               (rule "eqSymm" (formula "1"))
               (rule "emptyModality" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "notRight" (formula "26") (userinteraction))
               (rule "ifthenelse_split" (formula "20") (term "0") (userinteraction))
               (branch "a[3] ≤ -1 TRUE"
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_homoEq" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                  (rule "applyEq" (formula "18") (term "0") (ifseqformula "5"))
                  (rule "polySimp_homoEq" (formula "18"))
                  (rule "polySimp_addComm1" (formula "18") (term "0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                  (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "14"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "20") (term "0") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq0" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                  (rule "applyEq" (formula "23") (term "2,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "2,0") (ifseqformula "13"))
                  (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "13"))
                  (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "13"))
                  (rule "applyEq" (formula "27") (term "1") (ifseqformula "1"))
                  (rule "applyEq" (formula "25") (term "1") (ifseqformula "3"))
                  (rule "applyEq" (formula "23") (term "1") (ifseqformula "2"))
                  (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "4"))
                  (rule "polySimp_sepPosMonomial" (formula "18"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1"))
                  (rule "polySimp_mulAssoc" (formula "18") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1"))
                  (rule "applyEq" (formula "4") (term "1") (ifseqformula "18"))
                  (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "18"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0,0,0,1"))
                  (rule "mul_literals" (formula "21") (term "0,0,0,0,0,1"))
                  (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "21"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "20") (term "0"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0"))
                  (rule "add_zero_right" (formula "20") (term "0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0,1"))
                  (rule "mul_literals" (formula "20") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,0,0,1"))
                  (rule "newSym_eq" (formula "21") (inst "l=l_3") (inst "newSymDef=add(add(add(add(add(Z(1(#)),
                    mul(res_byteArrayToInt, Z(0(#)))),
                mul(res_unsign, Z(6(3(5(5(6(#)))))))),
            mul(res_unsign_0, Z(6(5(2(#)))))),
        res_unsign_1),
    mul(value, Z(0(#))))"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "21") (term "1,1,1"))
                  (rule "add_zero_right" (formula "21") (term "0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "21") (term "1,1"))
                  (rule "polySimp_addAssoc" (formula "21") (term "1"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                  (rule "applyEq" (formula "26") (term "0,2,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "26") (term "0,1,1,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "26") (term "0,0,0,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "21"))
                  (rule "polySimp_homoEq" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "22") (term "0,0,0"))
                  (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "21"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,0,0,1,1"))
                  (rule "mul_literals" (formula "14") (term "0,0,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "14") (term "1"))
                  (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "21"))
                  (rule "jmod_axiom" (formula "26") (term "2,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,2,0"))
                  (rule "jmod_axiom" (formula "26") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0"))
                  (rule "jmod_axiom" (formula "26") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,0,0,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0,0"))
                  (rule "jmod_axiom" (formula "13") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                  (rule "polySimp_sepPosMonomial" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1"))
                  (rule "polySimp_rightDist" (formula "22") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                  (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                  (rule "polySimp_homoEq" (formula "21"))
                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                  (rule "applyEq" (formula "30") (term "0") (ifseqformula "22"))
                  (rule "polySimp_homoEq" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0"))
                  (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                  (rule "add_literals" (formula "30") (term "1,1,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0"))
                  (rule "add_zero_right" (formula "30") (term "0"))
                  (rule "applyEq" (formula "28") (term "0,0,1,1,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "24") (term "0,0,2,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "24") (term "0,0,1,1,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "24") (term "0,0,0,0,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "28") (term "0,0,0,0,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "28") (term "0,0,2,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "22"))
                  (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "22"))
                  (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "22"))
                  (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "22"))
                  (rule "polySimp_addComm1" (formula "14") (term "1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,1"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,1"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "14") (term "0,0,0,0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "21") (term "0,0,0,0,1"))
                  (rule "applyEqRigid" (formula "20") (term "0,0") (ifseqformula "21"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0"))
                  (rule "polySimp_rightDist" (formula "20") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0"))
                  (rule "add_zero_right" (formula "20") (term "0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0"))
                  (rule "add_zero_right" (formula "20") (term "0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                  (rule "applyEqRigid" (formula "26") (term "1,0,0,1,1,0") (ifseqformula "21"))
                  (rule "polySimp_addComm1" (formula "26") (term "1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,1,0,1,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,1,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,1,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,1,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "26") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "26") (term "1,0,0,0,1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,1,0"))
                  (rule "applyEq" (formula "26") (term "1,0,0,1,0,0,0") (ifseqformula "21"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "26") (term "0,0,0,1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "26") (term "1,0,0,0,1,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "applyEq" (formula "26") (term "1,0,0,1,2,0") (ifseqformula "21"))
                  (rule "polySimp_addComm1" (formula "26") (term "2,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,2,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,1,0,2,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,2,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,2,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,1,0,2,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,2,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,2,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,2,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,1,0,0,2,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,2,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,2,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,2,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,2,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,2,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,0,0,2,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,1,0,0,0,2,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,0,2,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,0,0,1,0,0,0,2,0"))
                  (rule "polySimp_pullOutFactor1" (formula "26") (term "0,0,0,1,0,0,0,2,0"))
                  (rule "add_literals" (formula "26") (term "1,0,0,0,1,0,0,0,2,0"))
                  (rule "times_zero_1" (formula "26") (term "0,0,0,1,0,0,0,2,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,2,0"))
                  (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "21"))
                  (rule "applyEq" (formula "3") (term "1") (ifseqformula "21"))
                  (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "21"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,0,0,1,1"))
                  (rule "mul_literals" (formula "18") (term "0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "18") (term "1"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "18") (term "1"))
                  (rule "add_literals" (formula "18") (term "1,1,1"))
                  (rule "times_zero_1" (formula "18") (term "1,1"))
                  (rule "add_zero_right" (formula "18") (term "1"))
                  (rule "polySimp_addAssoc" (formula "18") (term "1"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "18") (term "1"))
                  (rule "add_literals" (formula "18") (term "1,1,1"))
                  (rule "times_zero_1" (formula "18") (term "1,1"))
                  (rule "add_zero_right" (formula "18") (term "1"))
                  (rule "polySimp_addAssoc" (formula "18") (term "1"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,1"))
                  (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "21"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,0,0,1,1"))
                  (rule "mul_literals" (formula "14") (term "0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "1"))
                  (rule "add_literals" (formula "14") (term "1,1,1"))
                  (rule "times_zero_1" (formula "14") (term "1,1"))
                  (rule "add_zero_right" (formula "14") (term "1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "1"))
                  (rule "add_literals" (formula "14") (term "1,1,1"))
                  (rule "times_zero_1" (formula "14") (term "1,1"))
                  (rule "add_zero_right" (formula "14") (term "1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                  (rule "add_literals" (formula "14") (term "0,0,0,1"))
                  (rule "add_zero_left" (formula "14") (term "0,0,1"))
                  (rule "applyEq" (formula "13") (term "1,0,0,1,1") (ifseqformula "21"))
                  (rule "polySimp_addComm1" (formula "13") (term "1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,1,0,1"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,1,0,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,1,0,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0,0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,1,0,0,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0,0,0,1"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,1"))
                  (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0,0,0,1"))
                  (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0,0,1,0,0,0,1"))
                  (rule "add_literals" (formula "13") (term "1,0,0,0,1,0,0,0,1"))
                  (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,0,0,1"))
                  (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,1"))
                  (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "21"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0,1,1"))
                  (rule "mul_literals" (formula "4") (term "0,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "1"))
                  (rule "add_literals" (formula "4") (term "1,1,1"))
                  (rule "times_zero_1" (formula "4") (term "1,1"))
                  (rule "add_zero_right" (formula "4") (term "1"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "1"))
                  (rule "add_literals" (formula "4") (term "1,1,1"))
                  (rule "times_zero_1" (formula "4") (term "1,1"))
                  (rule "add_zero_right" (formula "4") (term "1"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,1"))
                  (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "21"))
                  (rule "polySimp_addAssoc" (formula "26") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "1,0"))
                  (rule "add_literals" (formula "26") (term "1,1,1,0"))
                  (rule "times_zero_1" (formula "26") (term "1,1,0"))
                  (rule "add_zero_right" (formula "26") (term "1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "1,0"))
                  (rule "add_literals" (formula "26") (term "1,1,1,0"))
                  (rule "times_zero_1" (formula "26") (term "1,1,0"))
                  (rule "add_zero_right" (formula "26") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                  (rule "applyEqRigid" (formula "26") (term "1,2,0") (ifseqformula "21"))
                  (rule "polySimp_addAssoc" (formula "26") (term "2,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,2,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "2,0"))
                  (rule "add_literals" (formula "26") (term "1,1,2,0"))
                  (rule "times_zero_1" (formula "26") (term "1,2,0"))
                  (rule "add_zero_right" (formula "26") (term "2,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "2,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,2,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "2,0"))
                  (rule "add_literals" (formula "26") (term "1,1,2,0"))
                  (rule "times_zero_1" (formula "26") (term "1,2,0"))
                  (rule "add_zero_right" (formula "26") (term "2,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "2,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,2,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,2,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,2,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0,2,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,0,2,0"))
                  (rule "polySimp_pullOutFactor1" (formula "26") (term "0,0,2,0"))
                  (rule "add_literals" (formula "26") (term "1,0,0,2,0"))
                  (rule "times_zero_1" (formula "26") (term "0,0,2,0"))
                  (rule "add_zero_left" (formula "26") (term "0,2,0"))
                  (rule "applyEqRigid" (formula "26") (term "0,1,0,0,0") (ifseqformula "21"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,0,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "26") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                  (rule "applyEqRigid" (formula "13") (term "1,1") (ifseqformula "21"))
                  (rule "polySimp_addAssoc" (formula "13") (term "1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "1"))
                  (rule "add_literals" (formula "13") (term "1,1,1"))
                  (rule "times_zero_1" (formula "13") (term "1,1"))
                  (rule "add_zero_right" (formula "13") (term "1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "1"))
                  (rule "add_literals" (formula "13") (term "1,1,1"))
                  (rule "times_zero_1" (formula "13") (term "1,1"))
                  (rule "add_zero_right" (formula "13") (term "1"))
                  (rule "polySimp_addComm1" (formula "13") (term "1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                  (rule "add_zero_left" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0,1"))
                  (rule "add_literals" (formula "13") (term "1,0,0,1"))
                  (rule "times_zero_1" (formula "13") (term "0,0,1"))
                  (rule "add_zero_left" (formula "13") (term "0,1"))
                  (rule "polySimp_invertEq" (formula "30"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                  (rule "times_zero_2" (formula "30") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                  (rule "elimGcdEq" (formula "30") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_3") (inst "elimGcd=Z(6(5(2(#))))"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                  (rule "add_literals" (formula "30") (term "1,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,1,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1"))
                  (rule "add_zero_left" (formula "30") (term "0,0,0"))
                  (rule "times_zero_1" (formula "30") (term "0,1,0"))
                  (rule "times_zero_1" (formula "30") (term "0,0,1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "leq_literals" (formula "30") (term "0,0"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "qeq_literals" (formula "30") (term "0"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "jdiv_axiom" (formula "28") (term "0,1,1,0"))
                  (rule "eqSymm" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "0,0,2,0"))
                  (rule "polySimp_mulAssoc" (formula "28") (term "0,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,2,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                  (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "eqSymm" (formula "28"))
                  (rule "applyEqRigid" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                  (rule "applyEqRigid" (formula "29") (term "0,2,0") (ifseqformula "28"))
                  (rule "applyEq" (formula "29") (term "0,0,0,0") (ifseqformula "28"))
                  (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "28"))
                  (rule "jdiv_axiom" (formula "24") (term "0,2,0"))
                  (rule "eqSymm" (formula "24"))
                  (rule "polySimp_mulComm0" (formula "24") (term "0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "0,0,2,0"))
                  (rule "polySimp_mulAssoc" (formula "24") (term "0,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,2,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                  (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "eqSymm" (formula "24"))
                  (rule "applyEq" (formula "25") (term "0,0,0,0") (ifseqformula "24"))
                  (rule "applyEqRigid" (formula "25") (term "0,2,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "25") (term "0,1,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "24"))
                  (rule "jdiv_axiom" (formula "21") (term "1,0,0,1"))
                  (rule "eqSymm" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0,2,0"))
                  (rule "polySimp_mulAssoc" (formula "21") (term "0,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,2,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                  (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "eqSymm" (formula "21"))
                  (rule "applyEq" (formula "28") (term "0,0,1,1,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "21"))
                  (rule "applyEqRigid" (formula "28") (term "0,0,0,0,0") (ifseqformula "21"))
                  (rule "applyEqRigid" (formula "28") (term "0,0,1,2,0") (ifseqformula "21"))
                  (rule "applyEqRigid" (formula "28") (term "1,1,0,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "13") (term "0,0,1,1") (ifseqformula "21"))
                  (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "21"))
                  (rule "applyEqRigid" (formula "18") (term "0,1,1") (ifseqformula "21"))
                  (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "21"))
                  (rule "applyEqRigid" (formula "14") (term "0,1,1") (ifseqformula "21"))
                  (rule "applyEqRigid" (formula "13") (term "0,1") (ifseqformula "21"))
                  (rule "applyEq" (formula "22") (term "1,0,0,1") (ifseqformula "21"))
                  (rule "applyEqRigid" (formula "28") (term "1,0,0,1") (ifseqformula "21"))
                  (rule "applyEqRigid" (formula "3") (term "1,0,0,1") (ifseqformula "21"))
                  (rule "polyDiv_pullOut" (formula "3") (term "1,0,0,1") (inst "polyDivCoeff=l_3"))
                  (rule "equal_literals" (formula "3") (term "0,1,0,0,1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "3") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0,0,1"))
                  (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0,1,1,0,0,1"))
                  (rule "add_literals" (formula "3") (term "1,0,0,1,1,0,0,1"))
                  (rule "times_zero_1" (formula "3") (term "0,0,1,1,0,0,1"))
                  (rule "add_zero_left" (formula "3") (term "0,1,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0,0,1"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0,0,1"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,1"))
                  (rule "add_zero_right" (formula "3") (term "0,0,0,1"))
                  (rule "polyDiv_pullOut" (formula "28") (term "1,0,0,1") (inst "polyDivCoeff=l_3"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,2,1,0,0,1"))
                  (rule "equal_literals" (formula "28") (term "0,1,0,0,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "polySimp_addComm0" (formula "28") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,1,1,0,0,1"))
                  (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,1,0,0,1"))
                  (rule "add_literals" (formula "28") (term "1,0,0,1,1,0,0,1"))
                  (rule "times_zero_1" (formula "28") (term "0,0,1,1,0,0,1"))
                  (rule "add_zero_left" (formula "28") (term "0,1,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,0,1"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0,0,1"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,0,1"))
                  (rule "add_zero_right" (formula "28") (term "0,0,0,1"))
                  (rule "polyDiv_pullOut" (formula "22") (term "1,0,0,1") (inst "polyDivCoeff=l_3"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,2,1,0,0,1"))
                  (rule "equal_literals" (formula "22") (term "0,1,0,0,1"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "polySimp_addComm0" (formula "22") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,1,0,0,1"))
                  (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0,1,1,0,0,1"))
                  (rule "add_literals" (formula "22") (term "1,0,0,1,1,0,0,1"))
                  (rule "times_zero_1" (formula "22") (term "0,0,1,1,0,0,1"))
                  (rule "add_zero_left" (formula "22") (term "0,1,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,0,0,1"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,0,1"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,0,1"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0,1"))
                  (rule "polyDiv_pullOut" (formula "13") (term "0,1") (inst "polyDivCoeff=l_3"))
                  (rule "equal_literals" (formula "13") (term "0,0,1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1,0,1"))
                  (rule "add_literals" (formula "13") (term "1,0,0,1,0,1"))
                  (rule "times_zero_1" (formula "13") (term "0,0,1,0,1"))
                  (rule "add_zero_left" (formula "13") (term "0,1,0,1"))
                  (rule "polyDiv_pullOut" (formula "14") (term "0,1,1") (inst "polyDivCoeff=l_3"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0,1,1"))
                  (rule "equal_literals" (formula "14") (term "0,0,1,1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "14") (term "1,1,1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1,1,1,1"))
                  (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1,1,1,1"))
                  (rule "add_literals" (formula "14") (term "1,0,0,1,1,1,1"))
                  (rule "times_zero_1" (formula "14") (term "0,0,1,1,1,1"))
                  (rule "add_zero_left" (formula "14") (term "0,1,1,1,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                  (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1"))
                  (rule "add_literals" (formula "14") (term "1,0,0,1"))
                  (rule "times_zero_1" (formula "14") (term "0,0,1"))
                  (rule "add_zero_left" (formula "14") (term "0,1"))
                  (rule "polyDiv_pullOut" (formula "18") (term "0,1,1") (inst "polyDivCoeff=l_3"))
                  (rule "equal_literals" (formula "18") (term "0,0,1,1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "18") (term "1,1,1"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,1,1,1,1"))
                  (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0,1,1,1,1"))
                  (rule "add_literals" (formula "18") (term "1,0,0,1,1,1,1"))
                  (rule "times_zero_1" (formula "18") (term "0,0,1,1,1,1"))
                  (rule "add_zero_left" (formula "18") (term "0,1,1,1,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "18") (term "1"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,1"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "18") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "4") (term "0,1,1") (inst "polyDivCoeff=l_3"))
                  (rule "equal_literals" (formula "4") (term "0,0,1,1"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "4") (term "1,1,1"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,1,1,1,1"))
                  (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,1,1,1,1"))
                  (rule "add_literals" (formula "4") (term "1,0,0,1,1,1,1"))
                  (rule "times_zero_1" (formula "4") (term "0,0,1,1,1,1"))
                  (rule "add_zero_left" (formula "4") (term "0,1,1,1,1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "4") (term "0,0,1"))
                  (rule "polyDiv_pullOut" (formula "20") (term "0,0") (inst "polyDivCoeff=l_3"))
                  (rule "equal_literals" (formula "20") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0"))
                  (rule "polySimp_addComm0" (formula "20") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,1,1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "20") (term "1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "20") (term "0,0,1,1,0"))
                  (rule "add_zero_left" (formula "20") (term "0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                  (rule "polyDiv_pullOut" (formula "21") (term "1") (inst "polyDivCoeff=l_3"))
                  (rule "equal_literals" (formula "21") (term "0,1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "21") (term "1"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,1,1"))
                  (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,1,1"))
                  (rule "add_literals" (formula "21") (term "1,0,0,1,1"))
                  (rule "times_zero_1" (formula "21") (term "0,0,1,1"))
                  (rule "add_zero_left" (formula "21") (term "0,1,1"))
                  (rule "polyDiv_pullOut" (formula "13") (term "0,0,1,1") (inst "polyDivCoeff=l_3"))
                  (rule "equal_literals" (formula "13") (term "0,0,0,1,1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1,0,0,1,1"))
                  (rule "add_literals" (formula "13") (term "1,0,0,1,0,0,1,1"))
                  (rule "times_zero_1" (formula "13") (term "0,0,1,0,0,1,1"))
                  (rule "add_zero_left" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polyDiv_pullOut" (formula "28") (term "0,0,1,1,0") (inst "polyDivCoeff=l_3"))
                  (rule "equal_literals" (formula "28") (term "0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "28") (term "0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "28") (term "0,0,1,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "28") (term "0,1,0,0,1,1,0"))
                  (rule "polyDiv_pullOut" (formula "28") (term "0,0,1,2,0") (inst "polyDivCoeff=l_3"))
                  (rule "equal_literals" (formula "28") (term "0,0,0,1,2,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,1,2,0"))
                  (rule "polySimp_addComm0" (formula "28") (term "0,0,1,2,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,1,2,0"))
                  (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,0,0,1,2,0"))
                  (rule "add_literals" (formula "28") (term "1,0,0,1,0,0,1,2,0"))
                  (rule "times_zero_1" (formula "28") (term "0,0,1,0,0,1,2,0"))
                  (rule "add_zero_left" (formula "28") (term "0,1,0,0,1,2,0"))
                  (rule "polyDiv_pullOut" (formula "28") (term "1,0,1,0") (inst "polyDivCoeff=l_3"))
                  (rule "equal_literals" (formula "28") (term "0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "28") (term "1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,1,1,0,1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,1,0,1,0"))
                  (rule "add_literals" (formula "28") (term "1,0,0,1,1,0,1,0"))
                  (rule "times_zero_1" (formula "28") (term "0,0,1,1,0,1,0"))
                  (rule "add_zero_left" (formula "28") (term "0,1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                  (rule "polyDiv_pullOut" (formula "28") (term "0,2,0") (inst "polyDivCoeff=l_3"))
                  (rule "equal_literals" (formula "28") (term "0,0,2,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,2,0"))
                  (rule "polySimp_addComm0" (formula "28") (term "0,2,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,1,0,2,0"))
                  (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,0,2,0"))
                  (rule "add_literals" (formula "28") (term "1,0,0,1,0,2,0"))
                  (rule "times_zero_1" (formula "28") (term "0,0,1,0,2,0"))
                  (rule "add_zero_left" (formula "28") (term "0,1,0,2,0"))
                  (rule "polyDiv_pullOut" (formula "28") (term "1,1,0,0") (inst "polyDivCoeff=l_3"))
                  (rule "equal_literals" (formula "28") (term "0,1,1,0,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,1,1,1,0,0"))
                  (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,1,1,0,0"))
                  (rule "add_literals" (formula "28") (term "1,0,0,1,1,1,0,0"))
                  (rule "times_zero_1" (formula "28") (term "0,0,1,1,1,0,0"))
                  (rule "add_zero_left" (formula "28") (term "0,1,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "1,0,0"))
                  (rule "polyDiv_pullOut" (formula "28") (term "0,0,0,0,0") (inst "polyDivCoeff=l_3"))
                  (rule "equal_literals" (formula "28") (term "0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "28") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "28") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "28") (term "0,1,0,0,0,0,0"))
                  (rule "div_axiom" (formula "30") (term "1") (inst "quotient=quotient_7"))
                  (rule "mul_literals" (formula "30") (term "1,1,1,1,1"))
                  (rule "equal_literals" (formula "30") (term "0"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "qeq_literals" (formula "30") (term "0,1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "32") (term "1"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                  (rule "add_literals" (formula "32") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "31"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0"))
                  (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "32"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                  (rule "applyEq" (formula "34") (term "0,2,0") (ifseqformula "30"))
                  (rule "applyEqRigid" (formula "34") (term "0,1,1,0") (ifseqformula "30"))
                  (rule "applyEqRigid" (formula "34") (term "0,0,0,0") (ifseqformula "30"))
                  (rule "applyEqRigid" (formula "33") (term "1") (ifseqformula "30"))
                  (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "30"))
                  (rule "jmod_axiom" (formula "34") (term "2,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,2,0"))
                  (rule "jmod_axiom" (formula "34") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "1,0"))
                  (rule "jmod_axiom" (formula "34") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                  (rule "jmod_axiom" (formula "11") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1"))
                  (rule "polySimp_rightDist" (formula "31") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "31") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,1"))
                  (rule "mul_literals" (formula "32") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "32"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0"))
                  (rule "add_zero_right" (formula "9") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_7") (inst "elimGcd=Z(6(1(2(7(7(7(6(1(#)))))))))"))
                  (rule "leq_literals" (formula "9") (term "0,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "div_axiom" (formula "26") (term "1") (inst "quotient=quotient_8"))
                  (rule "qeq_literals" (formula "26") (term "0,1,1"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "equal_literals" (formula "26") (term "0"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "mul_literals" (formula "26") (term "1,1,1"))
                  (rule "andLeft" (formula "26"))
                  (rule "andLeft" (formula "26"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "28") (term "1"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                  (rule "add_literals" (formula "28") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "27"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0"))
                  (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "28"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                  (rule "applyEqRigid" (formula "30") (term "0,1,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "30") (term "0,2,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "30") (term "0,0,0,0") (ifseqformula "26"))
                  (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "26"))
                  (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "26"))
                  (rule "jmod_axiom" (formula "30") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "1,0"))
                  (rule "jmod_axiom" (formula "30") (term "2,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,2,0"))
                  (rule "jmod_axiom" (formula "30") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                  (rule "jmod_axiom" (formula "13") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1"))
                  (rule "polySimp_rightDist" (formula "27") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "27") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1"))
                  (rule "polySimp_rightDist" (formula "28") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "28") (term "0,1"))
                  (rule "mul_literals" (formula "28") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "28"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "1,1,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0"))
                  (rule "add_zero_right" (formula "10") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_8") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                  (rule "leq_literals" (formula "10") (term "0,0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "37"))
                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "28") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "28") (term "0"))
                  (rule "add_literals" (formula "28") (term "1,1,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0"))
                  (rule "add_zero_right" (formula "28") (term "0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                  (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1"))
                  (rule "polySimp_rightDist" (formula "28") (term "1"))
                  (rule "mul_literals" (formula "28") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                  (rule "elimGcdGeq_antec" (formula "28") (inst "elimGcdRightDiv=add(Z(neglit(5(5(2(#))))), quotient_8)") (inst "elimGcdLeftDiv=mul(quotient_7, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                  (rule "leq_literals" (formula "28") (term "0,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0"))
                  (rule "leq_literals" (formula "28") (term "0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "30"))
                  (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "37") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "37") (term "0"))
                  (rule "add_literals" (formula "37") (term "1,1,0"))
                  (rule "times_zero_1" (formula "37") (term "1,0"))
                  (rule "add_zero_right" (formula "37") (term "0"))
                  (rule "polySimp_addComm0" (formula "37") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "37") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_8)") (inst "elimGcdLeftDiv=mul(quotient_7, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,1,0"))
                  (rule "leq_literals" (formula "37") (term "0,0"))
                  (builtin "One Step Simplification" (formula "37"))
                  (rule "neg_literal" (formula "37") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "37") (term "1,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "37") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                  (rule "add_literals" (formula "37") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "37") (term "1,0,0"))
                  (rule "add_zero_right" (formula "37") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                  (rule "add_literals" (formula "37") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "37") (term "1,0,0"))
                  (rule "add_zero_right" (formula "37") (term "0,0"))
                  (rule "qeq_literals" (formula "37") (term "0"))
                  (builtin "One Step Simplification" (formula "37"))
                  (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "37"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                  (rule "greater_literals" (formula "9") (term "0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "times_zero_1" (formula "9") (term "0,0"))
                  (rule "add_zero_left" (formula "9") (term "0"))
                  (rule "div_axiom" (formula "3") (term "1,0,0,1") (inst "quotient=quotient_9"))
                  (rule "equal_literals" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "qeq_literals" (formula "3") (term "0,1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1,1,1"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "polySimp_addComm1" (formula "5") (term "1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "applyEqRigid" (formula "37") (term "1,1,0,0") (ifseqformula "3"))
                  (rule "polySimp_addComm1" (formula "37") (term "1,0,0"))
                  (rule "applyEqRigid" (formula "37") (term "1,0,0,1,2,0") (ifseqformula "3"))
                  (rule "polySimp_addComm1" (formula "37") (term "2,0"))
                  (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0,2,0"))
                  (rule "applyEq" (formula "37") (term "1,0,0,0,0,0") (ifseqformula "3"))
                  (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0,0"))
                  (rule "applyEqRigid" (formula "25") (term "0,0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "applyEq" (formula "37") (term "1,0,0,1,1,0") (ifseqformula "3"))
                  (rule "polySimp_addComm1" (formula "37") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0,1,0"))
                  (rule "applyEqRigid" (formula "23") (term "0,1,1") (ifseqformula "3"))
                  (rule "polySimp_addComm1" (formula "23") (term "1"))
                  (rule "applyEqRigid" (formula "18") (term "1,0,0,1,1") (ifseqformula "3"))
                  (rule "polySimp_addComm1" (formula "18") (term "1"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0,1"))
                  (rule "applyEqRigid" (formula "19") (term "0,1,1") (ifseqformula "3"))
                  (rule "polySimp_addComm0" (formula "19") (term "1"))
                  (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "3"))
                  (rule "polySimp_addComm1" (formula "7") (term "1"))
                  (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                  (rule "polySimp_addComm0" (formula "26") (term "1"))
                  (rule "applyEqRigid" (formula "37") (term "1,2,0") (ifseqformula "3"))
                  (rule "polySimp_addComm1" (formula "37") (term "2,0"))
                  (rule "polySimp_addComm0" (formula "37") (term "0,2,0"))
                  (rule "applyEqRigid" (formula "27") (term "1,0,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "37") (term "1,0,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "6") (term "1,0,0,1") (ifseqformula "3"))
                  (rule "applyEqRigid" (formula "37") (term "1,1,0") (ifseqformula "3"))
                  (rule "polySimp_addComm1" (formula "37") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                  (rule "applyEqRigid" (formula "18") (term "1,1") (ifseqformula "3"))
                  (rule "polySimp_addComm1" (formula "18") (term "1"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1"))
                  (rule "polySimp_rightDist" (formula "25") (term "1"))
                  (rule "mul_literals" (formula "25") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                  (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "25"))
                  (rule "andLeft" (formula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0"))
                  (rule "add_zero_right" (formula "4") (term "0"))
                  (rule "leq_literals" (formula "4"))
                  (rule "closeFalse" (formula "4"))
               )
               (branch "a[3] ≤ -1 FALSE"
                  (rule "ifthenelse_split" (formula "22") (term "0") (userinteraction))
                  (branch "a[1] ≤ -1 TRUE"
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_homoEq" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                     (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "28"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "6"))
                     (rule "polySimp_homoEq" (formula "19"))
                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0"))
                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "15"))
                     (rule "polySimp_homoEq" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0"))
                     (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                     (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                     (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "26") (term "2,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "26") (term "1") (ifseqformula "4"))
                     (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "28") (term "1") (ifseqformula "2"))
                     (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "5"))
                     (rule "polySimp_sepPosMonomial" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1"))
                     (rule "polySimp_mulAssoc" (formula "19") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1"))
                     (rule "applyEq" (formula "5") (term "1") (ifseqformula "19"))
                     (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "19"))
                     (rule "polySimp_sepNegMonomial" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                     (rule "inEqSimp_homoInEq0" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                     (rule "add_literals" (formula "23") (term "0,0"))
                     (rule "applyEq" (formula "13") (term "1") (ifseqformula "24"))
                     (rule "polySimp_sepPosMonomial" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "newSym_eq" (formula "21") (inst "l=l_4") (inst "newSymDef=add(add(add(add(mul(res_byteArrayToInt, Z(0(#))),
                mul(res_unsign, Z(6(3(5(5(6(#)))))))),
            mul(res_unsign_0, Z(6(5(2(#)))))),
        res_unsign_1),
    mul(value, Z(0(#))))"))
                     (rule "times_zero_1" (formula "21") (term "0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "21") (term "1,1,1"))
                     (rule "add_zero_left" (formula "21") (term "0,0,0,1,1"))
                     (rule "add_zero_right" (formula "21") (term "1,1"))
                     (rule "polySimp_addAssoc" (formula "21") (term "1"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                     (rule "applyEq" (formula "27") (term "0,1,1,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "27") (term "0,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "21"))
                     (rule "polySimp_homoEq" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                     (rule "applyEq" (formula "27") (term "0,2,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "21"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "15") (term "1"))
                     (rule "jmod_axiom" (formula "27") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0"))
                     (rule "jmod_axiom" (formula "27") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "0,0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0"))
                     (rule "jmod_axiom" (formula "27") (term "2,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,2,0"))
                     (rule "jmod_axiom" (formula "14") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                     (rule "polySimp_sepPosMonomial" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1"))
                     (rule "polySimp_rightDist" (formula "22") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                     (rule "applyEq" (formula "29") (term "0,0,2,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "29") (term "0,0,1,1,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                     (rule "polySimp_homoEq" (formula "21"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                     (rule "applyEq" (formula "29") (term "0,0,0,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "31") (term "0") (ifseqformula "22"))
                     (rule "polySimp_homoEq" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0"))
                     (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                     (rule "add_literals" (formula "31") (term "1,1,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0"))
                     (rule "add_zero_right" (formula "31") (term "0"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "22"))
                     (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "22"))
                     (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "22"))
                     (rule "polySimp_addComm1" (formula "15") (term "1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,0,0,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "0,0,0,0,1"))
                     (rule "add_zero_left" (formula "15") (term "0,0,0,1"))
                     (rule "polySimp_sepPosMonomial" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,1"))
                     (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "21"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                     (rule "applyEqRigid" (formula "27") (term "1,0,0,1,2,0") (ifseqformula "21"))
                     (rule "polySimp_addComm1" (formula "27") (term "2,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,2,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,2,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1,0,2,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,2,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,2,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,1,0,2,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,2,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,2,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,2,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1,0,0,2,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,2,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,2,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,2,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,2,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,2,0"))
                     (rule "polySimp_pullOutFactor1" (formula "27") (term "0,0,0,1,0,0,0,2,0"))
                     (rule "add_literals" (formula "27") (term "1,0,0,0,1,0,0,0,2,0"))
                     (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,0,0,2,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,2,0"))
                     (rule "applyEqRigid" (formula "27") (term "1,0,0,1,0,0,0") (ifseqformula "21"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "27") (term "0,0,0,1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "27") (term "1,0,0,0,1,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,0,0,0"))
                     (rule "applyEqRigid" (formula "27") (term "1,0,0,1,1,0") (ifseqformula "21"))
                     (rule "polySimp_addComm1" (formula "27") (term "1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1,0,1,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,1,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor1" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "27") (term "1,0,0,0,1,0,0,0,1,0"))
                     (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,1,0"))
                     (rule "applyEq" (formula "27") (term "1") (ifseqformula "21"))
                     (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "21"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0,1,1"))
                     (rule "polySimp_mulAssoc" (formula "19") (term "0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "1"))
                     (rule "add_literals" (formula "19") (term "1,1,1"))
                     (rule "times_zero_1" (formula "19") (term "1,1"))
                     (rule "add_zero_right" (formula "19") (term "1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "1"))
                     (rule "add_literals" (formula "19") (term "1,1,1"))
                     (rule "times_zero_1" (formula "19") (term "1,1"))
                     (rule "add_zero_right" (formula "19") (term "1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "1"))
                     (rule "polySimp_addComm0" (formula "19") (term "0,1"))
                     (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "21"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,0,1,1"))
                     (rule "polySimp_mulAssoc" (formula "5") (term "0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "5") (term "1"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "5") (term "1"))
                     (rule "add_literals" (formula "5") (term "1,1,1"))
                     (rule "times_zero_1" (formula "5") (term "1,1"))
                     (rule "add_zero_right" (formula "5") (term "1"))
                     (rule "polySimp_addAssoc" (formula "5") (term "1"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "5") (term "1"))
                     (rule "add_literals" (formula "5") (term "1,1,1"))
                     (rule "times_zero_1" (formula "5") (term "1,1"))
                     (rule "add_zero_right" (formula "5") (term "1"))
                     (rule "polySimp_addAssoc" (formula "5") (term "1"))
                     (rule "polySimp_addComm0" (formula "5") (term "0,1"))
                     (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "21"))
                     (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "21"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0,1,1"))
                     (rule "polySimp_mulAssoc" (formula "15") (term "0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "1"))
                     (rule "add_literals" (formula "15") (term "1,1,1"))
                     (rule "times_zero_1" (formula "15") (term "1,1"))
                     (rule "add_zero_right" (formula "15") (term "1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "1"))
                     (rule "add_literals" (formula "15") (term "1,1,1"))
                     (rule "times_zero_1" (formula "15") (term "1,1"))
                     (rule "add_zero_right" (formula "15") (term "1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "1"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,1"))
                     (rule "applyEq" (formula "14") (term "1,0,0,1,1") (ifseqformula "21"))
                     (rule "polySimp_addComm1" (formula "14") (term "1"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,1,0,1"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0,1,0,1"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,1"))
                     (rule "add_zero_right" (formula "14") (term "0,0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,1,0,0,1"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0,1,0,0,1"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,1"))
                     (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1"))
                     (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0,0,1,0,0,0,1"))
                     (rule "add_literals" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
                     (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,0,1"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,1"))
                     (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "21"))
                     (rule "polySimp_addAssoc" (formula "27") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0"))
                     (rule "add_literals" (formula "27") (term "1,1,1,0"))
                     (rule "times_zero_1" (formula "27") (term "1,1,0"))
                     (rule "add_zero_right" (formula "27") (term "1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0"))
                     (rule "add_literals" (formula "27") (term "1,1,1,0"))
                     (rule "times_zero_1" (formula "27") (term "1,1,0"))
                     (rule "add_zero_right" (formula "27") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                     (rule "applyEq" (formula "27") (term "0,1,0,0,0") (ifseqformula "21"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "27") (term "0,0,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                     (rule "applyEqRigid" (formula "27") (term "1,2,0") (ifseqformula "21"))
                     (rule "polySimp_addAssoc" (formula "27") (term "2,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,2,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "2,0"))
                     (rule "add_literals" (formula "27") (term "1,1,2,0"))
                     (rule "times_zero_1" (formula "27") (term "1,2,0"))
                     (rule "add_zero_right" (formula "27") (term "2,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "2,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,2,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "2,0"))
                     (rule "add_literals" (formula "27") (term "1,1,2,0"))
                     (rule "times_zero_1" (formula "27") (term "1,2,0"))
                     (rule "add_zero_right" (formula "27") (term "2,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "2,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,2,0"))
                     (rule "polySimp_pullOutFactor1" (formula "27") (term "0,0,2,0"))
                     (rule "add_literals" (formula "27") (term "1,0,0,2,0"))
                     (rule "times_zero_1" (formula "27") (term "0,0,2,0"))
                     (rule "add_zero_left" (formula "27") (term "0,2,0"))
                     (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "21"))
                     (rule "polySimp_addAssoc" (formula "14") (term "1"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "14") (term "1"))
                     (rule "add_literals" (formula "14") (term "1,1,1"))
                     (rule "times_zero_1" (formula "14") (term "1,1"))
                     (rule "add_zero_right" (formula "14") (term "1"))
                     (rule "polySimp_addAssoc" (formula "14") (term "1"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "14") (term "1"))
                     (rule "add_literals" (formula "14") (term "1,1,1"))
                     (rule "times_zero_1" (formula "14") (term "1,1"))
                     (rule "add_zero_right" (formula "14") (term "1"))
                     (rule "polySimp_addComm1" (formula "14") (term "1"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                     (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0,1"))
                     (rule "add_literals" (formula "14") (term "1,0,0,1"))
                     (rule "times_zero_1" (formula "14") (term "0,0,1"))
                     (rule "add_zero_left" (formula "14") (term "0,1"))
                     (rule "polySimp_invertEq" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                     (rule "times_zero_2" (formula "31") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                     (rule "elimGcdEq" (formula "31") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_4") (inst "elimGcd=Z(6(5(2(#))))"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "times_zero_1" (formula "31") (term "1,0,1,0"))
                     (rule "add_zero_left" (formula "31") (term "0,0,0"))
                     (rule "add_literals" (formula "31") (term "1,0,0"))
                     (rule "add_zero_left" (formula "31") (term "0,0,1"))
                     (rule "add_zero_left" (formula "31") (term "0,1,0"))
                     (rule "times_zero_1" (formula "31") (term "0,0,0"))
                     (rule "times_zero_1" (formula "31") (term "0,0,1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "leq_literals" (formula "31") (term "0,0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                     (rule "leq_literals" (formula "11") (term "0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "jdiv_axiom" (formula "29") (term "0,2,0"))
                     (rule "eqSymm" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,2,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "0,0,2,0"))
                     (rule "polySimp_mulAssoc" (formula "29") (term "0,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,2,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                     (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "eqSymm" (formula "29"))
                     (rule "applyEqRigid" (formula "30") (term "0,0,0,0") (ifseqformula "29"))
                     (rule "applyEqRigid" (formula "30") (term "0,1,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "30") (term "0,2,0") (ifseqformula "29"))
                     (rule "applyEqRigid" (formula "12") (term "0,1") (ifseqformula "29"))
                     (rule "jdiv_axiom" (formula "25") (term "0,0"))
                     (rule "eqSymm" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,0,2,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "0,0,2,0"))
                     (rule "polySimp_mulAssoc" (formula "25") (term "0,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,2,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                     (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "eqSymm" (formula "25"))
                     (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "25"))
                     (rule "jdiv_axiom" (formula "21") (term "1,0,0,1"))
                     (rule "eqSymm" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,0,2,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,0,2,0"))
                     (rule "polySimp_mulAssoc" (formula "21") (term "0,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,2,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                     (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "eqSymm" (formula "21"))
                     (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "21"))
                     (rule "applyEqRigid" (formula "29") (term "0,0,0,0,0") (ifseqformula "21"))
                     (rule "applyEqRigid" (formula "29") (term "0,0,1,1,0") (ifseqformula "21"))
                     (rule "applyEqRigid" (formula "29") (term "0,0,1,2,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "29") (term "0,2,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "14") (term "0,0,1,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "21"))
                     (rule "applyEqRigid" (formula "14") (term "0,1") (ifseqformula "21"))
                     (rule "applyEqRigid" (formula "22") (term "1,0,0,1") (ifseqformula "21"))
                     (rule "applyEqRigid" (formula "4") (term "1,0,0,1") (ifseqformula "21"))
                     (rule "applyEq" (formula "29") (term "1,0,0,1") (ifseqformula "21"))
                     (rule "polyDiv_pullOut" (formula "29") (term "1,0,0,1") (inst "polyDivCoeff=l_4"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,2,1,0,0,1"))
                     (rule "equal_literals" (formula "29") (term "0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_addComm0" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,1,1,0,0,1"))
                     (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1,1,0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,0,0,1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "0,0,1,1,0,0,1"))
                     (rule "add_zero_left" (formula "29") (term "0,1,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor2" (formula "29") (term "0,0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,0,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "0,0,0,1"))
                     (rule "add_zero_left" (formula "29") (term "0,0,1"))
                     (rule "polyDiv_pullOut" (formula "4") (term "1,0,0,1") (inst "polyDivCoeff=l_4"))
                     (rule "equal_literals" (formula "4") (term "0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "4") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,1,1,0,0,1"))
                     (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,1,1,0,0,1"))
                     (rule "add_literals" (formula "4") (term "1,0,0,1,1,0,0,1"))
                     (rule "times_zero_1" (formula "4") (term "0,0,1,1,0,0,1"))
                     (rule "add_zero_left" (formula "4") (term "0,1,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor2" (formula "4") (term "0,0,0,1"))
                     (rule "add_literals" (formula "4") (term "1,0,0,0,1"))
                     (rule "times_zero_1" (formula "4") (term "0,0,0,1"))
                     (rule "add_zero_left" (formula "4") (term "0,0,1"))
                     (rule "polyDiv_pullOut" (formula "22") (term "1,0,0,1") (inst "polyDivCoeff=l_4"))
                     (rule "equal_literals" (formula "22") (term "0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "22") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "22") (term "0,1,1,0,0,1"))
                     (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0,1,1,0,0,1"))
                     (rule "add_literals" (formula "22") (term "1,0,0,1,1,0,0,1"))
                     (rule "times_zero_1" (formula "22") (term "0,0,1,1,0,0,1"))
                     (rule "add_zero_left" (formula "22") (term "0,1,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor2" (formula "22") (term "0,0,0,1"))
                     (rule "add_literals" (formula "22") (term "1,0,0,0,1"))
                     (rule "times_zero_1" (formula "22") (term "0,0,0,1"))
                     (rule "add_zero_left" (formula "22") (term "0,0,1"))
                     (rule "polyDiv_pullOut" (formula "14") (term "0,1") (inst "polyDivCoeff=l_4"))
                     (rule "equal_literals" (formula "14") (term "0,0,1"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1"))
                     (rule "polySimp_addComm0" (formula "14") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1"))
                     (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1,0,1"))
                     (rule "add_literals" (formula "14") (term "1,0,0,1,0,1"))
                     (rule "times_zero_1" (formula "14") (term "0,0,1,0,1"))
                     (rule "add_zero_left" (formula "14") (term "0,1,0,1"))
                     (rule "polyDiv_pullOut" (formula "5") (term "0,1,1") (inst "polyDivCoeff=l_4"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,0,1,1"))
                     (rule "equal_literals" (formula "5") (term "0,0,1,1"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "5") (term "1,1,1"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,1,1,1,1"))
                     (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1,1,1,1"))
                     (rule "add_literals" (formula "5") (term "1,0,0,1,1,1,1"))
                     (rule "times_zero_1" (formula "5") (term "0,0,1,1,1,1"))
                     (rule "add_zero_left" (formula "5") (term "0,1,1,1,1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "5") (term "1"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                     (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1"))
                     (rule "add_literals" (formula "5") (term "1,0,0,1"))
                     (rule "times_zero_1" (formula "5") (term "0,0,1"))
                     (rule "add_zero_left" (formula "5") (term "0,1"))
                     (rule "polyDiv_pullOut" (formula "15") (term "0,1,1") (inst "polyDivCoeff=l_4"))
                     (rule "equal_literals" (formula "15") (term "0,0,1,1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "15") (term "1,1,1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,1"))
                     (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1,1,1,1"))
                     (rule "add_literals" (formula "15") (term "1,0,0,1,1,1,1"))
                     (rule "times_zero_1" (formula "15") (term "0,0,1,1,1,1"))
                     (rule "add_zero_left" (formula "15") (term "0,1,1,1,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                     (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "0,0,1"))
                     (rule "add_zero_left" (formula "15") (term "0,1"))
                     (rule "polyDiv_pullOut" (formula "19") (term "0,1,1") (inst "polyDivCoeff=l_4"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,2,0,1,1"))
                     (rule "equal_literals" (formula "19") (term "0,0,1,1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "19") (term "1,1,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,1,1,1"))
                     (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,1,1,1,1"))
                     (rule "add_literals" (formula "19") (term "1,0,0,1,1,1,1"))
                     (rule "times_zero_1" (formula "19") (term "0,0,1,1,1,1"))
                     (rule "add_zero_left" (formula "19") (term "0,1,1,1,1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                     (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,1"))
                     (rule "add_literals" (formula "19") (term "1,0,0,1"))
                     (rule "times_zero_1" (formula "19") (term "0,0,1"))
                     (rule "add_zero_left" (formula "19") (term "0,1"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=l_4"))
                     (rule "equal_literals" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,1,0"))
                     (rule "add_literals" (formula "1") (term "1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "0,0,1,1,0"))
                     (rule "add_zero_left" (formula "1") (term "0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polyDiv_pullOut" (formula "21") (term "1") (inst "polyDivCoeff=l_4"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,2,1"))
                     (rule "equal_literals" (formula "21") (term "0,1"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "polySimp_addComm0" (formula "21") (term "1"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,1,1"))
                     (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,1,1"))
                     (rule "add_literals" (formula "21") (term "1,0,0,1,1"))
                     (rule "times_zero_1" (formula "21") (term "0,0,1,1"))
                     (rule "add_zero_left" (formula "21") (term "0,1,1"))
                     (rule "polyDiv_pullOut" (formula "14") (term "0,0,1,1") (inst "polyDivCoeff=l_4"))
                     (rule "equal_literals" (formula "14") (term "0,0,0,1,1"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,1"))
                     (rule "polySimp_addComm0" (formula "14") (term "0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,1,1"))
                     (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1,0,0,1,1"))
                     (rule "add_literals" (formula "14") (term "1,0,0,1,0,0,1,1"))
                     (rule "times_zero_1" (formula "14") (term "0,0,1,0,0,1,1"))
                     (rule "add_zero_left" (formula "14") (term "0,1,0,0,1,1"))
                     (rule "polyDiv_pullOut" (formula "29") (term "1,1,0,0") (inst "polyDivCoeff=l_4"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,2,1,1,0,0"))
                     (rule "equal_literals" (formula "29") (term "0,1,1,0,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_addComm0" (formula "29") (term "1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,1,1,1,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1,1,1,0,0"))
                     (rule "add_literals" (formula "29") (term "1,0,0,1,1,1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "0,0,1,1,1,0,0"))
                     (rule "add_zero_left" (formula "29") (term "0,1,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "1,0,0"))
                     (rule "polyDiv_pullOut" (formula "29") (term "0,0,1,2,0") (inst "polyDivCoeff=l_4"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,2,0,0,1,2,0"))
                     (rule "equal_literals" (formula "29") (term "0,0,0,1,2,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_addComm0" (formula "29") (term "0,0,1,2,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1,0,0,1,2,0"))
                     (rule "add_literals" (formula "29") (term "1,0,0,1,0,0,1,2,0"))
                     (rule "times_zero_1" (formula "29") (term "0,0,1,0,0,1,2,0"))
                     (rule "add_zero_left" (formula "29") (term "0,1,0,0,1,2,0"))
                     (rule "polyDiv_pullOut" (formula "29") (term "1,0,1,0") (inst "polyDivCoeff=l_4"))
                     (rule "equal_literals" (formula "29") (term "0,1,0,1,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,1,1,0,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1,1,0,1,0"))
                     (rule "add_literals" (formula "29") (term "1,0,0,1,1,0,1,0"))
                     (rule "times_zero_1" (formula "29") (term "0,0,1,1,0,1,0"))
                     (rule "add_zero_left" (formula "29") (term "0,1,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                     (rule "polyDiv_pullOut" (formula "29") (term "0,2,0") (inst "polyDivCoeff=l_4"))
                     (rule "equal_literals" (formula "29") (term "0,0,2,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "0,2,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,1,0,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1,0,2,0"))
                     (rule "add_literals" (formula "29") (term "1,0,0,1,0,2,0"))
                     (rule "times_zero_1" (formula "29") (term "0,0,1,0,2,0"))
                     (rule "add_zero_left" (formula "29") (term "0,1,0,2,0"))
                     (rule "polyDiv_pullOut" (formula "29") (term "0,0,0,0,0") (inst "polyDivCoeff=l_4"))
                     (rule "equal_literals" (formula "29") (term "0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "29") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "29") (term "0,0,1,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "29") (term "0,1,0,0,0,0,0"))
                     (rule "polyDiv_pullOut" (formula "29") (term "0,0,1,1,0") (inst "polyDivCoeff=l_4"))
                     (rule "equal_literals" (formula "29") (term "0,0,0,1,1,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "29") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "29") (term "0,0,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "29") (term "0,1,0,0,1,1,0"))
                     (rule "div_axiom" (formula "31") (term "1") (inst "quotient=quotient_10"))
                     (rule "equal_literals" (formula "31") (term "0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "qeq_literals" (formula "31") (term "0,1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "mul_literals" (formula "31") (term "1,1,1"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "33") (term "1"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                     (rule "add_literals" (formula "33") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "32"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0"))
                     (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                     (rule "applyEq" (formula "35") (term "0,2,0") (ifseqformula "31"))
                     (rule "applyEqRigid" (formula "35") (term "0,1,1,0") (ifseqformula "31"))
                     (rule "applyEqRigid" (formula "35") (term "0,0,0,0") (ifseqformula "31"))
                     (rule "applyEqRigid" (formula "12") (term "0,1") (ifseqformula "31"))
                     (rule "applyEq" (formula "34") (term "1") (ifseqformula "31"))
                     (rule "jmod_axiom" (formula "35") (term "2,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,2,0"))
                     (rule "jmod_axiom" (formula "35") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "1,0"))
                     (rule "jmod_axiom" (formula "35") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                     (rule "jmod_axiom" (formula "12") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1"))
                     (rule "polySimp_rightDist" (formula "32") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1"))
                     (rule "polySimp_rightDist" (formula "33") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,1"))
                     (rule "mul_literals" (formula "33") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "33"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "1,1,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0"))
                     (rule "add_zero_right" (formula "10") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_10") (inst "elimGcd=Z(6(1(2(7(7(7(6(1(#)))))))))"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "10") (term "0,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "div_axiom" (formula "27") (term "1") (inst "quotient=quotient_11"))
                     (rule "mul_literals" (formula "27") (term "1,1,1,1,1"))
                     (rule "equal_literals" (formula "27") (term "0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "qeq_literals" (formula "27") (term "0,1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "29") (term "1"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                     (rule "add_literals" (formula "29") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "29"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                     (rule "applyEqRigid" (formula "31") (term "0,0") (ifseqformula "27"))
                     (rule "applyEqRigid" (formula "30") (term "1") (ifseqformula "27"))
                     (rule "jmod_axiom" (formula "31") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                     (rule "polySimp_homoEq" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "31") (term "0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1"))
                     (rule "polySimp_rightDist" (formula "31") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "0,1"))
                     (rule "mul_literals" (formula "31") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0,1"))
                     (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq0" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "0,1,0"))
                     (rule "mul_literals" (formula "26") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0"))
                     (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "31"))
                     (rule "polySimp_addAssoc" (formula "14") (term "1"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                     (rule "add_literals" (formula "14") (term "0,0,1"))
                     (rule "add_zero_left" (formula "14") (term "0,1"))
                     (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "31"))
                     (rule "applyEqRigid" (formula "23") (term "0,1,1") (ifseqformula "31"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "23") (term "0,1,1"))
                     (rule "mul_literals" (formula "23") (term "0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "23") (term "1"))
                     (rule "polySimp_addComm0" (formula "23") (term "0,1"))
                     (rule "applyEqRigid" (formula "33") (term "0,1,1") (ifseqformula "31"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,1,1"))
                     (rule "mul_literals" (formula "33") (term "0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "33") (term "1"))
                     (rule "polySimp_addComm0" (formula "33") (term "0,1"))
                     (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "31"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,1"))
                     (rule "mul_literals" (formula "4") (term "0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "4") (term "1"))
                     (rule "polySimp_addComm0" (formula "4") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1"))
                     (rule "polySimp_rightDist" (formula "28") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1"))
                     (rule "polySimp_rightDist" (formula "29") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "29") (term "0,1"))
                     (rule "mul_literals" (formula "29") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1"))
                     (rule "polySimp_rightDist" (formula "26") (term "1"))
                     (rule "mul_literals" (formula "26") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "29"))
                     (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "36") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "36") (term "0"))
                     (rule "add_literals" (formula "36") (term "1,1,0"))
                     (rule "times_zero_1" (formula "36") (term "1,0"))
                     (rule "add_zero_right" (formula "36") (term "0"))
                     (rule "polySimp_addComm0" (formula "36") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "36") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_11)") (inst "elimGcdLeftDiv=mul(quotient_10, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                     (rule "leq_literals" (formula "36") (term "0,0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "neg_literal" (formula "36") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0"))
                     (rule "add_zero_left" (formula "36") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                     (rule "add_zero_left" (formula "36") (term "1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                     (rule "add_literals" (formula "36") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "36") (term "1,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                     (rule "add_literals" (formula "36") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "36") (term "1,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0"))
                     (rule "qeq_literals" (formula "36") (term "0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "29"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0"))
                     (rule "add_zero_right" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "mul_literals" (formula "11") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_11") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                     (rule "leq_literals" (formula "11") (term "0,0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                     (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0"))
                     (rule "leq_literals" (formula "11") (term "0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "39"))
                     (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "29") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "29") (term "0"))
                     (rule "add_literals" (formula "29") (term "1,1,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0"))
                     (rule "add_zero_right" (formula "29") (term "0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0"))
                     (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1"))
                     (rule "polySimp_rightDist" (formula "29") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                     (rule "mul_literals" (formula "29") (term "0,1"))
                     (rule "elimGcdGeq_antec" (formula "29") (inst "elimGcdRightDiv=add(Z(neglit(5(5(2(#))))), quotient_11)") (inst "elimGcdLeftDiv=mul(quotient_10, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "29") (term "0,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                     (rule "add_literals" (formula "29") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                     (rule "add_literals" (formula "29") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0"))
                     (rule "leq_literals" (formula "29") (term "0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_exactShadow2" (formula "10") (ifseqformula "38"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                     (rule "greater_literals" (formula "10") (term "0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "times_zero_1" (formula "10") (term "0,0"))
                     (rule "add_zero_left" (formula "10") (term "0"))
                     (rule "div_axiom" (formula "5") (term "0,1,1") (inst "quotient=quotient_12"))
                     (rule "equal_literals" (formula "5") (term "0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "qeq_literals" (formula "5") (term "0,1"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "mul_literals" (formula "5") (term "1,1,1"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "5"))
                     (rule "polySimp_addComm1" (formula "7") (term "1"))
                     (rule "add_literals" (formula "7") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "5"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "applyEqRigid" (formula "37") (term "1,0,0,1,2,0") (ifseqformula "4"))
                     (rule "polySimp_addComm1" (formula "37") (term "2,0"))
                     (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0,2,0"))
                     (rule "applyEq" (formula "37") (term "1,0,0,0,0,0") (ifseqformula "4"))
                     (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                     (rule "applyEqRigid" (formula "37") (term "1,0,0,1,1,0") (ifseqformula "4"))
                     (rule "polySimp_addComm0" (formula "37") (term "0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "1,0"))
                     (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "4"))
                     (rule "polySimp_addComm0" (formula "7") (term "1"))
                     (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "4"))
                     (rule "polySimp_addComm0" (formula "19") (term "1"))
                     (rule "applyEqRigid" (formula "23") (term "0,1,1") (ifseqformula "4"))
                     (rule "polySimp_addComm0" (formula "23") (term "1"))
                     (rule "applyEqRigid" (formula "18") (term "1,0,0,1,1") (ifseqformula "4"))
                     (rule "polySimp_addComm1" (formula "18") (term "1"))
                     (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0,1"))
                     (rule "applyEqRigid" (formula "25") (term "1,1") (ifseqformula "4"))
                     (rule "polySimp_addComm0" (formula "25") (term "1"))
                     (rule "applyEqRigid" (formula "3") (term "1,0,1") (ifseqformula "4"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,1"))
                     (rule "applyEqRigid" (formula "26") (term "1,0,1") (ifseqformula "4"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                     (rule "applyEq" (formula "37") (term "1,0,1") (ifseqformula "4"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,0,1"))
                     (rule "applyEq" (formula "37") (term "1,2,0") (ifseqformula "4"))
                     (rule "polySimp_addComm1" (formula "37") (term "2,0"))
                     (rule "polySimp_addComm0" (formula "37") (term "0,2,0"))
                     (rule "applyEqRigid" (formula "37") (term "1,0,0,0") (ifseqformula "4"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                     (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "4"))
                     (rule "polySimp_addComm1" (formula "37") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                     (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "4"))
                     (rule "polySimp_addComm1" (formula "18") (term "1"))
                     (rule "polySimp_addComm0" (formula "18") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1"))
                     (rule "polySimp_rightDist" (formula "6") (term "1"))
                     (rule "mul_literals" (formula "6") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                     (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "6"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "32") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0"))
                     (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1"))
                     (rule "polySimp_rightDist" (formula "32") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,1"))
                     (rule "mul_literals" (formula "32") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1"))
                     (rule "elimGcdGeq_antec" (formula "32") (inst "elimGcdRightDiv=add(add(Z(0(#)), mul(quotient_12, Z(neglit(1(#))))),
    mul(quotient_11, Z(6(5(2(#))))))") (inst "elimGcdLeftDiv=l_4") (inst "elimGcd=Z(6(5(2(#))))"))
                     (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "32") (term "0,1,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,0"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                     (rule "add_zero_left" (formula "32") (term "0,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0"))
                     (rule "leq_literals" (formula "32") (term "0"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "6"))
                     (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "42") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "42") (term "0"))
                     (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1"))
                     (rule "polySimp_rightDist" (formula "42") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "42") (term "0,1"))
                     (rule "mul_literals" (formula "42") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1"))
                     (rule "elimGcdGeq_antec" (formula "42") (inst "elimGcdRightDiv=add(add(Z(0(#)), mul(quotient_12, Z(neglit(1(#))))),
    mul(quotient_10, Z(6(3(5(5(6(#))))))))") (inst "elimGcdLeftDiv=l_4") (inst "elimGcd=Z(6(5(2(#))))"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "42") (term "0,1,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                     (rule "add_zero_left" (formula "42") (term "0,1,1"))
                     (rule "leq_literals" (formula "42") (term "0,0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                     (rule "add_literals" (formula "42") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "42") (term "1,0,0"))
                     (rule "add_zero_right" (formula "42") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "42") (term "0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                     (rule "add_literals" (formula "42") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "42") (term "1,0,0"))
                     (rule "add_zero_right" (formula "42") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                     (rule "add_literals" (formula "42") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "42") (term "1,0,0"))
                     (rule "add_zero_right" (formula "42") (term "0,0"))
                     (rule "leq_literals" (formula "42") (term "0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "6"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1"))
                     (rule "polySimp_rightDist" (formula "14") (term "1"))
                     (rule "mul_literals" (formula "14") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                     (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=add(Z(0(#)), mul(quotient_12, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=l_4") (inst "elimGcd=Z(6(5(2(#))))"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "14") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                     (rule "add_zero_left" (formula "14") (term "1,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "14") (term "0,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0"))
                     (rule "polySimp_mulAssoc" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0"))
                     (rule "leq_literals" (formula "14") (term "0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "35"))
                     (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=add(add(Z(5(5(2(#)))),
        mul(quotient_12, Z(neglit(1(#))))),
    mul(quotient_11, Z(6(5(2(#))))))") (inst "elimGcdLeftDiv=l_4") (inst "elimGcd=Z(6(5(2(#))))"))
                     (rule "leq_literals" (formula "5") (term "0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "neg_literal" (formula "5") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                     (rule "add_literals" (formula "5") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                     (rule "add_literals" (formula "5") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                     (rule "add_literals" (formula "5") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0"))
                     (rule "qeq_literals" (formula "5") (term "0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "46"))
                     (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=add(add(Z(5(3(5(5(6(#)))))),
        mul(quotient_12, Z(neglit(1(#))))),
    mul(quotient_10, Z(6(3(5(5(6(#))))))))") (inst "elimGcdLeftDiv=l_4") (inst "elimGcd=Z(6(5(2(#))))"))
                     (rule "leq_literals" (formula "6") (term "0,0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "5"))
                     (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "15"))
                     (rule "greater_literals" (formula "16") (term "0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "times_zero_1" (formula "16") (term "1,0"))
                     (rule "leq_literals" (formula "16") (term "0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "6"))
                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "35") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                     (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1"))
                     (rule "polySimp_rightDist" (formula "35") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                     (rule "mul_literals" (formula "35") (term "0,1"))
                     (rule "inEqSimp_subsumption5" (formula "35") (ifseqformula "34"))
                     (rule "greater_literals" (formula "35") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "greater_literals" (formula "35") (term "0,0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0"))
                     (rule "qeq_literals" (formula "35") (term "0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "5"))
                     (rule "polySimp_rightDist" (formula "45") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "45") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "45") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "45") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "45") (term "0"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "45") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0"))
                     (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "45") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                     (rule "inEqSimp_subsumption2" (formula "45") (ifseqformula "44"))
                     (rule "greater_literals" (formula "45") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "greater_literals" (formula "45") (term "0,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                     (rule "mul_literals" (formula "45") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "45") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                     (rule "add_literals" (formula "45") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "45") (term "1,0,0"))
                     (rule "add_zero_right" (formula "45") (term "0,0"))
                     (rule "qeq_literals" (formula "45") (term "0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "true_left" (formula "45"))
                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "6"))
                     (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "14"))
                     (rule "greater_literals" (formula "16") (term "0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "times_zero_1" (formula "16") (term "1,0"))
                     (rule "leq_literals" (formula "16") (term "0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "jdiv_axiom" (formula "49") (term "0,1,2,0"))
                     (rule "eqSymm" (formula "49"))
                     (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "eqSymm" (formula "49"))
                     (rule "applyEqRigid" (formula "50") (term "0,1,1,0") (ifseqformula "49"))
                     (rule "applyEqRigid" (formula "50") (term "0,0,0,0") (ifseqformula "49"))
                     (rule "applyEqRigid" (formula "50") (term "0,1,2,0") (ifseqformula "49"))
                     (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "49"))
                     (rule "jdiv_axiom" (formula "39") (term "0,1,1"))
                     (rule "eqSymm" (formula "39"))
                     (rule "replace_known_left" (formula "39") (term "0,0") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "eqSymm" (formula "39"))
                     (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "39"))
                     (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "39"))
                     (rule "applyEqRigid" (formula "20") (term "0,1,1") (ifseqformula "39"))
                     (rule "applyEq" (formula "40") (term "0,1,1") (ifseqformula "39"))
                     (rule "applyEq" (formula "42") (term "0,1,0,1") (ifseqformula "39"))
                     (rule "applyEqRigid" (formula "29") (term "0,1,0,1") (ifseqformula "39"))
                     (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "39"))
                     (rule "jdiv_axiom" (formula "42") (term "0,1,2,0"))
                     (rule "eqSymm" (formula "42"))
                     (rule "polySimp_mulComm0" (formula "42") (term "0,0,2,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "0,0,0,2,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                     (rule "replace_known_left" (formula "42") (term "0,0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "eqSymm" (formula "42"))
                     (rule "applyEqRigid" (formula "43") (term "0,1,1,0") (ifseqformula "42"))
                     (rule "applyEqRigid" (formula "43") (term "0,0,0,0") (ifseqformula "42"))
                     (rule "applyEq" (formula "43") (term "0,1,2,0") (ifseqformula "42"))
                     (rule "applyEqRigid" (formula "21") (term "0,1,1") (ifseqformula "42"))
                     (rule "div_axiom" (formula "51") (term "1") (inst "quotient=quotient_13"))
                     (rule "equal_literals" (formula "51") (term "0"))
                     (builtin "One Step Simplification" (formula "51"))
                     (rule "qeq_literals" (formula "51") (term "0,1"))
                     (builtin "One Step Simplification" (formula "51"))
                     (rule "mul_literals" (formula "51") (term "1,1,1"))
                     (rule "andLeft" (formula "51"))
                     (rule "andLeft" (formula "51"))
                     (rule "polySimp_addComm1" (formula "53") (term "1"))
                     (rule "add_literals" (formula "53") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "52"))
                     (rule "inEqSimp_homoInEq1" (formula "53"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "53") (term "0"))
                     (rule "applyEq" (formula "55") (term "0,1,1,0") (ifseqformula "51"))
                     (rule "polySimp_addComm1" (formula "55") (term "1,0"))
                     (rule "applyEq" (formula "55") (term "0,1,2,0") (ifseqformula "51"))
                     (rule "polySimp_addComm0" (formula "55") (term "2,0"))
                     (rule "applyEq" (formula "55") (term "0,0,0,0") (ifseqformula "51"))
                     (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                     (rule "applyEqRigid" (formula "19") (term "0,1,1") (ifseqformula "51"))
                     (rule "polySimp_addComm0" (formula "19") (term "1"))
                     (rule "applyEqRigid" (formula "54") (term "1") (ifseqformula "51"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "53"))
                     (rule "polySimp_mulComm0" (formula "53") (term "1"))
                     (rule "polySimp_rightDist" (formula "53") (term "1"))
                     (rule "mul_literals" (formula "53") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
                     (rule "mul_literals" (formula "55") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0") (ifseqformula "52"))
                     (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "55") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0,0,0"))
                     (rule "add_literals" (formula "55") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "55") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "55") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "55") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "eqSymm" (formula "55"))
                     (rule "applyEqRigid" (formula "29") (term "0,1,1") (ifseqformula "55"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "29") (term "0,1,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "29") (term "1"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                     (rule "applyEq" (formula "1") (term "1") (ifseqformula "55"))
                     (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "55"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "3") (term "0,1,1"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1"))
                     (rule "applyEq" (formula "43") (term "0,1,1") (ifseqformula "55"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "43") (term "0,1,1"))
                     (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "43") (term "1"))
                     (rule "polySimp_addAssoc" (formula "43") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "43") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "53"))
                     (rule "times_zero_1" (formula "14") (term "0,0"))
                     (rule "add_zero_left" (formula "14") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                     (rule "mul_literals" (formula "14") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_13") (inst "elimGcd=Z(6(5(2(#))))"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "14") (term "0,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0"))
                     (rule "leq_literals" (formula "14") (term "0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_exactShadow1" (formula "35") (ifseqformula "54"))
                     (rule "greater_literals" (formula "35") (term "0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                     (rule "mul_literals" (formula "35") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                     (rule "polySimp_elimOne" (formula "35") (term "0"))
                     (rule "inEqSimp_exactShadow2" (formula "54") (ifseqformula "48"))
                     (rule "greater_literals" (formula "54") (term "0"))
                     (builtin "One Step Simplification" (formula "54"))
                     (rule "polySimp_mulAssoc" (formula "54") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "54") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "54") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                     (rule "polySimp_mulLiterals" (formula "54") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "35"))
                     (rule "times_zero_1" (formula "16") (term "0,0"))
                     (rule "add_zero_left" (formula "16") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "14"))
                     (rule "greater_literals" (formula "16") (term "0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "times_zero_1" (formula "16") (term "1,0"))
                     (rule "leq_literals" (formula "16") (term "0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "div_axiom" (formula "41") (term "1") (inst "quotient=quotient_14"))
                     (rule "mul_literals" (formula "41") (term "1,1,1,1,1"))
                     (rule "equal_literals" (formula "41") (term "0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "qeq_literals" (formula "41") (term "0,1"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "andLeft" (formula "41"))
                     (rule "andLeft" (formula "41"))
                     (rule "polySimp_addComm1" (formula "43") (term "1"))
                     (rule "add_literals" (formula "43") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "42"))
                     (rule "inEqSimp_homoInEq1" (formula "43"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "43") (term "0"))
                     (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "41"))
                     (rule "inEqSimp_homoInEq1" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                     (rule "applyEqRigid" (formula "21") (term "0,1,1") (ifseqformula "41"))
                     (rule "polySimp_addComm0" (formula "21") (term "1"))
                     (rule "applyEqRigid" (formula "45") (term "0,1,1") (ifseqformula "41"))
                     (rule "polySimp_addComm1" (formula "45") (term "1"))
                     (rule "applyEqRigid" (formula "44") (term "1") (ifseqformula "41"))
                     (rule "applyEqRigid" (formula "30") (term "0,1,1") (ifseqformula "41"))
                     (rule "polySimp_addComm1" (formula "30") (term "1"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1"))
                     (rule "applyEq" (formula "48") (term "0,1,1") (ifseqformula "41"))
                     (rule "polySimp_addComm1" (formula "48") (term "1"))
                     (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "48") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "48") (term "0,0,0,1"))
                     (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "41"))
                     (rule "polySimp_addComm1" (formula "2") (term "1"))
                     (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "41"))
                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1"))
                     (rule "polySimp_rightDist" (formula "43") (term "1"))
                     (rule "mul_literals" (formula "43") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1"))
                     (rule "polySimp_rightDist" (formula "33") (term "1"))
                     (rule "mul_literals" (formula "33") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                     (rule "inEqSimp_contradInEq0" (formula "42") (ifseqformula "33"))
                     (rule "andLeft" (formula "42"))
                     (rule "inEqSimp_homoInEq1" (formula "42"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0"))
                     (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "42") (term "0"))
                     (rule "add_literals" (formula "42") (term "1,1,0"))
                     (rule "times_zero_1" (formula "42") (term "1,0"))
                     (rule "add_zero_right" (formula "42") (term "0"))
                     (rule "leq_literals" (formula "42"))
                     (rule "closeFalse" (formula "42"))
                  )
                  (branch "a[1] ≤ -1 FALSE"
                     (rule "ifthenelse_split" (formula "24") (term "0") (userinteraction))
                     (branch "a[2] ≤ -1 TRUE"
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_homoEq" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0"))
                        (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "29"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "29"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                        (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "16"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "20"))
                        (rule "polySimp_homoEq" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0"))
                        (rule "polySimp_mulAssoc" (formula "7") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "24"))
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "15"))
                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "16"))
                        (rule "polySimp_homoEq" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0"))
                        (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "29") (term "1") (ifseqformula "3"))
                        (rule "applyEq" (formula "24") (term "1") (ifseqformula "4"))
                        (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                        (rule "applyEq" (formula "14") (term "1") (ifseqformula "4"))
                        (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "6"))
                        (rule "polySimp_sepNegMonomial" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                        (rule "applyEqRigid" (formula "20") (term "1,1") (ifseqformula "7"))
                        (rule "polySimp_addAssoc" (formula "20") (term "1"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "1"))
                        (rule "add_literals" (formula "20") (term "1,1,1"))
                        (rule "times_zero_1" (formula "20") (term "1,1"))
                        (rule "add_zero_right" (formula "20") (term "1"))
                        (rule "polySimp_addAssoc" (formula "20") (term "1"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "1"))
                        (rule "add_literals" (formula "20") (term "1,1,1"))
                        (rule "times_zero_1" (formula "20") (term "1,1"))
                        (rule "add_zero_right" (formula "20") (term "1"))
                        (rule "polySimp_addAssoc" (formula "20") (term "1"))
                        (rule "polySimp_addComm0" (formula "20") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "1"))
                        (rule "add_literals" (formula "20") (term "1,1,1"))
                        (rule "times_zero_1" (formula "20") (term "1,1"))
                        (rule "add_zero_right" (formula "20") (term "1"))
                        (rule "applyEqRigid" (formula "22") (term "0,0,0") (ifseqformula "7"))
                        (rule "polySimp_sepNegMonomial" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                        (rule "inEqSimp_homoInEq0" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "0,0"))
                        (rule "applyEq" (formula "15") (term "1") (ifseqformula "27"))
                        (rule "polySimp_sepPosMonomial" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "22"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulAssoc" (formula "2") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "newSym_eq" (formula "22") (inst "l=l_5") (inst "newSymDef=add(add(add(add(mul(res_byteArrayToInt, Z(0(#))),
                mul(res_unsign, Z(6(3(5(5(6(#)))))))),
            mul(res_unsign_0, Z(6(5(2(#)))))),
        res_unsign_1),
    mul(value, Z(0(#))))"))
                        (rule "times_zero_1" (formula "22") (term "0,0,0,0,1,1"))
                        (rule "times_zero_1" (formula "22") (term "1,1,1"))
                        (rule "add_zero_left" (formula "22") (term "0,0,0,1,1"))
                        (rule "add_zero_right" (formula "22") (term "1,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                        (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "22"))
                        (rule "polySimp_homoEq" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                        (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "22"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "16") (term "1"))
                        (rule "jmod_axiom" (formula "28") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                        (rule "polySimp_homoEq" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
                        (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                        (rule "polySimp_homoEq" (formula "22"))
                        (rule "polySimp_addComm1" (formula "22") (term "0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                        (rule "applyEq" (formula "11") (term "0") (ifseqformula "23"))
                        (rule "applyEq" (formula "30") (term "0,0,0,0,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "32") (term "0") (ifseqformula "23"))
                        (rule "polySimp_homoEq" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0"))
                        (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                        (rule "add_literals" (formula "32") (term "1,1,0"))
                        (rule "times_zero_1" (formula "32") (term "1,0"))
                        (rule "add_zero_right" (formula "32") (term "0"))
                        (rule "applyEq" (formula "30") (term "0,0,2,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "30") (term "0,0,1,1,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "23"))
                        (rule "polySimp_addComm1" (formula "16") (term "1"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0,0,0,1"))
                        (rule "add_literals" (formula "16") (term "1,0,0,0,0,1"))
                        (rule "times_zero_1" (formula "16") (term "0,0,0,0,1"))
                        (rule "add_zero_left" (formula "16") (term "0,0,0,1"))
                        (rule "applyEq" (formula "13") (term "0,0,1") (ifseqformula "23"))
                        (rule "polySimp_sepPosMonomial" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1"))
                        (rule "polySimp_rightDist" (formula "28") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,1"))
                        (rule "mul_literals" (formula "28") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,0,0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,1"))
                        (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "22"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                        (rule "applyEqRigid" (formula "28") (term "1,0,0,0") (ifseqformula "22"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,0"))
                        (rule "polySimp_homoEq" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "28") (term "0,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "28") (term "1,0,0,0,1,0,0,0"))
                        (rule "times_zero_1" (formula "28") (term "0,0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0"))
                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "22"))
                        (rule "inEqSimp_homoInEq0" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0"))
                        (rule "polySimp_mulAssoc" (formula "27") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                        (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "22"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "7") (term "0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "7") (term "1"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "7") (term "1"))
                        (rule "add_literals" (formula "7") (term "1,1,1"))
                        (rule "times_zero_1" (formula "7") (term "1,1"))
                        (rule "add_zero_right" (formula "7") (term "1"))
                        (rule "polySimp_addAssoc" (formula "7") (term "1"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "7") (term "1"))
                        (rule "add_literals" (formula "7") (term "1,1,1"))
                        (rule "times_zero_1" (formula "7") (term "1,1"))
                        (rule "add_zero_right" (formula "7") (term "1"))
                        (rule "polySimp_addAssoc" (formula "7") (term "1"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                        (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "22"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "16") (term "0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "16") (term "1"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "16") (term "1"))
                        (rule "add_literals" (formula "16") (term "1,1,1"))
                        (rule "times_zero_1" (formula "16") (term "1,1"))
                        (rule "add_zero_right" (formula "16") (term "1"))
                        (rule "polySimp_addAssoc" (formula "16") (term "1"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "16") (term "1"))
                        (rule "add_literals" (formula "16") (term "1,1,1"))
                        (rule "times_zero_1" (formula "16") (term "1,1"))
                        (rule "add_zero_right" (formula "16") (term "1"))
                        (rule "polySimp_addAssoc" (formula "16") (term "1"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,1"))
                        (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "22"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "6") (term "0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "6") (term "1"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "1"))
                        (rule "add_literals" (formula "6") (term "1,1,1"))
                        (rule "times_zero_1" (formula "6") (term "1,1"))
                        (rule "add_zero_right" (formula "6") (term "1"))
                        (rule "polySimp_addAssoc" (formula "6") (term "1"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "1"))
                        (rule "add_literals" (formula "6") (term "1,1,1"))
                        (rule "times_zero_1" (formula "6") (term "1,1"))
                        (rule "add_zero_right" (formula "6") (term "1"))
                        (rule "polySimp_addAssoc" (formula "6") (term "1"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,1"))
                        (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "22"))
                        (rule "polySimp_addAssoc" (formula "15") (term "1"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "22"))
                        (rule "polySimp_invertEq" (formula "32"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                        (rule "times_zero_2" (formula "32") (term "1"))
                        (rule "polySimp_sepPosMonomial" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1"))
                        (rule "polySimp_rightDist" (formula "28") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,1"))
                        (rule "mul_literals" (formula "28") (term "0,0,0,1"))
                        (rule "applyEqRigid" (formula "27") (term "1,0") (ifseqformula "28"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                        (rule "add_literals" (formula "27") (term "1,1,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0"))
                        (rule "add_zero_right" (formula "27") (term "0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                        (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1"))
                        (rule "polySimp_rightDist" (formula "27") (term "1"))
                        (rule "mul_literals" (formula "27") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                        (rule "elimGcdEq" (formula "32") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_5") (inst "elimGcd=Z(6(5(2(#))))"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "add_zero_left" (formula "32") (term "0,0,0"))
                        (rule "times_zero_1" (formula "32") (term "1,0,1,0"))
                        (rule "add_zero_left" (formula "32") (term "0,0,1"))
                        (rule "add_literals" (formula "32") (term "1,0,0"))
                        (rule "times_zero_1" (formula "32") (term "0,0,0"))
                        (rule "add_zero_left" (formula "32") (term "0,1,0"))
                        (rule "times_zero_1" (formula "32") (term "0,0,1"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "leq_literals" (formula "32") (term "0,0"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "qeq_literals" (formula "32") (term "0"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "newSym_eq" (formula "28") (inst "l=l_6") (inst "newSymDef=add(add(add(Z(neglit(1(#))), mul(l_5, Z(0(#)))),
        jdiv(jdiv(add(mul(l_5, Z(6(5(2(#))))),
                      res_byteArrayToInt),
                  Z(6(5(2(#))))),
             Z(6(5(2(#)))))),
    mul(res_unsign, Z(neglit(6(5(2(#)))))))"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,1,1"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "28") (term "1"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "28") (term "0,0,1"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "28"))
                        (rule "applyEqRigid" (formula "29") (term "0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "29") (term "0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                        (rule "polySimp_homoEq" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0,1,1,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "29") (term "0"))
                        (rule "add_literals" (formula "29") (term "1,1,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0"))
                        (rule "add_zero_right" (formula "29") (term "0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "29") (term "0"))
                        (rule "add_literals" (formula "29") (term "1,1,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0"))
                        (rule "add_zero_right" (formula "29") (term "0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0"))
                        (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,1,1"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "5") (term "0,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "5") (term "1"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "5") (term "1"))
                        (rule "add_literals" (formula "5") (term "1,1,1"))
                        (rule "times_zero_1" (formula "5") (term "1,1"))
                        (rule "add_zero_right" (formula "5") (term "1"))
                        (rule "polySimp_addAssoc" (formula "5") (term "1"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "15") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,1,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "15") (term "0,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "15") (term "1"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "15") (term "1"))
                        (rule "add_literals" (formula "15") (term "1,1,1"))
                        (rule "times_zero_1" (formula "15") (term "1,1"))
                        (rule "add_zero_right" (formula "15") (term "1"))
                        (rule "polySimp_addAssoc" (formula "15") (term "1"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                        (rule "add_zero_left" (formula "15") (term "0,0,0,1"))
                        (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "28"))
                        (rule "applyEq" (formula "25") (term "1") (ifseqformula "28"))
                        (rule "applyEq" (formula "4") (term "1") (ifseqformula "28"))
                        (rule "applyEqRigid" (formula "22") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "22") (term "0,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "22") (term "1"))
                        (rule "add_literals" (formula "22") (term "1,1,1"))
                        (rule "times_zero_1" (formula "22") (term "1,1"))
                        (rule "add_zero_right" (formula "22") (term "1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "29"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0"))
                        (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "29"))
                        (rule "applyEqRigid" (formula "11") (term "0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1"))
                        (rule "applyEqRigid" (formula "2") (term "0,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                        (rule "applyEqRigid" (formula "14") (term "0,0,0,0,0") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                        (rule "applyEqRigid" (formula "31") (term "0,0,0,0,2,0") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,2,0"))
                        (rule "applyEqRigid" (formula "27") (term "0,0,0,0,0,0") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,0"))
                        (rule "applyEqRigid" (formula "31") (term "0,0,0,0,1,1,0") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,1,0"))
                        (rule "applyEqRigid" (formula "27") (term "0,0,0,1,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,1"))
                        (rule "applyEqRigid" (formula "2") (term "0,0,0,0,0") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                        (rule "applyEqRigid" (formula "31") (term "0,0,0,0,0,0,0") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,0,0"))
                        (rule "applyEqRigid" (formula "15") (term "0,0,0,0,0,1,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1,1"))
                        (rule "applyEqRigid" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "applyEqRigid" (formula "7") (term "0,0,0,0,1,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,1,1"))
                        (rule "applyEq" (formula "23") (term "0,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
                        (rule "applyEqRigid" (formula "22") (term "0,0,0,0,0,1,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1,1"))
                        (rule "applyEqRigid" (formula "6") (term "0,0,0,0,1,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,1"))
                        (rule "applyEqRigid" (formula "13") (term "0,0,0,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1"))
                        (rule "applyEqRigid" (formula "5") (term "0,0,0,0,0,1,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,1,1"))
                        (rule "applyEq" (formula "16") (term "0,0,0,0,1,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,1"))
                        (rule "applyEq" (formula "22") (term "0,1,0,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,1"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "22") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "25") (term "0,0,0,0,1,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,0,1"))
                        (rule "applyEq" (formula "15") (term "0,0,0,1,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1"))
                        (rule "applyEqRigid" (formula "6") (term "0,0,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1"))
                        (rule "add_literals" (formula "15") (term "1,0,0,1"))
                        (rule "times_zero_1" (formula "15") (term "0,0,1"))
                        (rule "add_zero_left" (formula "15") (term "0,1"))
                        (rule "applyEq" (formula "22") (term "0,0,0,1,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,0,1"))
                        (rule "applyEqRigid" (formula "28") (term "0,0,0,0,1,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0,1"))
                        (rule "applyEq" (formula "4") (term "0,0,0,0,1,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,1,0,1"))
                        (rule "applyEq" (formula "5") (term "0,0,0,1,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,0,1"))
                        (rule "applyEqRigid" (formula "7") (term "0,0,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,0,1"))
                        (rule "applyEq" (formula "14") (term "0,0,0,0,1,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,1,0,1"))
                        (rule "applyEqRigid" (formula "5") (term "0,1,0,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,1"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "5") (term "0,0,1"))
                        (rule "applyEq" (formula "16") (term "0,0,0,1") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1"))
                        (rule "polySimp_invertEq" (formula "33"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                        (rule "times_zero_2" (formula "33") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "elimGcdEq" (formula "33") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_6") (inst "elimGcd=Z(6(5(2(#))))"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "add_zero_left" (formula "33") (term "0,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,1,0"))
                        (rule "add_literals" (formula "33") (term "1,0,0"))
                        (rule "add_zero_left" (formula "33") (term "0,0,1"))
                        (rule "times_zero_1" (formula "33") (term "0,0,0"))
                        (rule "add_zero_left" (formula "33") (term "0,1,0"))
                        (rule "times_zero_1" (formula "33") (term "0,0,1"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "leq_literals" (formula "33") (term "0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "qeq_literals" (formula "33") (term "0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "arrayLengthNotNegative" (formula "12") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "13"))
                        (rule "leq_literals" (formula "12") (term "0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "jdiv_axiom" (formula "14") (term "0,0"))
                        (rule "eqSymm" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,0,2,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,0,0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,2,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                        (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "14"))
                        (rule "polyDiv_pullOut" (formula "15") (term "0,0") (inst "polyDivCoeff=mul(l_6, Z(neglit(1(#))))"))
                        (rule "equal_literals" (formula "15") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "15") (term "0,0,1,0,0"))
                        (rule "add_zero_left" (formula "15") (term "0,1,0,0"))
                        (rule "polyDiv_pullOut" (formula "14") (term "1") (inst "polyDivCoeff=mul(l_6, Z(neglit(1(#))))"))
                        (rule "equal_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "14") (term "1"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,1,1"))
                        (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1,1"))
                        (rule "add_literals" (formula "14") (term "1,0,0,1,1"))
                        (rule "times_zero_1" (formula "14") (term "0,0,1,1"))
                        (rule "add_zero_left" (formula "14") (term "0,1,1"))
                        (rule "jdiv_axiom" (formula "32") (term "0,2,0"))
                        (rule "eqSymm" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,0,2,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,2,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                        (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "eqSymm" (formula "32"))
                        (rule "applyEq" (formula "33") (term "0,1,1,0") (ifseqformula "32"))
                        (rule "applyEq" (formula "33") (term "0,0,0,0") (ifseqformula "32"))
                        (rule "applyEqRigid" (formula "33") (term "0,2,0") (ifseqformula "32"))
                        (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "32"))
                        (rule "jdiv_axiom" (formula "28") (term "0,0,0"))
                        (rule "eqSymm" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "0,0,2,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,2,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                        (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "eqSymm" (formula "28"))
                        (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "28"))
                        (rule "applyEqRigid" (formula "29") (term "0,0,0") (ifseqformula "28"))
                        (rule "applyEqRigid" (formula "1") (term "0,1,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "16") (term "0,0,1,1") (ifseqformula "28"))
                        (rule "applyEqRigid" (formula "23") (term "0,0,1,1") (ifseqformula "28"))
                        (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "5") (term "0,0,1,1") (ifseqformula "28"))
                        (rule "applyEqRigid" (formula "6") (term "0,1,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "17") (term "0,1,1") (ifseqformula "28"))
                        (rule "applyEqRigid" (formula "5") (term "1,0,1") (ifseqformula "28"))
                        (rule "applyEqRigid" (formula "30") (term "0,1,0,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "26") (term "0,1,0,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "15") (term "0,1,0,1") (ifseqformula "28"))
                        (rule "applyEqRigid" (formula "23") (term "1,0,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "28"))
                        (rule "polyDiv_pullOut" (formula "4") (term "0,1,0,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "equal_literals" (formula "4") (term "0,0,1,0,1"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "4") (term "0,1,0,1"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1,0,1,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,1,0,1,0,1"))
                        (rule "add_literals" (formula "4") (term "1,0,0,1,0,1,0,1"))
                        (rule "times_zero_1" (formula "4") (term "0,0,1,0,1,0,1"))
                        (rule "add_zero_left" (formula "4") (term "0,1,0,1,0,1"))
                        (rule "polyDiv_pullOut" (formula "23") (term "1,0,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "equal_literals" (formula "23") (term "0,1,0,1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "23") (term "1,0,1"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,1,1,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,1,0,1"))
                        (rule "add_literals" (formula "23") (term "1,0,0,1,1,0,1"))
                        (rule "times_zero_1" (formula "23") (term "0,0,1,1,0,1"))
                        (rule "add_zero_left" (formula "23") (term "0,1,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                        (rule "polyDiv_pullOut" (formula "15") (term "0,1,0,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "equal_literals" (formula "15") (term "0,0,1,0,1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "15") (term "0,1,0,1"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,1,0,1,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1,0,1,0,1"))
                        (rule "add_literals" (formula "15") (term "1,0,0,1,0,1,0,1"))
                        (rule "times_zero_1" (formula "15") (term "0,0,1,0,1,0,1"))
                        (rule "add_zero_left" (formula "15") (term "0,1,0,1,0,1"))
                        (rule "polyDiv_pullOut" (formula "26") (term "0,1,0,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "equal_literals" (formula "26") (term "0,0,1,0,1"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "26") (term "0,1,0,1"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,1,0,1,0,1"))
                        (rule "add_literals" (formula "26") (term "1,0,0,1,0,1,0,1"))
                        (rule "times_zero_1" (formula "26") (term "0,0,1,0,1,0,1"))
                        (rule "add_zero_left" (formula "26") (term "0,1,0,1,0,1"))
                        (rule "polyDiv_pullOut" (formula "16") (term "0,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "equal_literals" (formula "16") (term "0,0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0,1,0,1"))
                        (rule "add_literals" (formula "16") (term "1,0,0,1,0,1"))
                        (rule "times_zero_1" (formula "16") (term "0,0,1,0,1"))
                        (rule "add_zero_left" (formula "16") (term "0,1,0,1"))
                        (rule "polyDiv_pullOut" (formula "30") (term "0,1,0,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "equal_literals" (formula "30") (term "0,0,1,0,1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "30") (term "0,1,0,1"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,1,0,1,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "30") (term "0,0,1,0,1,0,1"))
                        (rule "add_literals" (formula "30") (term "1,0,0,1,0,1,0,1"))
                        (rule "times_zero_1" (formula "30") (term "0,0,1,0,1,0,1"))
                        (rule "add_zero_left" (formula "30") (term "0,1,0,1,0,1"))
                        (rule "polyDiv_pullOut" (formula "5") (term "1,0,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,1,0,1"))
                        (rule "equal_literals" (formula "5") (term "0,1,0,1"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "5") (term "1,0,1"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,1,1,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1,1,0,1"))
                        (rule "add_literals" (formula "5") (term "1,0,0,1,1,0,1"))
                        (rule "times_zero_1" (formula "5") (term "0,0,1,1,0,1"))
                        (rule "add_zero_left" (formula "5") (term "0,1,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                        (rule "polyDiv_pullOut" (formula "17") (term "0,1,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "equal_literals" (formula "17") (term "0,0,1,1"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,0,1,1,1"))
                        (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0,1,1,1"))
                        (rule "add_literals" (formula "17") (term "1,0,0,0,1,1,1"))
                        (rule "times_zero_1" (formula "17") (term "0,0,0,1,1,1"))
                        (rule "add_zero_left" (formula "17") (term "0,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "17") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                        (rule "polySimp_mulAssoc" (formula "17") (term "0,1,1"))
                        (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "17") (term "1"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,1"))
                        (rule "add_literals" (formula "17") (term "1,0,0,1"))
                        (rule "times_zero_1" (formula "17") (term "0,0,1"))
                        (rule "add_zero_left" (formula "17") (term "0,1"))
                        (rule "polyDiv_pullOut" (formula "6") (term "0,1,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,0,1,1"))
                        (rule "equal_literals" (formula "6") (term "0,0,1,1"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,1,1,1"))
                        (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0,1,1,1"))
                        (rule "add_literals" (formula "6") (term "1,0,0,0,1,1,1"))
                        (rule "times_zero_1" (formula "6") (term "0,0,0,1,1,1"))
                        (rule "add_zero_left" (formula "6") (term "0,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "6") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                        (rule "polySimp_mulAssoc" (formula "6") (term "0,1,1"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "6") (term "1"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,1"))
                        (rule "add_literals" (formula "6") (term "1,0,0,1"))
                        (rule "times_zero_1" (formula "6") (term "0,0,1"))
                        (rule "add_zero_left" (formula "6") (term "0,1"))
                        (rule "polyDiv_pullOut" (formula "7") (term "0,1,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "equal_literals" (formula "7") (term "0,0,1,1"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0,1,1,1"))
                        (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,1,1,1"))
                        (rule "add_literals" (formula "7") (term "1,0,0,0,1,1,1"))
                        (rule "times_zero_1" (formula "7") (term "0,0,0,1,1,1"))
                        (rule "add_zero_left" (formula "7") (term "0,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "7") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,1"))
                        (rule "polySimp_mulAssoc" (formula "7") (term "0,1,1"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "7") (term "1"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,1"))
                        (rule "add_literals" (formula "7") (term "1,0,0,1"))
                        (rule "times_zero_1" (formula "7") (term "0,0,1"))
                        (rule "add_zero_left" (formula "7") (term "0,1"))
                        (rule "polyDiv_pullOut" (formula "29") (term "1,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "equal_literals" (formula "29") (term "0,1,1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "29") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,1,1,1"))
                        (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1,1,1"))
                        (rule "add_literals" (formula "29") (term "1,0,0,1,1,1"))
                        (rule "times_zero_1" (formula "29") (term "0,0,1,1,1"))
                        (rule "add_zero_left" (formula "29") (term "0,1,1,1"))
                        (rule "polySimp_addAssoc" (formula "29") (term "1"))
                        (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "equal_literals" (formula "1") (term "0,0,1,1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,1"))
                        (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,0,1,1"))
                        (rule "add_literals" (formula "1") (term "1,0,0,1,0,1,1"))
                        (rule "times_zero_1" (formula "1") (term "0,0,1,0,1,1"))
                        (rule "add_zero_left" (formula "1") (term "0,1,0,1,1"))
                        (rule "polyDiv_pullOut" (formula "2") (term "0,0") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "equal_literals" (formula "2") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0"))
                        (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,1,1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,1,0"))
                        (rule "add_literals" (formula "2") (term "1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "0,0,1,1,0"))
                        (rule "add_zero_left" (formula "2") (term "0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,0"))
                        (rule "add_literals" (formula "2") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "2") (term "0,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polyDiv_pullOut" (formula "28") (term "1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "equal_literals" (formula "28") (term "0,1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "28") (term "1"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,1,1"))
                        (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,1"))
                        (rule "add_literals" (formula "28") (term "1,0,0,1,1"))
                        (rule "times_zero_1" (formula "28") (term "0,0,1,1"))
                        (rule "add_zero_left" (formula "28") (term "0,1,1"))
                        (rule "polyDiv_pullOut" (formula "29") (term "0,0,0") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,2,0,0,0"))
                        (rule "equal_literals" (formula "29") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "29") (term "1,0,0,1,0,0,0"))
                        (rule "times_zero_1" (formula "29") (term "0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,1,0,0,0"))
                        (rule "polyDiv_pullOut" (formula "5") (term "0,0,1,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,0,0,1,1"))
                        (rule "equal_literals" (formula "5") (term "0,0,0,1,1"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "5") (term "0,0,1,1"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0,1,1"))
                        (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1,0,0,1,1"))
                        (rule "add_literals" (formula "5") (term "1,0,0,1,0,0,1,1"))
                        (rule "times_zero_1" (formula "5") (term "0,0,1,0,0,1,1"))
                        (rule "add_zero_left" (formula "5") (term "0,1,0,0,1,1"))
                        (rule "polyDiv_pullOut" (formula "16") (term "0,0,1,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0,0,1,1"))
                        (rule "equal_literals" (formula "16") (term "0,0,0,1,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,0,1,1"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,1,1"))
                        (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0,1,0,0,1,1"))
                        (rule "add_literals" (formula "16") (term "1,0,0,1,0,0,1,1"))
                        (rule "times_zero_1" (formula "16") (term "0,0,1,0,0,1,1"))
                        (rule "add_zero_left" (formula "16") (term "0,1,0,0,1,1"))
                        (rule "polyDiv_pullOut" (formula "23") (term "0,0,1,1") (inst "polyDivCoeff=mul(l_6, Z(neglit(6(5(2(#))))))"))
                        (rule "equal_literals" (formula "23") (term "0,0,0,1,1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0,1,1"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,1,1"))
                        (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,0,0,1,1"))
                        (rule "add_literals" (formula "23") (term "1,0,0,1,0,0,1,1"))
                        (rule "times_zero_1" (formula "23") (term "0,0,1,0,0,1,1"))
                        (rule "add_zero_left" (formula "23") (term "0,1,0,0,1,1"))
                        (rule "div_axiom" (formula "14") (term "1,1") (inst "quotient=quotient_15"))
                        (rule "qeq_literals" (formula "14") (term "0,1,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "mul_literals" (formula "14") (term "1,1,1,1"))
                        (rule "equal_literals" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "polySimp_addComm1" (formula "16") (term "1"))
                        (rule "add_literals" (formula "16") (term "0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15"))
                        (rule "inEqSimp_homoInEq1" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0"))
                        (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "14"))
                        (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                        (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "14"))
                        (rule "polySimp_addComm0" (formula "17") (term "1"))
                        (rule "jmod_axiom" (formula "18") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                        (rule "polySimp_homoEq" (formula "18"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor3b" (formula "18") (term "0,0,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "18"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                        (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "18"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0,0,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1"))
                        (rule "mul_literals" (formula "16") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "newSym_eq" (formula "18") (inst "l=l_7") (inst "newSymDef=add(add(add(add(Z(0(#)), mul(quotient_15, Z(0(#)))),
            mul(l_6, Z(0(#)))),
        jdiv(add(quotient_15,
                 mul(l_6, Z(neglit(1(#))))),
             Z(6(5(2(#)))))),
    mul(jdiv(add(mul(l_6, Z(neglit(6(5(2(#)))))),
                 div(res_byteArrayToInt, Z(6(5(2(#)))))),
             Z(6(5(2(#))))),
        Z(0(#))))"))
                        (rule "add_zero_left" (formula "18") (term "0,0,0,1,1"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,1,1"))
                        (rule "times_zero_1" (formula "18") (term "1,1,1"))
                        (rule "times_zero_1" (formula "18") (term "0,0,0,1,1"))
                        (rule "add_zero_left" (formula "18") (term "0,0,1,1"))
                        (rule "add_zero_left" (formula "18") (term "0,1,1"))
                        (rule "add_zero_right" (formula "18") (term "1,1"))
                        (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "18"))
                        (rule "polySimp_homoEq" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                        (rule "applyEqRigid" (formula "34") (term "0,1,1") (ifseqformula "18"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "34") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "34") (term "1"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "38") (term "1") (ifseqformula "18"))
                        (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "18"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "4") (term "1"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,1"))
                        (rule "applyEq" (formula "30") (term "0,1,1") (ifseqformula "18"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "30") (term "1"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "18"))
                        (rule "polySimp_sepPosMonomial" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,0,1"))
                        (rule "mul_literals" (formula "19") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "19"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                        (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "19"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,1,1"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "5") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,1"))
                        (rule "polySimp_addComm1" (formula "5") (term "1"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1"))
                        (rule "add_literals" (formula "5") (term "1,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1"))
                        (rule "add_literals" (formula "5") (term "0,0,0,0,1"))
                        (rule "add_zero_left" (formula "5") (term "0,0,0,1"))
                        (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "19"))
                        (rule "polySimp_addComm1" (formula "34") (term "1"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,1"))
                        (rule "add_literals" (formula "34") (term "1,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,1"))
                        (rule "add_literals" (formula "34") (term "0,0,0,0,0,1"))
                        (rule "add_zero_left" (formula "34") (term "0,0,0,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "34") (term "0,0,0,1"))
                        (rule "add_literals" (formula "34") (term "1,0,0,0,1"))
                        (rule "times_zero_1" (formula "34") (term "0,0,0,1"))
                        (rule "add_zero_left" (formula "34") (term "0,0,1"))
                        (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "19"))
                        (rule "polySimp_addComm1" (formula "4") (term "1"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,1"))
                        (rule "add_literals" (formula "4") (term "1,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0,1"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0,0,1"))
                        (rule "add_zero_left" (formula "4") (term "0,0,0,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,0,1"))
                        (rule "add_literals" (formula "4") (term "1,0,0,0,1"))
                        (rule "times_zero_1" (formula "4") (term "0,0,0,1"))
                        (rule "add_zero_left" (formula "4") (term "0,0,1"))
                        (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "19"))
                        (rule "polySimp_addComm1" (formula "30") (term "1"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,1"))
                        (rule "add_literals" (formula "30") (term "1,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,1"))
                        (rule "add_literals" (formula "30") (term "0,0,0,0,0,1"))
                        (rule "add_zero_left" (formula "30") (term "0,0,0,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "30") (term "0,0,0,1"))
                        (rule "add_literals" (formula "30") (term "1,0,0,0,1"))
                        (rule "times_zero_1" (formula "30") (term "0,0,0,1"))
                        (rule "add_zero_left" (formula "30") (term "0,0,1"))
                        (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "19"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,1,1"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "27") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,1"))
                        (rule "polySimp_addComm1" (formula "27") (term "1"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1"))
                        (rule "add_literals" (formula "27") (term "1,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,1"))
                        (rule "add_zero_left" (formula "27") (term "0,0,0,1"))
                        (rule "applyEqRigid" (formula "20") (term "0,1,1") (ifseqformula "19"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,1,1"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "20") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,1"))
                        (rule "polySimp_addComm1" (formula "20") (term "1"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "20") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,1"))
                        (rule "add_literals" (formula "20") (term "1,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1"))
                        (rule "polySimp_rightDist" (formula "33") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,1"))
                        (rule "mul_literals" (formula "33") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "16"))
                        (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_15)") (inst "elimGcdLeftDiv=l_6") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                        (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "11") (term "1,1,0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "11") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "11") (term "0,0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                        (rule "add_literals" (formula "11") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                        (rule "add_literals" (formula "11") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0"))
                        (rule "qeq_literals" (formula "11") (term "0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "div_axiom" (formula "38") (term "1") (inst "quotient=quotient_16"))
                        (rule "equal_literals" (formula "38") (term "0"))
                        (builtin "One Step Simplification" (formula "38"))
                        (rule "qeq_literals" (formula "38") (term "0,1"))
                        (builtin "One Step Simplification" (formula "38"))
                        (rule "mul_literals" (formula "38") (term "1,1,1"))
                        (rule "andLeft" (formula "38"))
                        (rule "andLeft" (formula "38"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "40") (term "1"))
                        (rule "polySimp_addComm1" (formula "40") (term "0,1"))
                        (rule "add_literals" (formula "40") (term "0,0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "39"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "39") (term "0"))
                        (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "40"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "40") (term "0"))
                        (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                        (rule "applyEqRigid" (formula "42") (term "0,0,0,0") (ifseqformula "38"))
                        (rule "applyEqRigid" (formula "42") (term "0,2,0") (ifseqformula "38"))
                        (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "38"))
                        (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "38"))
                        (rule "applyEqRigid" (formula "41") (term "1") (ifseqformula "38"))
                        (rule "jmod_axiom" (formula "42") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                        (rule "jmod_axiom" (formula "42") (term "2,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,2,0"))
                        (rule "jmod_axiom" (formula "42") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "42") (term "1,0"))
                        (rule "jmod_axiom" (formula "14") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "0,1"))
                        (rule "mul_literals" (formula "40") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                        (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "40"))
                        (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                        (rule "mul_literals" (formula "16") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                        (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=add(add(Z(neglit(5(5(2(#))))),
        mul(quotient_16, Z(neglit(6(5(2(#))))))),
    quotient_15)") (inst "elimGcdLeftDiv=l_6") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "16") (term "0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0"))
                        (rule "leq_literals" (formula "16") (term "0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "41"))
                        (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0"))
                        (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                        (rule "add_literals" (formula "12") (term "1,1,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0"))
                        (rule "add_zero_right" (formula "12") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                        (rule "mul_literals" (formula "12") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_16") (inst "elimGcd=Z(6(1(2(7(7(7(6(1(#)))))))))"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "12") (term "0,0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0"))
                        (rule "leq_literals" (formula "12") (term "0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "19"))
                        (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "41") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "41") (term "0"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "41") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "41") (inst "elimGcdRightDiv=add(add(Z(0(#)),
        mul(quotient_16, Z(neglit(6(5(2(#))))))),
    quotient_15)") (inst "elimGcdLeftDiv=l_6") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                        (rule "neg_literal" (formula "41") (term "0,0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "41") (term "0,1,1"))
                        (rule "leq_literals" (formula "41") (term "0,0"))
                        (builtin "One Step Simplification" (formula "41"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "41") (term "0,1,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                        (rule "add_literals" (formula "41") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "41") (term "1,0,0"))
                        (rule "add_zero_right" (formula "41") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                        (rule "add_literals" (formula "41") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "41") (term "1,0,0"))
                        (rule "add_zero_right" (formula "41") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                        (rule "add_literals" (formula "41") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "41") (term "1,0,0"))
                        (rule "add_zero_right" (formula "41") (term "0,0"))
                        (rule "qeq_literals" (formula "41") (term "0"))
                        (builtin "One Step Simplification" (formula "41"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "11"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "17") (term "0"))
                        (rule "add_literals" (formula "17") (term "1,1,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0"))
                        (rule "add_zero_right" (formula "17") (term "0"))
                        (rule "polySimp_rightDist" (formula "17") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                        (rule "mul_literals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "12"))
                        (rule "greater_literals" (formula "17") (term "0,0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "times_zero_1" (formula "17") (term "1,0"))
                        (rule "leq_literals" (formula "17") (term "0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "div_axiom" (formula "24") (term "0,1,1") (inst "quotient=quotient_17"))
                        (rule "mul_literals" (formula "24") (term "1,1,1,1,1"))
                        (rule "equal_literals" (formula "24") (term "0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "qeq_literals" (formula "24") (term "0,1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "polySimp_addComm1" (formula "26") (term "1"))
                        (rule "add_literals" (formula "26") (term "0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "25"))
                        (rule "inEqSimp_homoInEq1" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0"))
                        (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "24"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "23"))
                        (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                        (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "23"))
                        (rule "inEqSimp_homoInEq0" (formula "38"))
                        (rule "polySimp_addComm1" (formula "38") (term "0"))
                        (rule "polySimp_addComm1" (formula "38") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                        (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "23"))
                        (rule "polySimp_addComm0" (formula "5") (term "1"))
                        (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "23"))
                        (rule "polySimp_addComm0" (formula "37") (term "1"))
                        (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "23"))
                        (rule "polySimp_addComm1" (formula "32") (term "1"))
                        (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "0,0,1"))
                        (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "23"))
                        (rule "polySimp_addComm0" (formula "6") (term "1"))
                        (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "23"))
                        (rule "polySimp_addComm1" (formula "4") (term "1"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "4") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "22") (term "1,1") (ifseqformula "23"))
                        (rule "polySimp_addComm1" (formula "22") (term "1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                        (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "23"))
                        (rule "polySimp_addComm0" (formula "26") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1"))
                        (rule "polySimp_rightDist" (formula "25") (term "1"))
                        (rule "mul_literals" (formula "25") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "45"))
                        (rule "polySimp_mulAssoc" (formula "24") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,1"))
                        (rule "mul_literals" (formula "24") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1"))
                        (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcdRightDiv=add(add(Z(neglit(5(3(5(5(6(#))))))), quotient_17),
    mul(quotient_16, Z(neglit(6(3(5(5(6(#)))))))))") (inst "elimGcdLeftDiv=mul(l_6, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                        (rule "leq_literals" (formula "24") (term "0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0"))
                        (rule "leq_literals" (formula "24") (term "0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "26"))
                        (rule "polySimp_rightDist" (formula "45") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "45") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "45") (term "0"))
                        (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "45") (inst "elimGcdRightDiv=add(add(Z(0(#)), quotient_17),
    mul(quotient_16, Z(neglit(6(3(5(5(6(#)))))))))") (inst "elimGcdLeftDiv=mul(l_6, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                        (rule "add_zero_left" (formula "45") (term "0,1,1"))
                        (rule "leq_literals" (formula "45") (term "0,0"))
                        (builtin "One Step Simplification" (formula "45"))
                        (rule "neg_literal" (formula "45") (term "0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                        (rule "add_zero_left" (formula "45") (term "0,1,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                        (rule "add_literals" (formula "45") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "45") (term "1,0,0"))
                        (rule "add_zero_right" (formula "45") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                        (rule "add_literals" (formula "45") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "45") (term "1,0,0"))
                        (rule "add_zero_right" (formula "45") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                        (rule "add_literals" (formula "45") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "45") (term "1,0,0"))
                        (rule "add_zero_right" (formula "45") (term "0,0"))
                        (rule "qeq_literals" (formula "45") (term "0"))
                        (builtin "One Step Simplification" (formula "45"))
                        (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "39"))
                        (rule "greater_literals" (formula "16") (term "0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,1,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0"))
                        (rule "add_zero_right" (formula "16") (term "0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                        (rule "mul_literals" (formula "16") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "19"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0"))
                        (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1"))
                        (rule "polySimp_rightDist" (formula "26") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                        (rule "mul_literals" (formula "26") (term "0,1"))
                        (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcdRightDiv=add(Z(neglit(5(5(2(#))))), quotient_17)") (inst "elimGcdLeftDiv=mul(quotient_15, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,0"))
                        (rule "leq_literals" (formula "26") (term "0,0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0"))
                        (rule "leq_literals" (formula "26") (term "0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "28"))
                        (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "12") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "12") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_17)") (inst "elimGcdLeftDiv=mul(l_6, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "12") (term "0,0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "neg_literal" (formula "12") (term "0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "12") (term "1,1,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "12") (term "1,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0"))
                        (rule "qeq_literals" (formula "12") (term "0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "29"))
                        (rule "polySimp_mulAssoc" (formula "19") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "19") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_17)") (inst "elimGcdLeftDiv=mul(quotient_15, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                        (rule "leq_literals" (formula "19") (term "0,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                        (rule "neg_literal" (formula "19") (term "0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "19") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                        (rule "add_zero_left" (formula "19") (term "1,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0"))
                        (rule "qeq_literals" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_exactShadow0" (formula "27") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "greater_literals" (formula "27") (term "0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                        (rule "add_literals" (formula "27") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                        (rule "mul_literals" (formula "27") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "11"))
                        (rule "times_zero_1" (formula "27") (term "1,1,0"))
                        (rule "greater_literals" (formula "27") (term "0,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "leq_literals" (formula "27") (term "0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "inEqSimp_exactShadow2" (formula "18") (ifseqformula "12"))
                        (rule "greater_literals" (formula "18") (term "0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0"))
                        (rule "polySimp_rightDist" (formula "18") (term "0,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                        (rule "inEqSimp_exactShadow0" (formula "28") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "greater_literals" (formula "28") (term "0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1"))
                        (rule "polySimp_rightDist" (formula "28") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,1"))
                        (rule "mul_literals" (formula "28") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1"))
                        (rule "elimGcdGeq_antec" (formula "28") (inst "elimGcdRightDiv=add(add(add(Z(neglit(5(9(8(2(3(#))))))), quotient_17),
        mul(quotient_16, Z(neglit(8(6(7(2(3(#))))))))),
    mul(l_7, Z(neglit(8(6(7(2(3(#)))))))))") (inst "elimGcdLeftDiv=mul(quotient_15, Z(8(2(1(#)))))") (inst "elimGcd=Z(2(1(5(#))))"))
                        (rule "leq_literals" (formula "28") (term "0,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0"))
                        (rule "leq_literals" (formula "28") (term "0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_exactShadow1" (formula "29") (ifseqformula "10"))
                        (rule "greater_literals" (formula "29") (term "0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1"))
                        (rule "polySimp_rightDist" (formula "29") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,1"))
                        (rule "mul_literals" (formula "29") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow2" (formula "19") (ifseqformula "52"))
                        (rule "greater_literals" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "21"))
                        (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0"))
                        (rule "qeq_literals" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "inEqSimp_exactShadow1" (formula "30") (ifseqformula "51"))
                        (rule "greater_literals" (formula "30") (term "0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "0,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0"))
                        (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1"))
                        (rule "polySimp_rightDist" (formula "30") (term "1"))
                        (rule "mul_literals" (formula "30") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                        (rule "inEqSimp_subsumption5" (formula "30") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "greater_literals" (formula "30") (term "0,0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                        (rule "mul_literals" (formula "30") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                        (rule "add_literals" (formula "30") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0"))
                        (rule "qeq_literals" (formula "30") (term "0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "inEqSimp_exactShadow0" (formula "31") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "greater_literals" (formula "31") (term "0"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "0,1,0"))
                        (rule "mul_literals" (formula "31") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                        (rule "mul_literals" (formula "31") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                        (rule "mul_literals" (formula "31") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "31") (ifseqformula "11"))
                        (rule "greater_literals" (formula "31") (term "0,0"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "times_zero_1" (formula "31") (term "1,0"))
                        (rule "leq_literals" (formula "31") (term "0"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "inEqSimp_exactShadow0" (formula "29") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "greater_literals" (formula "29") (term "0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,1,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "29") (term "0"))
                        (rule "add_literals" (formula "29") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                        (rule "mul_literals" (formula "29") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "29") (ifseqformula "11"))
                        (rule "greater_literals" (formula "29") (term "0,0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "times_zero_1" (formula "29") (term "1,0"))
                        (rule "leq_literals" (formula "29") (term "0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "inEqSimp_exactShadow0" (formula "29") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "greater_literals" (formula "29") (term "0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                        (rule "mul_literals" (formula "29") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "29") (ifseqformula "11"))
                        (rule "greater_literals" (formula "29") (term "0,0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "times_zero_1" (formula "29") (term "1,0"))
                        (rule "leq_literals" (formula "29") (term "0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "inEqSimp_exactShadow0" (formula "28") (ifseqformula "18"))
                        (rule "greater_literals" (formula "28") (term "0,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "greater_literals" (formula "28") (term "0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1"))
                        (rule "polySimp_rightDist" (formula "28") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1"))
                        (rule "mul_literals" (formula "28") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1"))
                        (rule "elimGcdGeq_antec" (formula "28") (inst "elimGcdRightDiv=add(add(Z(neglit(0(7(0(1(3(1(#)))))))), quotient_17),
    mul(quotient_16, Z(neglit(2(7(0(1(3(1(#))))))))))") (inst "elimGcdLeftDiv=mul(l_7, Z(6(3(5(5(6(#)))))))") (inst "elimGcd=Z(8(2(1(#))))"))
                        (rule "leq_literals" (formula "28") (term "0,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0"))
                        (rule "leq_literals" (formula "28") (term "0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_exactShadow0" (formula "29") (ifseqformula "20"))
                        (rule "greater_literals" (formula "29") (term "0,0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "greater_literals" (formula "29") (term "0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1"))
                        (rule "polySimp_rightDist" (formula "29") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,1"))
                        (rule "mul_literals" (formula "29") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                        (rule "inEqSimp_subsumption5" (formula "29") (ifseqformula "17"))
                        (rule "greater_literals" (formula "29") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "greater_literals" (formula "29") (term "0,0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,1,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0"))
                        (rule "qeq_literals" (formula "29") (term "0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "jdiv_axiom" (formula "1") (term "0,0"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,2,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEqRigid" (formula "2") (term "0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "49") (term "0,1,1") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "45") (term "0,1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "1"))
                        (rule "jdiv_axiom" (formula "58") (term "0,1,2,0"))
                        (rule "eqSymm" (formula "58"))
                        (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "58"))
                        (rule "eqSymm" (formula "58"))
                        (rule "applyEqRigid" (formula "59") (term "0,1,1,0") (ifseqformula "58"))
                        (rule "applyEqRigid" (formula "59") (term "0,0,0,0") (ifseqformula "58"))
                        (rule "applyEq" (formula "59") (term "0,1,2,0") (ifseqformula "58"))
                        (rule "applyEqRigid" (formula "16") (term "0,1,1") (ifseqformula "58"))
                        (rule "jdiv_axiom" (formula "26") (term "0"))
                        (rule "eqSymm" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,2,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,2,0"))
                        (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "27"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                        (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "polyDiv_pullOut" (formula "26") (term "0") (inst "polyDivCoeff=mul(l_6, Z(neglit(1(#))))"))
                        (rule "equal_literals" (formula "26") (term "0,0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,0"))
                        (rule "polySimp_homoEq" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0"))
                        (rule "polySimp_pullOutFactor2b" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                        (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_18"))
                        (rule "equal_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1,1,1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "3") (term "1"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                        (rule "add_literals" (formula "3") (term "0,0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                        (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                        (rule "applyEqRigid" (formula "62") (term "1,1") (ifseqformula "1"))
                        (rule "polySimp_addComm0" (formula "62") (term "1"))
                        (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "27") (term "1,1") (ifseqformula "1"))
                        (rule "polySimp_addComm0" (formula "27") (term "1"))
                        (rule "applyEqRigid" (formula "52") (term "0,1,1") (ifseqformula "1"))
                        (rule "polySimp_addComm1" (formula "52") (term "1"))
                        (rule "polySimp_addComm0" (formula "52") (term "0,1"))
                        (rule "applyEqRigid" (formula "48") (term "0,1,1") (ifseqformula "1"))
                        (rule "polySimp_addComm1" (formula "48") (term "1"))
                        (rule "polySimp_addComm0" (formula "48") (term "0,1"))
                        (rule "applyEqRigid" (formula "6") (term "0,1,1") (ifseqformula "1"))
                        (rule "polySimp_addComm1" (formula "6") (term "1"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,1"))
                        (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "1"))
                        (rule "polySimp_addComm0" (formula "5") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "56"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_18)") (inst "elimGcdLeftDiv=quotient_16") (inst "elimGcd=Z(6(5(2(#))))"))
                        (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "3") (term "1,1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "3") (term "0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                        (rule "add_zero_left" (formula "3") (term "1,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "14"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0"))
                        (rule "mul_literals" (formula "4") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_18") (inst "elimGcd=Z(6(5(2(#))))"))
                        (rule "leq_literals" (formula "4") (term "0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0"))
                        (rule "leq_literals" (formula "4") (term "0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "24") (term "0"))
                        (rule "add_literals" (formula "24") (term "1,1,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0"))
                        (rule "add_zero_right" (formula "24") (term "0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "mul_literals" (formula "24") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_18)") (inst "elimGcdLeftDiv=quotient_16") (inst "elimGcd=Z(6(5(2(#))))"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "24") (term "1,1"))
                        (rule "add_zero_left" (formula "24") (term "1,1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "24") (term "0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0"))
                        (rule "leq_literals" (formula "24") (term "0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_exactShadow2" (formula "5") (ifseqformula "17"))
                        (rule "greater_literals" (formula "5") (term "0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "inEqSimp_exactShadow1" (formula "39") (ifseqformula "2"))
                        (rule "greater_literals" (formula "39") (term "0"))
                        (builtin "One Step Simplification" (formula "39"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "39") (term "0,0,0"))
                        (rule "mul_literals" (formula "39") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "39") (term "0"))
                        (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "39") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "39") (term "0,0,1"))
                        (rule "mul_literals" (formula "39") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,1"))
                        (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "56"))
                        (rule "greater_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "1,1,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0"))
                        (rule "add_zero_right" (formula "6") (term "0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                        (rule "mul_literals" (formula "6") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "63"))
                        (rule "greater_literals" (formula "7") (term "0"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "19") (term "0,0"))
                        (rule "add_zero_left" (formula "19") (term "0"))
                        (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "43") (term "0,1,1") (ifseqformula "27"))
                        (rule "polySimp_addComm1" (formula "43") (term "1"))
                        (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "27"))
                        (rule "applyEq" (formula "41") (term "0,1,1") (ifseqformula "26"))
                        (rule "polySimp_addComm1" (formula "41") (term "1"))
                        (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1"))
                        (rule "add_literals" (formula "41") (term "1,1,0,1"))
                        (rule "times_zero_1" (formula "41") (term "1,0,1"))
                        (rule "add_zero_right" (formula "41") (term "0,1"))
                        (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "26"))
                        (rule "polySimp_addComm1" (formula "7") (term "1"))
                        (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1"))
                        (rule "add_literals" (formula "7") (term "1,1,0,1"))
                        (rule "times_zero_1" (formula "7") (term "1,0,1"))
                        (rule "add_zero_right" (formula "7") (term "0,1"))
                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                        (rule "inEqSimp_homoInEq1" (formula "27"))
                        (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                        (rule "add_literals" (formula "27") (term "1,0"))
                        (rule "times_zero_1" (formula "27") (term "0"))
                        (rule "leq_literals" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "applyEq" (formula "68") (term "0,0,1,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "26"))
                        (rule "polySimp_addComm1" (formula "24") (term "1"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "25"))
                        (rule "inEqSimp_homoInEq0" (formula "3"))
                        (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,0"))
                        (rule "times_zero_1" (formula "3") (term "0"))
                        (rule "qeq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEqRigid" (formula "66") (term "0,0,0,0,0") (ifseqformula "24"))
                        (rule "applyEqRigid" (formula "35") (term "0,1,1") (ifseqformula "24"))
                        (rule "polySimp_addComm1" (formula "35") (term "1"))
                        (rule "applyEq" (formula "37") (term "0,1,1") (ifseqformula "24"))
                        (rule "polySimp_addComm1" (formula "37") (term "1"))
                        (rule "applyEq" (formula "66") (term "0,0,1,2,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "66") (term "1,1,0,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "65") (term "0,0") (ifseqformula "24"))
                        (rule "applyEqRigid" (formula "61") (term "0,1,1") (ifseqformula "24"))
                        (rule "polySimp_addComm0" (formula "61") (term "1"))
                        (rule "applyEqRigid" (formula "23") (term "0,1,1") (ifseqformula "24"))
                        (rule "polySimp_addComm1" (formula "23") (term "1"))
                        (rule "applyEq" (formula "62") (term "0,1,0,1") (ifseqformula "23"))
                        (rule "applyEqRigid" (formula "21") (term "0,0,1,1") (ifseqformula "23"))
                        (rule "applyEqRigid" (formula "65") (term "0,2,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "61") (term "0,0,1") (ifseqformula "23"))
                        (rule "applyEq" (formula "24") (term "0,1,0,1") (ifseqformula "23"))
                        (rule "applyEq" (formula "34") (term "0,1,0,1") (ifseqformula "23"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                        (rule "applyEq" (formula "63") (term "0,1") (ifseqformula "23"))
                        (rule "applyEqRigid" (formula "64") (term "1,0,1,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "62") (term "1") (ifseqformula "23"))
                        (rule "applyEq" (formula "58") (term "0,0,1") (ifseqformula "23"))
                        (rule "applyEqRigid" (formula "57") (term "1") (ifseqformula "23"))
                        (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "23"))
                        (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "38"))
                        (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                        (rule "add_literals" (formula "36") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "36") (term "1,0,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0"))
                        (rule "qeq_literals" (formula "36") (term "0"))
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "true_left" (formula "36"))
                        (rule "inEqSimp_subsumption2" (formula "6") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "greater_literals" (formula "6") (term "0,0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_exactShadow0" (formula "36") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "greater_literals" (formula "36") (term "0"))
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "36") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "36") (term "0"))
                        (rule "add_literals" (formula "36") (term "1,1,0"))
                        (rule "times_zero_1" (formula "36") (term "1,0"))
                        (rule "add_zero_right" (formula "36") (term "0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0"))
                        (rule "add_literals" (formula "36") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                        (rule "mul_literals" (formula "36") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "36") (ifseqformula "3"))
                        (rule "greater_literals" (formula "36") (term "0,0"))
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "times_zero_1" (formula "36") (term "1,0"))
                        (rule "leq_literals" (formula "36") (term "0"))
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "true_left" (formula "36"))
                        (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "58"))
                        (rule "polySimp_mulAssoc" (formula "24") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                        (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,1"))
                        (rule "mul_literals" (formula "24") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1"))
                        (rule "inEqSimp_subsumption6" (formula "24") (ifseqformula "6"))
                        (rule "greater_literals" (formula "24") (term "0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0"))
                        (rule "qeq_literals" (formula "24") (term "0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "58"))
                        (rule "polySimp_mulAssoc" (formula "18") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0"))
                        (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "18") (term "0"))
                        (rule "add_literals" (formula "18") (term "1,1,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0"))
                        (rule "add_zero_right" (formula "18") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "3"))
                        (rule "greater_literals" (formula "18") (term "0,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "times_zero_1" (formula "18") (term "1,0"))
                        (rule "leq_literals" (formula "18") (term "0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "58"))
                        (rule "polySimp_mulAssoc" (formula "37") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0"))
                        (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1"))
                        (rule "polySimp_rightDist" (formula "37") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "37") (term "0,1"))
                        (rule "mul_literals" (formula "37") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1"))
                        (rule "inEqSimp_subsumption5" (formula "37") (ifseqformula "35"))
                        (rule "greater_literals" (formula "37") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "37"))
                        (rule "greater_literals" (formula "37") (term "0,0"))
                        (builtin "One Step Simplification" (formula "37"))
                        (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "0,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "0,1,0"))
                        (rule "mul_literals" (formula "37") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "37") (term "0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                        (rule "add_literals" (formula "37") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "37") (term "1,0,0"))
                        (rule "add_zero_right" (formula "37") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                        (rule "add_literals" (formula "37") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "37") (term "1,0,0"))
                        (rule "add_zero_right" (formula "37") (term "0,0"))
                        (rule "qeq_literals" (formula "37") (term "0"))
                        (builtin "One Step Simplification" (formula "37"))
                        (rule "true_left" (formula "37"))
                        (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "56"))
                        (rule "greater_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "inEqSimp_subsumption2" (formula "6") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "greater_literals" (formula "6") (term "0,0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_exactShadow0" (formula "35") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "greater_literals" (formula "35") (term "0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "35") (term "0"))
                        (rule "add_literals" (formula "35") (term "1,1,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0"))
                        (rule "add_zero_right" (formula "35") (term "0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0"))
                        (rule "mul_literals" (formula "35") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                        (rule "mul_literals" (formula "35") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "3"))
                        (rule "greater_literals" (formula "35") (term "0,0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "times_zero_1" (formula "35") (term "1,0"))
                        (rule "leq_literals" (formula "35") (term "0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "true_left" (formula "35"))
                        (rule "inEqSimp_exactShadow1" (formula "35") (ifseqformula "2"))
                        (rule "greater_literals" (formula "35") (term "0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0"))
                        (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0"))
                        (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "35") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1"))
                        (rule "polySimp_rightDist" (formula "35") (term "1"))
                        (rule "mul_literals" (formula "35") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "37"))
                        (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                        (rule "add_literals" (formula "35") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0"))
                        (rule "add_zero_right" (formula "35") (term "0,0"))
                        (rule "qeq_literals" (formula "35") (term "0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "true_left" (formula "35"))
                        (rule "inEqSimp_exactShadow0" (formula "33") (ifseqformula "4"))
                        (rule "greater_literals" (formula "33") (term "0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "greater_literals" (formula "33") (term "0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1"))
                        (rule "polySimp_rightDist" (formula "33") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1"))
                        (rule "mul_literals" (formula "33") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1"))
                        (rule "inEqSimp_subsumption5" (formula "33") (ifseqformula "32"))
                        (rule "greater_literals" (formula "33") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "greater_literals" (formula "33") (term "0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,0,0"))
                        (rule "times_zero_1" (formula "33") (term "0,0"))
                        (rule "qeq_literals" (formula "33") (term "0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "inEqSimp_exactShadow0" (formula "34") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "greater_literals" (formula "34") (term "0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "34") (term "0"))
                        (rule "add_literals" (formula "34") (term "1,1,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0"))
                        (rule "add_zero_right" (formula "34") (term "0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0"))
                        (rule "mul_literals" (formula "34") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                        (rule "mul_literals" (formula "34") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "34") (ifseqformula "3"))
                        (rule "greater_literals" (formula "34") (term "0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "times_zero_1" (formula "34") (term "1,0"))
                        (rule "leq_literals" (formula "34") (term "0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "inEqSimp_exactShadow0" (formula "33") (ifseqformula "23"))
                        (rule "greater_literals" (formula "33") (term "0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "greater_literals" (formula "33") (term "0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1"))
                        (rule "polySimp_rightDist" (formula "33") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1"))
                        (rule "mul_literals" (formula "33") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1"))
                        (rule "inEqSimp_subsumption5" (formula "33") (ifseqformula "5"))
                        (rule "greater_literals" (formula "33") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "greater_literals" (formula "33") (term "0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0"))
                        (rule "qeq_literals" (formula "33") (term "0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "25"))
                        (rule "polySimp_rightDist" (formula "57") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "57") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "57") (term "0"))
                        (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "57") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                        (rule "inEqSimp_subsumption4" (formula "57") (ifseqformula "2"))
                        (rule "greater_literals" (formula "57") (term "0,0"))
                        (builtin "One Step Simplification" (formula "57"))
                        (rule "polySimp_rightDist" (formula "57") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "57") (term "0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "57") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0"))
                        (rule "add_literals" (formula "57") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "57") (term "1,0,0"))
                        (rule "add_zero_right" (formula "57") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0"))
                        (rule "add_literals" (formula "57") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "57") (term "1,0,0"))
                        (rule "add_zero_right" (formula "57") (term "0,0"))
                        (rule "qeq_literals" (formula "57") (term "0"))
                        (builtin "One Step Simplification" (formula "57"))
                        (rule "true_left" (formula "57"))
                        (rule "inEqSimp_exactShadow1" (formula "35") (ifseqformula "16"))
                        (rule "greater_literals" (formula "35") (term "0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1"))
                        (rule "polySimp_rightDist" (formula "35") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,1"))
                        (rule "mul_literals" (formula "35") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1"))
                        (rule "inEqSimp_exactShadow0" (formula "35") (ifseqformula "51"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "greater_literals" (formula "35") (term "0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "35") (term "0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0"))
                        (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1"))
                        (rule "polySimp_rightDist" (formula "35") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,0,1"))
                        (rule "mul_literals" (formula "35") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,1"))
                        (rule "inEqSimp_subsumption5" (formula "33") (ifseqformula "35"))
                        (rule "greater_literals" (formula "33") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "greater_literals" (formula "33") (term "0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,0,0"))
                        (rule "times_zero_1" (formula "33") (term "0,0"))
                        (rule "qeq_literals" (formula "33") (term "0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "inEqSimp_exactShadow0" (formula "33") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "greater_literals" (formula "33") (term "0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                        (rule "add_literals" (formula "33") (term "1,1,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0"))
                        (rule "add_zero_right" (formula "33") (term "0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "0"))
                        (rule "add_literals" (formula "33") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                        (rule "mul_literals" (formula "33") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "39"))
                        (rule "polySimp_rightDist" (formula "58") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "58") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "58") (term "0"))
                        (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "58") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "58"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                        (rule "inEqSimp_subsumption2" (formula "58") (ifseqformula "57"))
                        (rule "greater_literals" (formula "58") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "58"))
                        (rule "greater_literals" (formula "58") (term "0,0"))
                        (builtin "One Step Simplification" (formula "58"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "0,1,0"))
                        (rule "mul_literals" (formula "58") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "58") (term "0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                        (rule "add_literals" (formula "58") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "58") (term "1,0,0"))
                        (rule "add_zero_right" (formula "58") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                        (rule "add_literals" (formula "58") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "58") (term "1,0,0"))
                        (rule "add_zero_right" (formula "58") (term "0,0"))
                        (rule "qeq_literals" (formula "58") (term "0"))
                        (builtin "One Step Simplification" (formula "58"))
                        (rule "true_left" (formula "58"))
                        (rule "inEqSimp_subsumption6" (formula "33") (ifseqformula "3"))
                        (rule "greater_literals" (formula "33") (term "0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "times_zero_1" (formula "33") (term "1,0"))
                        (rule "leq_literals" (formula "33") (term "0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "elimGcdGeq_antec" (formula "34") (inst "elimGcdRightDiv=add(add(add(Z(neglit(5(9(8(2(3(#))))))),
            mul(quotient_18,
                Z(neglit(8(6(7(2(3(#))))))))),
        quotient_17),
    mul(l_7, Z(neglit(8(6(7(2(3(#)))))))))") (inst "elimGcdLeftDiv=mul(quotient_15, Z(8(2(1(#)))))") (inst "elimGcd=Z(2(1(5(#))))"))
                        (rule "leq_literals" (formula "34") (term "0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0"))
                        (rule "leq_literals" (formula "34") (term "0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "inEqSimp_exactShadow0" (formula "34") (ifseqformula "4"))
                        (rule "greater_literals" (formula "34") (term "0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "greater_literals" (formula "34") (term "0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "34") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1"))
                        (rule "polySimp_rightDist" (formula "34") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,1"))
                        (rule "mul_literals" (formula "34") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1"))
                        (rule "inEqSimp_subsumption5" (formula "32") (ifseqformula "34"))
                        (rule "greater_literals" (formula "32") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "greater_literals" (formula "32") (term "0,0"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                        (rule "mul_literals" (formula "32") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "0,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0"))
                        (rule "add_literals" (formula "32") (term "1,0,0"))
                        (rule "times_zero_1" (formula "32") (term "0,0"))
                        (rule "qeq_literals" (formula "32") (term "0"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "elimGcdGeq_antec" (formula "33") (inst "elimGcdRightDiv=add(add(Z(neglit(0(7(0(1(3(1(#)))))))),
        mul(quotient_18,
            Z(neglit(2(7(0(1(3(1(#)))))))))),
    quotient_17)") (inst "elimGcdLeftDiv=mul(l_7, Z(6(3(5(5(6(#)))))))") (inst "elimGcd=Z(8(2(1(#))))"))
                        (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "33") (term "0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0"))
                        (rule "leq_literals" (formula "33") (term "0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_exactShadow0" (formula "34") (ifseqformula "23"))
                        (rule "greater_literals" (formula "34") (term "1,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "greater_literals" (formula "34") (term "0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1"))
                        (rule "polySimp_rightDist" (formula "34") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,1"))
                        (rule "mul_literals" (formula "34") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1"))
                        (rule "inEqSimp_subsumption5" (formula "34") (ifseqformula "5"))
                        (rule "greater_literals" (formula "34") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "greater_literals" (formula "34") (term "0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,1,0"))
                        (rule "mul_literals" (formula "34") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0"))
                        (rule "qeq_literals" (formula "34") (term "0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "div_axiom" (formula "28") (term "0") (inst "quotient=quotient_19"))
                        (rule "equal_literals" (formula "28") (term "0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "qeq_literals" (formula "28") (term "0,1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "mul_literals" (formula "28") (term "1,1,1"))
                        (rule "andLeft" (formula "28"))
                        (rule "andLeft" (formula "28"))
                        (rule "polySimp_addComm1" (formula "30") (term "1"))
                        (rule "add_literals" (formula "30") (term "0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "29"))
                        (rule "inEqSimp_homoInEq1" (formula "30"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0"))
                        (rule "applyEq" (formula "28") (term "0") (ifseqformula "31"))
                        (rule "polySimp_homoEq" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1"))
                        (rule "polySimp_rightDist" (formula "28") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,1"))
                        (rule "mul_literals" (formula "28") (term "0,0,0,1"))
                        (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "28"))
                        (rule "inEqSimp_homoInEq1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "1,1,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0"))
                        (rule "add_zero_right" (formula "6") (term "0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "applyEqRigid" (formula "61") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "61") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "61") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "61") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "61") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "61") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "61") (term "1"))
                        (rule "polySimp_addAssoc" (formula "61") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "61") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,1"))
                        (rule "add_literals" (formula "61") (term "0,0,0,0,1"))
                        (rule "applyEq" (formula "60") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "60") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "60") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "60") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "60") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "60") (term "1"))
                        (rule "polySimp_addAssoc" (formula "60") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "60") (term "0,0,1"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "28"))
                        (rule "inEqSimp_homoInEq0" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "16") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,1,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0"))
                        (rule "add_zero_right" (formula "16") (term "0"))
                        (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "17") (term "0"))
                        (rule "polySimp_rightDist" (formula "17") (term "0"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "17"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "17") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                        (rule "applyEqRigid" (formula "66") (term "0") (ifseqformula "28"))
                        (rule "applyEqRigid" (formula "38") (term "0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "38") (term "0"))
                        (rule "polySimp_rightDist" (formula "38") (term "0"))
                        (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "0,0,0"))
                        (rule "mul_literals" (formula "38") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "38"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "38") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,0,0,0"))
                        (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0"))
                        (rule "applyEqRigid" (formula "59") (term "0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "59") (term "0"))
                        (rule "polySimp_rightDist" (formula "59") (term "0"))
                        (rule "polySimp_rightDist" (formula "59") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "59") (term "0,0,0"))
                        (rule "mul_literals" (formula "59") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "59"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "59") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "59") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "59") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "59") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "59") (term "0"))
                        (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "59") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "59") (term "0,0,0,0"))
                        (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "applyEqRigid" (formula "32") (term "0,1,0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "0,0,1,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                        (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "54") (term "0"))
                        (rule "polySimp_rightDist" (formula "54") (term "0"))
                        (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "0,0,0"))
                        (rule "mul_literals" (formula "54") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "54"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "54") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "54") (term "0"))
                        (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "54") (term "0"))
                        (rule "add_literals" (formula "54") (term "1,1,0"))
                        (rule "times_zero_1" (formula "54") (term "1,0"))
                        (rule "add_zero_right" (formula "54") (term "0"))
                        (rule "polySimp_addAssoc" (formula "54") (term "0"))
                        (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "54") (term "0"))
                        (rule "add_literals" (formula "54") (term "1,1,0"))
                        (rule "times_zero_1" (formula "54") (term "1,0"))
                        (rule "add_zero_right" (formula "54") (term "0"))
                        (rule "polySimp_addComm1" (formula "54") (term "0"))
                        (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                        (rule "add_literals" (formula "54") (term "0,0,0"))
                        (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "28"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                        (rule "applyEqRigid" (formula "18") (term "0,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1"))
                        (rule "polySimp_rightDist" (formula "18") (term "1"))
                        (rule "polySimp_rightDist" (formula "18") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "18") (term "0,0,1"))
                        (rule "mul_literals" (formula "18") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1"))
                        (rule "applyEqRigid" (formula "62") (term "0,0,0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "62") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "0,0,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0,0"))
                        (rule "applyEq" (formula "53") (term "0,0,0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "53") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "53") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "53") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "53") (term "0,0,0,0,0"))
                        (rule "mul_literals" (formula "53") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0,0,0"))
                        (rule "applyEq" (formula "33") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "33") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "33") (term "1"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "1"))
                        (rule "add_literals" (formula "33") (term "1,1,1"))
                        (rule "times_zero_1" (formula "33") (term "1,1"))
                        (rule "add_zero_right" (formula "33") (term "1"))
                        (rule "polySimp_addAssoc" (formula "33") (term "1"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "33") (term "1"))
                        (rule "add_literals" (formula "33") (term "1,1,1"))
                        (rule "times_zero_1" (formula "33") (term "1,1"))
                        (rule "add_zero_right" (formula "33") (term "1"))
                        (rule "polySimp_addComm1" (formula "33") (term "1"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                        (rule "add_literals" (formula "33") (term "0,0,1"))
                        (rule "add_zero_left" (formula "33") (term "0,1"))
                        (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "9") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "9") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "9") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "9") (term "1"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "1"))
                        (rule "add_literals" (formula "9") (term "1,1,1"))
                        (rule "times_zero_1" (formula "9") (term "1,1"))
                        (rule "add_zero_right" (formula "9") (term "1"))
                        (rule "polySimp_addAssoc" (formula "9") (term "1"))
                        (rule "polySimp_addComm0" (formula "9") (term "0,1"))
                        (rule "applyEq" (formula "48") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "48") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "48") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "48") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "48") (term "1"))
                        (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "48") (term "1"))
                        (rule "add_literals" (formula "48") (term "1,1,1"))
                        (rule "times_zero_1" (formula "48") (term "1,1"))
                        (rule "add_zero_right" (formula "48") (term "1"))
                        (rule "polySimp_addAssoc" (formula "48") (term "1"))
                        (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "48") (term "1"))
                        (rule "add_literals" (formula "48") (term "1,1,1"))
                        (rule "times_zero_1" (formula "48") (term "1,1"))
                        (rule "add_zero_right" (formula "48") (term "1"))
                        (rule "polySimp_addComm0" (formula "48") (term "1"))
                        (rule "applyEq" (formula "32") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "32") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "32") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "32") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "32") (term "1"))
                        (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "32") (term "1"))
                        (rule "add_literals" (formula "32") (term "1,1,1"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,1"))
                        (rule "add_literals" (formula "32") (term "1,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                        (rule "add_literals" (formula "32") (term "0,0,0,1"))
                        (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "31") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "31") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "31") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "31") (term "1"))
                        (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "31") (term "1"))
                        (rule "add_literals" (formula "31") (term "1,1,1"))
                        (rule "times_zero_1" (formula "31") (term "1,1"))
                        (rule "add_zero_right" (formula "31") (term "1"))
                        (rule "polySimp_addAssoc" (formula "31") (term "1"))
                        (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "31") (term "1"))
                        (rule "add_literals" (formula "31") (term "1,1,1"))
                        (rule "times_zero_1" (formula "31") (term "1,1"))
                        (rule "add_zero_right" (formula "31") (term "1"))
                        (rule "polySimp_addAssoc" (formula "31") (term "1"))
                        (rule "add_literals" (formula "31") (term "0,1"))
                        (rule "add_zero_left" (formula "31") (term "1"))
                        (rule "applyEq" (formula "56") (term "0,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "56") (term "1"))
                        (rule "polySimp_rightDist" (formula "56") (term "1"))
                        (rule "polySimp_rightDist" (formula "56") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "56") (term "0,0,1"))
                        (rule "mul_literals" (formula "56") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,1"))
                        (rule "applyEqRigid" (formula "55") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "55") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "55") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "55") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "55") (term "1"))
                        (rule "polySimp_addComm1" (formula "55") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "55") (term "1"))
                        (rule "add_literals" (formula "55") (term "1,1,1"))
                        (rule "times_zero_1" (formula "55") (term "1,1"))
                        (rule "add_zero_right" (formula "55") (term "1"))
                        (rule "polySimp_addAssoc" (formula "55") (term "1"))
                        (rule "polySimp_addComm0" (formula "55") (term "0,1"))
                        (rule "applyEq" (formula "51") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "51") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "51") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "51") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "51") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "51") (term "1"))
                        (rule "polySimp_addComm1" (formula "51") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "51") (term "1"))
                        (rule "add_literals" (formula "51") (term "1,1,1"))
                        (rule "times_zero_1" (formula "51") (term "1,1"))
                        (rule "add_zero_right" (formula "51") (term "1"))
                        (rule "polySimp_addAssoc" (formula "51") (term "1"))
                        (rule "polySimp_addComm0" (formula "51") (term "0,1"))
                        (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "10") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "10") (term "1"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "10") (term "1"))
                        (rule "add_literals" (formula "10") (term "1,1,1"))
                        (rule "times_zero_1" (formula "10") (term "1,1"))
                        (rule "add_zero_right" (formula "10") (term "1"))
                        (rule "polySimp_addAssoc" (formula "10") (term "1"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "10") (term "1"))
                        (rule "add_literals" (formula "10") (term "1,1,1"))
                        (rule "times_zero_1" (formula "10") (term "1,1"))
                        (rule "add_zero_right" (formula "10") (term "1"))
                        (rule "polySimp_addComm0" (formula "10") (term "1"))
                        (rule "applyEq" (formula "58") (term "0,0,0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "58") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "0,0,0,0,0"))
                        (rule "mul_literals" (formula "58") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0,0,0"))
                        (rule "applyEqRigid" (formula "53") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "53") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "53") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "53") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "53") (term "1"))
                        (rule "polySimp_addAssoc" (formula "53") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "53") (term "0,0,1"))
                        (rule "applyEq" (formula "26") (term "0,0,0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "26") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "26") (term "1"))
                        (rule "polySimp_addComm0" (formula "26") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "1"))
                        (rule "add_literals" (formula "26") (term "1,1,1"))
                        (rule "times_zero_1" (formula "26") (term "1,1"))
                        (rule "add_zero_right" (formula "26") (term "1"))
                        (rule "applyEqRigid" (formula "49") (term "0,0,1") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "49") (term "0,1"))
                        (rule "polySimp_rightDist" (formula "49") (term "0,1"))
                        (rule "polySimp_rightDist" (formula "49") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "49") (term "0,0,0,1"))
                        (rule "mul_literals" (formula "49") (term "0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "66"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1"))
                        (rule "polySimp_rightDist" (formula "66") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "66") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,0,1"))
                        (rule "mul_literals" (formula "66") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "66") (term "1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1"))
                        (rule "polySimp_rightDist" (formula "30") (term "1"))
                        (rule "mul_literals" (formula "30") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "59"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                        (rule "polySimp_elimOne" (formula "54") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "29"))
                        (rule "andLeft" (formula "54"))
                        (rule "inEqSimp_homoInEq1" (formula "54"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                        (rule "mul_literals" (formula "54") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "54") (term "0"))
                        (rule "polySimp_addComm0" (formula "54") (term "0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "54") (term "0"))
                        (rule "add_literals" (formula "54") (term "1,1,0"))
                        (rule "times_zero_1" (formula "54") (term "1,0"))
                        (rule "add_zero_right" (formula "54") (term "0"))
                        (rule "leq_literals" (formula "54"))
                        (rule "closeFalse" (formula "54"))
                     )
                     (branch "a[2] ≤ -1 FALSE"
                        (rule "ifthenelse_split" (formula "26") (term "0") (userinteraction))
                        (branch "a[0] ≤ -1 TRUE"
                           (rule "eqSymm" (formula "1"))
                           (rule "polySimp_homoEq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                           (rule "inEqSimp_leqRight" (formula "29"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "30"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "30"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "23"))
                           (rule "polySimp_homoEq" (formula "17"))
                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "15"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "23"))
                           (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "8"))
                           (rule "polySimp_homoEq" (formula "21"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "27"))
                           (rule "eqSymm" (formula "16"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "14"))
                           (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "23") (term "1") (ifseqformula "7"))
                           (rule "applyEq" (formula "27") (term "1") (ifseqformula "6"))
                           (rule "applyEq" (formula "25") (term "1") (ifseqformula "5"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                           (rule "applyEq" (formula "15") (term "1") (ifseqformula "25"))
                           (rule "applyEq" (formula "16") (term "1") (ifseqformula "6"))
                           (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "7"))
                           (rule "polySimp_sepPosMonomial" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "21") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "21") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1"))
                           (rule "polySimp_mulAssoc" (formula "21") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "0,0,0,1"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "21"))
                           (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "21"))
                           (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "21"))
                           (rule "applyEqRigid" (formula "17") (term "0,0,0,0") (ifseqformula "21"))
                           (rule "polySimp_mulComm0" (formula "17") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,0,0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "30"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                           (rule "polySimp_elimOne" (formula "30") (term "0"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                           (rule "inEqSimp_homoInEq0" (formula "29"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0"))
                           (rule "add_literals" (formula "29") (term "0,0"))
                           (rule "applyEq" (formula "14") (term "1") (ifseqformula "30"))
                           (rule "polySimp_sepNegMonomial" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                           (rule "polySimp_elimOne" (formula "29") (term "0"))
                           (rule "newSym_eq" (formula "17") (inst "l=l_8") (inst "newSymDef=add(add(add(add(mul(res_byteArrayToInt, Z(0(#))),
                mul(res_unsign, Z(6(3(5(5(6(#)))))))),
            mul(res_unsign_0, Z(6(5(2(#)))))),
        res_unsign_1),
    mul(value, Z(0(#))))"))
                           (rule "times_zero_1" (formula "17") (term "0,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "17") (term "1,1,1"))
                           (rule "add_zero_left" (formula "17") (term "0,0,0,1,1"))
                           (rule "add_zero_right" (formula "17") (term "1,1"))
                           (rule "polySimp_addAssoc" (formula "17") (term "1"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                           (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "17"))
                           (rule "polySimp_homoEq" (formula "18"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                           (rule "jmod_axiom" (formula "16") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "18") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                           (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                           (rule "polySimp_homoEq" (formula "17"))
                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                           (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "33") (term "0") (ifseqformula "18"))
                           (rule "polySimp_homoEq" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0"))
                           (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                           (rule "add_literals" (formula "33") (term "1,1,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0"))
                           (rule "add_zero_right" (formula "33") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1"))
                           (rule "polySimp_rightDist" (formula "16") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                           (rule "polySimp_mulAssoc" (formula "16") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "16") (term "0,0,1"))
                           (rule "polySimp_sepPosMonomial" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1"))
                           (rule "polySimp_rightDist" (formula "17") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,1"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "16") (term "1,0,0,0") (ifseqformula "17"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,0"))
                           (rule "polySimp_homoEq" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "16") (term "0,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "16") (term "1,0,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "16") (term "0,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
                           (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "17"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                           (rule "applyEq" (formula "28") (term "1") (ifseqformula "17"))
                           (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "17"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "7") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "7") (term "1"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "1"))
                           (rule "add_literals" (formula "7") (term "1,1,1"))
                           (rule "times_zero_1" (formula "7") (term "1,1"))
                           (rule "add_zero_right" (formula "7") (term "1"))
                           (rule "polySimp_addAssoc" (formula "7") (term "1"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "1"))
                           (rule "add_literals" (formula "7") (term "1,1,1"))
                           (rule "times_zero_1" (formula "7") (term "1,1"))
                           (rule "add_zero_right" (formula "7") (term "1"))
                           (rule "polySimp_addAssoc" (formula "7") (term "1"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                           (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "17"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "24") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "24") (term "1"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "24") (term "1"))
                           (rule "add_literals" (formula "24") (term "1,1,1"))
                           (rule "times_zero_1" (formula "24") (term "1,1"))
                           (rule "add_zero_right" (formula "24") (term "1"))
                           (rule "polySimp_addAssoc" (formula "24") (term "1"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "24") (term "1"))
                           (rule "add_literals" (formula "24") (term "1,1,1"))
                           (rule "times_zero_1" (formula "24") (term "1,1"))
                           (rule "add_zero_right" (formula "24") (term "1"))
                           (rule "polySimp_addAssoc" (formula "24") (term "1"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,1"))
                           (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "17"))
                           (rule "applyEqRigid" (formula "22") (term "0,1,1") (ifseqformula "17"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "22") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "22") (term "0,0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "22") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "22") (term "1"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "22") (term "1"))
                           (rule "add_literals" (formula "22") (term "1,1,1"))
                           (rule "times_zero_1" (formula "22") (term "1,1"))
                           (rule "add_zero_right" (formula "22") (term "1"))
                           (rule "polySimp_addAssoc" (formula "22") (term "1"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "22") (term "1"))
                           (rule "add_literals" (formula "22") (term "1,1,1"))
                           (rule "times_zero_1" (formula "22") (term "1,1"))
                           (rule "add_zero_right" (formula "22") (term "1"))
                           (rule "polySimp_addAssoc" (formula "22") (term "1"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,1"))
                           (rule "polySimp_invertEq" (formula "33"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                           (rule "times_zero_2" (formula "33") (term "1"))
                           (rule "polySimp_sepPosMonomial" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1"))
                           (rule "polySimp_rightDist" (formula "16") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "16") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor2" (formula "1") (term "0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "elimGcdEq" (formula "33") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_8") (inst "elimGcd=Z(6(5(2(#))))"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,1,0"))
                           (rule "add_zero_left" (formula "33") (term "0,0,1"))
                           (rule "add_literals" (formula "33") (term "1,0,0"))
                           (rule "add_zero_left" (formula "33") (term "0,0,0"))
                           (rule "add_zero_left" (formula "33") (term "0,1,0"))
                           (rule "times_zero_1" (formula "33") (term "0,0,1"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "leq_literals" (formula "33") (term "0,0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "qeq_literals" (formula "33") (term "0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "newSym_eq" (formula "16") (inst "l=l_9") (inst "newSymDef=add(add(mul(l_8, Z(0(#))),
        jdiv(jdiv(add(mul(l_8, Z(6(5(2(#))))),
                      res_byteArrayToInt),
                  Z(6(5(2(#))))),
             Z(6(5(2(#)))))),
    mul(res_unsign, Z(neglit(6(5(2(#)))))))"))
                           (rule "times_zero_1" (formula "16") (term "0,0,1,1"))
                           (rule "add_zero_left" (formula "16") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "16") (term "1"))
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "16"))
                           (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "16"))
                           (rule "polySimp_mulComm0" (formula "17") (term "0"))
                           (rule "polySimp_rightDist" (formula "17") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "17") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0"))
                           (rule "add_zero_right" (formula "17") (term "0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0"))
                           (rule "add_zero_right" (formula "17") (term "0"))
                           (rule "polySimp_addComm0" (formula "17") (term "0"))
                           (rule "applyEq" (formula "27") (term "1") (ifseqformula "16"))
                           (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "16"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,1,1"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "6") (term "1"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "1"))
                           (rule "add_literals" (formula "6") (term "1,1,1"))
                           (rule "times_zero_1" (formula "6") (term "1,1"))
                           (rule "add_zero_right" (formula "6") (term "1"))
                           (rule "polySimp_addAssoc" (formula "6") (term "1"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0,1"))
                           (rule "applyEq" (formula "29") (term "0,1,1") (ifseqformula "16"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "0,1,1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "29") (term "1"))
                           (rule "add_literals" (formula "29") (term "1,1,1"))
                           (rule "times_zero_1" (formula "29") (term "1,1"))
                           (rule "add_zero_right" (formula "29") (term "1"))
                           (rule "polySimp_addAssoc" (formula "29") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "29") (term "0,0,1"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "16"))
                           (rule "applyEqRigid" (formula "18") (term "0,1,1") (ifseqformula "16"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "18") (term "0,1,1"))
                           (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "18") (term "1"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "18") (term "1"))
                           (rule "add_literals" (formula "18") (term "1,1,1"))
                           (rule "times_zero_1" (formula "18") (term "1,1"))
                           (rule "add_zero_right" (formula "18") (term "1"))
                           (rule "polySimp_addAssoc" (formula "18") (term "1"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                           (rule "applyEq" (formula "15") (term "1") (ifseqformula "16"))
                           (rule "polySimp_sepNegMonomial" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1"))
                           (rule "applyEq" (formula "1") (term "0,0,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
                           (rule "applyEq" (formula "2") (term "0,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                           (rule "applyEq" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0"))
                           (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                           (rule "applyEqRigid" (formula "27") (term "0,0,0,0,0") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0"))
                           (rule "applyEqRigid" (formula "32") (term "0,0,0,0,0") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,0"))
                           (rule "applyEq" (formula "29") (term "0,0,0,0,0,1,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,0,1,1"))
                           (rule "applyEq" (formula "6") (term "0,0,0,0,0,1,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0,1,1"))
                           (rule "applyEq" (formula "19") (term "0,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                           (rule "applyEq" (formula "7") (term "0,0,0,0,1,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,1,1"))
                           (rule "applyEqRigid" (formula "18") (term "0,0,0,0,0,1,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,1"))
                           (rule "applyEqRigid" (formula "25") (term "0,0,0,0,1,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,1"))
                           (rule "applyEq" (formula "23") (term "0,0,0,0,1,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,1"))
                           (rule "applyEqRigid" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1,0,0"))
                           (rule "applyEqRigid" (formula "29") (term "0,0,0,1,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,0,1,0,1"))
                           (rule "applyEq" (formula "7") (term "0,0,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,0,1"))
                           (rule "applyEq" (formula "25") (term "0,0,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "18") (term "0,0,0,1,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,0,1"))
                           (rule "applyEqRigid" (formula "23") (term "0,0,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "29") (term "0,1,0,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1"))
                           (rule "add_literals" (formula "29") (term "1,0,0,1"))
                           (rule "times_zero_1" (formula "29") (term "0,0,1"))
                           (rule "add_zero_left" (formula "29") (term "0,1"))
                           (rule "applyEqRigid" (formula "15") (term "0,0,0,0,1,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,0,1"))
                           (rule "applyEqRigid" (formula "6") (term "0,0,0,1,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,0,1"))
                           (rule "applyEq" (formula "16") (term "0,0,0,0,1,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0,1"))
                           (rule "applyEqRigid" (formula "6") (term "0,1,0,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,1"))
                           (rule "add_literals" (formula "6") (term "1,0,0,1"))
                           (rule "times_zero_1" (formula "6") (term "0,0,1"))
                           (rule "add_zero_left" (formula "6") (term "0,1"))
                           (rule "applyEq" (formula "5") (term "0,0,0,0,1,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,1,0,1"))
                           (rule "applyEq" (formula "27") (term "0,0,0,0,1,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0,1"))
                           (rule "applyEq" (formula "18") (term "0,1,0,0,1") (ifseqformula "17"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0,1"))
                           (rule "add_literals" (formula "18") (term "1,0,0,1"))
                           (rule "times_zero_1" (formula "18") (term "0,0,1"))
                           (rule "add_zero_left" (formula "18") (term "0,1"))
                           (rule "polySimp_invertEq" (formula "34"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                           (rule "times_zero_2" (formula "34") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "elimGcdEq" (formula "34") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_9") (inst "elimGcd=Z(6(5(2(#))))"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                           (rule "add_zero_left" (formula "34") (term "0,1,0"))
                           (rule "add_zero_left" (formula "34") (term "0,0,1"))
                           (rule "add_literals" (formula "34") (term "1,0,0"))
                           (rule "add_zero_left" (formula "34") (term "0,0,0"))
                           (rule "times_zero_1" (formula "34") (term "0,1,0"))
                           (rule "times_zero_1" (formula "34") (term "0,0,1"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "leq_literals" (formula "34") (term "0,0"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "qeq_literals" (formula "34") (term "0"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                           (rule "leq_literals" (formula "13") (term "0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "jdiv_axiom" (formula "1") (term "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,2,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "3") (term "0,0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "24") (term "0,1,1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "30") (term "0,0,1,1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "19") (term "0,0,1,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "7") (term "0,0,1,1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "19") (term "0,1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "30") (term "0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "6") (term "0,1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "28") (term "0,1,0,1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "16") (term "0,1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "17") (term "0,1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "1"))
                           (rule "polyDiv_pullOut" (formula "7") (term "0,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "7") (term "0,0,1"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,1,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,1,0,1"))
                           (rule "add_literals" (formula "7") (term "1,0,0,1,0,1"))
                           (rule "times_zero_1" (formula "7") (term "0,0,1,0,1"))
                           (rule "add_zero_left" (formula "7") (term "0,1,0,1"))
                           (rule "polyDiv_pullOut" (formula "17") (term "0,1,0,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "17") (term "0,0,1,0,1"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,1,0,1,0,1"))
                           (rule "add_literals" (formula "17") (term "1,0,0,1,0,1,0,1"))
                           (rule "times_zero_1" (formula "17") (term "0,0,1,0,1,0,1"))
                           (rule "add_zero_left" (formula "17") (term "0,1,0,1,0,1"))
                           (rule "polyDiv_pullOut" (formula "16") (term "0,1,0,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "16") (term "0,0,1,0,1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "16") (term "0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0,1,0,1,0,1"))
                           (rule "add_literals" (formula "16") (term "1,0,0,1,0,1,0,1"))
                           (rule "times_zero_1" (formula "16") (term "0,0,1,0,1,0,1"))
                           (rule "add_zero_left" (formula "16") (term "0,1,0,1,0,1"))
                           (rule "polyDiv_pullOut" (formula "28") (term "0,1,0,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "28") (term "0,0,1,0,1"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "28") (term "0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,0,1,0,1"))
                           (rule "add_literals" (formula "28") (term "1,0,0,1,0,1,0,1"))
                           (rule "times_zero_1" (formula "28") (term "0,0,1,0,1,0,1"))
                           (rule "add_zero_left" (formula "28") (term "0,1,0,1,0,1"))
                           (rule "polyDiv_pullOut" (formula "6") (term "0,1,0,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "6") (term "0,0,1,0,1"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,1,0,1,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,1,0,1,0,1"))
                           (rule "add_literals" (formula "6") (term "1,0,0,1,0,1,0,1"))
                           (rule "times_zero_1" (formula "6") (term "0,0,1,0,1,0,1"))
                           (rule "add_zero_left" (formula "6") (term "0,1,0,1,0,1"))
                           (rule "polyDiv_pullOut" (formula "30") (term "0,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "30") (term "0,0,1"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "30") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,1,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "30") (term "0,0,1,0,1"))
                           (rule "add_literals" (formula "30") (term "1,0,0,1,0,1"))
                           (rule "times_zero_1" (formula "30") (term "0,0,1,0,1"))
                           (rule "add_zero_left" (formula "30") (term "0,1,0,1"))
                           (rule "polyDiv_pullOut" (formula "19") (term "0,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "19") (term "0,0,1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,1,0,1"))
                           (rule "add_literals" (formula "19") (term "1,0,0,1,0,1"))
                           (rule "times_zero_1" (formula "19") (term "0,0,1,0,1"))
                           (rule "add_zero_left" (formula "19") (term "0,1,0,1"))
                           (rule "polyDiv_pullOut" (formula "26") (term "0,1,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "26") (term "0,0,1,1"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "26") (term "1,1,1"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,1,1,1,1"))
                           (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,1,1,1,1"))
                           (rule "add_literals" (formula "26") (term "1,0,0,1,1,1,1"))
                           (rule "times_zero_1" (formula "26") (term "0,0,1,1,1,1"))
                           (rule "add_zero_left" (formula "26") (term "0,1,1,1,1"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                           (rule "polySimp_mulAssoc" (formula "26") (term "0,1,1"))
                           (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "26") (term "1"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,1"))
                           (rule "add_literals" (formula "26") (term "1,0,0,1"))
                           (rule "times_zero_1" (formula "26") (term "0,0,1"))
                           (rule "add_zero_left" (formula "26") (term "0,1"))
                           (rule "polyDiv_pullOut" (formula "8") (term "0,1,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "8") (term "0,0,1,1"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "8") (term "1,1,1"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,1,1,1,1"))
                           (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,1,1,1,1"))
                           (rule "add_literals" (formula "8") (term "1,0,0,1,1,1,1"))
                           (rule "times_zero_1" (formula "8") (term "0,0,1,1,1,1"))
                           (rule "add_zero_left" (formula "8") (term "0,1,1,1,1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,1"))
                           (rule "polySimp_mulAssoc" (formula "8") (term "0,1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "8") (term "1"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,1"))
                           (rule "add_literals" (formula "8") (term "1,0,0,1"))
                           (rule "times_zero_1" (formula "8") (term "0,0,1"))
                           (rule "add_zero_left" (formula "8") (term "0,1"))
                           (rule "polyDiv_pullOut" (formula "24") (term "0,1,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "24") (term "0,0,1,1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "24") (term "1,1,1"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,1,1,1,1"))
                           (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,1,1,1,1"))
                           (rule "add_literals" (formula "24") (term "1,0,0,1,1,1,1"))
                           (rule "times_zero_1" (formula "24") (term "0,0,1,1,1,1"))
                           (rule "add_zero_left" (formula "24") (term "0,1,1,1,1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                           (rule "polySimp_mulAssoc" (formula "24") (term "0,1,1"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "24") (term "1"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,1"))
                           (rule "add_literals" (formula "24") (term "1,0,0,1"))
                           (rule "times_zero_1" (formula "24") (term "0,0,1"))
                           (rule "add_zero_left" (formula "24") (term "0,1"))
                           (rule "polyDiv_pullOut" (formula "2") (term "1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "2") (term "0,1"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "2") (term "1"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,1,1"))
                           (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,1"))
                           (rule "add_literals" (formula "2") (term "1,0,0,1,1"))
                           (rule "times_zero_1" (formula "2") (term "0,0,1,1"))
                           (rule "add_zero_left" (formula "2") (term "0,1,1"))
                           (rule "polyDiv_pullOut" (formula "3") (term "0,0") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "3") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0,1,1,0"))
                           (rule "add_literals" (formula "3") (term "1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "0,0,1,1,0"))
                           (rule "add_zero_left" (formula "3") (term "0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "3") (term "0,0,0"))
                           (rule "add_zero_left" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polyDiv_pullOut" (formula "4") (term "0,1,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "4") (term "0,0,1,1"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,1,0,1,1"))
                           (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,1,0,1,1"))
                           (rule "add_literals" (formula "4") (term "1,0,0,1,0,1,1"))
                           (rule "times_zero_1" (formula "4") (term "0,0,1,0,1,1"))
                           (rule "add_zero_left" (formula "4") (term "0,1,0,1,1"))
                           (rule "polyDiv_pullOut" (formula "1") (term "1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "1") (term "0,1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "1") (term "1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,1,1"))
                           (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,1"))
                           (rule "add_literals" (formula "1") (term "1,0,0,1,1"))
                           (rule "times_zero_1" (formula "1") (term "0,0,1,1"))
                           (rule "add_zero_left" (formula "1") (term "0,1,1"))
                           (rule "polyDiv_pullOut" (formula "2") (term "0,0,0") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "2") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "2") (term "1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "2") (term "0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "2") (term "0,1,0,0,0"))
                           (rule "polyDiv_pullOut" (formula "19") (term "0,0,1,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "19") (term "0,0,0,1,1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,1,0,0,1,1"))
                           (rule "add_literals" (formula "19") (term "1,0,0,1,0,0,1,1"))
                           (rule "times_zero_1" (formula "19") (term "0,0,1,0,0,1,1"))
                           (rule "add_zero_left" (formula "19") (term "0,1,0,0,1,1"))
                           (rule "polyDiv_pullOut" (formula "30") (term "0,0,1,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "30") (term "0,0,0,1,1"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "30") (term "0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0" (formula "30") (term "0,0,1,0,0,1,1"))
                           (rule "add_literals" (formula "30") (term "1,0,0,1,0,0,1,1"))
                           (rule "times_zero_1" (formula "30") (term "0,0,1,0,0,1,1"))
                           (rule "add_zero_left" (formula "30") (term "0,1,0,0,1,1"))
                           (rule "polyDiv_pullOut" (formula "7") (term "0,0,1,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(6(5(2(#))))))"))
                           (rule "equal_literals" (formula "7") (term "0,0,0,1,1"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,1,0,0,1,1"))
                           (rule "add_literals" (formula "7") (term "1,0,0,1,0,0,1,1"))
                           (rule "times_zero_1" (formula "7") (term "0,0,1,0,0,1,1"))
                           (rule "add_zero_left" (formula "7") (term "0,1,0,0,1,1"))
                           (rule "jdiv_axiom" (formula "33") (term "0,0"))
                           (rule "eqSymm" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "33") (term "0,0,2,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,2,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                           (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "eqSymm" (formula "33"))
                           (rule "applyEqRigid" (formula "34") (term "0,0") (ifseqformula "33"))
                           (rule "div_axiom" (formula "17") (term "1,0,1,0,1") (inst "quotient=quotient_20"))
                           (rule "qeq_literals" (formula "17") (term "0,1,1"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1,1,1,1"))
                           (rule "equal_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "polySimp_addComm1" (formula "19") (term "1"))
                           (rule "add_literals" (formula "19") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "applyEqRigid" (formula "2") (term "1,0,0,0") (ifseqformula "17"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "17"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "applyEqRigid" (formula "3") (term "1,0,1,1") (ifseqformula "16"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,1,1"))
                           (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "16"))
                           (rule "polySimp_addComm0" (formula "7") (term "1"))
                           (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "16"))
                           (rule "polySimp_addComm0" (formula "1") (term "1"))
                           (rule "applyEq" (formula "32") (term "1,0,0,1,1") (ifseqformula "16"))
                           (rule "polySimp_addComm0" (formula "32") (term "0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "32") (term "1"))
                           (rule "applyEqRigid" (formula "6") (term "1,0,0,1,1") (ifseqformula "16"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                           (rule "applyEq" (formula "21") (term "1,0,0,1,1") (ifseqformula "16"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "21") (term "1"))
                           (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "16"))
                           (rule "polySimp_addComm0" (formula "28") (term "1"))
                           (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "16"))
                           (rule "polySimp_addComm0" (formula "26") (term "1"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "16"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                           (rule "applyEq" (formula "30") (term "1,0,1,0,1") (ifseqformula "16"))
                           (rule "polySimp_addComm0" (formula "30") (term "0,1,0,1"))
                           (rule "applyEq" (formula "5") (term "1,0,1,0,1") (ifseqformula "16"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,1,0,1"))
                           (rule "applyEq" (formula "15") (term "1,0,1,0,1") (ifseqformula "16"))
                           (rule "polySimp_addComm0" (formula "15") (term "0,1,0,1"))
                           (rule "applyEq" (formula "19") (term "1,0,1,0,1") (ifseqformula "16"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,1,0,1"))
                           (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "16"))
                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,1"))
                           (rule "applyEqRigid" (formula "32") (term "1,1") (ifseqformula "16"))
                           (rule "polySimp_addComm1" (formula "32") (term "1"))
                           (rule "polySimp_addComm0" (formula "32") (term "0,1"))
                           (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "16"))
                           (rule "polySimp_addComm1" (formula "21") (term "1"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                           (rule "mul_literals" (formula "18") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "18"))
                           (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "12") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_20)") (inst "elimGcdLeftDiv=mul(l_9, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "leq_literals" (formula "12") (term "0,0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                           (rule "neg_literal" (formula "12") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "12") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                           (rule "add_zero_left" (formula "12") (term "1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0"))
                           (rule "qeq_literals" (formula "12") (term "0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "jdiv_axiom" (formula "31") (term "0,0"))
                           (rule "eqSymm" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,0,2,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,2,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                           (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "eqSymm" (formula "31"))
                           (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                           (rule "polyDiv_pullOut" (formula "32") (term "0,0") (inst "polyDivCoeff=mul(l_9, Z(neglit(1(#))))"))
                           (rule "equal_literals" (formula "32") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0"))
                           (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "32") (term "0,0,1,0,0"))
                           (rule "add_zero_left" (formula "32") (term "0,1,0,0"))
                           (rule "polyDiv_pullOut" (formula "31") (term "1") (inst "polyDivCoeff=mul(l_9, Z(neglit(1(#))))"))
                           (rule "equal_literals" (formula "31") (term "0,1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "31") (term "1"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,1,1"))
                           (rule "polySimp_pullOutFactor0" (formula "31") (term "0,0,1,1"))
                           (rule "add_literals" (formula "31") (term "1,0,0,1,1"))
                           (rule "times_zero_1" (formula "31") (term "0,0,1,1"))
                           (rule "add_zero_left" (formula "31") (term "0,1,1"))
                           (rule "div_axiom" (formula "37") (term "1") (inst "quotient=quotient_21"))
                           (rule "qeq_literals" (formula "37") (term "0,1,1"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "equal_literals" (formula "37") (term "0"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "mul_literals" (formula "37") (term "1,1,1"))
                           (rule "andLeft" (formula "37"))
                           (rule "andLeft" (formula "37"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "1"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                           (rule "add_literals" (formula "39") (term "0,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "38"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0"))
                           (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "39"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                           (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "37"))
                           (rule "applyEqRigid" (formula "40") (term "1") (ifseqformula "37"))
                           (rule "jmod_axiom" (formula "41") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "41"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "41"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "0,1"))
                           (rule "mul_literals" (formula "41") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,0,1"))
                           (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "41"))
                           (rule "inEqSimp_homoInEq0" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "0,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0"))
                           (rule "applyEqRigid" (formula "3") (term "0,0") (ifseqformula "41"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                           (rule "applyEqRigid" (formula "15") (term "1,1") (ifseqformula "41"))
                           (rule "polySimp_addAssoc" (formula "15") (term "1"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                           (rule "add_literals" (formula "15") (term "0,0,1"))
                           (rule "add_zero_left" (formula "15") (term "0,1"))
                           (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "41"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,1,1"))
                           (rule "mul_literals" (formula "16") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "16") (term "1"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "16") (term "0,0,1"))
                           (rule "applyEq" (formula "4") (term "1") (ifseqformula "41"))
                           (rule "applyEq" (formula "20") (term "0,1,1") (ifseqformula "41"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "20") (term "0,1,1"))
                           (rule "mul_literals" (formula "20") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "20") (term "1"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "20") (term "0,0,1"))
                           (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "41"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,1,1"))
                           (rule "mul_literals" (formula "5") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "5") (term "1"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "32") (term "0,1,1") (ifseqformula "41"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "32") (term "0,1,1"))
                           (rule "mul_literals" (formula "32") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "32") (term "1"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "32") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1"))
                           (rule "polySimp_rightDist" (formula "38") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "38") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "0,1"))
                           (rule "mul_literals" (formula "39") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1"))
                           (rule "polySimp_rightDist" (formula "36") (term "1"))
                           (rule "mul_literals" (formula "36") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,1"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "39"))
                           (rule "polySimp_mulAssoc" (formula "18") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0"))
                           (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "18") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1"))
                           (rule "mul_literals" (formula "18") (term "0,0,1"))
                           (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=add(add(Z(neglit(5(3(5(5(6(#))))))),
        mul(quotient_21, Z(neglit(6(3(5(5(6(#))))))))),
    quotient_20)") (inst "elimGcdLeftDiv=mul(l_9, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "leq_literals" (formula "18") (term "0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0"))
                           (rule "leq_literals" (formula "18") (term "0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "20"))
                           (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "39") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "39") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "39") (inst "elimGcdRightDiv=add(add(Z(0(#)),
        mul(quotient_21, Z(neglit(6(3(5(5(6(#))))))))),
    quotient_20)") (inst "elimGcdLeftDiv=mul(l_9, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "add_zero_left" (formula "39") (term "0,1,1"))
                           (rule "leq_literals" (formula "39") (term "0,0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "neg_literal" (formula "39") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "39") (term "0,1,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0"))
                           (rule "qeq_literals" (formula "39") (term "0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "41"))
                           (rule "polySimp_mulAssoc" (formula "13") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0"))
                           (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                           (rule "add_literals" (formula "13") (term "1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0"))
                           (rule "add_zero_right" (formula "13") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                           (rule "mul_literals" (formula "13") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_21") (inst "elimGcd=Z(6(1(2(7(7(7(6(1(#)))))))))"))
                           (rule "leq_literals" (formula "13") (term "0,0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0"))
                           (rule "leq_literals" (formula "13") (term "0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_exactShadow0" (formula "19") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "greater_literals" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "1,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0"))
                           (rule "add_zero_right" (formula "19") (term "0"))
                           (rule "polySimp_rightDist" (formula "19") (term "0"))
                           (rule "mul_literals" (formula "19") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "13"))
                           (rule "greater_literals" (formula "19") (term "0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "times_zero_1" (formula "19") (term "1,0"))
                           (rule "leq_literals" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "jdiv_axiom" (formula "6") (term "0,1,1"))
                           (rule "eqSymm" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,0,2,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,0,0,2,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                           (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "eqSymm" (formula "6"))
                           (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "6"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "6"))
                           (rule "applyEqRigid" (formula "37") (term "0,1,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "6"))
                           (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "5") (term "1,0,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "35") (term "1,0,1") (ifseqformula "6"))
                           (rule "polyDiv_pullOut" (formula "35") (term "1,0,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(1(#))))"))
                           (rule "equal_literals" (formula "35") (term "0,1,0,1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,1,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,1,0,1"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,1"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,1"))
                           (rule "add_zero_right" (formula "35") (term "0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "35") (term "1,0,1"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "35") (term "0,0,1"))
                           (rule "polyDiv_pullOut" (formula "18") (term "1,0,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(1(#))))"))
                           (rule "equal_literals" (formula "18") (term "0,1,0,1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,1,0,1"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,1,0,1"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,1"))
                           (rule "add_zero_right" (formula "18") (term "0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "18") (term "1,0,1"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "18") (term "0,0,1"))
                           (rule "polyDiv_pullOut" (formula "23") (term "1,0,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(1(#))))"))
                           (rule "equal_literals" (formula "23") (term "0,1,0,1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,1,0,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,1"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "23") (term "1,0,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1"))
                           (rule "polyDiv_pullOut" (formula "5") (term "1,0,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(1(#))))"))
                           (rule "equal_literals" (formula "5") (term "0,1,0,1"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,1,0,1"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,1"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,1"))
                           (rule "add_zero_right" (formula "5") (term "0,0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "5") (term "1,0,1"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "5") (term "0,0,1"))
                           (rule "polyDiv_pullOut" (formula "7") (term "0,1,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(1(#))))"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,2,0,1,1"))
                           (rule "equal_literals" (formula "7") (term "0,0,1,1"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,1"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "7") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "7") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,1"))
                           (rule "polySimp_mulAssoc" (formula "7") (term "0,1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "7") (term "1"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1"))
                           (rule "add_literals" (formula "7") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "7") (term "1,0,1"))
                           (rule "add_zero_right" (formula "7") (term "0,1"))
                           (rule "polyDiv_pullOut" (formula "25") (term "0,1,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(1(#))))"))
                           (rule "equal_literals" (formula "25") (term "0,0,1,1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,1,1"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "25") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "25") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                           (rule "polySimp_mulAssoc" (formula "25") (term "0,1,1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "25") (term "1"))
                           (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,1"))
                           (rule "add_literals" (formula "25") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "25") (term "1,0,1"))
                           (rule "add_zero_right" (formula "25") (term "0,1"))
                           (rule "polyDiv_pullOut" (formula "37") (term "0,1,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(1(#))))"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,2,0,1,1"))
                           (rule "equal_literals" (formula "37") (term "0,0,1,1"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,1,1"))
                           (rule "add_literals" (formula "37") (term "1,1,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "37") (term "1,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "37") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "37") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,1"))
                           (rule "polySimp_mulAssoc" (formula "37") (term "0,1,1"))
                           (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "37") (term "1"))
                           (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1"))
                           (rule "add_literals" (formula "37") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "37") (term "1,0,1"))
                           (rule "add_zero_right" (formula "37") (term "0,1"))
                           (rule "polyDiv_pullOut" (formula "3") (term "0,1,1") (inst "polyDivCoeff=mul(l_9, Z(neglit(1(#))))"))
                           (rule "equal_literals" (formula "3") (term "0,0,1,1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,1,1"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                           (rule "polySimp_mulAssoc" (formula "3") (term "0,1,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "1"))
                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "3") (term "1,0,1"))
                           (rule "add_zero_right" (formula "3") (term "0,1"))
                           (rule "polyDiv_pullOut" (formula "2") (term "0,0") (inst "polyDivCoeff=mul(l_9, Z(neglit(1(#))))"))
                           (rule "equal_literals" (formula "2") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0"))
                           (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polyDiv_pullOut" (formula "6") (term "1") (inst "polyDivCoeff=mul(l_9, Z(neglit(1(#))))"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,1"))
                           (rule "equal_literals" (formula "6") (term "0,1"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,1"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "6") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "6") (term "1"))
                           (rule "div_axiom" (formula "34") (term "1,1") (inst "quotient=quotient_22"))
                           (rule "qeq_literals" (formula "34") (term "0,1,1"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "mul_literals" (formula "34") (term "1,1,1,1"))
                           (rule "equal_literals" (formula "34") (term "0"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "andLeft" (formula "34"))
                           (rule "andLeft" (formula "34"))
                           (rule "polySimp_addComm1" (formula "36") (term "1"))
                           (rule "add_literals" (formula "36") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "35"))
                           (rule "inEqSimp_homoInEq1" (formula "36"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "36") (term "0"))
                           (rule "applyEqRigid" (formula "38") (term "1,0,0") (ifseqformula "34"))
                           (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                           (rule "applyEqRigid" (formula "37") (term "1,1") (ifseqformula "34"))
                           (rule "polySimp_addComm0" (formula "37") (term "1"))
                           (rule "jmod_axiom" (formula "38") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "38"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "38"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1"))
                           (rule "polySimp_rightDist" (formula "38") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,1"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,0,1"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,0,0,0,1"))
                           (rule "mul_literals" (formula "38") (term "0,0,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1"))
                           (rule "polySimp_rightDist" (formula "36") (term "1"))
                           (rule "mul_literals" (formula "36") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                           (rule "newSym_eq" (formula "38") (inst "l=l_10") (inst "newSymDef=add(add(add(add(add(Z(6(5(2(#)))),
                    mul(quotient_22, Z(0(#)))),
                quotient_21),
            mul(l_9, Z(0(#)))),
        mul(div(quotient_20, Z(6(5(2(#))))), Z(0(#)))),
    mul(jdiv(quotient_21, Z(6(5(2(#))))),
        Z(neglit(6(5(2(#)))))))"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0,1,1"))
                           (rule "times_zero_1" (formula "38") (term "1,0,1,1"))
                           (rule "add_zero_right" (formula "38") (term "0,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "38") (term "0,1,1"))
                           (rule "add_zero_right" (formula "38") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "38") (term "1"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "38") (term "0,0,1"))
                           (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "38"))
                           (rule "polySimp_mulComm0" (formula "39") (term "0"))
                           (rule "polySimp_rightDist" (formula "39") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "39"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "0,0,1,1,0"))
                           (rule "mul_literals" (formula "39") (term "0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "39") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0"))
                           (rule "add_literals" (formula "39") (term "1,1,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0"))
                           (rule "add_zero_right" (formula "39") (term "0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "39"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                           (rule "polySimp_elimOne" (formula "39") (term "0"))
                           (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "39"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                           (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "39"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "1"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "39"))
                           (rule "polySimp_addAssoc" (formula "6") (term "1"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "1"))
                           (rule "add_literals" (formula "6") (term "1,1,1"))
                           (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "39"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "7") (term "0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "7") (term "1"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                           (rule "applyEq" (formula "41") (term "0,1,1") (ifseqformula "39"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "41") (term "1"))
                           (rule "polySimp_addComm0" (formula "41") (term "0,1"))
                           (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "39"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "25") (term "0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "25") (term "1"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,1"))
                           (rule "applyEqRigid" (formula "23") (term "1,0,1") (ifseqformula "39"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1"))
                           (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "39"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,1"))
                           (rule "applyEq" (formula "5") (term "1,0,1") (ifseqformula "39"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                           (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "36"))
                           (rule "polySimp_rightDist" (formula "46") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "46") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0"))
                           (rule "polySimp_addComm0" (formula "46") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "46") (inst "elimGcdRightDiv=add(add(Z(0(#)), quotient_22),
    mul(quotient_21, Z(neglit(6(5(2(#)))))))") (inst "elimGcdLeftDiv=l_9") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                           (rule "neg_literal" (formula "46") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "46") (term "0,0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "add_zero_left" (formula "46") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "46") (term "0,1,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                           (rule "add_literals" (formula "46") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "46") (term "1,0,0"))
                           (rule "add_zero_right" (formula "46") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                           (rule "add_literals" (formula "46") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "46") (term "1,0,0"))
                           (rule "add_zero_right" (formula "46") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                           (rule "add_literals" (formula "46") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                           (rule "add_literals" (formula "46") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "46") (term "1,0,0"))
                           (rule "add_zero_right" (formula "46") (term "0,0"))
                           (rule "qeq_literals" (formula "46") (term "0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "48"))
                           (rule "polySimp_mulAssoc" (formula "35") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1"))
                           (rule "polySimp_rightDist" (formula "35") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "35") (term "0,1"))
                           (rule "mul_literals" (formula "35") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1"))
                           (rule "elimGcdGeq_antec" (formula "35") (inst "elimGcdRightDiv=add(add(Z(neglit(5(5(2(#))))), quotient_22),
    mul(quotient_21, Z(neglit(6(5(2(#)))))))") (inst "elimGcdLeftDiv=l_9") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                           (rule "leq_literals" (formula "35") (term "0,0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0"))
                           (rule "leq_literals" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "37"))
                           (rule "polySimp_mulAssoc" (formula "15") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_22)") (inst "elimGcdLeftDiv=l_9") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                           (rule "neg_literal" (formula "15") (term "0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "15") (term "1,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "15") (term "0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                           (rule "add_zero_left" (formula "15") (term "1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0"))
                           (rule "qeq_literals" (formula "15") (term "0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_exactShadow0" (formula "2") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "greater_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_mulAssoc" (formula "2") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                           (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(mul(l_10, Z(neglit(8(6(7(2(3(#)))))))),
    mul(quotient_22, Z(8(2(1(#))))))") (inst "elimGcdLeftDiv=quotient_20") (inst "elimGcd=Z(2(1(5(#))))"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_exactShadow0" (formula "3") (ifseqformula "48"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "greater_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                           (rule "polySimp_mulAssoc" (formula "3") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1"))
                           (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(add(mul(l_10, Z(neglit(8(6(7(2(3(#)))))))),
        mul(quotient_22, Z(8(2(1(#)))))),
    mul(quotient_21, Z(8(6(7(2(3(#))))))))") (inst "elimGcdLeftDiv=quotient_20") (inst "elimGcd=Z(2(1(5(#))))"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "25"))
                           (rule "polySimp_mulAssoc" (formula "39") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0"))
                           (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1"))
                           (rule "mul_literals" (formula "39") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                           (rule "elimGcdGeq_antec" (formula "39") (inst "elimGcdRightDiv=add(Z(0(#)), mul(quotient_22, Z(6(5(2(#))))))") (inst "elimGcdLeftDiv=quotient_20") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "leq_literals" (formula "39") (term "0,0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "39") (term "1,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "39") (term "1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0"))
                           (rule "polySimp_mulAssoc" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0"))
                           (rule "leq_literals" (formula "39") (term "0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "41"))
                           (rule "polySimp_mulAssoc" (formula "24") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "24") (inst "elimGcdRightDiv=add(Z(5(5(2(#)))), mul(quotient_22, Z(6(5(2(#))))))") (inst "elimGcdLeftDiv=quotient_20") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "leq_literals" (formula "24") (term "0,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                           (rule "neg_literal" (formula "24") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0"))
                           (rule "qeq_literals" (formula "24") (term "0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_exactShadow1" (formula "4") (ifseqformula "52"))
                           (rule "greater_literals" (formula "4") (term "0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_mulAssoc" (formula "4") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                           (rule "inEqSimp_exactShadow1" (formula "24") (ifseqformula "53"))
                           (rule "greater_literals" (formula "24") (term "0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "26"))
                           (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0"))
                           (rule "qeq_literals" (formula "24") (term "0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "inEqSimp_exactShadow1" (formula "24") (ifseqformula "18"))
                           (rule "greater_literals" (formula "24") (term "0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_exactShadow1" (formula "5") (ifseqformula "18"))
                           (rule "greater_literals" (formula "5") (term "0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                           (rule "inEqSimp_exactShadow2" (formula "42") (ifseqformula "17"))
                           (rule "greater_literals" (formula "42") (term "0"))
                           (builtin "One Step Simplification" (formula "42"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "42") (term "0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "0,0,0"))
                           (rule "mul_literals" (formula "42") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1"))
                           (rule "polySimp_rightDist" (formula "42") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "42") (term "0,1"))
                           (rule "mul_literals" (formula "42") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1"))
                           (rule "inEqSimp_exactShadow2" (formula "43") (ifseqformula "55"))
                           (rule "greater_literals" (formula "43") (term "0"))
                           (builtin "One Step Simplification" (formula "43"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "0,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0"))
                           (rule "add_zero_right" (formula "43") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1"))
                           (rule "polySimp_rightDist" (formula "43") (term "1"))
                           (rule "mul_literals" (formula "43") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "45"))
                           (rule "inEqSimp_homoInEq0" (formula "43") (term "0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "43") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0"))
                           (rule "add_zero_right" (formula "43") (term "0,0"))
                           (rule "qeq_literals" (formula "43") (term "0"))
                           (builtin "One Step Simplification" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "19"))
                           (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "43") (term "0"))
                           (rule "polySimp_rightDist" (formula "43") (term "0,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "43") (term "0,0"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0"))
                           (rule "add_zero_right" (formula "43") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                           (rule "mul_literals" (formula "43") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "43") (ifseqformula "18"))
                           (rule "greater_literals" (formula "43") (term "0,0"))
                           (builtin "One Step Simplification" (formula "43"))
                           (rule "times_zero_1" (formula "43") (term "1,0"))
                           (rule "leq_literals" (formula "43") (term "0"))
                           (builtin "One Step Simplification" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "27"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), mul(l_10, Z(neglit(6(5(2(#)))))))") (inst "elimGcdLeftDiv=quotient_22") (inst "elimGcd=Z(8(2(1(#))))"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "28"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=add(add(Z(1(#)), mul(l_10, Z(6(5(2(#)))))),
    quotient_22)") (inst "elimGcdLeftDiv=mul(quotient_21, Z(6(5(2(#)))))") (inst "elimGcd=Z(8(2(1(#))))"))
                           (rule "leq_literals" (formula "4") (term "0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                           (rule "neg_literal" (formula "4") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "qeq_literals" (formula "4") (term "0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "27"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                           (rule "mul_literals" (formula "3") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                           (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(add(Z(neglit(1(1(5(#))))),
        mul(l_10, Z(neglit(6(5(2(#))))))),
    mul(quotient_22, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(quotient_21, Z(2(1(5(#)))))") (inst "elimGcd=Z(8(2(1(#))))"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "28"))
                           (rule "polySimp_mulAssoc" (formula "47") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "47") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                           (rule "add_literals" (formula "47") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "47") (term "1,0,0"))
                           (rule "add_zero_right" (formula "47") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                           (rule "mul_literals" (formula "47") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "47") (ifseqformula "21"))
                           (rule "greater_literals" (formula "47") (term "0,0"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "times_zero_1" (formula "47") (term "1,0"))
                           (rule "leq_literals" (formula "47") (term "0"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "true_left" (formula "47"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "30"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                           (rule "inEqSimp_subsumption2" (formula "5") (ifseqformula "7"))
                           (rule "greater_literals" (formula "5") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "greater_literals" (formula "5") (term "0,0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "qeq_literals" (formula "5") (term "0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "28"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "1,1,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0"))
                           (rule "add_zero_right" (formula "7") (term "0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "2"))
                           (rule "greater_literals" (formula "7") (term "0,0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "28"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                           (rule "mul_literals" (formula "5") (term "0,0,1"))
                           (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=add(add(Z(0(#)), mul(l_10, Z(6(5(2(#)))))),
    quotient_22)") (inst "elimGcdLeftDiv=mul(quotient_21, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "7") (term "0,0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "add_zero_left" (formula "7") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                           (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "7") (term "0,1,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcdRightDiv=add(add(Z(neglit(1(1(5(#))))),
        mul(l_10, Z(neglit(6(5(2(#))))))),
    mul(quotient_22, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(quotient_21, Z(6(5(2(#)))))") (inst "elimGcd=Z(8(2(1(#))))"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "5") (term "0,0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "leq_literals" (formula "5") (term "0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "29"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1"))
                           (rule "polySimp_rightDist" (formula "9") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                           (rule "mul_literals" (formula "9") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                           (rule "inEqSimp_subsumption5" (formula "5") (ifseqformula "9"))
                           (rule "greater_literals" (formula "5") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "greater_literals" (formula "5") (term "0,0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "qeq_literals" (formula "5") (term "0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "31"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0"))
                           (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1"))
                           (rule "polySimp_rightDist" (formula "9") (term "1"))
                           (rule "mul_literals" (formula "9") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                           (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=add(add(Z(neglit(5(5(2(#))))),
        mul(l_10, Z(neglit(6(5(2(#))))))),
    mul(quotient_22, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(quotient_21, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0"))
                           (rule "leq_literals" (formula "8") (term "0,0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "leq_literals" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=add(Z(0(#)), mul(l_10, Z(neglit(6(5(2(#)))))))") (inst "elimGcdLeftDiv=quotient_22") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "add_zero_left" (formula "9") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "9") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "polySimp_mulAssoc" (formula "9") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "leq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "29"))
                           (rule "polySimp_rightDist" (formula "46") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "0,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "46") (term "0"))
                           (rule "add_literals" (formula "46") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                           (rule "add_literals" (formula "46") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                           (rule "add_literals" (formula "46") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "46") (term "1,0,0"))
                           (rule "add_zero_right" (formula "46") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                           (rule "mul_literals" (formula "46") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "46") (ifseqformula "22"))
                           (rule "greater_literals" (formula "46") (term "0,0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "times_zero_1" (formula "46") (term "1,0"))
                           (rule "leq_literals" (formula "46") (term "0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "31"))
                           (rule "polySimp_rightDist" (formula "46") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0"))
                           (rule "polySimp_rightDist" (formula "46") (term "0,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                           (rule "add_literals" (formula "46") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                           (rule "add_literals" (formula "46") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "46") (term "1,0,0"))
                           (rule "add_zero_right" (formula "46") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                           (rule "mul_literals" (formula "46") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "46") (ifseqformula "22"))
                           (rule "greater_literals" (formula "46") (term "0,0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "times_zero_1" (formula "46") (term "1,0"))
                           (rule "leq_literals" (formula "46") (term "0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "inEqSimp_exactShadow2" (formula "22") (ifseqformula "5"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                           (rule "greater_literals" (formula "22") (term "0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "times_zero_1" (formula "22") (term "0,0"))
                           (rule "add_zero_left" (formula "22") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1"))
                           (rule "inEqSimp_exactShadow0" (formula "2") (ifseqformula "5"))
                           (rule "greater_literals" (formula "2") (term "0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "greater_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "9"))
                           (rule "greater_literals" (formula "2") (term "0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_exactShadow0" (formula "7") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "greater_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "9"))
                           (rule "greater_literals" (formula "7") (term "0,0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "jdiv_axiom" (formula "64") (term "0,1,1"))
                           (rule "eqSymm" (formula "64"))
                           (rule "replace_known_left" (formula "64") (term "0,0") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "64"))
                           (rule "eqSymm" (formula "64"))
                           (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "64"))
                           (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "64"))
                           (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "64"))
                           (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "64"))
                           (rule "applyEqRigid" (formula "34") (term "0,1,1") (ifseqformula "64"))
                           (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "64"))
                           (rule "applyEq" (formula "65") (term "0,1,1") (ifseqformula "64"))
                           (rule "applyEq" (formula "52") (term "0,1,1") (ifseqformula "64"))
                           (rule "applyEqRigid" (formula "13") (term "0,1,1") (ifseqformula "64"))
                           (rule "jdiv_axiom" (formula "52") (term "0"))
                           (rule "eqSymm" (formula "52"))
                           (rule "polySimp_mulComm0" (formula "52") (term "0,0,2,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "0,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,2,0"))
                           (rule "polySimp_elimOne" (formula "52") (term "1,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "52") (term "0,0,0,2,0"))
                           (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "53"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "52") (term "0,0,0"))
                           (rule "replace_known_left" (formula "52") (term "0,0") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "div_axiom" (formula "54") (term "0") (inst "quotient=quotient_23"))
                           (rule "equal_literals" (formula "54") (term "0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "qeq_literals" (formula "54") (term "0,1"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "mul_literals" (formula "54") (term "1,1,1"))
                           (rule "andLeft" (formula "54"))
                           (rule "andLeft" (formula "54"))
                           (rule "polySimp_addComm1" (formula "56") (term "1"))
                           (rule "add_literals" (formula "56") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "55"))
                           (rule "inEqSimp_homoInEq1" (formula "56"))
                           (rule "polySimp_mulLiterals" (formula "56") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "56") (term "0"))
                           (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "57"))
                           (rule "polySimp_homoEq" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "54") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1"))
                           (rule "polySimp_rightDist" (formula "54") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "54") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "54") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "21") (term "0,0") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0"))
                           (rule "polySimp_rightDist" (formula "21") (term "0"))
                           (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "21"))
                           (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "52") (term "0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "52") (term "0,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "52") (term "0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "52") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                           (rule "add_literals" (formula "52") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "52") (term "1,0,0"))
                           (rule "add_zero_right" (formula "52") (term "0,0"))
                           (rule "applyEqRigid" (formula "30") (term "0,0") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0"))
                           (rule "polySimp_rightDist" (formula "30") (term "0"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "30"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                           (rule "applyEq" (formula "64") (term "0") (ifseqformula "54"))
                           (rule "inEqSimp_homoInEq0" (formula "64"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "64") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "64") (term "0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "64") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                           (rule "add_literals" (formula "64") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "64") (term "1,0,0"))
                           (rule "add_zero_right" (formula "64") (term "0,0"))
                           (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "54"))
                           (rule "polySimp_addComm1" (formula "11") (term "1"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,1"))
                           (rule "add_literals" (formula "11") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "11") (term "1,0,1"))
                           (rule "add_zero_right" (formula "11") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1"))
                           (rule "add_literals" (formula "11") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "11") (term "1,0,1"))
                           (rule "add_zero_right" (formula "11") (term "0,1"))
                           (rule "applyEqRigid" (formula "24") (term "0,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1"))
                           (rule "applyEq" (formula "47") (term "0") (ifseqformula "54"))
                           (rule "inEqSimp_homoInEq1" (formula "47"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "47") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "47") (term "0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                           (rule "add_literals" (formula "47") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "47") (term "1,0,0"))
                           (rule "add_zero_right" (formula "47") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                           (rule "applyEq" (formula "66") (term "0,1,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "66") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "66") (term "0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "66") (term "1"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "54"))
                           (rule "inEqSimp_homoInEq0" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "23") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "1,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0"))
                           (rule "add_zero_right" (formula "23") (term "0"))
                           (rule "applyEq" (formula "63") (term "0,0") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "63") (term "0"))
                           (rule "polySimp_rightDist" (formula "63") (term "0"))
                           (rule "polySimp_rightDist" (formula "63") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "63"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "63") (term "0"))
                           (rule "polySimp_addComm0" (formula "63") (term "0,0"))
                           (rule "applyEq" (formula "14") (term "0,1,0,0") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "14") (term "0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                           (rule "applyEq" (formula "71") (term "0") (ifseqformula "54"))
                           (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0"))
                           (rule "polySimp_rightDist" (formula "10") (term "0"))
                           (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0"))
                           (rule "applyEqRigid" (formula "53") (term "0,1,0,0") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "53") (term "0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "0,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "53") (term "0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "53") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                           (rule "add_literals" (formula "53") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "53") (term "1,0,0"))
                           (rule "add_zero_right" (formula "53") (term "0,0"))
                           (rule "applyEq" (formula "65") (term "0,1,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "65") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "65") (term "0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "65") (term "1"))
                           (rule "applyEqRigid" (formula "15") (term "0,1,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "15") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "15") (term "1"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1"))
                           (rule "add_literals" (formula "15") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "15") (term "1,0,1"))
                           (rule "add_zero_right" (formula "15") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "15") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1"))
                           (rule "add_literals" (formula "15") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "15") (term "1,0,1"))
                           (rule "add_zero_right" (formula "15") (term "0,1"))
                           (rule "applyEqRigid" (formula "57") (term "0,1,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "57") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "57") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "57") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "57") (term "0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "57") (term "0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "57") (term "0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "57") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "57") (term "1"))
                           (rule "polySimp_addComm1" (formula "57") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "57") (term "1"))
                           (rule "add_literals" (formula "57") (term "1,1,1"))
                           (rule "times_zero_1" (formula "57") (term "1,1"))
                           (rule "add_zero_right" (formula "57") (term "1"))
                           (rule "polySimp_addAssoc" (formula "57") (term "1"))
                           (rule "polySimp_addComm0" (formula "57") (term "0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "57") (term "1"))
                           (rule "add_literals" (formula "57") (term "1,1,1"))
                           (rule "times_zero_1" (formula "57") (term "1,1"))
                           (rule "add_zero_right" (formula "57") (term "1"))
                           (rule "applyEqRigid" (formula "51") (term "0,0,0,0") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "51") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "51") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "51") (term "0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0,0,0"))
                           (rule "applyEqRigid" (formula "67") (term "0,0,0,0") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "67") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "67") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "67") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "67") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "67") (term "0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "67") (term "0,0,0,0,0"))
                           (rule "applyEq" (formula "59") (term "0,1,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "59") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "59") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "59") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "59") (term "1"))
                           (rule "polySimp_addAssoc" (formula "59") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "59") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,1"))
                           (rule "add_literals" (formula "59") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "59") (term "1,0,1"))
                           (rule "add_zero_right" (formula "59") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "59") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "59") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,1"))
                           (rule "add_literals" (formula "59") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "59") (term "1,0,1"))
                           (rule "add_zero_right" (formula "59") (term "0,1"))
                           (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0"))
                           (rule "applyEq" (formula "62") (term "0,0,0,0") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "62") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "62") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "0,0,0,0,0"))
                           (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "1") (term "1"))
                           (rule "applyEqRigid" (formula "35") (term "0,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1"))
                           (rule "polySimp_rightDist" (formula "35") (term "1"))
                           (rule "polySimp_rightDist" (formula "35") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1"))
                           (rule "polySimp_mulAssoc" (formula "35") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1"))
                           (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "14") (term "0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "14") (term "1"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "1"))
                           (rule "add_literals" (formula "14") (term "1,1,1"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "14") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1"))
                           (rule "add_literals" (formula "14") (term "1,1,0,1"))
                           (rule "applyEq" (formula "51") (term "0,1,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "51") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "51") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "51") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "51") (term "0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "51") (term "0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "51") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "51") (term "1"))
                           (rule "polySimp_addComm0" (formula "51") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "51") (term "1"))
                           (rule "add_literals" (formula "51") (term "1,1,1"))
                           (rule "times_zero_1" (formula "51") (term "1,1"))
                           (rule "add_zero_right" (formula "51") (term "1"))
                           (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "36") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "36") (term "1"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "36") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1"))
                           (rule "add_literals" (formula "36") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "36") (term "1,0,1"))
                           (rule "add_zero_right" (formula "36") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "36") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1"))
                           (rule "add_literals" (formula "36") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "36") (term "1,0,1"))
                           (rule "add_zero_right" (formula "36") (term "0,1"))
                           (rule "applyEqRigid" (formula "34") (term "0,1,0,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "34") (term "0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,1"))
                           (rule "polySimp_mulAssoc" (formula "34") (term "0,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "34") (term "0,0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "34") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,1"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "34") (term "0,0,1"))
                           (rule "applyEq" (formula "13") (term "0,1,0,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1"))
                           (rule "polySimp_mulAssoc" (formula "13") (term "0,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "13") (term "0,0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "13") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,1"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "13") (term "0,0,1"))
                           (rule "applyEq" (formula "37") (term "0,0,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "37") (term "0,1"))
                           (rule "polySimp_rightDist" (formula "37") (term "0,1"))
                           (rule "polySimp_rightDist" (formula "37") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,1"))
                           (rule "polySimp_mulAssoc" (formula "37") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "37") (term "0,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1"))
                           (rule "applyEqRigid" (formula "27") (term "0,1,0,1") (ifseqformula "54"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,1"))
                           (rule "polySimp_mulAssoc" (formula "27") (term "0,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "0,0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "27") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "27") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "56"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1"))
                           (rule "polySimp_rightDist" (formula "56") (term "1"))
                           (rule "mul_literals" (formula "56") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                           (rule "polySimp_sepPosMonomial" (formula "71"))
                           (rule "polySimp_mulComm0" (formula "71") (term "1"))
                           (rule "polySimp_rightDist" (formula "71") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "71") (term "1,1"))
                           (rule "polySimp_mulAssoc" (formula "71") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "71") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "71") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "71") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,0,0,1"))
                           (rule "mul_literals" (formula "30") (term "0,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "64"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1"))
                           (rule "polySimp_rightDist" (formula "63") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "63") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "63") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,1"))
                           (rule "polySimp_mulAssoc" (formula "63") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "63") (term "0,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "0,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "polyDiv_pullOut" (formula "61") (term "0") (inst "polyDivCoeff=l_10"))
                           (rule "equal_literals" (formula "61") (term "0,0"))
                           (builtin "One Step Simplification" (formula "61"))
                           (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0"))
                           (rule "polySimp_homoEq" (formula "61"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "61") (term "1,1,0"))
                           (rule "polySimp_addComm1" (formula "61") (term "0,1,1,1,0"))
                           (rule "polySimp_addComm1" (formula "61") (term "0,0,1,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "61") (term "0,0,0,1,1,1,0"))
                           (rule "add_literals" (formula "61") (term "1,1,0,0,0,1,1,1,0"))
                           (rule "times_zero_1" (formula "61") (term "1,0,0,0,1,1,1,0"))
                           (rule "add_zero_right" (formula "61") (term "0,0,0,1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "61") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "61") (term "0"))
                           (rule "polySimp_addComm0" (formula "61") (term "0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "61"))
                           (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                           (rule "polySimp_elimOne" (formula "61") (term "0"))
                           (rule "polyDiv_pullOut" (formula "51") (term "0") (inst "polyDivCoeff=l_10"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,2,0"))
                           (rule "equal_literals" (formula "51") (term "0,0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "polySimp_homoEq" (formula "51"))
                           (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "51") (term "1,1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "51") (term "1,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "51") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "51") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "51") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "51") (term "0"))
                           (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0,0"))
                           (rule "add_literals" (formula "51") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "51") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "51") (term "0,0,0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "51"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                           (rule "polySimp_elimOne" (formula "51") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "28"))
                           (rule "polySimp_mulAssoc" (formula "54") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "54") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1"))
                           (rule "polySimp_rightDist" (formula "54") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "54") (term "0,1"))
                           (rule "mul_literals" (formula "54") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1"))
                           (rule "elimGcdGeq_antec" (formula "54") (inst "elimGcdRightDiv=add(add(Z(neglit(5(5(2(#))))), quotient_23),
    mul(quotient_22, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(quotient_21, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "54") (term "0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                           (rule "add_literals" (formula "54") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "54") (term "1,0,0"))
                           (rule "add_zero_right" (formula "54") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                           (rule "add_literals" (formula "54") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "54") (term "1,0,0"))
                           (rule "add_zero_right" (formula "54") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                           (rule "add_literals" (formula "54") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "54") (term "1,0,0"))
                           (rule "add_zero_right" (formula "54") (term "0,0"))
                           (rule "leq_literals" (formula "54") (term "0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "29"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1"))
                           (rule "polySimp_rightDist" (formula "9") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                           (rule "mul_literals" (formula "9") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                           (rule "inEqSimp_subsumption5" (formula "9") (ifseqformula "55"))
                           (rule "greater_literals" (formula "9") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "greater_literals" (formula "9") (term "0,0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                           (rule "mul_literals" (formula "9") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "qeq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "32"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "65") (term "0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "65") (term "0"))
                           (rule "polySimp_addComm1" (formula "65") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "65") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "65") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                           (rule "polySimp_mulComm0" (formula "65") (term "1"))
                           (rule "polySimp_rightDist" (formula "65") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,0,0,1"))
                           (rule "mul_literals" (formula "65") (term "0,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0,1"))
                           (rule "inEqSimp_subsumption6" (formula "65") (ifseqformula "63"))
                           (rule "greater_literals" (formula "65") (term "0,0"))
                           (builtin "One Step Simplification" (formula "65"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "65") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "0,0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "65") (term "0"))
                           (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,0,0,1,0,0"))
                           (rule "mul_literals" (formula "65") (term "0,0,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "65") (term "0,0"))
                           (rule "add_literals" (formula "65") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "65") (term "1,0,0"))
                           (rule "add_zero_right" (formula "65") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "65") (term "0,0"))
                           (rule "add_literals" (formula "65") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "65") (term "1,0,0"))
                           (rule "add_zero_right" (formula "65") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "65") (term "0,0"))
                           (rule "add_literals" (formula "65") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "65") (term "1,0,0"))
                           (rule "add_zero_right" (formula "65") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "65") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "65") (term "0,0"))
                           (rule "add_literals" (formula "65") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "65") (term "1,0,0"))
                           (rule "add_zero_right" (formula "65") (term "0,0"))
                           (rule "qeq_literals" (formula "65") (term "0"))
                           (builtin "One Step Simplification" (formula "65"))
                           (rule "true_left" (formula "65"))
                           (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "30"))
                           (rule "polySimp_mulAssoc" (formula "55") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "55") (term "0"))
                           (rule "polySimp_addComm0" (formula "55") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1"))
                           (rule "polySimp_rightDist" (formula "55") (term "1"))
                           (rule "mul_literals" (formula "55") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                           (rule "elimGcdGeq_antec" (formula "55") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_23)") (inst "elimGcdLeftDiv=quotient_22") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "55") (term "1,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "55") (term "0,0"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0"))
                           (rule "add_zero_left" (formula "55") (term "1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                           (rule "add_literals" (formula "55") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "55") (term "1,0,0"))
                           (rule "add_zero_right" (formula "55") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                           (rule "add_literals" (formula "55") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                           (rule "add_literals" (formula "55") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "55") (term "1,0,0"))
                           (rule "add_zero_right" (formula "55") (term "0,0"))
                           (rule "leq_literals" (formula "55") (term "0"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "67"))
                           (rule "polySimp_mulAssoc" (formula "48") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "48") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                           (rule "add_literals" (formula "48") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "48") (term "1,0,0"))
                           (rule "add_zero_right" (formula "48") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1"))
                           (rule "polySimp_rightDist" (formula "48") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,1"))
                           (rule "mul_literals" (formula "48") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1"))
                           (rule "inEqSimp_subsumption5" (formula "48") (ifseqformula "46"))
                           (rule "greater_literals" (formula "48") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "48"))
                           (rule "greater_literals" (formula "48") (term "0,0"))
                           (builtin "One Step Simplification" (formula "48"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,1,0"))
                           (rule "mul_literals" (formula "48") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "48") (term "0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                           (rule "add_literals" (formula "48") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "48") (term "1,0,0"))
                           (rule "add_zero_right" (formula "48") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                           (rule "add_literals" (formula "48") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                           (rule "add_literals" (formula "48") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "48") (term "1,0,0"))
                           (rule "add_zero_right" (formula "48") (term "0,0"))
                           (rule "qeq_literals" (formula "48") (term "0"))
                           (builtin "One Step Simplification" (formula "48"))
                           (rule "true_left" (formula "48"))
                           (rule "inEqSimp_exactShadow3" (formula "66") (ifseqformula "49"))
                           (rule "polySimp_rightDist" (formula "66") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "66") (term "0"))
                           (rule "polySimp_rightDist" (formula "66") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "66") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "66") (term "0,0"))
                           (rule "add_literals" (formula "66") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "66") (term "1,0,0"))
                           (rule "add_zero_right" (formula "66") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "66") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "66") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "66"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                           (rule "inEqSimp_subsumption2" (formula "66") (ifseqformula "65"))
                           (rule "greater_literals" (formula "66") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "greater_literals" (formula "66") (term "0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "polySimp_rightDist" (formula "66") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "0,1,0"))
                           (rule "mul_literals" (formula "66") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "66") (term "0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "66") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "66") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "66") (term "0,0"))
                           (rule "add_literals" (formula "66") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "66") (term "1,0,0"))
                           (rule "add_zero_right" (formula "66") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "66") (term "0,0"))
                           (rule "add_literals" (formula "66") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "66") (term "1,0,0"))
                           (rule "add_zero_right" (formula "66") (term "0,0"))
                           (rule "qeq_literals" (formula "66") (term "0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "true_left" (formula "66"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "29"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                           (rule "add_literals" (formula "6") (term "1,1,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0"))
                           (rule "add_zero_right" (formula "6") (term "0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "mul_literals" (formula "6") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "56"))
                           (rule "greater_literals" (formula "6") (term "0,0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "57"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                           (rule "inEqSimp_subsumption2" (formula "6") (ifseqformula "66"))
                           (rule "greater_literals" (formula "6") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "greater_literals" (formula "6") (term "0,0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "28"))
                           (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "20") (term "0,1"))
                           (rule "mul_literals" (formula "20") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "30"))
                           (rule "polySimp_mulAssoc" (formula "57") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "57") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "57") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "57") (term "0"))
                           (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "57") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "57") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0,0,0"))
                           (rule "add_literals" (formula "57") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                           (rule "polySimp_mulComm0" (formula "57") (term "1"))
                           (rule "polySimp_rightDist" (formula "57") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "57") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "57") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "57") (term "0,0,1"))
                           (rule "mul_literals" (formula "57") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "30"))
                           (rule "polySimp_mulAssoc" (formula "48") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "48") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                           (rule "add_literals" (formula "48") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "48") (term "1,0,0"))
                           (rule "add_zero_right" (formula "48") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1"))
                           (rule "polySimp_rightDist" (formula "48") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,1"))
                           (rule "mul_literals" (formula "48") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "51"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "24") (term "0"))
                           (rule "add_literals" (formula "24") (term "1,1,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0"))
                           (rule "add_zero_right" (formula "24") (term "0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "31"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,1"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "32"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0,1"))
                           (rule "mul_literals" (formula "5") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "63"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "11") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1"))
                           (rule "polySimp_rightDist" (formula "11") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                           (rule "mul_literals" (formula "11") (term "0,1"))
                           (rule "inEqSimp_exactShadow0" (formula "9") (ifseqformula "72"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "greater_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1"))
                           (rule "polySimp_rightDist" (formula "9") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                           (rule "mul_literals" (formula "9") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "65"))
                           (rule "polySimp_mulAssoc" (formula "54") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "54") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "76"))
                           (rule "polySimp_mulAssoc" (formula "37") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "37") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                           (rule "inEqSimp_exactShadow0" (formula "2") (ifseqformula "75"))
                           (rule "greater_literals" (formula "2") (term "0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "greater_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                           (rule "mul_literals" (formula "2") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                           (rule "inEqSimp_exactShadow2" (formula "27") (ifseqformula "76"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                           (rule "greater_literals" (formula "27") (term "0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "times_zero_1" (formula "27") (term "0,0"))
                           (rule "add_zero_left" (formula "27") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "68"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "38"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                           (rule "add_literals" (formula "27") (term "1,1,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0"))
                           (rule "add_zero_right" (formula "27") (term "0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1"))
                           (rule "mul_literals" (formula "27") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "69"))
                           (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                           (rule "polySimp_rightDist" (formula "54") (term "0,0,0"))
                           (rule "mul_literals" (formula "54") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1"))
                           (rule "polySimp_rightDist" (formula "54") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "54") (term "0,1"))
                           (rule "mul_literals" (formula "54") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "37"))
                           (rule "polySimp_rightDist" (formula "55") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "0,0,0"))
                           (rule "mul_literals" (formula "55") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "55") (term "0"))
                           (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "55") (term "0"))
                           (rule "add_literals" (formula "55") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                           (rule "add_literals" (formula "55") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "55") (term "1,0,0"))
                           (rule "add_zero_right" (formula "55") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "55") (term "0,0,0"))
                           (rule "add_literals" (formula "55") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1"))
                           (rule "polySimp_rightDist" (formula "55") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "55") (term "0,1"))
                           (rule "mul_literals" (formula "55") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "41"))
                           (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1"))
                           (rule "polySimp_rightDist" (formula "31") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "31") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "31") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "31") (term "0,0,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "38"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                           (rule "mul_literals" (formula "27") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "83"))
                           (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                           (rule "mul_literals" (formula "33") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "74"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "75"))
                           (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                           (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "83") (ifseqformula "41"))
                           (rule "polySimp_rightDist" (formula "83") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "83") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "83") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "83") (term "0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "83") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "83") (term "0"))
                           (rule "polySimp_addComm1" (formula "83") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "83") (term "0"))
                           (rule "add_literals" (formula "83") (term "1,1,0"))
                           (rule "times_zero_1" (formula "83") (term "1,0"))
                           (rule "add_zero_right" (formula "83") (term "0"))
                           (rule "polySimp_addAssoc" (formula "83") (term "0"))
                           (rule "polySimp_addComm1" (formula "83") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "83") (term "0"))
                           (rule "add_literals" (formula "83") (term "1,1,0"))
                           (rule "times_zero_1" (formula "83") (term "1,0"))
                           (rule "add_zero_right" (formula "83") (term "0"))
                           (rule "polySimp_addComm1" (formula "83") (term "0"))
                           (rule "polySimp_addComm0" (formula "83") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "83"))
                           (rule "polySimp_mulComm0" (formula "83") (term "1"))
                           (rule "polySimp_rightDist" (formula "83") (term "1"))
                           (rule "mul_literals" (formula "83") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "83") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "84") (ifseqformula "43"))
                           (rule "polySimp_rightDist" (formula "84") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "84") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "84") (term "0"))
                           (rule "polySimp_rightDist" (formula "84") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "84") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "84") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "84") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "84") (term "0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "84") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "84") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "84") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "84") (term "0,0"))
                           (rule "add_literals" (formula "84") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "84") (term "1,0,0"))
                           (rule "add_zero_right" (formula "84") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "84") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "84") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "84"))
                           (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "85") (ifseqformula "76"))
                           (rule "polySimp_rightDist" (formula "85") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "85") (term "0"))
                           (rule "polySimp_rightDist" (formula "85") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "85") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "85") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "85") (term "0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "85") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "85") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "85") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "85") (term "0,0,0,0"))
                           (rule "add_literals" (formula "85") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "85"))
                           (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                           (rule "inEqSimp_exactShadow0" (formula "62") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "62"))
                           (rule "greater_literals" (formula "62") (term "0"))
                           (builtin "One Step Simplification" (formula "62"))
                           (rule "polySimp_rightDist" (formula "62") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "62") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "62") (term "0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "0,0,0"))
                           (rule "mul_literals" (formula "62") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "62") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "62") (term "0,0"))
                           (rule "add_literals" (formula "62") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "62") (term "1,0,0"))
                           (rule "add_zero_right" (formula "62") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1"))
                           (rule "polySimp_rightDist" (formula "62") (term "1"))
                           (rule "mul_literals" (formula "62") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,1"))
                           (rule "inEqSimp_subsumption5" (formula "33") (ifseqformula "32"))
                           (rule "greater_literals" (formula "33") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "greater_literals" (formula "33") (term "0,0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                           (rule "mul_literals" (formula "33") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0"))
                           (rule "qeq_literals" (formula "33") (term "0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "inEqSimp_subsumption5" (formula "63") (ifseqformula "62"))
                           (rule "greater_literals" (formula "63") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "greater_literals" (formula "63") (term "0,0"))
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "0,1,0"))
                           (rule "mul_literals" (formula "63") (term "0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,1,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                           (rule "add_literals" (formula "63") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "63") (term "1,0,0"))
                           (rule "add_zero_right" (formula "63") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                           (rule "add_literals" (formula "63") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                           (rule "add_literals" (formula "63") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "63") (term "1,0,0"))
                           (rule "add_zero_right" (formula "63") (term "0,0"))
                           (rule "qeq_literals" (formula "63") (term "0"))
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "true_left" (formula "63"))
                           (rule "inEqSimp_subsumption2" (formula "5") (ifseqformula "29"))
                           (rule "greater_literals" (formula "5") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "greater_literals" (formula "5") (term "0,0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "qeq_literals" (formula "5") (term "0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "inEqSimp_subsumption5" (formula "33") (ifseqformula "27"))
                           (rule "mul_literals" (formula "33") (term "0,1,0"))
                           (rule "mul_literals" (formula "33") (term "1,1,0"))
                           (rule "greater_literals" (formula "33") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "leq_literals" (formula "33") (term "1,0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "greater_literals" (formula "33") (term "0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "inEqSimp_subsumption5" (formula "6") (ifseqformula "71"))
                           (rule "greater_literals" (formula "6") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "greater_literals" (formula "6") (term "0,0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "29"))
                           (rule "greater_literals" (formula "26") (term "0,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "times_zero_1" (formula "26") (term "1,0"))
                           (rule "leq_literals" (formula "26") (term "0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "inEqSimp_subsumption6" (formula "30") (ifseqformula "27"))
                           (rule "greater_literals" (formula "30") (term "0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,0,1,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0"))
                           (rule "qeq_literals" (formula "30") (term "0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "inEqSimp_subsumption4" (formula "38") (ifseqformula "36"))
                           (rule "greater_literals" (formula "38") (term "0,0"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,0,0,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,0,0,1,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,0,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                           (rule "add_literals" (formula "38") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                           (rule "add_literals" (formula "38") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                           (rule "add_literals" (formula "38") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                           (rule "add_literals" (formula "38") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                           (rule "add_literals" (formula "38") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0"))
                           (rule "qeq_literals" (formula "38") (term "0"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "inEqSimp_subsumption2" (formula "6") (ifseqformula "78"))
                           (rule "greater_literals" (formula "6") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "greater_literals" (formula "6") (term "0,0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_subsumption5" (formula "12") (ifseqformula "28"))
                           (rule "greater_literals" (formula "12") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "greater_literals" (formula "12") (term "0,0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                           (rule "mul_literals" (formula "12") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0"))
                           (rule "qeq_literals" (formula "12") (term "0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_subsumption2" (formula "75") (ifseqformula "78"))
                           (rule "greater_literals" (formula "75") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "75"))
                           (rule "greater_literals" (formula "75") (term "0,0"))
                           (builtin "One Step Simplification" (formula "75"))
                           (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "75") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "75") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "75") (term "0,1,0"))
                           (rule "mul_literals" (formula "75") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "1,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "75") (term "0"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "75") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "75") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "75") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "75") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                           (rule "add_literals" (formula "75") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "75") (term "1,0,0"))
                           (rule "add_zero_right" (formula "75") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "75") (term "0,0"))
                           (rule "add_literals" (formula "75") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "75") (term "1,0,0"))
                           (rule "add_zero_right" (formula "75") (term "0,0"))
                           (rule "qeq_literals" (formula "75") (term "0"))
                           (builtin "One Step Simplification" (formula "75"))
                           (rule "true_left" (formula "75"))
                           (rule "inEqSimp_subsumption5" (formula "74") (ifseqformula "27"))
                           (rule "greater_literals" (formula "74") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "74"))
                           (rule "greater_literals" (formula "74") (term "0,0"))
                           (builtin "One Step Simplification" (formula "74"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "74") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "74") (term "0,0"))
                           (rule "mul_literals" (formula "74") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "74") (term "0"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "74") (term "1,0,0"))
                           (rule "mul_literals" (formula "74") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "74") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                           (rule "add_literals" (formula "74") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "74") (term "1,0,0"))
                           (rule "add_zero_right" (formula "74") (term "0,0"))
                           (rule "qeq_literals" (formula "74") (term "0"))
                           (builtin "One Step Simplification" (formula "74"))
                           (rule "true_left" (formula "74"))
                           (rule "inEqSimp_subsumption6" (formula "53") (ifseqformula "64"))
                           (rule "greater_literals" (formula "53") (term "0,0"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "53") (term "0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "53") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "53") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                           (rule "add_literals" (formula "53") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "53") (term "1,0,0"))
                           (rule "add_zero_right" (formula "53") (term "0,0"))
                           (rule "qeq_literals" (formula "53") (term "0"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "true_left" (formula "53"))
                           (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcdRightDiv=add(add(Z(neglit(5(5(2(#))))),
        mul(quotient_23, Z(neglit(1(#))))),
    mul(l_10, Z(neglit(6(5(2(#)))))))") (inst "elimGcdLeftDiv=mul(quotient_21, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "leq_literals" (formula "23") (term "0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0"))
                           (rule "leq_literals" (formula "23") (term "0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=add(add(add(Z(neglit(1(1(5(#))))),
            mul(quotient_23, Z(2(#)))),
        mul(l_10, Z(6(5(2(#)))))),
    mul(quotient_22, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(quotient_21, Z(2(1(5(#)))))") (inst "elimGcd=Z(8(2(1(#))))"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "4") (term "0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "leq_literals" (formula "4") (term "0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "elimGcdGeq_antec" (formula "64") (inst "elimGcdRightDiv=add(add(add(Z(neglit(5(5(2(#))))),
            mul(quotient_23, Z(2(#)))),
        mul(l_10, Z(6(5(2(#)))))),
    mul(quotient_22, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(quotient_21, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,1,0"))
                           (rule "leq_literals" (formula "64") (term "0,0"))
                           (builtin "One Step Simplification" (formula "64"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                           (rule "add_literals" (formula "64") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "64") (term "1,0,0"))
                           (rule "add_zero_right" (formula "64") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                           (rule "add_literals" (formula "64") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "64") (term "1,0,0"))
                           (rule "add_zero_right" (formula "64") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                           (rule "add_literals" (formula "64") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "64") (term "1,0,0"))
                           (rule "add_zero_right" (formula "64") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                           (rule "add_literals" (formula "64") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                           (rule "add_literals" (formula "64") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "64") (term "1,0,0"))
                           (rule "add_zero_right" (formula "64") (term "0,0"))
                           (rule "leq_literals" (formula "64") (term "0"))
                           (builtin "One Step Simplification" (formula "64"))
                           (rule "elimGcdLeq_antec" (formula "54") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_23)") (inst "elimGcdLeftDiv=quotient_22") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "neg_literal" (formula "54") (term "0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "54") (term "1,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "54") (term "0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0"))
                           (rule "add_zero_left" (formula "54") (term "1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                           (rule "add_literals" (formula "54") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "54") (term "1,0,0"))
                           (rule "add_zero_right" (formula "54") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                           (rule "add_literals" (formula "54") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "54") (term "1,0,0"))
                           (rule "add_zero_right" (formula "54") (term "0,0"))
                           (rule "qeq_literals" (formula "54") (term "0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=add(add(Z(neglit(5(5(2(#))))),
        mul(quotient_23, Z(neglit(1(#))))),
    mul(l_10, Z(neglit(2(1(5(#)))))))") (inst "elimGcdLeftDiv=quotient_22") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "leq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(add(Z(neglit(1(1(5(#))))),
        mul(quotient_23, Z(neglit(2(#))))),
    mul(l_10, Z(neglit(8(6(7(#)))))))") (inst "elimGcdLeftDiv=quotient_22") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_exactShadow2" (formula "11") (ifseqformula "24"))
                           (rule "greater_literals" (formula "11") (term "0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0"))
                           (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
                           (rule "add_literals" (formula "11") (term "1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1"))
                           (rule "polySimp_rightDist" (formula "11") (term "1"))
                           (rule "mul_literals" (formula "11") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                           (rule "inEqSimp_exactShadow2" (formula "64") (ifseqformula "25"))
                           (rule "greater_literals" (formula "64") (term "0"))
                           (builtin "One Step Simplification" (formula "64"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "64") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "64") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                           (rule "add_literals" (formula "64") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "64"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1"))
                           (rule "polySimp_rightDist" (formula "64") (term "1"))
                           (rule "mul_literals" (formula "64") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1"))
                           (rule "inEqSimp_exactShadow0" (formula "63") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "greater_literals" (formula "63") (term "0"))
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "63") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "0,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "63") (term "0"))
                           (rule "polySimp_addComm1" (formula "63") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "63") (term "0"))
                           (rule "add_literals" (formula "63") (term "1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1"))
                           (rule "polySimp_rightDist" (formula "63") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "63") (term "0,1"))
                           (rule "mul_literals" (formula "63") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,1"))
                           (rule "inEqSimp_exactShadow0" (formula "64") (ifseqformula "76"))
                           (rule "greater_literals" (formula "64") (term "0,0"))
                           (builtin "One Step Simplification" (formula "64"))
                           (rule "greater_literals" (formula "64") (term "0"))
                           (builtin "One Step Simplification" (formula "64"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "64") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0"))
                           (rule "polySimp_addComm1" (formula "64") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "64") (term "0"))
                           (rule "add_literals" (formula "64") (term "1,1,0"))
                           (rule "times_zero_1" (formula "64") (term "1,0"))
                           (rule "add_zero_right" (formula "64") (term "0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "64") (term "0,0,0"))
                           (rule "add_literals" (formula "64") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0"))
                           (rule "add_literals" (formula "64") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "64"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1"))
                           (rule "polySimp_rightDist" (formula "64") (term "1"))
                           (rule "mul_literals" (formula "64") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1"))
                           (rule "inEqSimp_exactShadow0" (formula "65") (ifseqformula "79"))
                           (builtin "One Step Simplification" (formula "65"))
                           (rule "greater_literals" (formula "65") (term "0"))
                           (builtin "One Step Simplification" (formula "65"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "65") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "65") (term "0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "65") (term "0"))
                           (rule "polySimp_rightDist" (formula "65") (term "0,0,0"))
                           (rule "mul_literals" (formula "65") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "65") (term "0,0,0"))
                           (rule "add_literals" (formula "65") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "65") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "65") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                           (rule "polySimp_mulComm0" (formula "65") (term "1"))
                           (rule "polySimp_rightDist" (formula "65") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,1"))
                           (rule "mul_literals" (formula "65") (term "0,1"))
                           (rule "elimGcdGeq_antec" (formula "52") (inst "elimGcdRightDiv=add(add(Z(neglit(0(1(5(#))))), quotient_23),
    mul(l_10, Z(6(5(2(#))))))") (inst "elimGcdLeftDiv=mul(quotient_21, Z(2(1(5(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,1,0"))
                           (rule "leq_literals" (formula "52") (term "0,0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0"))
                           (rule "add_literals" (formula "52") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "52") (term "1,0,0"))
                           (rule "add_zero_right" (formula "52") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "52") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0"))
                           (rule "add_literals" (formula "52") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "52") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0"))
                           (rule "add_literals" (formula "52") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "52") (term "1,0,0"))
                           (rule "add_zero_right" (formula "52") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "52") (term "0,0,0"))
                           (rule "add_literals" (formula "52") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0"))
                           (rule "add_literals" (formula "52") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "52") (term "1,0,0"))
                           (rule "add_zero_right" (formula "52") (term "0,0"))
                           (rule "leq_literals" (formula "52") (term "0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "elimGcdGeq_antec" (formula "51") (inst "elimGcdRightDiv=add(add(Z(neglit(5(5(2(#))))),
        mul(quotient_23, Z(neglit(1(#))))),
    quotient_22)") (inst "elimGcdLeftDiv=mul(quotient_21, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,1,0"))
                           (rule "leq_literals" (formula "51") (term "0,0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                           (rule "add_literals" (formula "51") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "51") (term "1,0,0"))
                           (rule "add_zero_right" (formula "51") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "51") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0"))
                           (rule "add_literals" (formula "51") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                           (rule "add_literals" (formula "51") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "51") (term "1,0,0"))
                           (rule "add_zero_right" (formula "51") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                           (rule "add_literals" (formula "51") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                           (rule "add_literals" (formula "51") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "51") (term "1,0,0"))
                           (rule "add_zero_right" (formula "51") (term "0,0"))
                           (rule "leq_literals" (formula "51") (term "0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "elimGcdLeq_antec" (formula "78") (inst "elimGcdRightDiv=add(add(add(Z(0(#)), mul(quotient_23, Z(2(#)))),
        mul(l_10, Z(6(5(2(#)))))),
    mul(quotient_22, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(quotient_21, Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "78") (term "0,0"))
                           (builtin "One Step Simplification" (formula "78"))
                           (rule "neg_literal" (formula "78") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0,0"))
                           (rule "add_zero_left" (formula "78") (term "0,0,1,1"))
                           (rule "add_zero_left" (formula "78") (term "0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "78") (term "0,0"))
                           (rule "add_literals" (formula "78") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "78") (term "1,0,0"))
                           (rule "add_zero_right" (formula "78") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "78") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "78") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "78") (term "0,0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "78") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "78") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "78") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "78") (term "0,0"))
                           (rule "add_literals" (formula "78") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "78") (term "1,0,0"))
                           (rule "add_zero_right" (formula "78") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "78") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "78") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "78") (term "0,0"))
                           (rule "add_literals" (formula "78") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "78") (term "1,0,0"))
                           (rule "add_zero_right" (formula "78") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "78") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "78") (term "0,0,0"))
                           (rule "add_literals" (formula "78") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "78") (term "0,0"))
                           (rule "add_literals" (formula "78") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "78") (term "1,0,0"))
                           (rule "add_zero_right" (formula "78") (term "0,0"))
                           (rule "qeq_literals" (formula "78") (term "0"))
                           (builtin "One Step Simplification" (formula "78"))
                           (rule "elimGcdLeq_antec" (formula "25") (inst "elimGcdRightDiv=add(add(Z(0(#)), mul(quotient_23, Z(2(#)))),
    mul(l_10, Z(6(5(2(#))))))") (inst "elimGcdLeftDiv=quotient_22") (inst "elimGcd=Z(6(5(2(#))))"))
                           (rule "leq_literals" (formula "25") (term "0,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                           (rule "neg_literal" (formula "25") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "25") (term "0,1,1"))
                           (rule "add_zero_left" (formula "25") (term "0,1,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0"))
                           (rule "qeq_literals" (formula "25") (term "0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_subsumption5" (formula "67") (ifseqformula "11"))
                           (rule "greater_literals" (formula "67") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "67"))
                           (rule "greater_literals" (formula "67") (term "0,0"))
                           (builtin "One Step Simplification" (formula "67"))
                           (rule "polySimp_rightDist" (formula "67") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0"))
                           (rule "mul_literals" (formula "67") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "67") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0"))
                           (rule "mul_literals" (formula "67") (term "0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "67") (term "0"))
                           (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "67") (term "1,0,0"))
                           (rule "mul_literals" (formula "67") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                           (rule "add_literals" (formula "67") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0"))
                           (rule "add_literals" (formula "67") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "67") (term "1,0,0"))
                           (rule "add_zero_right" (formula "67") (term "0,0"))
                           (rule "qeq_literals" (formula "67") (term "0"))
                           (builtin "One Step Simplification" (formula "67"))
                           (rule "true_left" (formula "67"))
                           (rule "inEqSimp_subsumption5" (formula "11") (ifseqformula "28"))
                           (rule "greater_literals" (formula "11") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "greater_literals" (formula "11") (term "0,0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                           (rule "mul_literals" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                           (rule "add_literals" (formula "11") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0"))
                           (rule "qeq_literals" (formula "11") (term "0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "inEqSimp_subsumption5" (formula "63") (ifseqformula "27"))
                           (rule "greater_literals" (formula "63") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "greater_literals" (formula "63") (term "0,0"))
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "0,0"))
                           (rule "mul_literals" (formula "63") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "63") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                           (rule "add_literals" (formula "63") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "63") (term "1,0,0"))
                           (rule "add_zero_right" (formula "63") (term "0,0"))
                           (rule "qeq_literals" (formula "63") (term "0"))
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "true_left" (formula "63"))
                           (rule "inEqSimp_subsumption6" (formula "63") (ifseqformula "11"))
                           (rule "greater_literals" (formula "63") (term "0,0"))
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "63") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                           (rule "add_literals" (formula "63") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "63") (term "1,0,0"))
                           (rule "add_zero_right" (formula "63") (term "0,0"))
                           (rule "qeq_literals" (formula "63") (term "0"))
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "true_left" (formula "63"))
                           (rule "div_axiom" (formula "80") (term "1") (inst "quotient=quotient_24"))
                           (rule "qeq_literals" (formula "80") (term "0,1,1"))
                           (builtin "One Step Simplification" (formula "80"))
                           (rule "mul_literals" (formula "80") (term "1,1,1,1"))
                           (rule "equal_literals" (formula "80") (term "0"))
                           (builtin "One Step Simplification" (formula "80"))
                           (rule "andLeft" (formula "80"))
                           (rule "andLeft" (formula "80"))
                           (rule "polySimp_addComm1" (formula "82") (term "1"))
                           (rule "add_literals" (formula "82") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "81"))
                           (rule "inEqSimp_homoInEq1" (formula "82"))
                           (rule "polySimp_mulLiterals" (formula "82") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "82") (term "0"))
                           (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "80"))
                           (rule "inEqSimp_homoInEq1" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                           (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "80"))
                           (rule "inEqSimp_homoInEq1" (formula "72"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "72") (term "0"))
                           (rule "applyEq" (formula "38") (term "0,1,1") (ifseqformula "80"))
                           (rule "polySimp_addComm1" (formula "38") (term "1"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                           (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "80"))
                           (rule "polySimp_addComm1" (formula "15") (term "1"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                           (rule "applyEq" (formula "60") (term "0,1,1") (ifseqformula "80"))
                           (rule "polySimp_addComm1" (formula "60") (term "1"))
                           (rule "polySimp_addComm1" (formula "60") (term "0,1"))
                           (rule "applyEq" (formula "59") (term "0,1,1") (ifseqformula "80"))
                           (rule "polySimp_addComm1" (formula "59") (term "1"))
                           (rule "applyEqRigid" (formula "14") (term "0,1,1") (ifseqformula "80"))
                           (rule "polySimp_addComm1" (formula "14") (term "1"))
                           (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "80"))
                           (rule "polySimp_addComm1" (formula "31") (term "1"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                           (rule "applyEq" (formula "84") (term "0,1,1") (ifseqformula "80"))
                           (rule "polySimp_addComm1" (formula "84") (term "1"))
                           (rule "applyEqRigid" (formula "83") (term "1") (ifseqformula "80"))
                           (rule "applyEq" (formula "30") (term "0,1,1") (ifseqformula "80"))
                           (rule "polySimp_addComm0" (formula "30") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "82"))
                           (rule "polySimp_mulComm0" (formula "82") (term "1"))
                           (rule "polySimp_rightDist" (formula "82") (term "1"))
                           (rule "mul_literals" (formula "82") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "82") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1"))
                           (rule "polySimp_rightDist" (formula "13") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                           (rule "mul_literals" (formula "13") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1"))
                           (rule "polySimp_rightDist" (formula "72") (term "1"))
                           (rule "mul_literals" (formula "72") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "81") (ifseqformula "72"))
                           (rule "andLeft" (formula "81"))
                           (rule "inEqSimp_homoInEq1" (formula "81"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "81") (term "0"))
                           (rule "polySimp_addComm0" (formula "81") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "81") (term "0"))
                           (rule "add_literals" (formula "81") (term "1,1,0"))
                           (rule "times_zero_1" (formula "81") (term "1,0"))
                           (rule "add_zero_right" (formula "81") (term "0"))
                           (rule "leq_literals" (formula "81"))
                           (rule "closeFalse" (formula "81"))
                        )
                        (branch "a[0] ≤ -1 FALSE"
                           (rule "applyEq" (formula "18") (term "0,0,0,0,1") (ifseqformula "1") (userinteraction))
                           (rule "applyEqReverse" (formula "18") (term "0,1,0,0,1") (ifseqformula "2") (userinteraction))
                           (rule "applyEqReverse" (formula "18") (term "0,1,0,1") (ifseqformula "3") (userinteraction))
                           (rule "applyEqReverse" (formula "18") (term "1,1") (ifseqformula "4") (userinteraction))
                           (rule "applyEqReverse" (formula "18") (term "0,0,0,0,1") (ifseqformula "26") (userinteraction))
                           (rule "applyEqReverse" (formula "18") (term "0,1,0,0,1") (ifseqformula "22") (userinteraction))
                           (rule "applyEqReverse" (formula "18") (term "0,1,0,1") (ifseqformula "24") (userinteraction))
                           (rule "applyEqReverse" (formula "18") (term "1,1") (ifseqformula "20") (userinteraction))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "5") (userinteraction))
                           (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "5") (userinteraction))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "5") (userinteraction))
                           (rule "eqSymm" (formula "32") (userinteraction))
                           (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "5") (userinteraction))
                           (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "5") (userinteraction))
                           (rule "jmod_axiom" (formula "11") (term "1") (userinteraction))
                           (rule "jmod_axiom" (formula "12") (term "1") (userinteraction))
                           (rule "jmod_axiom" (formula "13") (term "1") (userinteraction))
                           (rule "jdiv_axiom_inline" (formula "11") (term "0,1") (userinteraction))
                           (rule "jdiv_axiom_inline" (formula "11") (term "0,0,0,1,1") (userinteraction))
                           (rule "replace_known_left" (formula "11") (term "0,0,0,0,1,1") (ifseqformula "9") (userinteraction))
                           (rule "replace_known_left" (formula "11") (term "0,0,1") (ifseqformula "9") (userinteraction))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "jdiv_axiom_inline" (formula "11") (term "0,0,1,1") (userinteraction))
                           (rule "ifthenelse_split" (formula "11") (term "0,0,1,1") (userinteraction))
                           (branch "value / 16777216 ≥ 0 TRUE"
                              (rule "jdiv_axiom_inline" (formula "13") (term "0,1") (userinteraction))
                              (rule "jdiv_axiom_inline" (formula "13") (term "0,0,0,1,1") (userinteraction))
                              (rule "replace_known_left" (formula "13") (term "0,0,0,0,1,1") (ifseqformula "9") (userinteraction))
                              (rule "replace_known_left" (formula "13") (term "0,0,1") (ifseqformula "9") (userinteraction))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "jdiv_axiom_inline" (formula "13") (term "0,0,1,1") (userinteraction))
                              (rule "ifthenelse_split" (formula "13") (term "0,0,1,1") (userinteraction))
                              (branch "value / 65536 ≥ 0 TRUE"
                                 (rule "jdiv_axiom_inline" (formula "15") (term "0,1") (userinteraction))
                                 (rule "jdiv_axiom_inline" (formula "15") (term "0,0,0,1,1") (userinteraction))
                                 (rule "replace_known_left" (formula "15") (term "0,0,1") (ifseqformula "9") (userinteraction))
                                 (rule "replace_known_left" (formula "15") (term "0,0,0,0,1,1") (ifseqformula "9") (userinteraction))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "jdiv_axiom_inline" (formula "15") (term "0,0,1,1") (userinteraction))
                                 (rule "ifthenelse_split" (formula "15") (term "0,0,1,1") (userinteraction))
                                 (branch "value / 256 ≥ 0 TRUE"
                                    (rule "jdiv_axiom_inline" (formula "17") (term "0,1,1") (userinteraction))
                                    (rule "replace_known_left" (formula "17") (term "0,0,1,1") (ifseqformula "9") (userinteraction))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (opengoal " ")
                                 )
                                 (branch "value / 256 ≥ 0 FALSE"
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "polySimp_homoEq" (formula "20"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "33"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "32"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "31"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "32"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "33"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "19"))
                                    (rule "polySimp_homoEq" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "33"))
                                    (rule "polySimp_homoEq" (formula "17"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "31"))
                                    (rule "polySimp_homoEq" (formula "20"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "27"))
                                    (rule "polySimp_homoEq" (formula "21"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                    (rule "applyEq" (formula "31") (term "1") (ifseqformula "8"))
                                    (rule "applyEq" (formula "35") (term "1") (ifseqformula "10"))
                                    (rule "applyEq" (formula "27") (term "1") (ifseqformula "9"))
                                    (rule "applyEq" (formula "33") (term "1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "31"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "19"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                    (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "20") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "21") (term "0,0,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "33"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0"))
                                    (rule "applyEq" (formula "25") (term "1,0,0,0") (ifseqformula "9"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                    (rule "applyEq" (formula "25") (term "0,1,0,0,0") (ifseqformula "10"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1"))
                                    (rule "polySimp_mulAssoc" (formula "20") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "25"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                    (rule "apply_eq_monomials" (formula "25") (term "0") (ifseqformula "29"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_homoEq" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "25") (term "1,1,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,1,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "25") (term "0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_mulAssoc" (formula "25") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "9") (term "1") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "21") (term "0,0,1") (ifseqformula "25"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "21"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "5") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "29"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "newSym_eq" (formula "21") (inst "l=l_21") (inst "newSymDef=add(add(add(add(mul(res_byteArrayToInt, Z(0(#))),
                mul(res_unsign, Z(6(3(5(5(6(#)))))))),
            mul(res_unsign_0, Z(6(5(2(#)))))),
        res_unsign_1),
    mul(value, Z(0(#))))"))
                                    (rule "times_zero_1" (formula "21") (term "0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,1,1"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "21") (term "1,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "21"))
                                    (rule "polySimp_homoEq" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                                    (rule "applyEq" (formula "36") (term "0") (ifseqformula "22"))
                                    (rule "polySimp_homoEq" (formula "36"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0"))
                                    (rule "add_zero_right" (formula "36") (term "0"))
                                    (rule "applyEq" (formula "20") (term "0,0,0,0,0") (ifseqformula "22"))
                                    (rule "polySimp_homoEq" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                    (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "22"))
                                    (rule "polySimp_homoEq" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "30") (term "0,0,0,0") (ifseqformula "22"))
                                    (rule "polySimp_homoEq" (formula "30"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                    (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                                    (rule "polySimp_homoEq" (formula "21"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                    (rule "applyEq" (formula "19") (term "0,0,0,1,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1"))
                                    (rule "applyEq" (formula "20") (term "0,0,1,0") (ifseqformula "22"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                    (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "22"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                    (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "22"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                    (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1"))
                                    (rule "polySimp_invertEq" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "times_zero_2" (formula "36") (term "1"))
                                    (rule "polySimp_sepPosMonomial" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,1"))
                                    (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "20") (term "1,0") (ifseqformula "21"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0"))
                                    (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "21"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                    (rule "applyEqRigid" (formula "28") (term "0,1,1") (ifseqformula "21"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,0,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "28") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "1"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "28") (term "1"))
                                    (rule "add_literals" (formula "28") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "28") (term "1,1"))
                                    (rule "add_zero_right" (formula "28") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "1"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "28") (term "1"))
                                    (rule "add_literals" (formula "28") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "28") (term "1,1"))
                                    (rule "add_zero_right" (formula "28") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "0,1"))
                                    (rule "applyEq" (formula "32") (term "1") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "21"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "26") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "26") (term "1"))
                                    (rule "add_literals" (formula "26") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "26") (term "1,1"))
                                    (rule "add_zero_right" (formula "26") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "26") (term "1"))
                                    (rule "add_literals" (formula "26") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "26") (term "1,1"))
                                    (rule "add_zero_right" (formula "26") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,1"))
                                    (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "21"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "9") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "0,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "1"))
                                    (rule "add_literals" (formula "9") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "1,1"))
                                    (rule "add_zero_right" (formula "9") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "1"))
                                    (rule "add_literals" (formula "9") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "1,1"))
                                    (rule "add_zero_right" (formula "9") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                    (rule "polySimp_addComm0" (formula "9") (term "0,1"))
                                    (rule "applyEq" (formula "8") (term "1") (ifseqformula "21"))
                                    (rule "polySimp_sepNegMonomial" (formula "30"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "0"))
                                    (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "30"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                    (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "30"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "32") (term "0,1,1") (ifseqformula "30"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                    (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "30"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,1"))
                                    (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "30"))
                                    (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "30"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "17"))
                                    (rule "applyEqRigid" (formula "4") (term "0,1,0") (ifseqformula "17"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "20") (term "0,1,0") (ifseqformula "17"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "34") (term "1") (ifseqformula "17"))
                                    (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "17"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,1"))
                                    (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "17"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                                    (rule "applyEqRigid" (formula "32") (term "0,1,1") (ifseqformula "17"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                                    (rule "applyEq" (formula "6") (term "1") (ifseqformula "17"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_sepPosMonomial" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulAssoc" (formula "20") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "5") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,0,0"))
                                    (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,0"))
                                    (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,1"))
                                    (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "1"))
                                    (rule "add_literals" (formula "8") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,1"))
                                    (rule "add_zero_right" (formula "8") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "1"))
                                    (rule "add_literals" (formula "8") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,1"))
                                    (rule "add_zero_right" (formula "8") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                    (rule "polySimp_pullOutFactor2" (formula "8") (term "0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "8") (term "0,1"))
                                    (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "32") (term "1"))
                                    (rule "add_literals" (formula "32") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,1"))
                                    (rule "add_zero_right" (formula "32") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "32") (term "1"))
                                    (rule "add_literals" (formula "32") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,1"))
                                    (rule "add_zero_right" (formula "32") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,1"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "32") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,1"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "32") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                    (rule "polySimp_pullOutFactor2" (formula "32") (term "0,0,1"))
                                    (rule "add_literals" (formula "32") (term "1,0,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "32") (term "0,1"))
                                    (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "26") (term "1,0,0,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "26") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "1"))
                                    (rule "add_literals" (formula "21") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,1"))
                                    (rule "add_zero_right" (formula "21") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "1"))
                                    (rule "add_literals" (formula "21") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,1"))
                                    (rule "add_zero_right" (formula "21") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                    (rule "polySimp_pullOutFactor2" (formula "21") (term "0,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,0,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "21") (term "0,1"))
                                    (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,0,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "28") (term "1,0,0,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "28") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "elimGcdEq" (formula "36") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_21") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "add_zero_left" (formula "36") (term "0,0,0"))
                                    (rule "add_literals" (formula "36") (term "1,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "36") (term "0,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "leq_literals" (formula "36") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "times_zero_1" (formula "36") (term "0,0"))
                                    (rule "qeq_literals" (formula "36") (term "0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "polyDiv_pullOut" (formula "9") (term "0,1,0,0,0,0,0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "9") (term "0,0,1,0,0,0,0,0,1"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,1,1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,1,1,1,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,1,1,1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,1,1,1,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "9") (term "0,1,1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "32") (term "0,0,0,1,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "32") (term "0,0,0,0,1,1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "32") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "32") (term "1,0,0,1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "32") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "32") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "32") (term "0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,1,1"))
                                    (rule "polyDiv_pullOut" (formula "8") (term "0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "8") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,1,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,1,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,0,0,1,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,0,1,0,1"))
                                    (rule "add_zero_left" (formula "8") (term "0,1,0,1"))
                                    (rule "polyDiv_pullOut" (formula "20") (term "0,0,0,1,0,0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "20") (term "0,0,0,0,1,0,0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "1"))
                                    (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "20") (term "1,0,0,1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "20") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "20") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,1,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "3") (term "1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "4") (term "0,0,0,0") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "4") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,0,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,0"))
                                    (rule "polyDiv_pullOut" (formula "5") (term "0,1,0,0,0,0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "5") (term "0,0,1,0,0,0,0,1"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,1,1,1,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1,1,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "5") (term "1,0,0,1,1,1,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "5") (term "0,0,1,1,1,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "5") (term "0,1,1,1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "28") (term "0,1,0,0,0,0,0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "28") (term "0,0,1,0,0,0,0,0,1"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1,1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,1,1,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "28") (term "1,0,0,1,1,1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "28") (term "0,0,1,1,1,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "28") (term "0,1,1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "21") (term "0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "21") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,1,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,0,0,1,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "0,0,1,0,1"))
                                    (rule "add_zero_left" (formula "21") (term "0,1,0,1"))
                                    (rule "polyDiv_pullOut" (formula "26") (term "0,1,0,0,0,0,0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "26") (term "0,0,1,0,0,0,0,0,1"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1,1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,1,1,1,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "26") (term "1,0,0,1,1,1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "26") (term "0,0,1,1,1,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "26") (term "0,1,1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "26") (term "0,0,0,1,0,0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "26") (term "0,0,0,0,1,0,0,1"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "26") (term "1,0,0,1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "26") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "26") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,1,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "21") (term "0,0,0,1,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "21") (term "0,0,0,0,1,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "21") (term "1,0,0,1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "21") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "21") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,1,1"))
                                    (rule "polyDiv_pullOut" (formula "28") (term "0,0,0,1,0,0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "28") (term "0,0,0,0,1,0,0,1"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "28") (term "1"))
                                    (rule "polySimp_addComm0" (formula "28") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "28") (term "1,0,0,1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "28") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "28") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "28") (term "1"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,1,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "5") (term "0,0,0,1,0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "5") (term "0,0,0,0,1,0,1"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "5") (term "1"))
                                    (rule "polySimp_addComm0" (formula "5") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "5") (term "1,0,0,1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "5") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "5") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0,1"))
                                    (rule "polyDiv_pullOut" (formula "4") (term "0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0,1"))
                                    (rule "equal_literals" (formula "4") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,0,1,1"))
                                    (rule "add_literals" (formula "4") (term "1,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "4") (term "0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "4") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "4") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                    (rule "polyDiv_pullOut" (formula "20") (term "1,0,0,0,0,0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "20") (term "0,1,0,0,0,0,0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "20") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,1,1,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "20") (term "1,0,0,1,1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "0,0,1,1,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "20") (term "0,1,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor3" (formula "20") (term "0,0,0,0,0,0,1"))
                                    (rule "polyDiv_pullOut" (formula "8") (term "0,0,0,1,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "8") (term "0,0,0,0,1,1"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "8") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "8") (term "1,0,0,1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "8") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0,0,1,1"))
                                    (rule "polyDiv_pullOut" (formula "32") (term "0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "32") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,1,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0,1,0,1"))
                                    (rule "add_literals" (formula "32") (term "1,0,0,1,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "0,0,1,0,1"))
                                    (rule "add_zero_left" (formula "32") (term "0,1,0,1"))
                                    (rule "polyDiv_pullOut" (formula "9") (term "0,0,0,1,0,0,1") (inst "polyDivCoeff=l_21"))
                                    (rule "equal_literals" (formula "9") (term "0,0,0,0,1,0,0,1"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,1,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,1,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "9") (term "0,1,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "0,0,0,1,0,0,1"))
                                    (rule "inEqSimp_exactShadow0" (formula "5") (ifseqformula "2"))
                                    (rule "greater_literals" (formula "5") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "greater_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0,1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "5") (term "0,0,0,0,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "5") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,1"))
                                    (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcdRightDiv=add(add(add(add(mul(l_21, Z(6(5(2(#))))),
                mul(res_byteArrayToInt,
                    Z(neglit(1(#))))),
            mul(div(res_byteArrayToInt, Z(6(5(2(#))))),
                Z(6(5(2(#)))))),
        mul(div(add(mul(l_21, Z(6(5(2(#))))),
                    res_byteArrayToInt),
                Z(6(3(5(5(6(#))))))),
            Z(6(3(5(5(6(#)))))))),
    mul(div(add(mul(l_21, Z(neglit(1(#)))),
                mul(div(res_byteArrayToInt,
                        Z(6(5(2(#))))),
                    Z(neglit(1(#))))),
            Z(6(5(2(#))))),
        Z(6(3(5(5(6(#))))))))") (inst "elimGcdLeftDiv=mul(div(div(add(mul(l_21, Z(6(5(2(#))))),
                res_byteArrayToInt),
            Z(6(3(5(5(6(#))))))),
        Z(6(5(2(#))))),
    Z(6(1(2(7(7(7(6(1(#))))))))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "5") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "5") (term "0,0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_exactShadow0" (formula "5") (ifseqformula "1"))
                                    (rule "greater_literals" (formula "5") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "greater_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "5") (term "0,0,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=add(add(mul(l_21, Z(neglit(6(5(2(#)))))),
        res_byteArrayToInt),
    mul(div(res_byteArrayToInt, Z(6(5(2(#))))),
        Z(neglit(6(5(2(#)))))))") (inst "elimGcdLeftDiv=mul(div(add(mul(l_21, Z(neglit(1(#)))),
            mul(div(res_byteArrayToInt, Z(6(5(2(#))))),
                Z(neglit(1(#))))),
        Z(6(5(2(#))))),
    Z(6(3(5(5(6(#)))))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "5") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "neg_literal" (formula "5") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "5") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_exactShadow0" (formula "4") (ifseqformula "5"))
                                    (rule "greater_literals" (formula "4") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "greater_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=res_byteArrayToInt") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "4") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "div_axiom" (formula "21") (term "0") (inst "quotient=quotient_29"))
                                    (rule "mul_literals" (formula "21") (term "1,1,1,1,1"))
                                    (rule "equal_literals" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "qeq_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                    (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "21"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                                    (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "8") (term "0,0,1,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm1" (formula "8") (term "1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "25") (term "0,0,1,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm0" (formula "25") (term "1"))
                                    (rule "applyEqRigid" (formula "10") (term "0,0,1,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm0" (formula "10") (term "1"))
                                    (rule "applyEqRigid" (formula "36") (term "0,0,1,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm0" (formula "36") (term "1"))
                                    (rule "applyEq" (formula "32") (term "0,0,1,0,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "12") (term "0,0,1,0,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "34") (term "0,0,1,0,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,1"))
                                    (rule "applyEqRigid" (formula "26") (term "0,0,1,0,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,1"))
                                    (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "21"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0,0"))
                                    (rule "applyEqRigid" (formula "36") (term "1,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm0" (formula "36") (term "1"))
                                    (rule "applyEqRigid" (formula "25") (term "1,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm0" (formula "25") (term "1"))
                                    (rule "applyEqRigid" (formula "10") (term "1,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm0" (formula "10") (term "1"))
                                    (rule "applyEqRigid" (formula "8") (term "0,1,0,0,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "32") (term "0,1,0,0,0,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,0,0,1"))
                                    (rule "applyEqRigid" (formula "12") (term "0,1,0,0,0,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,0,0,1"))
                                    (rule "applyEqRigid" (formula "26") (term "0,1,0,0,0,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0,1"))
                                    (rule "applyEqRigid" (formula "34") (term "0,1,0,0,0,1") (ifseqformula "21"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulAssoc" (formula "7") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_exactShadow0" (formula "8") (ifseqformula "2"))
                                    (rule "greater_literals" (formula "8") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "greater_literals" (formula "8") (term "0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0,0,0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "inEqSimp_subsumption2" (formula "7") (ifseqformula "8"))
                                    (rule "greater_literals" (formula "7") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "greater_literals" (formula "7") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=add(add(add(add(mul(quotient_29,
                    Z(neglit(6(3(5(5(6(#)))))))),
                mul(l_21, Z(neglit(6(5(2(#))))))),
            mul(div(quotient_29, Z(6(5(2(#))))),
                Z(6(1(2(7(7(7(6(1(#))))))))))),
        res_byteArrayToInt),
    mul(div(res_byteArrayToInt, Z(6(5(2(#))))),
        Z(neglit(6(5(2(#)))))))") (inst "elimGcdLeftDiv=mul(div(add(mul(l_21, Z(neglit(1(#)))),
            mul(div(res_byteArrayToInt, Z(6(5(2(#))))),
                Z(neglit(1(#))))),
        Z(6(5(2(#))))),
    Z(6(3(5(5(6(#)))))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "7") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                    (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "23"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                    (rule "mul_literals" (formula "17") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "25"))
                                    (rule "greater_literals" (formula "17") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "times_zero_1" (formula "17") (term "1,0"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "23"))
                                    (rule "times_zero_1" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=add(Z(5(5(2(#)))), mul(quotient_29, Z(6(5(2(#))))))") (inst "elimGcdLeftDiv=l_21") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "4") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                    (rule "neg_literal" (formula "4") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_exactShadow0" (formula "6") (ifseqformula "8"))
                                    (rule "greater_literals" (formula "6") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "greater_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,1"))
                                    (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=add(mul(quotient_29, Z(6(3(5(5(6(#))))))),
    mul(div(quotient_29, Z(6(5(2(#))))),
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))") (inst "elimGcdLeftDiv=res_byteArrayToInt") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "6") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "25"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(neglit(5(5(2(#))))), l_21)") (inst "elimGcdLeftDiv=mul(div(quotient_29, Z(6(5(2(#))))),
    Z(6(3(5(5(6(#)))))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "6") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_exactShadow0" (formula "6") (ifseqformula "1"))
                                    (rule "greater_literals" (formula "6") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "greater_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "6") (ifseqformula "4"))
                                    (rule "greater_literals" (formula "6") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "div_axiom" (formula "22") (term "0") (inst "quotient=quotient_30"))
                                    (rule "equal_literals" (formula "22") (term "0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "qeq_literals" (formula "22") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1,1,1"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "24") (term "1"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                    (rule "add_literals" (formula "24") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                    (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "22"))
                                    (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "22"))
                                    (rule "applyEqRigid" (formula "11") (term "0,0,0") (ifseqformula "22"))
                                    (rule "inEqSimp_homoInEq1" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
                                    (rule "applyEqRigid" (formula "38") (term "0,0,1,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm1" (formula "38") (term "1"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "12") (term "0,0,1,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm0" (formula "12") (term "1"))
                                    (rule "applyEqRigid" (formula "40") (term "0,0,1,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm1" (formula "40") (term "1"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                    (rule "applyEqRigid" (formula "46") (term "0,0,1,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm0" (formula "46") (term "1"))
                                    (rule "applyEqRigid" (formula "32") (term "0,0,1,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm1" (formula "32") (term "1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                                    (rule "applyEqRigid" (formula "15") (term "0,0,1,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm1" (formula "15") (term "1"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "26") (term "0,0,1,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm0" (formula "26") (term "1"))
                                    (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm0" (formula "26") (term "1"))
                                    (rule "applyEqRigid" (formula "12") (term "1,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm0" (formula "12") (term "1"))
                                    (rule "applyEq" (formula "11") (term "0,1,0,0") (ifseqformula "22"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0,0,0"))
                                    (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm0" (formula "46") (term "1"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0,0,1"))
                                    (rule "applyEqRigid" (formula "38") (term "0,1,0,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "32") (term "0,1,0,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "40") (term "0,1,0,1") (ifseqformula "22"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,1"))
                                    (rule "mul_literals" (formula "24") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulAssoc" (formula "11") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "24"))
                                    (rule "times_zero_1" (formula "5") (term "0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=add(Z(5(3(5(5(6(#)))))),
    mul(quotient_30, Z(6(3(5(5(6(#))))))))") (inst "elimGcdLeftDiv=l_21") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "5") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "neg_literal" (formula "5") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "30"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "24") (term "0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0"))
                                    (rule "add_zero_right" (formula "24") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1"))
                                    (rule "mul_literals" (formula "24") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                    (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcdRightDiv=add(Z(0(#)), mul(quotient_30, Z(6(5(2(#))))))") (inst "elimGcdLeftDiv=quotient_29") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                    (rule "leq_literals" (formula "24") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "add_zero_left" (formula "24") (term "1,1"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulAssoc" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0"))
                                    (rule "leq_literals" (formula "24") (term "0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "26"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1"))
                                    (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=add(add(add(Z(neglit(5(3(5(5(6(#))))))),
            mul(quotient_30,
                Z(neglit(6(3(5(5(6(#))))))))),
        mul(quotient_29, Z(6(5(2(#)))))),
    l_21)") (inst "elimGcdLeftDiv=mul(div(quotient_29, Z(6(5(2(#))))),
    Z(6(3(5(5(6(#)))))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "8") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "leq_literals" (formula "8") (term "0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "27"))
                                    (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "31") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "31") (term "0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0"))
                                    (rule "add_zero_right" (formula "31") (term "0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "31") (inst "elimGcdRightDiv=add(Z(5(5(2(#)))), mul(quotient_30, Z(6(5(2(#))))))") (inst "elimGcdLeftDiv=quotient_29") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                    (rule "neg_literal" (formula "31") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "31") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0"))
                                    (rule "qeq_literals" (formula "31") (term "0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_exactShadow0" (formula "10") (ifseqformula "13"))
                                    (rule "greater_literals" (formula "10") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "greater_literals" (formula "10") (term "0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0"))
                                    (rule "add_zero_right" (formula "10") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1"))
                                    (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=add(add(add(mul(quotient_30,
                Z(6(1(2(7(7(7(6(1(#)))))))))),
            mul(quotient_29, Z(6(3(5(5(6(#)))))))),
        mul(div(quotient_29, Z(6(5(2(#))))),
            Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))),
    mul(div(quotient_30, Z(6(5(2(#))))),
        Z(neglit(6(9(2(7(6(9(4(9(2(4(#))))))))))))))") (inst "elimGcdLeftDiv=res_byteArrayToInt") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "10") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "10") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "28"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                    (rule "mul_literals" (formula "23") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "23") (ifseqformula "30"))
                                    (rule "greater_literals" (formula "23") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "times_zero_1" (formula "23") (term "1,0"))
                                    (rule "leq_literals" (formula "23") (term "0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "32"))
                                    (rule "times_zero_1" (formula "35") (term "0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                    (rule "mul_literals" (formula "35") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "29"))
                                    (rule "greater_literals" (formula "35") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "times_zero_1" (formula "35") (term "1,0"))
                                    (rule "leq_literals" (formula "35") (term "0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "28"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "10") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                                    (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=add(add(add(Z(neglit(5(3(5(5(6(#))))))),
            mul(quotient_29, Z(6(5(2(#)))))),
        l_21),
    mul(div(quotient_29, Z(6(5(2(#))))),
        Z(neglit(6(3(5(5(6(#)))))))))") (inst "elimGcdLeftDiv=mul(div(quotient_30, Z(6(5(2(#))))),
    Z(6(1(2(7(7(7(6(1(#))))))))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "10") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "inEqSimp_exactShadow0" (formula "8") (ifseqformula "1"))
                                    (rule "greater_literals" (formula "8") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "greater_literals" (formula "8") (term "0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "8") (ifseqformula "5"))
                                    (rule "greater_literals" (formula "8") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "35"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "11") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1"))
                                    (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=add(add(add(Z(neglit(5(5(2(#))))),
            mul(quotient_30, Z(6(3(5(5(6(#)))))))),
        l_21),
    mul(div(quotient_29, Z(6(5(2(#))))),
        Z(neglit(6(3(5(5(6(#)))))))))") (inst "elimGcdLeftDiv=mul(div(quotient_30, Z(6(5(2(#))))),
    Z(6(1(2(7(7(7(6(1(#))))))))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "11") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0"))
                                    (rule "leq_literals" (formula "11") (term "0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_exactShadow0" (formula "11") (ifseqformula "2"))
                                    (rule "greater_literals" (formula "11") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "greater_literals" (formula "11") (term "0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1"))
                                    (rule "mul_literals" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                    (rule "inEqSimp_subsumption5" (formula "11") (ifseqformula "7"))
                                    (rule "greater_literals" (formula "11") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "greater_literals" (formula "11") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "0,0"))
                                    (rule "qeq_literals" (formula "11") (term "0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "inEqSimp_exactShadow0" (formula "10") (ifseqformula "2"))
                                    (rule "greater_literals" (formula "10") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "greater_literals" (formula "10") (term "0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                                    (rule "inEqSimp_subsumption5" (formula "8") (ifseqformula "10"))
                                    (rule "greater_literals" (formula "8") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "greater_literals" (formula "8") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=add(add(add(Z(neglit(5(3(5(5(6(#))))))),
            mul(quotient_30,
                Z(neglit(6(3(5(5(6(#))))))))),
        mul(quotient_29, Z(6(5(2(#)))))),
    l_21)") (inst "elimGcdLeftDiv=mul(div(quotient_29, Z(6(5(2(#))))),
    Z(6(3(5(5(6(#)))))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1,0"))
                                    (rule "leq_literals" (formula "9") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_exactShadow0" (formula "9") (ifseqformula "1"))
                                    (rule "greater_literals" (formula "9") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "greater_literals" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "9") (ifseqformula "5"))
                                    (rule "greater_literals" (formula "9") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "0,0"))
                                    (rule "qeq_literals" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_31"))
                                    (rule "equal_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "qeq_literals" (formula "3") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1,1,1"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "polySimp_addComm1" (formula "5") (term "1"))
                                    (rule "add_literals" (formula "5") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "applyEqRigid" (formula "19") (term "0,1,0,0,0") (ifseqformula "3"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                    (rule "applyEqRigid" (formula "17") (term "0,1,0,0,0") (ifseqformula "3"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                    (rule "applyEqRigid" (formula "18") (term "0,1,0,0,0") (ifseqformula "3"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                    (rule "applyEqRigid" (formula "16") (term "0,1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1"))
                                    (rule "applyEqRigid" (formula "16") (term "0,1,0,0,0") (ifseqformula "3"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "6"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "applyEq" (formula "42") (term "0,1,0,0,1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm0" (formula "42") (term "0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "42") (term "1"))
                                    (rule "applyEq" (formula "43") (term "0,1,0,0,1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "43") (term "1"))
                                    (rule "polySimp_addComm0" (formula "43") (term "0,0,1,0,1"))
                                    (rule "applyEq" (formula "48") (term "0,1,0,0,1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm0" (formula "48") (term "0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "48") (term "1"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                    (rule "applyEqRigid" (formula "50") (term "0,1,0,0,1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "50") (term "1"))
                                    (rule "polySimp_addComm0" (formula "50") (term "0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,1"))
                                    (rule "applyEq" (formula "22") (term "0,1,0,0,1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "22") (term "1"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0,1"))
                                    (rule "applyEq" (formula "54") (term "0,1,0,0,1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "54") (term "1"))
                                    (rule "polySimp_addComm0" (formula "54") (term "0,0,1,0,1"))
                                    (rule "applyEq" (formula "23") (term "0,1,0,0,1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                    (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0,0,0,0"))
                                    (rule "applyEqRigid" (formula "18") (term "0,1,0") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0,0"))
                                    (rule "applyEqRigid" (formula "17") (term "0,1,0") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                    (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "22") (term "1"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,1"))
                                    (rule "applyEqRigid" (formula "48") (term "0,1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "48") (term "1"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "48") (term "0,0,0,0,0,0,1"))
                                    (rule "applyEqRigid" (formula "50") (term "0,1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "50") (term "1"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "50") (term "0,0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "42") (term "1"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "42") (term "0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "54") (term "1"))
                                    (rule "polySimp_addComm0" (formula "54") (term "0,1"))
                                    (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "43") (term "1"))
                                    (rule "polySimp_addComm0" (formula "43") (term "0,1"))
                                    (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "23") (term "1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "5"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "15") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "15") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1"))
                                    (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=add(add(add(add(Z(0(#)),
                mul(quotient_31, Z(neglit(1(#))))),
            mul(quotient_30, Z(6(3(5(5(6(#)))))))),
        mul(quotient_29, Z(6(5(2(#)))))),
    mul(div(quotient_29, Z(6(5(2(#))))),
        Z(neglit(6(3(5(5(6(#)))))))))") (inst "elimGcdLeftDiv=mul(div(quotient_30, Z(6(5(2(#))))),
    Z(6(1(2(7(7(7(6(1(#))))))))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "15") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,0,1,1"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,0,1,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "15") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "5"))
                                    (rule "times_zero_1" (formula "9") (term "0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_31") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "9") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "41"))
                                    (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=add(add(Z(5(5(2(#)))),
        mul(quotient_31, Z(neglit(1(#))))),
    mul(quotient_29, Z(6(5(2(#))))))") (inst "elimGcdLeftDiv=l_21") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "4") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "neg_literal" (formula "4") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                    (rule "mul_literals" (formula "13") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                                    (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=add(add(Z(0(#)), mul(quotient_31, Z(neglit(1(#))))),
    mul(quotient_29, Z(6(5(2(#))))))") (inst "elimGcdLeftDiv=mul(div(quotient_29, Z(6(5(2(#))))),
    Z(6(3(5(5(6(#)))))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "13") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,1,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "23") (inst "elimGcdRightDiv=add(add(add(add(add(Z(0(#)),
                    mul(quotient_30,
                        Z(neglit(6(3(5(5(6(#))))))))),
                mul(quotient_29, Z(neglit(6(5(2(#))))))),
            mul(l_21, Z(neglit(1(#))))),
        mul(div(quotient_29, Z(6(5(2(#))))),
            Z(6(3(5(5(6(#)))))))),
    mul(div(quotient_30, Z(6(5(2(#))))),
        Z(6(1(2(7(7(7(6(1(#)))))))))))") (inst "elimGcdLeftDiv=mul(div(add(mul(quotient_31, Z(neglit(1(#)))),
            mul(l_21, Z(neglit(1(#))))),
        Z(6(5(2(#))))),
    Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                    (rule "leq_literals" (formula "23") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                    (rule "neg_literal" (formula "23") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,0,1,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "qeq_literals" (formula "23") (term "0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "44"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "24") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "39"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "25") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "45") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "45") (term "0"))
                                    (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "45") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1"))
                                    (rule "mul_literals" (formula "45") (term "0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "0,1"))
                                    (rule "mul_literals" (formula "39") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "41"))
                                    (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "7"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "23") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "43"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "7"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "45"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "53"))
                                    (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "27") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "54"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "7"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "42") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1"))
                                    (rule "mul_literals" (formula "42") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                    (rule "inEqSimp_contradInEq3" (formula "42") (ifseqformula "8"))
                                    (rule "greater_literals" (formula "42") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "polySimp_rightDist" (formula "42") (term "0"))
                                    (rule "mul_literals" (formula "42") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "42"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "42") (term "0"))
                                    (rule "add_literals" (formula "42") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "42") (term "1,0"))
                                    (rule "add_zero_right" (formula "42") (term "0"))
                                    (rule "leq_literals" (formula "42"))
                                    (rule "closeFalse" (formula "42"))
                                 )
                              )
                              (branch "value / 65536 ≥ 0 FALSE"
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "polySimp_homoEq" (formula "19"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0"))
                                 (rule "inEqSimp_leqRight" (formula "32"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "30"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "30"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_leqRight" (formula "31"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "32"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "19"))
                                 (rule "polySimp_homoEq" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                 (rule "applyEq" (formula "17") (term "0") (ifseqformula "32"))
                                 (rule "polySimp_homoEq" (formula "17"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "20"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "18"))
                                 (rule "polySimp_homoEq" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "26"))
                                 (rule "polySimp_homoEq" (formula "20"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                 (rule "applyEq" (formula "34") (term "1") (ifseqformula "10"))
                                 (rule "applyEq" (formula "32") (term "1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "26") (term "1") (ifseqformula "9"))
                                 (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "18"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                 (rule "applyEq" (formula "20") (term "0,0,0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "32"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                                 (rule "applyEq" (formula "24") (term "0,1,0,0,0,0,0") (ifseqformula "10"))
                                 (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "0,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_sepNegMonomial" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                 (rule "polySimp_sepNegMonomial" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "28"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "28"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "1"))
                                 (rule "add_literals" (formula "18") (term "1,1,1"))
                                 (rule "times_zero_1" (formula "18") (term "1,1"))
                                 (rule "add_zero_right" (formula "18") (term "1"))
                                 (rule "polySimp_sepNegMonomial" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                 (rule "apply_eq_monomials" (formula "24") (term "0") (ifseqformula "30"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                 (rule "polySimp_homoEq" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "24") (term "1,1,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,1,1,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "24") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "24"))
                                 (rule "polySimp_homoEq" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "20") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0,0"))
                                 (rule "apply_eq_monomials" (formula "24") (term "1,1") (ifseqformula "28"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "24") (term "1,1"))
                                 (rule "add_literals" (formula "24") (term "1,1,1,1"))
                                 (rule "times_zero_1" (formula "24") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "24") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "24") (term "1"))
                                 (rule "add_literals" (formula "24") (term "1,1,1"))
                                 (rule "times_zero_1" (formula "24") (term "1,1"))
                                 (rule "add_zero_right" (formula "24") (term "1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "24"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "5") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "30"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "polySimp_sepNegMonomial" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                 (rule "apply_eq_monomials" (formula "20") (term "0") (ifseqformula "28"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_homoEq" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "20") (term "1,1,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "20") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0"))
                                 (rule "add_zero_right" (formula "20") (term "0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0"))
                                 (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "20"))
                                 (rule "applyEqRigid" (formula "9") (term "1") (ifseqformula "20"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "newSym_eq" (formula "30") (inst "l=l_16") (inst "newSymDef=add(mul(res_unsign_1, Z(0(#))),
    mul(jdiv(value, Z(6(5(2(#))))), Z(0(#))))"))
                                 (rule "times_zero_1" (formula "30") (term "1,1,1"))
                                 (rule "times_zero_1" (formula "30") (term "0,1,1"))
                                 (rule "add_zero_left" (formula "30") (term "1,1"))
                                 (rule "add_zero_right" (formula "30") (term "1"))
                                 (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                                 (rule "polySimp_homoEq" (formula "31"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                                 (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "30"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1"))
                                 (rule "polySimp_sepPosMonomial" (formula "31"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,1"))
                                 (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "31"))
                                 (rule "polySimp_homoEq" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "31"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "1"))
                                 (rule "polySimp_pullOutFactor0" (formula "19") (term "0,1"))
                                 (rule "add_literals" (formula "19") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "0,1"))
                                 (rule "add_zero_left" (formula "19") (term "1"))
                                 (rule "polySimp_sepPosMonomial" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "24"))
                                 (rule "polySimp_homoEq" (formula "31"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0"))
                                 (rule "applyEq" (formula "28") (term "0,0,0,0,0") (ifseqformula "24"))
                                 (rule "polySimp_homoEq" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "24"))
                                 (rule "polySimp_homoEq" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "24"))
                                 (rule "polySimp_homoEq" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,0,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "35") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                 (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "24"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "applyEq" (formula "28") (term "0,0,1,0") (ifseqformula "24"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "polySimp_sepPosMonomial" (formula "31"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                 (rule "polySimp_mulAssoc" (formula "31") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,1"))
                                 (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "31"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "30") (term "0,0,0"))
                                 (rule "add_literals" (formula "30") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0"))
                                 (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "31"))
                                 (rule "applyEqRigid" (formula "19") (term "1") (ifseqformula "31"))
                                 (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1"))
                                 (rule "polySimp_mulAssoc" (formula "9") (term "0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1"))
                                 (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                 (rule "polySimp_mulAssoc" (formula "26") (term "0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1"))
                                 (rule "applyEq" (formula "20") (term "0,1,1") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                                 (rule "polySimp_mulAssoc" (formula "20") (term "0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                                 (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "31"))
                                 (rule "polySimp_sepPosMonomial" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_sepNegMonomial" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                 (rule "elimGcdEq" (formula "35") (inst "elimGcdRightDiv=add(l_16, mul(res_unsign, Z(neglit(6(5(2(#)))))))") (inst "elimGcdLeftDiv=res_unsign_0") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                 (rule "add_literals" (formula "35") (term "1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,0"))
                                 (rule "add_literals" (formula "35") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "0,0,0"))
                                 (rule "leq_literals" (formula "35") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,1"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,1"))
                                 (rule "add_literals" (formula "35") (term "1,0,0,1"))
                                 (rule "times_zero_1" (formula "35") (term "0,0,1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "0,0"))
                                 (rule "qeq_literals" (formula "35") (term "0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(1(#))))"))
                                 (rule "equal_literals" (formula "3") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "polyDiv_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(1(#))))"))
                                 (rule "equal_literals" (formula "16") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1"))
                                 (rule "polyDiv_pullOut" (formula "28") (term "0,0,0,0") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(1(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,2,0,0,0,0"))
                                 (rule "equal_literals" (formula "28") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_homoEq" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "17") (term "0,0,0") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(1(#))))"))
                                 (rule "equal_literals" (formula "17") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1,0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,0"))
                                 (rule "polyDiv_pullOut" (formula "17") (term "1,1") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(1(#))))"))
                                 (rule "equal_literals" (formula "17") (term "0,1,1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,1,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,1,1,1"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1,1,1"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1,1,1"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "1"))
                                 (rule "polySimp_pullOutFactor0" (formula "17") (term "0,1"))
                                 (rule "add_literals" (formula "17") (term "1,0,1"))
                                 (rule "polyDiv_pullOut" (formula "28") (term "0") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(1(#))))"))
                                 (rule "equal_literals" (formula "28") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_homoEq" (formula "28"))
                                 (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor3b" (formula "28") (term "0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "3") (term "1,1") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(5(2(#))))))"))
                                 (rule "equal_literals" (formula "3") (term "0,1,1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,1,1"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                 (rule "polyDiv_pullOut" (formula "3") (term "1,0,1") (inst "polyDivCoeff=l_16"))
                                 (rule "equal_literals" (formula "3") (term "0,1,0,1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "3") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0,1,1,0,1"))
                                 (rule "add_literals" (formula "3") (term "1,0,0,1,1,0,1"))
                                 (rule "times_zero_1" (formula "3") (term "0,0,1,1,0,1"))
                                 (rule "add_zero_left" (formula "3") (term "0,1,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "polyDiv_pullOut" (formula "28") (term "0,0,0,0,0") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(5(2(#))))))"))
                                 (rule "equal_literals" (formula "28") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,0"))
                                 (rule "polyDiv_pullOut" (formula "28") (term "0,0,0,0,0,0") (inst "polyDivCoeff=l_16"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,2,0,0,0,0,0,0"))
                                 (rule "equal_literals" (formula "28") (term "0,0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "1,0,0,0,1,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,0,0"))
                                 (rule "polyDiv_pullOut" (formula "28") (term "0,0") (inst "polyDivCoeff=res_unsign"))
                                 (rule "equal_literals" (formula "28") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0"))
                                 (rule "polySimp_homoEq" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "28") (term "0,1,0,1") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(5(2(#))))))"))
                                 (rule "equal_literals" (formula "28") (term "0,0,1,0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,1,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "28") (term "0,1"))
                                 (rule "polyDiv_pullOut" (formula "28") (term "0,0,1") (inst "polyDivCoeff=l_16"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,2,0,0,1"))
                                 (rule "equal_literals" (formula "28") (term "0,0,0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "28") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1,1,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,1,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,0,0,1,1,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "0,0,1,1,0,1"))
                                 (rule "add_zero_left" (formula "28") (term "0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0,1"))
                                 (rule "inEqSimp_exactShadow2" (formula "1") (ifseqformula "14"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "greater_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "newSym_eq" (formula "18") (inst "l=l_17") (inst "newSymDef=add(mul(res_unsign, Z(0(#))),
    mul(div(add(add(mul(l_16, Z(6(3(5(5(6(#))))))),
                    res_byteArrayToInt),
                mul(res_unsign_0,
                    Z(neglit(6(3(5(5(6(#))))))))),
            Z(6(1(2(7(7(7(6(1(#)))))))))),
        Z(0(#))))"))
                                 (rule "times_zero_1" (formula "18") (term "0,1,1"))
                                 (rule "times_zero_1" (formula "18") (term "1,1,1"))
                                 (rule "add_zero_left" (formula "18") (term "1,1"))
                                 (rule "add_zero_right" (formula "18") (term "1"))
                                 (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "18"))
                                 (rule "polySimp_homoEq" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                 (rule "applyEqRigid" (formula "18") (term "1,0,0") (ifseqformula "19"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,0,0"))
                                 (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "19"))
                                 (rule "inEqSimp_homoInEq1" (formula "17"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "18") (term "0") (inst "polyDivCoeff=l_17"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "18") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "polySimp_homoEq" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,1,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0,1,1,1,0"))
                                 (rule "add_literals" (formula "18") (term "1,0,0,1,1,1,0"))
                                 (rule "times_zero_1" (formula "18") (term "0,0,1,1,1,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                 (rule "polySimp_pullOutFactor1" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0"))
                                 (rule "polySimp_invertEq" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "times_zero_2" (formula "18") (term "1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                 (rule "newSym_eq" (formula "30") (inst "l=l_18") (inst "newSymDef=add(add(mul(l_16, Z(0(#))),
        mul(div(res_byteArrayToInt,
                Z(6(3(5(5(6(#))))))),
            Z(0(#)))),
    mul(res_unsign_0, Z(0(#))))"))
                                 (rule "times_zero_1" (formula "30") (term "0,0,1,1"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,1,1"))
                                 (rule "times_zero_1" (formula "30") (term "1,1,1"))
                                 (rule "add_zero_left" (formula "30") (term "0,1,1"))
                                 (rule "add_zero_left" (formula "30") (term "1,1"))
                                 (rule "add_zero_right" (formula "30") (term "1"))
                                 (rule "applyEqRigid" (formula "31") (term "0,0") (ifseqformula "30"))
                                 (rule "polySimp_homoEq" (formula "31"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "31"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "31") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1"))
                                 (rule "newSym_eq" (formula "31") (inst "l=l_19") (inst "newSymDef=add(add(mul(l_18, Z(8(2(1(#))))), mul(l_16, Z(0(#)))),
    mul(div(res_byteArrayToInt, Z(6(3(5(5(6(#))))))),
        Z(0(#))))"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,1,1"))
                                 (rule "times_zero_1" (formula "31") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "31") (term "0,1,1"))
                                 (rule "add_zero_right" (formula "31") (term "1,1"))
                                 (rule "applyEq" (formula "39") (term "0") (ifseqformula "31"))
                                 (rule "polySimp_homoEq" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                 (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                 (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "31"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "31"))
                                 (rule "polySimp_homoEq" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "31"))
                                 (rule "applyEqRigid" (formula "6") (term "0,1,0,0,0") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                 (rule "applyEqRigid" (formula "15") (term "0,0") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                                 (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "31"))
                                 (rule "polySimp_homoEq" (formula "32"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                 (rule "applyEqRigid" (formula "34") (term "0,1,0,0,0") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,0"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,0,1,1") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,1,0,1"))
                                 (rule "applyEq" (formula "10") (term "0,1,0,0,1,1") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,1,0,1"))
                                 (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "26") (term "0,0,1"))
                                 (rule "applyEqRigid" (formula "35") (term "0,1,0,1,1") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1,1"))
                                 (rule "applyEqRigid" (formula "20") (term "1") (ifseqformula "31"))
                                 (rule "applyEq" (formula "8") (term "1") (ifseqformula "31"))
                                 (rule "applyEq" (formula "21") (term "0,1,0,1,1") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,1"))
                                 (rule "applyEq" (formula "28") (term "0,1,0,0,1,1") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,1,0,1"))
                                 (rule "applyEqRigid" (formula "9") (term "0,1,0,1,1") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,1"))
                                 (rule "applyEqRigid" (formula "6") (term "0,1,0") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1"))
                                 (rule "applyEqRigid" (formula "22") (term "0,1,1") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                                 (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "39"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                 (rule "polySimp_sepPosMonomial" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                 (rule "polySimp_mulAssoc" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,1"))
                                 (rule "applyEqRigid" (formula "30") (term "0,1,0,0") (ifseqformula "32"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "30") (term "0,0,0"))
                                 (rule "add_literals" (formula "30") (term "1,0,0,0"))
                                 (rule "applyEqRigid" (formula "4") (term "1,0,0") (ifseqformula "32"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "19") (term "1,1") (inst "polyDivCoeff=mul(l_18, Z(neglit(1(#))))"))
                                 (rule "equal_literals" (formula "19") (term "0,1,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,1,1,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,1,1,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,1"))
                                 (rule "newSym_eq" (formula "19") (inst "l=l_20") (inst "newSymDef=add(add(mul(l_18, Z(neglit(1(#)))),
        mul(l_17, Z(neglit(8(2(1(#))))))),
    mul(div(add(add(add(mul(l_19,
                            Z(neglit(6(3(5(5(6(#)))))))),
                        mul(l_18,
                            Z(8(0(6(8(8(3(8(#)))))))))),
                    mul(l_16, Z(6(3(5(5(6(#)))))))),
                res_byteArrayToInt),
            Z(6(1(2(7(7(7(6(1(#)))))))))),
        Z(0(#))))"))
                                 (rule "times_zero_1" (formula "19") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "19") (term "1,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "1"))
                                 (rule "applyEqRigid" (formula "40") (term "0,0") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "40"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "40") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "6") (term "1"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0,1"))
                                 (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                 (rule "applyEqRigid" (formula "15") (term "0,0") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "15") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0,0"))
                                 (rule "applyEqRigid" (formula "35") (term "0,1,0,0,0") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0,0,0,0"))
                                 (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "19"))
                                 (rule "polySimp_homoEq" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,0,0"))
                                 (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "19"))
                                 (rule "inEqSimp_homoInEq1" (formula "17"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0"))
                                 (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "6") (term "0,1,0,0,0") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                 (rule "applyEqRigid" (formula "10") (term "0,1,0,0,1,1") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,1,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,0,1,0,1"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0,0,1,0,1"))
                                 (rule "applyEqRigid" (formula "27") (term "0,1,1") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,1"))
                                 (rule "applyEqRigid" (formula "22") (term "0,1,0,1,1") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "0,1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0,1,1"))
                                 (rule "applyEq" (formula "29") (term "0,1,0,0,1,1") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,0,1,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,0,0,1,0,1"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0,0,1,0,1"))
                                 (rule "applyEq" (formula "38") (term "1") (ifseqformula "19"))
                                 (rule "applyEqRigid" (formula "23") (term "0,1,0,0,1,1") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,1,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,0,1,0,1"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0,0,1,0,1"))
                                 (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "19"))
                                 (rule "applyEq" (formula "36") (term "0,1,0,1,1") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,0,1,1"))
                                 (rule "applyEqRigid" (formula "9") (term "0,1,0,1,1") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,0,1,1"))
                                 (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0,1"))
                                 (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0,1"))
                                 (rule "applyEq" (formula "29") (term "0,1,1") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "40"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0,1"))
                                 (rule "polyDiv_pullOut" (formula "18") (term "0") (inst "polyDivCoeff=mul(l_17, Z(neglit(1(#))))"))
                                 (rule "equal_literals" (formula "18") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0"))
                                 (rule "polySimp_sepPosMonomial" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1"))
                                 (rule "inEqSimp_exactShadow2" (formula "3") (ifseqformula "6"))
                                 (rule "greater_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_mulAssoc" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1"))
                                 (rule "inEqSimp_exactShadow0" (formula "18") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "greater_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor3" (formula "18") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcdRightDiv=l_20") (inst "elimGcdLeftDiv=l_18") (inst "elimGcd=Z(6(5(2(#))))"))
                                 (rule "neg_literal" (formula "18") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "18") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_exactShadow0" (formula "19") (ifseqformula "5"))
                                 (rule "greater_literals" (formula "19") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "greater_literals" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor3b" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=add(add(Z(neglit(1(#))), mul(l_20, Z(2(1(5(#)))))),
    mul(l_19, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(l_18, Z(4(8(3(#)))))") (inst "elimGcd=Z(8(2(1(#))))"))
                                 (rule "leq_literals" (formula "19") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "neg_literal" (formula "19") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_exactShadow0" (formula "2") (ifseqformula "19"))
                                 (rule "greater_literals" (formula "2") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "greater_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(1(#)), mul(l_20, Z(neglit(6(5(2(#)))))))") (inst "elimGcdLeftDiv=l_19") (inst "elimGcd=Z(6(5(2(#))))"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_exactShadow1" (formula "3") (ifseqformula "19"))
                                 (rule "greater_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                 (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "div_axiom" (formula "38") (term "0") (inst "quotient=quotient_28"))
                                 (rule "equal_literals" (formula "38") (term "0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "qeq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "mul_literals" (formula "38") (term "1,1,1"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "polySimp_addComm1" (formula "40") (term "1"))
                                 (rule "add_literals" (formula "40") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "39"))
                                 (rule "inEqSimp_homoInEq1" (formula "40"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0"))
                                 (rule "applyEq" (formula "38") (term "0") (ifseqformula "41"))
                                 (rule "polySimp_homoEq" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                 (rule "polySimp_sepPosMonomial" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "0,1"))
                                 (rule "applyEq" (formula "6") (term "0,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0,1"))
                                 (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                 (rule "polySimp_mulAssoc" (formula "18") (term "0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,1"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                 (rule "applyEqRigid" (formula "1") (term "0,1,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1"))
                                 (rule "applyEq" (formula "48") (term "0") (ifseqformula "38"))
                                 (rule "polySimp_homoEq" (formula "48"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "48") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "48") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "41") (term "0,1,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1"))
                                 (rule "polySimp_mulAssoc" (formula "41") (term "0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "1"))
                                 (rule "polySimp_addComm0" (formula "41") (term "0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "41") (term "1"))
                                 (rule "add_literals" (formula "41") (term "1,1,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,1"))
                                 (rule "add_zero_right" (formula "41") (term "1"))
                                 (rule "applyEqRigid" (formula "6") (term "0,1,0,0,0") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0,0,0"))
                                 (rule "applyEqRigid" (formula "43") (term "1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "43") (term "0,1,0,0,0,0") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "43") (term "0,0,0,0,0,0,0"))
                                 (rule "applyEqRigid" (formula "9") (term "0,1,0,0,0,0") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,0,0,0"))
                                 (rule "applyEqRigid" (formula "9") (term "0,1,0,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,1"))
                                 (rule "applyEqRigid" (formula "25") (term "0,1,0,0,0") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                 (rule "applyEq" (formula "44") (term "0,1,0,0,1,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "44") (term "0,0,0,0,0,1,1"))
                                 (rule "applyEq" (formula "32") (term "0,1,0,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,1"))
                                 (rule "applyEq" (formula "27") (term "0,0,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "0,1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1"))
                                 (rule "polySimp_mulAssoc" (formula "27") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1"))
                                 (rule "applyEqRigid" (formula "28") (term "0,1,0,0,0,1,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0,1,1"))
                                 (rule "applyEqRigid" (formula "12") (term "0,1,0,0,1,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,0,1,1"))
                                 (rule "applyEqRigid" (formula "27") (term "0,1,0,0,1,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0,1,1"))
                                 (rule "applyEqRigid" (formula "44") (term "0,0,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "0,1"))
                                 (rule "polySimp_rightDist" (formula "44") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1"))
                                 (rule "polySimp_mulAssoc" (formula "44") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0,0,1"))
                                 (rule "applyEq" (formula "34") (term "0,1,0,0,0,1,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "34") (term "1,1,0,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,0,0,1,1"))
                                 (rule "applyEqRigid" (formula "12") (term "0,0,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                                 (rule "polySimp_mulAssoc" (formula "12") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
                                 (rule "applyEqRigid" (formula "13") (term "0,1,0,0,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,0,1"))
                                 (rule "applyEqRigid" (formula "28") (term "0,1,0,0,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,1"))
                                 (rule "applyEq" (formula "34") (term "0,1,0,0,1") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "34") (term "1,1,0,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "48"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1"))
                                 (rule "mul_literals" (formula "40") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "40"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                 (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=add(add(add(Z(0(#)), mul(l_20, Z(8(2(1(#)))))),
        mul(l_19, Z(neglit(1(#))))),
    mul(l_18, Z(neglit(8(2(1(#)))))))") (inst "elimGcdLeftDiv=mul(l_17, Z(4(8(3(6(1(#)))))))") (inst "elimGcd=Z(2(7(0(1(3(1(#)))))))"))
                                 (rule "leq_literals" (formula "1") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "10"))
                                 (rule "greater_literals" (formula "7") (term "0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "41"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "19") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1"))
                                 (rule "inEqSimp_contradInEq2" (formula "19") (ifseqformula "8"))
                                 (rule "greater_literals" (formula "19") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "greater_literals" (formula "19") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0"))
                                 (rule "leq_literals" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                           )
                           (branch "value / 16777216 ≥ 0 FALSE"
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                              (rule "eqSymm" (formula "33"))
                              (rule "eqSymm" (formula "1"))
                              (rule "polySimp_homoEq" (formula "18"))
                              (rule "polySimp_addComm1" (formula "18") (term "0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                              (rule "inEqSimp_leqRight" (formula "29"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "30"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "30"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "30"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_leqRight" (formula "31"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "17"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "18"))
                              (rule "polySimp_homoEq" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0"))
                              (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "19"))
                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "31"))
                              (rule "polySimp_homoEq" (formula "16"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "25"))
                              (rule "polySimp_homoEq" (formula "19"))
                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "31"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "25"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "27"))
                              (rule "polySimp_homoEq" (formula "17"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "18"))
                              (rule "applyEq" (formula "31") (term "1") (ifseqformula "6"))
                              (rule "applyEq" (formula "33") (term "1") (ifseqformula "10"))
                              (rule "applyEq" (formula "27") (term "1") (ifseqformula "7"))
                              (rule "applyEq" (formula "25") (term "1") (ifseqformula "9"))
                              (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "18"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "6"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                              (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "27"))
                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                              (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "31"))
                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                              (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "23") (term "0,1,0,0,0") (ifseqformula "10"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1"))
                              (rule "polySimp_rightDist" (formula "29") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,1"))
                              (rule "polySimp_sepPosMonomial" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1"))
                              (rule "polySimp_rightDist" (formula "16") (term "1"))
                              (rule "polySimp_mulAssoc" (formula "16") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "16") (term "0,1"))
                              (rule "polySimp_sepNegMonomial" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "polySimp_sepNegMonomial" (formula "23"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                              (rule "apply_eq_monomials" (formula "23") (term "0") (ifseqformula "29"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                              (rule "polySimp_homoEq" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "23") (term "1,1,0"))
                              (rule "add_literals" (formula "23") (term "1,1,1,1,0"))
                              (rule "times_zero_1" (formula "23") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "23") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "23"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "19"))
                              (rule "polySimp_homoEq" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                              (rule "add_literals" (formula "23") (term "1,1,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0"))
                              (rule "add_zero_right" (formula "23") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "23") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "23") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1"))
                              (rule "polySimp_mulAssoc" (formula "23") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "23"))
                              (rule "applyEq" (formula "9") (term "1") (ifseqformula "23"))
                              (rule "applyEq" (formula "25") (term "1") (ifseqformula "23"))
                              (rule "applyEq" (formula "19") (term "0,0,1") (ifseqformula "23"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq0" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0"))
                              (rule "add_zero_right" (formula "5") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "newSym_eq" (formula "17") (inst "l=l_11") (inst "newSymDef=add(mul(res_unsign_0, Z(0(#))),
    mul(jdiv(value, Z(6(3(5(5(6(#))))))), Z(0(#))))"))
                              (rule "times_zero_1" (formula "17") (term "0,1,1"))
                              (rule "times_zero_1" (formula "17") (term "1,1,1"))
                              (rule "add_zero_left" (formula "17") (term "1,1"))
                              (rule "add_zero_right" (formula "17") (term "1"))
                              (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "17"))
                              (rule "polySimp_homoEq" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                              (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                              (rule "newSym_eq" (formula "30") (inst "l=l_12") (inst "newSymDef=add(mul(res_unsign_1, Z(0(#))),
    mul(jdiv(value, Z(6(5(2(#))))), Z(0(#))))"))
                              (rule "times_zero_1" (formula "30") (term "0,1,1"))
                              (rule "times_zero_1" (formula "30") (term "1,1,1"))
                              (rule "add_zero_left" (formula "30") (term "1,1"))
                              (rule "add_zero_right" (formula "30") (term "1"))
                              (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                              (rule "polySimp_homoEq" (formula "31"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "31") (term "0"))
                              (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                              (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "30"))
                              (rule "polySimp_addComm0" (formula "19") (term "1"))
                              (rule "polySimp_sepPosMonomial" (formula "31"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1"))
                              (rule "polySimp_rightDist" (formula "31") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,1"))
                              (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "31"))
                              (rule "polySimp_homoEq" (formula "20"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0"))
                              (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                              (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "31"))
                              (rule "polySimp_addAssoc" (formula "19") (term "1"))
                              (rule "polySimp_pullOutFactor0" (formula "19") (term "0,1"))
                              (rule "add_literals" (formula "19") (term "1,0,1"))
                              (rule "times_zero_1" (formula "19") (term "0,1"))
                              (rule "add_zero_left" (formula "19") (term "1"))
                              (rule "polySimp_sepPosMonomial" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1"))
                              (rule "polySimp_rightDist" (formula "20") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "20") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "20") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1"))
                              (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "16") (term "0,0,0,0,0") (ifseqformula "20"))
                              (rule "polySimp_homoEq" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "35") (term "0") (ifseqformula "20"))
                              (rule "polySimp_homoEq" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "0,0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "35") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                              (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "35") (term "0,0,0"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "20"))
                              (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "20"))
                              (rule "polySimp_homoEq" (formula "31"))
                              (rule "polySimp_addComm1" (formula "31") (term "0"))
                              (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "20"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1"))
                              (rule "polySimp_rightDist" (formula "35") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "0,1"))
                              (rule "polySimp_sepPosMonomial" (formula "31"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1"))
                              (rule "polySimp_rightDist" (formula "31") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                              (rule "polySimp_mulAssoc" (formula "31") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,1"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "31"))
                              (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "31"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "30") (term "0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "0,0,0"))
                              (rule "add_zero_left" (formula "30") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "31"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                              (rule "applyEqRigid" (formula "24") (term "0,1,1") (ifseqformula "31"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                              (rule "polySimp_mulAssoc" (formula "24") (term "0,1,1"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "24") (term "1"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                              (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "31"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                              (rule "polySimp_mulAssoc" (formula "26") (term "0,1,1"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "26") (term "1"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1"))
                              (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "31"))
                              (rule "applyEq" (formula "19") (term "1") (ifseqformula "31"))
                              (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "31"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,1"))
                              (rule "polySimp_mulAssoc" (formula "9") (term "0,1,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "9") (term "1"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1"))
                              (rule "polySimp_sepNegMonomial" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "elimGcdEq" (formula "35") (inst "elimGcdRightDiv=add(l_12, mul(res_unsign, Z(neglit(6(5(2(#)))))))") (inst "elimGcdLeftDiv=res_unsign_0") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                              (rule "add_literals" (formula "35") (term "1,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "35") (term "1,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "35") (term "0,0,0,0,0"))
                              (rule "add_zero_left" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,0"))
                              (rule "add_literals" (formula "35") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "35") (term "0,0,0"))
                              (rule "leq_literals" (formula "35") (term "0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                              (rule "add_literals" (formula "35") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "35") (term "1,0,0"))
                              (rule "add_zero_right" (formula "35") (term "0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0"))
                              (rule "add_literals" (formula "35") (term "1,0,0"))
                              (rule "times_zero_1" (formula "35") (term "0,0"))
                              (rule "qeq_literals" (formula "35") (term "0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                              (rule "add_literals" (formula "35") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "35") (term "1,0,0"))
                              (rule "add_zero_right" (formula "35") (term "0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0"))
                              (rule "add_literals" (formula "35") (term "1,0,0"))
                              (rule "times_zero_1" (formula "35") (term "0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(1(#))))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0"))
                              (rule "equal_literals" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,1,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "polyDiv_pullOut" (formula "16") (term "0,0,0,0") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(1(#))))"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0,0,0,0"))
                              (rule "equal_literals" (formula "16") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,0,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                              (rule "polyDiv_pullOut" (formula "16") (term "0,1,1") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(1(#))))"))
                              (rule "equal_literals" (formula "16") (term "0,0,1,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "16") (term "1,1,1"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,1,1,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,1,1,1,1"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,1,1,1,1"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,1,1,1,1"))
                              (rule "add_zero_right" (formula "16") (term "0,0,1,1,1,1"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                              (rule "polySimp_mulAssoc" (formula "16") (term "0,1,1"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0,1,1"))
                              (rule "polySimp_elimOne" (formula "16") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "16") (term "1"))
                              (rule "polySimp_pullOutFactor3" (formula "16") (term "0,1"))
                              (rule "newSym_eq" (formula "16") (inst "l=l_13") (inst "newSymDef=add(mul(res_unsign, Z(0(#))),
    mul(div(add(add(mul(l_12, Z(6(3(5(5(6(#))))))),
                    res_byteArrayToInt),
                mul(res_unsign_0,
                    Z(neglit(6(3(5(5(6(#))))))))),
            Z(6(1(2(7(7(7(6(1(#)))))))))),
        Z(0(#))))"))
                              (rule "times_zero_1" (formula "16") (term "0,1,1"))
                              (rule "times_zero_1" (formula "16") (term "1,1,1"))
                              (rule "add_zero_left" (formula "16") (term "1,1"))
                              (rule "add_zero_right" (formula "16") (term "1"))
                              (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "16"))
                              (rule "polySimp_homoEq" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0"))
                              (rule "applyEqRigid" (formula "16") (term "0,1,0,0") (ifseqformula "17"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "polyDiv_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=l_13"))
                              (rule "equal_literals" (formula "16") (term "0,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_homoEq" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,1,1,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0,1,1,1,0"))
                              (rule "add_literals" (formula "16") (term "1,0,0,1,1,1,0"))
                              (rule "times_zero_1" (formula "16") (term "0,0,1,1,1,0"))
                              (rule "add_zero_left" (formula "16") (term "0,1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "0,0"))
                              (rule "add_zero_left" (formula "16") (term "0"))
                              (rule "polySimp_invertEq" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "times_zero_2" (formula "16") (term "1"))
                              (rule "polySimp_elimOne" (formula "16") (term "0"))
                              (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "14"))
                              (rule "greater_literals" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "0,0"))
                              (rule "add_zero_left" (formula "4") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "1"))
                              (rule "greater_literals" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "polySimp_mulAssoc" (formula "6") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0,0"))
                              (rule "add_literals" (formula "6") (term "1,0,0,0,0"))
                              (rule "times_zero_1" (formula "6") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "6") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "3") (term "0,0"))
                              (rule "add_zero_left" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_13") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "leq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "5"))
                              (rule "greater_literals" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "0,0"))
                              (rule "add_zero_left" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                              (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "8"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                              (rule "greater_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "times_zero_1" (formula "7") (term "0,0"))
                              (rule "add_zero_left" (formula "7") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "inEqSimp_exactShadow2" (formula "5") (ifseqformula "7"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                              (rule "greater_literals" (formula "5") (term "0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "times_zero_1" (formula "5") (term "0,0"))
                              (rule "add_zero_left" (formula "5") (term "0"))
                              (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                              (rule "leq_literals" (formula "21") (term "0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "jdiv_axiom" (formula "24") (term "0"))
                              (rule "eqSymm" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,0,2,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "0,0,2,0"))
                              (rule "polySimp_mulAssoc" (formula "24") (term "0,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,2,0"))
                              (rule "applyEq" (formula "24") (term "1") (ifseqformula "25"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                              (rule "polyDiv_pullOut" (formula "24") (term "0,2,0") (inst "polyDivCoeff=mul(l_11, Z(neglit(1(#))))"))
                              (rule "equal_literals" (formula "24") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "2,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "1,2,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,1,1,2,0"))
                              (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,1,1,2,0"))
                              (rule "add_literals" (formula "24") (term "1,0,0,1,1,2,0"))
                              (rule "times_zero_1" (formula "24") (term "0,0,1,1,2,0"))
                              (rule "add_zero_left" (formula "24") (term "0,1,1,2,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "2,0"))
                              (rule "polySimp_mulAssoc" (formula "24") (term "0,2,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0,2,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "0,2,0"))
                              (rule "polyDiv_pullOut" (formula "24") (term "1,0") (inst "polyDivCoeff=l_11"))
                              (rule "equal_literals" (formula "24") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,1,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,1,1,0"))
                              (rule "add_literals" (formula "24") (term "1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "24") (term "0,0,1,1,0"))
                              (rule "add_zero_left" (formula "24") (term "0,1,1,0"))
                              (rule "jdiv_axiom" (formula "26") (term "0"))
                              (rule "eqSymm" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,0,2,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,2,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,0,0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,2,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,0,0,0,2,0"))
                              (rule "polySimp_mulAssoc" (formula "26") (term "0,0,0,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,0,0,0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,0,2,0"))
                              (rule "applyEq" (formula "26") (term "1") (ifseqformula "27"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                              (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "polyDiv_pullOut" (formula "26") (term "0") (inst "polyDivCoeff=mul(res_unsign_0, Z(neglit(1(#))))"))
                              (rule "equal_literals" (formula "26") (term "0,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0"))
                              (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0,0"))
                              (rule "polySimp_homoEq" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                              (rule "polySimp_pullOutFactor3b" (formula "26") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1"))
                              (rule "polySimp_rightDist" (formula "26") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                              (rule "polySimp_mulAssoc" (formula "26") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0,1"))
                              (rule "polyDiv_pullOut" (formula "26") (term "1,1") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(6(5(2(#))))))"))
                              (rule "equal_literals" (formula "26") (term "0,1,1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,1,1"))
                              (rule "add_literals" (formula "26") (term "1,1,0,0,1,1"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,1,1"))
                              (rule "add_zero_right" (formula "26") (term "0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "26") (term "1"))
                              (rule "polyDiv_pullOut" (formula "26") (term "1,0,1") (inst "polyDivCoeff=l_12"))
                              (rule "equal_literals" (formula "26") (term "0,1,0,1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "26") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,1,1,0,1"))
                              (rule "polySimp_pullOutFactor0" (formula "26") (term "0,0,1,1,0,1"))
                              (rule "add_literals" (formula "26") (term "1,0,0,1,1,0,1"))
                              (rule "times_zero_1" (formula "26") (term "0,0,1,1,0,1"))
                              (rule "add_zero_left" (formula "26") (term "0,1,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "26") (term "0,0,1"))
                              (rule "newSym_eq" (formula "26") (inst "l=l_14") (inst "newSymDef=add(add(add(mul(l_12, Z(0(#))),
            mul(l_11, Z(neglit(8(2(1(#))))))),
        mul(div(res_byteArrayToInt,
                Z(6(3(5(5(6(#))))))),
            Z(0(#)))),
    mul(res_unsign, Z(neglit(8(2(1(#)))))))"))
                              (rule "times_zero_1" (formula "26") (term "0,0,0,1,1"))
                              (rule "times_zero_1" (formula "26") (term "1,0,1,1"))
                              (rule "add_zero_left" (formula "26") (term "0,0,1,1"))
                              (rule "add_zero_right" (formula "26") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "26") (term "1"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "26"))
                              (rule "applyEqRigid" (formula "11") (term "0,1,0,0") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0"))
                              (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "27") (term "0"))
                              (rule "polySimp_rightDist" (formula "27") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "27") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                              (rule "add_literals" (formula "27") (term "1,1,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0"))
                              (rule "add_zero_right" (formula "27") (term "0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0"))
                              (rule "add_zero_right" (formula "27") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                              (rule "applyEqRigid" (formula "24") (term "0,1,1,0") (ifseqformula "26"))
                              (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "26"))
                              (rule "polySimp_homoEq" (formula "45"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "45") (term "0"))
                              (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "45") (term "0"))
                              (rule "add_literals" (formula "45") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "45") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "25") (term "1,0,0") (ifseqformula "26"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                              (rule "applyEq" (formula "28") (term "0,1,0,0") (ifseqformula "26"))
                              (rule "polySimp_homoEq" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,1,0,0"))
                              (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "10") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "1,1,0"))
                              (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                              (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "20") (term "0"))
                              (rule "polySimp_rightDist" (formula "20") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "20") (term "0"))
                              (rule "add_literals" (formula "20") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0"))
                              (rule "applyEqRigid" (formula "24") (term "0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,0"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                              (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                              (rule "applyEqRigid" (formula "40") (term "0,1,0,0,0") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0"))
                              (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0,0,0"))
                              (rule "applyEqRigid" (formula "24") (term "0,0,0,1,2,0") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,2,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "0,0,1,2,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,1,2,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "0,0,0,1,2,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,2,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0,1,2,0"))
                              (rule "applyEq" (formula "41") (term "0,1,0,1,1") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "41") (term "1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "41") (term "0,1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "41") (term "0,1,1"))
                              (rule "polySimp_addComm1" (formula "41") (term "0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,1"))
                              (rule "add_literals" (formula "41") (term "1,1,0,1,1"))
                              (rule "polySimp_addComm1" (formula "41") (term "0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0,1,1"))
                              (rule "applyEqRigid" (formula "36") (term "0,1,0,0,1,1") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "36") (term "1"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,1,0,1"))
                              (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,0,1,0,1"))
                              (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "26"))
                              (rule "applyEq" (formula "14") (term "0,1,0,1,1") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,1,1"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,1"))
                              (rule "add_literals" (formula "14") (term "1,1,0,1,1"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,1,1"))
                              (rule "applyEqRigid" (formula "34") (term "0,1,0,0,1,1") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "34") (term "1"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,1,0,1"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,0,1,0,1"))
                              (rule "applyEqRigid" (formula "38") (term "1") (ifseqformula "26"))
                              (rule "applyEqRigid" (formula "29") (term "0,1,0,1,1") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "29") (term "0,1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,1,1"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,1,1"))
                              (rule "add_literals" (formula "29") (term "1,1,0,1,1"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,1,1"))
                              (rule "applyEq" (formula "15") (term "0,1,0,0,1,1") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "15") (term "1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,1,0,1"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0,1,0,1"))
                              (rule "applyEqRigid" (formula "30") (term "0,1,1") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "30") (term "1"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "30") (term "1"))
                              (rule "add_literals" (formula "30") (term "1,1,1"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                              (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "26"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                              (rule "applyEqRigid" (formula "36") (term "0,1,1") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "36") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "36") (term "1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "36") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1"))
                              (rule "add_literals" (formula "36") (term "1,1,0,1"))
                              (rule "polySimp_addComm1" (formula "36") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,1"))
                              (rule "applyEqRigid" (formula "34") (term "0,1,1") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "34") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "34") (term "1"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "34") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,1"))
                              (rule "add_literals" (formula "34") (term "1,1,0,1"))
                              (rule "polySimp_addComm1" (formula "34") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,1"))
                              (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "15") (term "1"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1"))
                              (rule "add_literals" (formula "15") (term "1,1,0,1"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,1"))
                              (rule "polySimp_sepPosMonomial" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1"))
                              (rule "polySimp_rightDist" (formula "27") (term "1"))
                              (rule "polySimp_mulComm0" (formula "27") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0,1"))
                              (rule "polySimp_sepNegMonomial" (formula "45"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polyDiv_pullOut" (formula "24") (term "1,1,0") (inst "polyDivCoeff=mul(res_unsign, Z(neglit(1(#))))"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,2,1,1,0"))
                              (rule "equal_literals" (formula "24") (term "0,1,1,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,1,1,0"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
                              (rule "polyDiv_pullOut" (formula "24") (term "1,1,0") (inst "polyDivCoeff=mul(l_11, Z(neglit(1(#))))"))
                              (rule "equal_literals" (formula "24") (term "0,1,1,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,1,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,1,1,1,0"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0,1,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0,1,0"))
                              (rule "add_literals" (formula "24") (term "1,0,0,1,0"))
                              (rule "times_zero_1" (formula "24") (term "0,0,1,0"))
                              (rule "add_zero_left" (formula "24") (term "0,1,0"))
                              (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "10"))
                              (rule "greater_literals" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "0,0"))
                              (rule "add_zero_left" (formula "6") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0,1"))
                              (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "10"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                              (rule "greater_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "times_zero_1" (formula "7") (term "0,0"))
                              (rule "add_zero_left" (formula "7") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "22"))
                              (rule "greater_literals" (formula "8") (term "0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "0,0"))
                              (rule "add_zero_left" (formula "8") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0,0,1"))
                              (rule "inEqSimp_exactShadow2" (formula "14") (ifseqformula "1"))
                              (rule "greater_literals" (formula "14") (term "0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "polySimp_mulAssoc" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "div_axiom" (formula "25") (term "0") (inst "quotient=quotient_25"))
                              (rule "qeq_literals" (formula "25") (term "0,1,1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "equal_literals" (formula "25") (term "0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "mul_literals" (formula "25") (term "1,1,1"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "25"))
                              (rule "polySimp_addComm1" (formula "27") (term "1"))
                              (rule "add_literals" (formula "27") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "27"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,0"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "28"))
                              (rule "eqSymm" (formula "25"))
                              (rule "applyEqRigid" (formula "27") (term "0,1,0,0") (ifseqformula "25"))
                              (rule "times_zero_2" (formula "27") (term "1,0,0"))
                              (rule "add_zero_right" (formula "27") (term "0,0"))
                              (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "25"))
                              (rule "times_zero_2" (formula "26") (term "0,0"))
                              (rule "add_zero_left" (formula "26") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                              (rule "polySimp_elimOne" (formula "27") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "9"))
                              (rule "leq_literals" (formula "27") (term "0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "26"))
                              (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "14") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "14"))
                              (rule "times_zero_2" (formula "14") (term "1,0"))
                              (rule "add_zero_right" (formula "14") (term "0"))
                              (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "13") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "13"))
                              (rule "times_zero_2" (formula "13") (term "1,0"))
                              (rule "add_zero_right" (formula "13") (term "0"))
                              (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "11") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "11"))
                              (rule "times_zero_2" (formula "11") (term "1,0"))
                              (rule "add_zero_right" (formula "11") (term "0"))
                              (rule "applyEq" (formula "29") (term "0,1,0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "29") (term "1,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "29"))
                              (rule "polySimp_addComm1" (formula "29") (term "0"))
                              (rule "applyEqRigid" (formula "30") (term "0,1,0,1,1,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "30") (term "1,0,1,1,0"))
                              (rule "add_zero_right" (formula "30") (term "0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "1,0"))
                              (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "51") (term "0"))
                              (rule "polySimp_homoEq" (formula "51"))
                              (rule "times_zero_2" (formula "51") (term "1,0"))
                              (rule "add_zero_right" (formula "51") (term "0"))
                              (rule "applyEq" (formula "46") (term "0,1,0,0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "46") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "46") (term "0,0,0"))
                              (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "times_zero_2" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "applyEqRigid" (formula "33") (term "0,1,0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "33") (term "1,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "33"))
                              (rule "polySimp_addComm1" (formula "33") (term "0"))
                              (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "9"))
                              (rule "leq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEqRigid" (formula "23") (term "0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "23") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "23"))
                              (rule "times_zero_2" (formula "23") (term "1,0"))
                              (rule "add_zero_right" (formula "23") (term "0"))
                              (rule "applyEq" (formula "29") (term "0,1,0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "29") (term "1,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0"))
                              (rule "applyEq" (formula "28") (term "0,1,0,0,1,2,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "28") (term "1,0,0,1,2,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,1,2,0"))
                              (rule "applyEqRigid" (formula "14") (term "0,1,0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "14") (term "1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0"))
                              (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "26") (term "0,0"))
                              (rule "div_literals" (formula "26") (term "0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "11") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "11"))
                              (rule "applyEq" (formula "26") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "26") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                              (rule "times_zero_2" (formula "26") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "26") (term "0,1,1,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "26") (term "1,1,0"))
                              (rule "add_zero_right" (formula "26") (term "1,0"))
                              (rule "applyEqRigid" (formula "25") (term "0,1,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "25") (term "1,0"))
                              (rule "add_zero_right" (formula "25") (term "0"))
                              (rule "applyEqRigid" (formula "30") (term "0,1,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "30") (term "1,0"))
                              (rule "add_zero_right" (formula "30") (term "0"))
                              (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "applyEq" (formula "36") (term "0,1,0,0,1,1") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "36") (term "1,0,0,1,1"))
                              (rule "add_zero_right" (formula "36") (term "0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "36") (term "1"))
                              (rule "applyEqRigid" (formula "16") (term "0,1,0,1,1") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "16") (term "1,0,1,1"))
                              (rule "add_zero_right" (formula "16") (term "0,1,1"))
                              (rule "applyEq" (formula "38") (term "0,1,0,0,1,1") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "38") (term "1,0,0,1,1"))
                              (rule "add_zero_right" (formula "38") (term "0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "38") (term "1"))
                              (rule "applyEqRigid" (formula "28") (term "0,1,1") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "28") (term "1,1"))
                              (rule "add_zero_right" (formula "28") (term "1"))
                              (rule "applyEq" (formula "31") (term "0,1,0,1,1") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "31") (term "1,0,1,1"))
                              (rule "add_zero_right" (formula "31") (term "0,1,1"))
                              (rule "applyEqRigid" (formula "15") (term "0,1,1") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "15") (term "1,1"))
                              (rule "add_zero_right" (formula "15") (term "1"))
                              (rule "applyEqRigid" (formula "40") (term "0,1,1") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "40") (term "1,1"))
                              (rule "add_zero_right" (formula "40") (term "1"))
                              (rule "applyEq" (formula "32") (term "0,1,1") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "32") (term "1,1"))
                              (rule "add_zero_right" (formula "32") (term "1"))
                              (rule "applyEqRigid" (formula "43") (term "0,1,0,1,1") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "43") (term "1,0,1,1"))
                              (rule "add_zero_right" (formula "43") (term "0,1,1"))
                              (rule "applyEq" (formula "14") (term "1") (ifseqformula "9"))
                              (rule "applyEqRigid" (formula "17") (term "0,1,0,0,1,1") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "17") (term "1,0,0,1,1"))
                              (rule "add_zero_right" (formula "17") (term "0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "17") (term "1"))
                              (rule "applyEq" (formula "45") (term "1") (ifseqformula "9"))
                              (rule "applyEqRigid" (formula "36") (term "0,1,1") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "36") (term "1,1"))
                              (rule "add_zero_right" (formula "36") (term "1"))
                              (rule "applyEq" (formula "38") (term "0,1,1") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "38") (term "1,1"))
                              (rule "add_zero_right" (formula "38") (term "1"))
                              (rule "applyEq" (formula "17") (term "0,1,1") (ifseqformula "9"))
                              (rule "times_zero_2" (formula "17") (term "1,1"))
                              (rule "add_zero_right" (formula "17") (term "1"))
                              (rule "polySimp_sepPosMonomial" (formula "47"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1"))
                              (rule "polySimp_rightDist" (formula "47") (term "1"))
                              (rule "polySimp_mulAssoc" (formula "47") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "47") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "47") (term "0,1"))
                              (rule "polySimp_sepNegMonomial" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0"))
                              (rule "polySimp_sepNegMonomial" (formula "30"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                              (rule "polySimp_elimOne" (formula "30") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "3"))
                              (rule "mul_literals" (formula "2") (term "1,1,0"))
                              (rule "greater_literals" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "leq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "1"))
                              (rule "greater_literals" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "polySimp_mulAssoc" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                              (rule "div_axiom" (formula "24") (term "0") (inst "quotient=quotient_26"))
                              (rule "equal_literals" (formula "24") (term "0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "qeq_literals" (formula "24") (term "0,1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "mul_literals" (formula "24") (term "1,1,1"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "24"))
                              (rule "polySimp_addComm1" (formula "26") (term "1"))
                              (rule "add_literals" (formula "26") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "25"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "27"))
                              (rule "polySimp_homoEq" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,1"))
                              (rule "applyEqRigid" (formula "9") (term "0,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                              (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_mulAssoc" (formula "3") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
                              (rule "applyEq" (formula "40") (term "1") (ifseqformula "24"))
                              (rule "applyEqRigid" (formula "27") (term "0,1,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                              (rule "polySimp_mulAssoc" (formula "27") (term "0,1,1"))
                              (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0,1,1"))
                              (rule "polySimp_elimOne" (formula "27") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "27") (term "1"))
                              (rule "polySimp_addComm0" (formula "27") (term "0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "27") (term "1"))
                              (rule "add_literals" (formula "27") (term "1,1,1"))
                              (rule "times_zero_1" (formula "27") (term "1,1"))
                              (rule "add_zero_right" (formula "27") (term "1"))
                              (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1"))
                              (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "7") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1"))
                              (rule "add_literals" (formula "7") (term "1,1,0,1"))
                              (rule "applyEqRigid" (formula "45") (term "0,1,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1"))
                              (rule "polySimp_mulAssoc" (formula "45") (term "0,1,1"))
                              (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "0,1,1"))
                              (rule "polySimp_elimOne" (formula "45") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "45") (term "1"))
                              (rule "polySimp_addComm0" (formula "45") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "45") (term "1"))
                              (rule "add_literals" (formula "45") (term "1,1,1"))
                              (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                              (rule "polySimp_mulAssoc" (formula "12") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
                              (rule "applyEq" (formula "41") (term "0,0,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "41") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "41") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1"))
                              (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1"))
                              (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "29") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                              (rule "polySimp_mulAssoc" (formula "29") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0,1"))
                              (rule "applyEqRigid" (formula "20") (term "0,1,0,0,0,0") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                              (rule "applyEq" (formula "40") (term "0,1,0,0,0,0,0") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "40") (term "1,1,0,0,0,0,0"))
                              (rule "applyEqRigid" (formula "9") (term "0,1,0,0,0,0") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                              (rule "applyEqRigid" (formula "1") (term "0,1,0,0,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                              (rule "applyEq" (formula "1") (term "0,1,0,0,0,0,0") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "28") (term "0,1,0,0,0,0") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                              (rule "applyEqRigid" (formula "34") (term "0,1,0,0,0,0,1,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,0,0,1,1"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,0,0,1,1"))
                              (rule "applyEq" (formula "41") (term "0,1,0,0,0,1,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0,1,1"))
                              (rule "add_literals" (formula "41") (term "1,1,0,0,0,1,1"))
                              (rule "applyEq" (formula "36") (term "0,1,0,0,0,0,1,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,0,1,1"))
                              (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,1,1"))
                              (rule "applyEqRigid" (formula "30") (term "0,1,0,0,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,1"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                              (rule "applyEqRigid" (formula "12") (term "0,1,0,0,0,1,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,1"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,1"))
                              (rule "applyEqRigid" (formula "13") (term "0,1,0,0,0,0,1,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,1,1"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,1,1"))
                              (rule "applyEq" (formula "29") (term "0,1,0,0,0,1,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,1,1"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0,0,1,1"))
                              (rule "applyEq" (formula "36") (term "0,1,0,0,0,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,1"))
                              (rule "add_literals" (formula "36") (term "1,1,0,0,0,1"))
                              (rule "applyEqRigid" (formula "34") (term "0,1,0,0,0,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,0,1"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,0,1"))
                              (rule "applyEqRigid" (formula "13") (term "0,1,0,0,0,1") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1"))
                              (rule "polySimp_rightDist" (formula "26") (term "1"))
                              (rule "mul_literals" (formula "26") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "26"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "5") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                              (rule "mul_literals" (formula "5") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                              (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcdRightDiv=add(add(Z(0(#)), mul(quotient_26, Z(neglit(1(#))))),
    l_14)") (inst "elimGcdLeftDiv=mul(l_11, Z(8(2(1(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0"))
                              (rule "leq_literals" (formula "5") (term "0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "add_zero_left" (formula "5") (term "0,1,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "5") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "leq_literals" (formula "5") (term "0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "27"))
                              (rule "times_zero_1" (formula "4") (term "0,0"))
                              (rule "add_zero_left" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_26") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                              (rule "leq_literals" (formula "4") (term "0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0"))
                              (rule "leq_literals" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_exactShadow2" (formula "11") (ifseqformula "1"))
                              (rule "greater_literals" (formula "11") (term "0"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "11") (term "0,0,0,0,0"))
                              (rule "add_zero_left" (formula "11") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0"))
                              (rule "add_literals" (formula "11") (term "1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "28"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "3") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_14") (inst "elimGcd=Z(2(7(0(1(3(1(#)))))))"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "leq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "29"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0"))
                              (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1"))
                              (rule "mul_literals" (formula "10") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=add(Z(0(#)), mul(l_14, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(l_11, Z(8(2(1(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "10") (term "1,1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0"))
                              (rule "leq_literals" (formula "10") (term "0,0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                              (rule "add_zero_left" (formula "10") (term "1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0"))
                              (rule "polySimp_mulAssoc" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0"))
                              (rule "leq_literals" (formula "10") (term "0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_exactShadow0" (formula "7") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "greater_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "1,1,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0"))
                              (rule "add_zero_right" (formula "7") (term "0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "5"))
                              (rule "greater_literals" (formula "7") (term "0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "times_zero_1" (formula "7") (term "1,0"))
                              (rule "leq_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_exactShadow0" (formula "10") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "greater_literals" (formula "10") (term "0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "1,0"))
                              (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "3"))
                              (rule "greater_literals" (formula "10") (term "0,0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "times_zero_1" (formula "10") (term "1,0"))
                              (rule "leq_literals" (formula "10") (term "0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "jdiv_axiom" (formula "26") (term "0"))
                              (rule "eqSymm" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,0,2,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,2,0"))
                              (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "26") (term "1") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "polySimp_homoEq" (formula "26") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,0,1"))
                              (rule "polySimp_sepPosMonomial" (formula "26") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0"))
                              (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "div_axiom" (formula "24") (term "0") (inst "quotient=quotient_27"))
                              (rule "qeq_literals" (formula "24") (term "0,1,1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "equal_literals" (formula "24") (term "0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "mul_literals" (formula "24") (term "1,1,1"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "24"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "26") (term "1"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                              (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "27"))
                              (rule "polySimp_homoEq" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "24"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1"))
                              (rule "polySimp_rightDist" (formula "25") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "25") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "25") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1"))
                              (rule "polySimp_rightDist" (formula "26") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "26") (term "0,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1"))
                              (rule "newSym_eq" (formula "24") (inst "l=l_15") (inst "newSymDef=mul(quotient_27, Z(0(#)))"))
                              (rule "times_zero_1" (formula "24") (term "1,1"))
                              (rule "add_zero_right" (formula "24") (term "1"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "24"))
                              (rule "applyEqRigid" (formula "25") (term "0,0") (ifseqformula "24"))
                              (rule "eqSymm" (formula "25"))
                              (rule "polySimp_homoEq" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,0"))
                              (rule "applyEqRigid" (formula "28") (term "0,1") (ifseqformula "24"))
                              (rule "polySimp_sepPosMonomial" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1"))
                              (rule "applyEq" (formula "26") (term "0,0,0,0,1") (ifseqformula "25"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1"))
                              (rule "applyEq" (formula "27") (term "0,1,0,0,0,1") (ifseqformula "25"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "27"))
                              (rule "times_zero_1" (formula "6") (term "0,0"))
                              (rule "add_zero_left" (formula "6") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=add(add(add(Z(5(5(2(#)))),
            mul(l_15, Z(neglit(6(3(5(5(6(#))))))))),
        quotient_26),
    mul(l_14, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(l_11, Z(8(2(1(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                              (rule "leq_literals" (formula "6") (term "0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "28"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "9") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
                              (rule "add_literals" (formula "9") (term "1,1,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0"))
                              (rule "add_zero_right" (formula "9") (term "0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                              (rule "polySimp_pullOutFactor3b" (formula "9") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=add(add(Z(5(5(2(#)))),
        mul(l_15, Z(neglit(6(3(5(5(6(#))))))))),
    quotient_26)") (inst "elimGcdLeftDiv=mul(l_14, Z(2(#)))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                              (rule "leq_literals" (formula "9") (term "0,0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                              (rule "neg_literal" (formula "9") (term "0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "29"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                              (rule "add_literals" (formula "13") (term "1,1,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0"))
                              (rule "add_zero_right" (formula "13") (term "0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                              (rule "add_literals" (formula "13") (term "1,1,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0"))
                              (rule "add_zero_right" (formula "13") (term "0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                              (rule "add_literals" (formula "13") (term "1,1,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0"))
                              (rule "add_zero_right" (formula "13") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "inEqSimp_contradInEq5" (formula "13") (ifseqformula "2"))
                              (rule "greater_literals" (formula "13") (term "0,0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1,0"))
                              (rule "qeq_literals" (formula "13") (term "0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "closeFalse" (formula "13"))
                           )
                        )
                     )
                  )
               )
            )
            (branch "Exceptional Post (unsign)"
               (builtin "One Step Simplification" (formula "14"))
               (builtin "One Step Simplification" (formula "13"))
               (builtin "One Step Simplification" (formula "12"))
               (builtin "One Step Simplification" (formula "11"))
               (builtin "One Step Simplification" (formula "3"))
               (builtin "One Step Simplification" (formula "18"))
               (builtin "One Step Simplification" (formula "17"))
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "3"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "20") (term "0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "7"))
               (rule "translateJavaMod" (formula "5") (term "1,1,0,0,0"))
               (rule "translateJavaMod" (formula "5") (term "1,1,0,0"))
               (rule "translateJavaMod" (formula "5") (term "1,1,0"))
               (rule "translateJavaMod" (formula "5") (term "1,1"))
               (rule "translateJavaAddInt" (formula "9") (term "1"))
               (rule "translateJavaAddInt" (formula "13") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "12") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "11") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "10") (term "1,1,0,1"))
               (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0,0"))
               (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0"))
               (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0"))
               (rule "translateJavaAddInt" (formula "9") (term "0,1"))
               (rule "translateJavaAddInt" (formula "9") (term "0,0,1"))
               (rule "translateJavaMulInt" (formula "9") (term "1,0,1"))
               (rule "translateJavaMulInt" (formula "9") (term "0,0,0,1"))
               (rule "translateJavaMulInt" (formula "9") (term "1,0,0,1"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "5"))
               (rule "notLeft" (formula "18"))
               (rule "close" (formula "21") (ifseqformula "20"))
            )
            (branch "Pre (unsign)"
               (builtin "One Step Simplification" (formula "13"))
               (builtin "One Step Simplification" (formula "12"))
               (builtin "One Step Simplification" (formula "11"))
               (builtin "One Step Simplification" (formula "3"))
               (builtin "One Step Simplification" (formula "17"))
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "15"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "3"))
               (rule "wellFormedAnonEQ" (formula "13") (ifseqformula "7"))
               (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "19") (term "0"))
               (rule "translateJavaMod" (formula "5") (term "1,1"))
               (rule "translateJavaAddInt" (formula "9") (term "1"))
               (rule "translateJavaMod" (formula "5") (term "1,1,0,0,0"))
               (rule "translateJavaMod" (formula "5") (term "1,1,0,0"))
               (rule "translateJavaMod" (formula "5") (term "1,1,0"))
               (rule "translateJavaAddInt" (formula "12") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "11") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "10") (term "1,1,0,1"))
               (rule "translateJavaAddInt" (formula "9") (term "0,1"))
               (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0,0"))
               (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0"))
               (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0"))
               (rule "translateJavaAddInt" (formula "9") (term "0,0,1"))
               (rule "translateJavaMulInt" (formula "9") (term "1,0,1"))
               (rule "translateJavaMulInt" (formula "9") (term "0,0,0,1"))
               (rule "translateJavaMulInt" (formula "9") (term "1,0,0,1"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "eqSymm" (formula "24") (term "0,0,1"))
               (rule "eqSymm" (formula "23") (term "0,0,1"))
               (rule "eqSymm" (formula "22") (term "0,0,1"))
               (rule "eqSymm" (formula "21") (term "0,0,1"))
               (rule "eqSymm" (formula "26"))
               (rule "eqSymm" (formula "19"))
               (rule "eqSymm" (formula "17"))
               (rule "eqSymm" (formula "15"))
               (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "10")))
               (rule "closeTrue" (formula "20"))
            )
         )
         (branch "Exceptional Post (unsign)"
            (builtin "One Step Simplification" (formula "13"))
            (builtin "One Step Simplification" (formula "12"))
            (builtin "One Step Simplification" (formula "11"))
            (builtin "One Step Simplification" (formula "3"))
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "3"))
            (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "19") (term "0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "7"))
            (rule "translateJavaMod" (formula "5") (term "1,1,0,0,0"))
            (rule "translateJavaMod" (formula "5") (term "1,1"))
            (rule "translateJavaMod" (formula "5") (term "1,1,0,0"))
            (rule "translateJavaMod" (formula "5") (term "1,1,0"))
            (rule "translateJavaAddInt" (formula "9") (term "1"))
            (rule "translateJavaAddInt" (formula "12") (term "1,1,0,1"))
            (rule "translateJavaAddInt" (formula "11") (term "1,1,0,1"))
            (rule "translateJavaAddInt" (formula "10") (term "1,1,0,1"))
            (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0,0"))
            (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0"))
            (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0"))
            (rule "translateJavaAddInt" (formula "9") (term "0,1"))
            (rule "translateJavaAddInt" (formula "9") (term "0,0,1"))
            (rule "translateJavaMulInt" (formula "9") (term "1,0,1"))
            (rule "translateJavaMulInt" (formula "9") (term "0,0,0,1"))
            (rule "translateJavaMulInt" (formula "9") (term "1,0,0,1"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "5"))
            (rule "notLeft" (formula "16"))
            (rule "close" (formula "19") (ifseqformula "18"))
         )
         (branch "Pre (unsign)"
            (builtin "One Step Simplification" (formula "12"))
            (builtin "One Step Simplification" (formula "11"))
            (builtin "One Step Simplification" (formula "3"))
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "15"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "3"))
            (rule "wellFormedAnonEQ" (formula "14") (ifseqformula "7"))
            (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "18") (term "0"))
            (rule "translateJavaMod" (formula "5") (term "1,1"))
            (rule "translateJavaMod" (formula "5") (term "1,1,0,0,0"))
            (rule "translateJavaMod" (formula "5") (term "1,1,0,0"))
            (rule "translateJavaAddInt" (formula "9") (term "1"))
            (rule "translateJavaMod" (formula "5") (term "1,1,0"))
            (rule "translateJavaAddInt" (formula "11") (term "1,1,0,1"))
            (rule "translateJavaAddInt" (formula "10") (term "1,1,0,1"))
            (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0,0"))
            (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0"))
            (rule "translateJavaAddInt" (formula "9") (term "0,1"))
            (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0"))
            (rule "translateJavaAddInt" (formula "9") (term "0,0,1"))
            (rule "translateJavaMulInt" (formula "9") (term "1,0,1"))
            (rule "translateJavaMulInt" (formula "9") (term "0,0,0,1"))
            (rule "translateJavaMulInt" (formula "9") (term "1,0,0,1"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "eqSymm" (formula "22") (term "0,0,1"))
            (rule "eqSymm" (formula "18") (term "0,0,1"))
            (rule "eqSymm" (formula "21") (term "0,0,1"))
            (rule "eqSymm" (formula "19") (term "0,0,1"))
            (rule "eqSymm" (formula "24"))
            (rule "eqSymm" (formula "17"))
            (rule "eqSymm" (formula "15"))
            (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "1")))
            (rule "closeTrue" (formula "20"))
         )
      )
      (branch "Exceptional Post (unsign)"
         (builtin "One Step Simplification" (formula "12"))
         (builtin "One Step Simplification" (formula "11"))
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "3"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "3"))
         (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "18") (term "0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0") (ifseqformula "7"))
         (rule "translateJavaMod" (formula "5") (term "1,1"))
         (rule "translateJavaAddInt" (formula "9") (term "1"))
         (rule "translateJavaMod" (formula "5") (term "1,1,0,0,0"))
         (rule "translateJavaMod" (formula "5") (term "1,1,0,0"))
         (rule "translateJavaMod" (formula "5") (term "1,1,0"))
         (rule "translateJavaAddInt" (formula "11") (term "1,1,0,1"))
         (rule "translateJavaAddInt" (formula "10") (term "1,1,0,1"))
         (rule "translateJavaAddInt" (formula "9") (term "0,1"))
         (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0,0"))
         (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0"))
         (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0"))
         (rule "translateJavaAddInt" (formula "9") (term "0,0,1"))
         (rule "translateJavaMulInt" (formula "9") (term "1,0,1"))
         (rule "translateJavaMulInt" (formula "9") (term "0,0,0,1"))
         (rule "translateJavaMulInt" (formula "9") (term "1,0,0,1"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "5"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "5"))
         (rule "notLeft" (formula "14"))
         (rule "close" (formula "17") (ifseqformula "16"))
      )
      (branch "Pre (unsign)"
         (builtin "One Step Simplification" (formula "11"))
         (builtin "One Step Simplification" (formula "3"))
         (builtin "One Step Simplification" (formula "15"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "3"))
         (rule "wellFormedAnonEQ" (formula "12") (ifseqformula "7"))
         (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "17") (term "0"))
         (rule "translateJavaMod" (formula "5") (term "1,1"))
         (rule "translateJavaAddInt" (formula "9") (term "1"))
         (rule "translateJavaMod" (formula "5") (term "1,1,0,0,0"))
         (rule "translateJavaMod" (formula "5") (term "1,1,0,0"))
         (rule "translateJavaMod" (formula "5") (term "1,1,0"))
         (rule "translateJavaAddInt" (formula "10") (term "1,1,0,1"))
         (rule "translateJavaAddInt" (formula "9") (term "0,1"))
         (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0,0"))
         (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0"))
         (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0"))
         (rule "translateJavaAddInt" (formula "9") (term "0,0,1"))
         (rule "translateJavaMulInt" (formula "9") (term "1,0,1"))
         (rule "translateJavaMulInt" (formula "9") (term "0,0,0,1"))
         (rule "translateJavaMulInt" (formula "9") (term "1,0,0,1"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "5"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "5"))
         (rule "andLeft" (formula "5"))
         (rule "andLeft" (formula "5"))
         (rule "eqSymm" (formula "18") (term "0,0,1"))
         (rule "eqSymm" (formula "20") (term "0,0,1"))
         (rule "eqSymm" (formula "16") (term "0,0,1"))
         (rule "eqSymm" (formula "19") (term "0,0,1"))
         (rule "eqSymm" (formula "22"))
         (rule "eqSymm" (formula "15"))
         (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
         (rule "closeTrue" (formula "17"))
      )
   )
   (branch "Exceptional Post (unsign)"
      (builtin "One Step Simplification" (formula "11"))
      (builtin "One Step Simplification" (formula "3"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "3"))
      (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "17") (term "0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "7"))
      (rule "translateJavaMod" (formula "5") (term "1,1,0"))
      (rule "translateJavaMod" (formula "5") (term "1,1,0,0,0"))
      (rule "translateJavaMod" (formula "5") (term "1,1,0,0"))
      (rule "translateJavaMod" (formula "5") (term "1,1"))
      (rule "translateJavaAddInt" (formula "9") (term "1"))
      (rule "translateJavaAddInt" (formula "10") (term "1,1,0,1"))
      (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0"))
      (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0,0"))
      (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0"))
      (rule "translateJavaMulInt" (formula "9") (term "1,0,0,1"))
      (rule "translateJavaMulInt" (formula "9") (term "1,0,1"))
      (rule "translateJavaMulInt" (formula "9") (term "0,0,0,1"))
      (rule "translateJavaAddInt" (formula "9") (term "0,1"))
      (rule "translateJavaAddInt" (formula "9") (term "0,0,1"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "5"))
      (rule "notLeft" (formula "12"))
      (rule "close" (formula "15") (ifseqformula "14"))
   )
   (branch "Pre (unsign)"
      (builtin "One Step Simplification" (formula "3"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "3"))
      (rule "wellFormedAnonEQ" (formula "13") (ifseqformula "7"))
      (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "16") (term "0"))
      (rule "translateJavaMod" (formula "5") (term "1,1,0,0,0"))
      (rule "translateJavaMod" (formula "5") (term "1,1,0,0"))
      (rule "translateJavaAddInt" (formula "9") (term "1"))
      (rule "translateJavaMod" (formula "5") (term "1,1,0"))
      (rule "translateJavaMod" (formula "5") (term "1,1"))
      (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0,0"))
      (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0,0"))
      (rule "translateJavaAddInt" (formula "9") (term "0,1"))
      (rule "translateJavaDivInt" (formula "5") (term "0,1,1,0"))
      (rule "translateJavaAddInt" (formula "9") (term "0,0,1"))
      (rule "translateJavaMulInt" (formula "9") (term "1,0,1"))
      (rule "translateJavaMulInt" (formula "9") (term "0,0,0,1"))
      (rule "translateJavaMulInt" (formula "9") (term "1,0,0,1"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "eqSymm" (formula "16") (term "0,0,1"))
      (rule "eqSymm" (formula "18") (term "0,0,1"))
      (rule "eqSymm" (formula "14") (term "0,0,1"))
      (rule "eqSymm" (formula "15") (term "0,0,1"))
      (rule "eqSymm" (formula "20"))
      (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
      (rule "closeTrue" (formula "17"))
   )
)
(branch "Exceptional Post (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "8"))
   (builtin "One Step Simplification" (formula "3"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "3"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "10") (term "0"))
   (rule "translateJavaMulInt" (formula "7") (term "1,0,0,1,0,1,1"))
   (rule "translateJavaMulInt" (formula "7") (term "1,0,1,0,1,1"))
   (rule "translateJavaMulInt" (formula "7") (term "0,0,0,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "7") (term "1,0,1,1"))
   (rule "translateJavaAddInt" (formula "7") (term "0,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "7") (term "0,0,1,0,1,1"))
   (rule "andLeft" (formula "7"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,0") (ifseqformula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "close" (formula "11") (ifseqformula "10"))
)
(branch "Pre (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "3"))
   (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "8")) (ifInst ""  (formula "1")) (ifInst ""  (formula "8")))
   (rule "true_left" (formula "3"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,a)__0" (formula "8") (term "0"))
   (rule "eqSymm" (formula "8"))
   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "2"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "inEqSimp_geqRight" (formula "6"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "Definition_axiom_for_isByteArrOfInt_in_verif_utils_MessageTools" (formula "6") (term "0"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "translateJavaMod" (formula "6") (term "1,1,0"))
   (rule "translateJavaMod" (formula "6") (term "1,1,0,0,0"))
   (rule "translateJavaMod" (formula "6") (term "1,1,0,0"))
   (rule "translateJavaMod" (formula "6") (term "1,1"))
   (rule "translateJavaDivInt" (formula "6") (term "0,1,1,0"))
   (rule "translateJavaDivInt" (formula "6") (term "0,1,1,0,0,0"))
   (rule "translateJavaDivInt" (formula "6") (term "0,1,1,0,0"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "jmod_axiom" (formula "10") (term "1"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
   (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
   (rule "qeq_literals" (formula "6") (term "0"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "closeFalse" (formula "6"))
)
)

}
