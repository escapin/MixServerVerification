\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Aug 05 16:37:49 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Aug 05 16:37:49 CEST 2016
name=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:byteArrayToInt([B)].JML operation contract.0
contract=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:byteArrayToInt([B)].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))

(autoModeTime "1990")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "b,result,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "5") (term "1,0,0,0,1"))
(rule "eqSymm" (formula "5") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "4"))
(builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_byteArrayToInt,savedHeapBefore_byteArrayToInt"))
(builtin "One Step Simplification" (formula "5"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "result_1"))
(rule "assignment" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "compound_assignment_op_plus" (formula "5") (term "1"))
(rule "compound_int_cast_expression" (formula "5") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x"))
(rule "remove_parentheses_right" (formula "5") (term "1"))
(rule "compound_addition_2" (formula "5") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x_1"))
(rule "assignment" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x_2"))
(rule "remove_parentheses_right" (formula "5") (term "1"))
(rule "compound_multiplication_2" (formula "5") (term "1") (inst "#v1=x_4") (inst "#v0=x_3"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x_3"))
(rule "compound_multiplication_1" (formula "5") (term "1") (inst "#v=x_5"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x_5"))
(rule "assignmentMultiplicationInt" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "translateJavaMulInt" (formula "5") (term "0,1,0"))
(rule "mul_literals" (formula "5") (term "0,1,0"))
(rule "assignmentMultiplicationInt" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "translateJavaMulInt" (formula "5") (term "0,1,0"))
(rule "mul_literals" (formula "5") (term "0,1,0"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x_4"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "5") (term "1"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "var"))
(rule "assignment_array2" (formula "5") (term "1"))
(branch "Normal Execution (_b != null)"
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
   (rule "less_literals" (formula "5") (term "1"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "inEqSimp_leqRight" (formula "5"))
   (rule "times_zero_1" (formula "1") (term "1,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_unsign,result_0,exc_0") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
   (branch "Post (unsign)"
      (builtin "One Step Simplification" (formula "5"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "translateJavaAddInt" (formula "5") (term "1,1,0,1"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "6"))
      (rule "eqSymm" (formula "6"))
      (rule "polySimp_addComm0" (formula "6") (term "1,0"))
      (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0"))
      (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
      (rule "assignment" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "blockEmpty" (formula "8") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0"))
      (rule "mul_literals" (formula "6") (term "1,0,0"))
      (rule "assignmentMultiplicationInt" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "translateJavaMulInt" (formula "8") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
      (rule "assignmentAdditionInt" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "translateJavaAddInt" (formula "8") (term "0,1,0"))
      (rule "add_zero_left" (formula "8") (term "0,1,0"))
      (rule "widening_identity_cast_5" (formula "8") (term "1"))
      (rule "assignment" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "compound_assignment_op_plus" (formula "8") (term "1"))
      (rule "compound_int_cast_expression" (formula "8") (term "1") (inst "#v=x"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_7"))
      (rule "remove_parentheses_right" (formula "8") (term "1"))
      (rule "compound_addition_2" (formula "8") (term "1") (inst "#v1=x_9") (inst "#v0=x_8"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_8"))
      (rule "assignment" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_9"))
      (rule "remove_parentheses_right" (formula "8") (term "1"))
      (rule "compound_multiplication_2" (formula "8") (term "1") (inst "#v1=x_11") (inst "#v0=x_10"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_10"))
      (rule "assignmentMultiplicationInt" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "translateJavaMulInt" (formula "8") (term "0,1,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_11"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "8") (term "1"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "var_1"))
      (rule "assignment_array2" (formula "8") (term "1"))
      (branch "Normal Execution (_b != null)"
         (builtin "One Step Simplification" (formula "9"))
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")))
         (rule "less_literals" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "inEqSimp_leqRight" (formula "8"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
         (rule "leq_literals" (formula "2") (term "0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "true_left" (formula "2"))
         (builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_unsign_0,result_2,exc_1") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
         (branch "Post (unsign)"
            (builtin "One Step Simplification" (formula "9"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "translateJavaAddInt" (formula "7") (term "1,1,0,1"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "8"))
            (rule "eqSymm" (formula "8"))
            (rule "polySimp_addComm0" (formula "8") (term "1,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
            (rule "assignment" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "blockEmpty" (formula "10") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0"))
            (rule "assignmentMultiplicationInt" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "translateJavaMulInt" (formula "10") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
            (rule "assignmentAdditionInt" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "translateJavaAddInt" (formula "10") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "10") (term "1"))
            (rule "assignment" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "compound_assignment_op_plus" (formula "10") (term "1"))
            (rule "compound_int_cast_expression" (formula "10") (term "1") (inst "#v=x"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_13"))
            (rule "remove_parentheses_right" (formula "10") (term "1"))
            (rule "compound_addition_2" (formula "10") (term "1") (inst "#v1=x_15") (inst "#v0=x_14"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_14"))
            (rule "assignment" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_15"))
            (rule "remove_parentheses_right" (formula "10") (term "1"))
            (rule "compound_multiplication_2" (formula "10") (term "1") (inst "#v1=x_17") (inst "#v0=x_16"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_16"))
            (rule "assignment" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_17"))
            (rule "methodCallWithAssignmentUnfoldArguments" (formula "10") (term "1"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "var_2"))
            (rule "assignment_array2" (formula "10") (term "1"))
            (branch "Normal Execution (_b != null)"
               (builtin "One Step Simplification" (formula "11"))
               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
               (rule "less_literals" (formula "10") (term "1"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_leqRight" (formula "10"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
               (rule "leq_literals" (formula "2") (term "0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_unsign_1,result_3,exc_2") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
               (branch "Post (unsign)"
                  (builtin "One Step Simplification" (formula "9"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "translateJavaAddInt" (formula "9") (term "1,1,0,1"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "10"))
                  (rule "eqSymm" (formula "10"))
                  (rule "polySimp_addComm0" (formula "10") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                  (rule "assignment" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "blockEmpty" (formula "12") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0"))
                  (rule "assignmentMultiplicationInt" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "translateJavaMulInt" (formula "12") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                  (rule "assignmentAdditionInt" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "translateJavaAddInt" (formula "12") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "12") (term "1"))
                  (rule "assignment" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "compound_assignment_op_plus" (formula "12") (term "1"))
                  (rule "compound_int_cast_expression" (formula "12") (term "1") (inst "#v=x"))
                  (rule "variableDeclarationAssign" (formula "12") (term "1"))
                  (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_19"))
                  (rule "remove_parentheses_right" (formula "12") (term "1"))
                  (rule "compound_addition_2" (formula "12") (term "1") (inst "#v1=x_21") (inst "#v0=x_20"))
                  (rule "variableDeclarationAssign" (formula "12") (term "1"))
                  (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_20"))
                  (rule "assignment" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "variableDeclarationAssign" (formula "12") (term "1"))
                  (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_21"))
                  (rule "remove_parentheses_right" (formula "12") (term "1"))
                  (rule "methodCallWithAssignmentUnfoldArguments" (formula "12") (term "1"))
                  (rule "variableDeclarationAssign" (formula "12") (term "1"))
                  (rule "variableDeclaration" (formula "12") (term "1") (newnames "var_3"))
                  (rule "assignment_array2" (formula "12") (term "1"))
                  (branch "Normal Execution (_b != null)"
                     (builtin "One Step Simplification" (formula "13"))
                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
                     (rule "less_literals" (formula "12") (term "1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "inEqSimp_leqRight" (formula "12"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_unsign_2,result_4,exc_3") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                     (branch "Post (unsign)"
                        (builtin "One Step Simplification" (formula "11"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "translateJavaAddInt" (formula "11") (term "1,1,0,1"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "12"))
                        (rule "eqSymm" (formula "12"))
                        (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                        (rule "assignment" (formula "14") (term "1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "blockEmpty" (formula "14") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0"))
                        (rule "mul_literals" (formula "12") (term "1,0,0"))
                        (rule "assignmentAdditionInt" (formula "14") (term "1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "translateJavaAddInt" (formula "14") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "14") (term "1"))
                        (rule "assignment" (formula "14") (term "1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "methodCallReturn" (formula "14") (term "1"))
                        (rule "assignment" (formula "14") (term "1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "methodCallEmpty" (formula "14") (term "1"))
                        (rule "tryEmpty" (formula "14") (term "1"))
                        (rule "emptyModality" (formula "14") (term "1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "Query_axiom_for_byteArrayToInt_[B__in_verif_utils_MessageTools" (formula "14") (term "0") (inst "byteArrayToInt_sk=byteArrayToInt_sk_0") (inst "#p0=x_arr") (inst "#res=x"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "0,1"))
                        (rule "polySimp_homoEq" (formula "15"))
                        (rule "polySimp_addComm1" (formula "15") (term "0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1"))
                        (rule "polySimp_mulAssoc" (formula "15") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,0,1"))
                        (rule "boxToDiamond" (formula "1") (term "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_byteArrayToInt_0,savedHeapBefore_byteArrayToInt_0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "result_5"))
                        (rule "assignment" (formula "13") (term "1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "compound_assignment_op_plus" (formula "13") (term "1"))
                        (rule "compound_int_cast_expression" (formula "13") (term "1") (inst "#v=x_1"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_23"))
                        (rule "remove_parentheses_right" (formula "13") (term "1"))
                        (rule "compound_addition_2" (formula "13") (term "1") (inst "#v1=x_25") (inst "#v0=x_24"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_24"))
                        (rule "assignment" (formula "13") (term "1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_25"))
                        (rule "remove_parentheses_right" (formula "13") (term "1"))
                        (rule "compound_multiplication_2" (formula "13") (term "1") (inst "#v1=x_27") (inst "#v0=x_26"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_26"))
                        (rule "compound_multiplication_1" (formula "13") (term "1") (inst "#v=x_28"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_28"))
                        (rule "assignmentMultiplicationInt" (formula "13") (term "1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "translateJavaMulInt" (formula "13") (term "0,1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0"))
                        (rule "assignmentMultiplicationInt" (formula "13") (term "1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "translateJavaMulInt" (formula "13") (term "0,1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_27"))
                        (rule "methodCallWithAssignmentUnfoldArguments" (formula "13") (term "1"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "var_4"))
                        (rule "assignment_array2" (formula "13") (term "1"))
                        (branch "Normal Execution (x_arr != null)"
                           (builtin "One Step Simplification" (formula "14"))
                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")))
                           (rule "less_literals" (formula "13") (term "1"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_leqRight" (formula "13"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                           (rule "leq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_unsign_3,result_6,exc_4") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                           (branch "Post (unsign)"
                              (builtin "One Step Simplification" (formula "13"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "translateJavaAddInt" (formula "13") (term "1,1,0,1"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "14"))
                              (rule "eqSymm" (formula "14"))
                              (rule "polySimp_addComm0" (formula "14") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "blockEmpty" (formula "15") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "6"))
                              (rule "eqSymm" (formula "14"))
                              (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "14"))
                              (rule "assignmentMultiplicationInt" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaMulInt" (formula "15") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                              (rule "assignmentAdditionInt" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaAddInt" (formula "15") (term "0,1,0"))
                              (rule "add_zero_left" (formula "15") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "15") (term "1"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "compound_assignment_op_plus" (formula "15") (term "1"))
                              (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_1"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_29"))
                              (rule "remove_parentheses_right" (formula "15") (term "1"))
                              (rule "compound_addition_2" (formula "15") (term "1") (inst "#v1=x_31") (inst "#v0=x_30"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_30"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_31"))
                              (rule "remove_parentheses_right" (formula "15") (term "1"))
                              (rule "compound_multiplication_2" (formula "15") (term "1") (inst "#v1=x_33") (inst "#v0=x_32"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_32"))
                              (rule "assignmentMultiplicationInt" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaMulInt" (formula "15") (term "0,1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_33"))
                              (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                              (rule "leq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "methodCallWithAssignmentUnfoldArguments" (formula "15") (term "1"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "var_5"))
                              (rule "assignment_array2" (formula "15") (term "1"))
                              (branch "Normal Execution (x_arr != null)"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "17")))
                                 (rule "less_literals" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_leqRight" (formula "15"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_unsign_4,result_7,exc_5") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                 (branch "Post (unsign)"
                                    (builtin "One Step Simplification" (formula "15"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "translateJavaAddInt" (formula "15") (term "1,1,0,1"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "eqSymm" (formula "16"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                    (rule "assignment" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "blockEmpty" (formula "17") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "16") (term "1") (ifseqformula "8"))
                                    (rule "assignmentMultiplicationInt" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "translateJavaMulInt" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "0,1,0"))
                                    (rule "assignmentAdditionInt" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "translateJavaAddInt" (formula "17") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "17") (term "1"))
                                    (rule "assignment" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "compound_assignment_op_plus" (formula "17") (term "1"))
                                    (rule "compound_int_cast_expression" (formula "17") (term "1") (inst "#v=x_1"))
                                    (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_34"))
                                    (rule "remove_parentheses_right" (formula "17") (term "1"))
                                    (rule "compound_addition_2" (formula "17") (term "1") (inst "#v1=x_36") (inst "#v0=x_35"))
                                    (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_35"))
                                    (rule "assignment" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_36"))
                                    (rule "remove_parentheses_right" (formula "17") (term "1"))
                                    (rule "compound_multiplication_2" (formula "17") (term "1") (inst "#v1=x_38") (inst "#v0=x_37"))
                                    (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_37"))
                                    (rule "assignment" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_38"))
                                    (rule "methodCallWithAssignmentUnfoldArguments" (formula "17") (term "1"))
                                    (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "var_6"))
                                    (rule "assignment_array2" (formula "17") (term "1"))
                                    (branch "Normal Execution (x_arr != null)"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")))
                                       (rule "less_literals" (formula "17") (term "1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_leqRight" (formula "17"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_unsign_5,result_8,exc_6") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                       (branch "Post (unsign)"
                                          (builtin "One Step Simplification" (formula "18"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "translateJavaAddInt" (formula "17") (term "1,1,0,1"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "polySimp_addComm0" (formula "18") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                          (rule "assignment" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "blockEmpty" (formula "19") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "18"))
                                          (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "18") (term "1") (ifseqformula "10"))
                                          (rule "assignmentMultiplicationInt" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "translateJavaMulInt" (formula "19") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                                          (rule "assignmentAdditionInt" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "translateJavaAddInt" (formula "19") (term "0,1,0"))
                                          (rule "widening_identity_cast_5" (formula "19") (term "1"))
                                          (rule "assignment" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "compound_assignment_op_plus" (formula "19") (term "1"))
                                          (rule "compound_int_cast_expression" (formula "19") (term "1") (inst "#v=x_1"))
                                          (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                          (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_39"))
                                          (rule "remove_parentheses_right" (formula "19") (term "1"))
                                          (rule "compound_addition_2" (formula "19") (term "1") (inst "#v1=x_41") (inst "#v0=x_40"))
                                          (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                          (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_40"))
                                          (rule "assignment" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                          (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_41"))
                                          (rule "remove_parentheses_right" (formula "19") (term "1"))
                                          (rule "methodCallWithAssignmentUnfoldArguments" (formula "19") (term "1"))
                                          (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                          (rule "variableDeclaration" (formula "19") (term "1") (newnames "var_7"))
                                          (rule "assignment_array2" (formula "19") (term "1"))
                                          (branch "Normal Execution (x_arr != null)"
                                             (builtin "One Step Simplification" (formula "20"))
                                             (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "21")))
                                             (rule "less_literals" (formula "19") (term "1"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_leqRight" (formula "19"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_unsign_6,result_9,exc_7") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                             (branch "Post (unsign)"
                                                (builtin "One Step Simplification" (formula "19"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "translateJavaAddInt" (formula "19") (term "1,1,0,1"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "eqSymm" (formula "20"))
                                                (rule "polySimp_addComm0" (formula "20") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                (rule "assignment" (formula "21") (term "1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "blockEmpty" (formula "21") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "20") (term "1") (ifseqformula "12"))
                                                (rule "assignmentAdditionInt" (formula "21") (term "1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                                                (rule "widening_identity_cast_5" (formula "21") (term "1"))
                                                (rule "assignment" (formula "21") (term "1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "methodCallReturn" (formula "21") (term "1"))
                                                (rule "assignment" (formula "21") (term "1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "methodCallEmpty" (formula "21") (term "1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "emptyModality" (formula "21") (term "1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "notRight" (formula "21"))
                                                (rule "polySimp_homoEq" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "close" (formula "23") (ifseqformula "1"))
                                             )
                                             (branch "Exceptional Post (unsign)"
                                                (builtin "One Step Simplification" (formula "20"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "translateJavaAddInt" (formula "19") (term "1,1,0,1"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "notLeft" (formula "19"))
                                                (rule "close" (formula "22") (ifseqformula "21"))
                                             )
                                             (branch "Pre (unsign)"
                                                (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "2")))
                                                (rule "closeTrue" (formula "19"))
                                             )
                                          )
                                          (branch "Null Reference (x_arr = null)"
                                             (builtin "One Step Simplification" (formula "20"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Index Out of Bounds (x_arr != null, but 3 Out of Bounds!)"
                                             (builtin "One Step Simplification" (formula "20"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                             (rule "less_literals" (formula "1") (term "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "blockThrow" (formula "20") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "Exceptional Post (unsign)"
                                          (builtin "One Step Simplification" (formula "18"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "translateJavaAddInt" (formula "17") (term "1,1,0,1"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "close" (formula "20") (ifseqformula "19"))
                                       )
                                       (branch "Pre (unsign)"
                                          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "2")))
                                          (rule "closeTrue" (formula "17"))
                                       )
                                    )
                                    (branch "Null Reference (x_arr = null)"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Index Out of Bounds (x_arr != null, but 2 Out of Bounds!)"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                       (rule "less_literals" (formula "1") (term "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "blockThrow" (formula "18") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "Exceptional Post (unsign)"
                                    (builtin "One Step Simplification" (formula "15"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "translateJavaAddInt" (formula "15") (term "1,1,0,1"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "notLeft" (formula "15"))
                                    (rule "close" (formula "18") (ifseqformula "17"))
                                 )
                                 (branch "Pre (unsign)"
                                    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
                                    (rule "closeTrue" (formula "15"))
                                 )
                              )
                              (branch "Null Reference (x_arr = null)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (x_arr != null, but 1 Out of Bounds!)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                 (rule "less_literals" (formula "1") (term "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "blockThrow" (formula "16") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Exceptional Post (unsign)"
                              (builtin "One Step Simplification" (formula "13"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "translateJavaAddInt" (formula "13") (term "1,1,0,1"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "15"))
                              (rule "notLeft" (formula "13"))
                              (rule "close" (formula "16") (ifseqformula "15"))
                           )
                           (branch "Pre (unsign)"
                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "2")))
                              (rule "closeTrue" (formula "13"))
                           )
                        )
                        (branch "Null Reference (x_arr = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr != null, but 0 Out of Bounds!)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                           (rule "less_literals" (formula "1") (term "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "blockThrow" (formula "14") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Exceptional Post (unsign)"
                        (builtin "One Step Simplification" (formula "13"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "translateJavaAddInt" (formula "11") (term "1,1,0,1"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "11"))
                        (rule "close" (formula "14") (ifseqformula "13"))
                     )
                     (branch "Pre (unsign)"
                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "2")))
                        (rule "closeTrue" (formula "12"))
                     )
                  )
                  (branch "Null Reference (_b = null)"
                     (builtin "One Step Simplification" (formula "13"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_b != null, but 3 Out of Bounds!)"
                     (builtin "One Step Simplification" (formula "13"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                     (rule "less_literals" (formula "1") (term "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "blockThrow" (formula "13") (term "1"))
                     (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "throwUnfold" (formula "12") (term "1") (inst "#v0=a"))
                     (rule "variableDeclarationAssign" (formula "12") (term "1"))
                     (rule "variableDeclaration" (formula "12") (term "1") (newnames "a_12"))
                     (rule "instanceCreationAssignment" (formula "12") (term "1") (inst "#v0=a_13"))
                     (rule "variableDeclarationAssign" (formula "12") (term "1"))
                     (rule "variableDeclaration" (formula "12") (term "1") (newnames "a_13"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "12") (term "1") (inst "#v0=a_14"))
                     (rule "variableDeclaration" (formula "12") (term "1") (newnames "a_14"))
                     (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<createObject>_2,savedHeapBefore_<createObject>_2"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "variableDeclaration" (formula "12") (term "1") (newnames "__NEW___3"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "12") (term "1") (inst "#v0=a_15"))
                     (rule "variableDeclaration" (formula "12") (term "1") (newnames "a_15"))
                     (rule "allocateInstance" (formula "12"))
                     (builtin "One Step Simplification" (formula "13"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "2"))
                     (rule "notLeft" (formula "1"))
                     (rule "blockEmpty" (formula "15") (term "1"))
                     (rule "assignment" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<create>_2,savedHeapBefore_<create>_2"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "assignment_write_attribute_this" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallWithinClass" (formula "15") (term "1"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepareEnter>_2,savedHeapBefore_<prepareEnter>_2"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallSuper" (formula "15") (term "1"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>_14,savedHeapBefore_<prepare>_14"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallSuper" (formula "15") (term "1"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>_15,savedHeapBefore_<prepare>_15"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallSuper" (formula "15") (term "1"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>_16,savedHeapBefore_<prepare>_16"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallSuper" (formula "15") (term "1"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>_17,savedHeapBefore_<prepare>_17"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallSuper" (formula "15") (term "1"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>_18,savedHeapBefore_<prepare>_18"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "blockEmpty" (formula "15") (term "1"))
                     (rule "assignment_write_attribute_this" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "castDel" (formula "15") (term "1,0,1,0"))
                     (rule "assignment_write_attribute_this" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "castDel" (formula "15") (term "1,0,1,0"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "blockEmpty" (formula "15") (term "1"))
                     (rule "methodCallReturnIgnoreResult" (formula "15") (term "1"))
                     (rule "methodCallReturn" (formula "15") (term "1"))
                     (rule "assignment" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "blockEmpty" (formula "15") (term "1"))
                     (rule "assignment" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_17,savedHeapBefore_<init>_17"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallSuper" (formula "15") (term "1"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_18,savedHeapBefore_<init>_18"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallSuper" (formula "15") (term "1"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_19,savedHeapBefore_<init>_19"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallSuper" (formula "15") (term "1"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_20,savedHeapBefore_<init>_20"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallSuper" (formula "15") (term "1"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_21,savedHeapBefore_<init>_21"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallSuper" (formula "15") (term "1"))
                     (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_22,savedHeapBefore_<init>_22"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "blockEmpty" (formula "15") (term "1"))
                     (rule "assignment_write_attribute_this" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "castDel" (formula "15") (term "1,0,1,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "assignment_write_attribute_this" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "castDel" (formula "15") (term "1,0,1,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "blockEmpty" (formula "15") (term "1"))
                     (rule "assignment_write_attribute" (formula "15") (term "1"))
                     (branch "Normal Execution (a_13 != null)"
                        (builtin "One Step Simplification" (formula "16"))
                        (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                        (rule "false_right" (formula "15"))
                        (rule "assignment" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "methodCallParamThrow" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "tryCatchThrow" (formula "15") (term "1"))
                        (rule "ifElseUnfold" (formula "15") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_22"))
                        (rule "equality_comparison_simple" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "replace_known_right" (formula "15") (term "0,0,1,0") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "ifElseSplit" (formula "15"))
                        (branch "if x_22 true"
                           (builtin "One Step Simplification" (formula "16"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_22 false"
                           (builtin "One Step Simplification" (formula "16"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ifElseSplit" (formula "15"))
                           (branch "if a_12 instanceof java.lang.Throwable true"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                              (rule "true_left" (formula "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "e_3"))
                              (rule "reference_type_cast" (formula "15") (term "1"))
                              (branch "Normal Execution (a_12 instanceof java.lang.Throwable)"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "assignment" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "emptyModality" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                                 (rule "allRight" (formula "15") (inst "sk=f_3"))
                                 (rule "allRight" (formula "15") (inst "sk=o_3"))
                                 (rule "orRight" (formula "15"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=f_3_0"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_2"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_3"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "commute_and" (formula "4") (term "0,0"))
                                 (rule "commute_and" (formula "3") (term "0,0"))
                                 (rule "commute_and" (formula "2") (term "0,0"))
                                 (rule "commute_and" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "11") (term "0"))
                                 (branch "b[0] ≤ -1 TRUE"
                                    (rule "polySimp_homoEq" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "ifthenelse_split" (formula "14") (term "0"))
                                    (branch "b[1] ≤ -1 TRUE"
                                       (rule "polySimp_homoEq" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_homoInEq0" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "ifthenelse_split" (formula "17") (term "0"))
                                       (branch "b[2] ≤ -1 TRUE"
                                          (rule "polySimp_homoEq" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "1"))
                                             (rule "narrowSelectType" (formula "24") (term "0") (ifseqformula "8"))
                                             (rule "eqSymm" (formula "24"))
                                             (rule "applyEq" (formula "23") (term "1,0,0,1") (ifseqformula "2"))
                                             (rule "replace_known_right" (formula "23") (term "0,1") (ifseqformula "21"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "notRight" (formula "23"))
                                             (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                             (rule "close" (formula "18") (ifseqformula "1"))
                                          )
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "cut_direct" (formula "22") (term "0,0"))
                                             (branch "CUT: o_3 = null TRUE"
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "false_right" (formula "23"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_3 = null FALSE"
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "notRight" (formula "23"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "false_right" (formula "19"))
                                                   (rule "applyEqRigid" (formula "23") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "23") (term "0") (ifseqformula "7"))
                                                   (rule "eqSymm" (formula "23"))
                                                   (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "eqSymm" (formula "22"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "19") (ifseqformula "1"))
                                                )
                                                (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_3 = Throwable::$message ∧ o_3 = a_15 TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "false_right" (formula "20"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "false_right" (formula "19"))
                                                      (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "21") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                      (rule "close" (formula "19") (ifseqformula "1"))
                                                   )
                                                   (branch "f_3 = Throwable::$message ∧ o_3 = a_15 FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "false_right" (formula "18"))
                                                         (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "false_right" (formula "19"))
                                                         (rule "applyEqRigid" (formula "23") (term "2,0") (ifseqformula "2"))
                                                         (rule "narrowSelectType" (formula "23") (term "0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "20") (ifseqformula "1"))
                                                      )
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 FALSE"
                                                         (rule "close" (formula "25") (ifseqformula "2"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "b[2] ≤ -1 FALSE"
                                          (rule "inEqSimp_leqRight" (formula "18"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEqRigid" (formula "23") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "23") (term "0") (ifseqformula "8"))
                                             (rule "eqSymm" (formula "23"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "replace_known_right" (formula "20") (term "0,1") (ifseqformula "21"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "notRight" (formula "20"))
                                             (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "4"))
                                             (rule "close" (formula "18") (ifseqformula "4"))
                                          )
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "cut_direct" (formula "22") (term "0,0"))
                                             (branch "CUT: o_3 = null TRUE"
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "false_right" (formula "23"))
                                                (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "19") (term "1"))
                                                (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "false_right" (formula "19"))
                                                (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "17"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                             (branch "CUT: o_3 = null FALSE"
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "notRight" (formula "23"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "22") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "22") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "false_right" (formula "18"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "19") (ifseqformula "1"))
                                                )
                                                (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_3 = Throwable::$message ∧ o_3 = a_15 TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "false_right" (formula "19"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "false_right" (formula "19"))
                                                      (rule "applyEq" (formula "22") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "8"))
                                                      (rule "eqSymm" (formula "22"))
                                                      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "eqSymm" (formula "21"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                      (rule "close" (formula "19") (ifseqformula "1"))
                                                   )
                                                   (branch "f_3 = Throwable::$message ∧ o_3 = a_15 FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "false_right" (formula "18"))
                                                         (rule "applyEqRigid" (formula "24") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "24") (term "0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "21") (ifseqformula "1"))
                                                      )
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 FALSE"
                                                         (rule "close" (formula "25") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "b[1] ≤ -1 FALSE"
                                       (rule "inEqSimp_leqRight" (formula "17"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                                       (rule "ifthenelse_split" (formula "17") (term "0"))
                                       (branch "b[2] ≤ -1 TRUE"
                                          (rule "polySimp_homoEq" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "20") (term "1,0,0,1") (ifseqformula "3"))
                                             (rule "replace_known_right" (formula "20") (term "0,1") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "notRight" (formula "20"))
                                             (rule "applyEq" (formula "21") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                             (rule "close" (formula "18") (ifseqformula "1"))
                                          )
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "cut_direct" (formula "22") (term "0,0"))
                                             (branch "CUT: o_3 = null TRUE"
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "false_right" (formula "23"))
                                                (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "5") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "17") (term "1"))
                                                (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "false_right" (formula "17"))
                                                (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "17"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                             (branch "CUT: o_3 = null FALSE"
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "notRight" (formula "23"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "false_right" (formula "18"))
                                                   (rule "applyEqRigid" (formula "22") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "21") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "19") (ifseqformula "1"))
                                                )
                                                (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_3 = Throwable::$message ∧ o_3 = a_15 TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "false_right" (formula "20"))
                                                      (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "false_right" (formula "19"))
                                                      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "4"))
                                                      (rule "applyEqRigid" (formula "21") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                      (rule "close" (formula "19") (ifseqformula "1"))
                                                   )
                                                   (branch "f_3 = Throwable::$message ∧ o_3 = a_15 FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "false_right" (formula "18"))
                                                         (rule "applyEq" (formula "23") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "21") (ifseqformula "1"))
                                                      )
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 FALSE"
                                                         (rule "close" (formula "25") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "b[2] ≤ -1 FALSE"
                                          (rule "inEqSimp_leqRight" (formula "18"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "21") (term "1,0,0,1") (ifseqformula "4"))
                                             (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "notRight" (formula "21"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEqRigid" (formula "21") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "5"))
                                             (rule "close" (formula "18") (ifseqformula "5"))
                                          )
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "applyEq" (formula "23") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "23") (term "0") (ifseqformula "8"))
                                                (rule "eqSymm" (formula "23"))
                                                (rule "applyEq" (formula "22") (term "1,0,0,1") (ifseqformula "4"))
                                                (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "notRight" (formula "22"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "22"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "false_right" (formula "18"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                                (rule "close" (formula "18") (ifseqformula "1"))
                                             )
                                             (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = Throwable::$message ∧ o_3 = a_15 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "false_right" (formula "18"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "false_right" (formula "18"))
                                                   (rule "applyEq" (formula "21") (term "1,0,0,1") (ifseqformula "4"))
                                                   (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "notRight" (formula "21"))
                                                   (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "21") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "8"))
                                                   (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "5"))
                                                   (rule "close" (formula "18") (ifseqformula "5"))
                                                )
                                                (branch "f_3 = Throwable::$message ∧ o_3 = a_15 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "22") (term "0,0"))
                                                   (branch "CUT: o_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "false_right" (formula "23"))
                                                      (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "20"))
                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                   (branch "CUT: o_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "notRight" (formula "23"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 TRUE"
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "false_right" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "false_right" (formula "18"))
                                                         (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "22") (term "0") (ifseqformula "5"))
                                                         (rule "applyEqRigid" (formula "22") (term "2,0") (ifseqformula "4"))
                                                         (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "8"))
                                                         (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "false_right" (formula "18"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                         (rule "close" (formula "19") (ifseqformula "1"))
                                                      )
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 FALSE"
                                                         (rule "close" (formula "25") (ifseqformula "4"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "b[0] ≤ -1 FALSE"
                                    (rule "inEqSimp_leqRight" (formula "16"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                    (rule "ifthenelse_split" (formula "14") (term "0"))
                                    (branch "b[1] ≤ -1 TRUE"
                                       (rule "polySimp_homoEq" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_homoInEq0" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "ifthenelse_split" (formula "17") (term "0"))
                                       (branch "b[2] ≤ -1 TRUE"
                                          (rule "polySimp_homoEq" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                             (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "notRight" (formula "23"))
                                             (rule "applyEqRigid" (formula "24") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "24") (term "0") (ifseqformula "10"))
                                             (rule "eqSymm" (formula "24"))
                                             (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                             (rule "close" (formula "19") (ifseqformula "1"))
                                          )
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "cut_direct" (formula "22") (term "0,0"))
                                             (branch "CUT: o_3 = null TRUE"
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "false_right" (formula "23"))
                                                (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "19") (term "1"))
                                                (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "false_right" (formula "19"))
                                                (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "21") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "17"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                             (branch "CUT: o_3 = null FALSE"
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "notRight" (formula "23"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "false_right" (formula "18"))
                                                   (rule "applyEq" (formula "21") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "19") (ifseqformula "1"))
                                                )
                                                (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_3 = Throwable::$message ∧ o_3 = a_15 TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "false_right" (formula "20"))
                                                      (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "false_right" (formula "19"))
                                                      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "21") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                      (rule "close" (formula "19") (ifseqformula "1"))
                                                   )
                                                   (branch "f_3 = Throwable::$message ∧ o_3 = a_15 FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "false_right" (formula "18"))
                                                         (rule "applyEq" (formula "19") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "false_right" (formula "19"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "false_right" (formula "18"))
                                                         (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "19") (ifseqformula "1"))
                                                      )
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 FALSE"
                                                         (rule "close" (formula "25") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "b[2] ≤ -1 FALSE"
                                          (rule "inEqSimp_leqRight" (formula "18"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "4"))
                                             (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "notRight" (formula "21"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "21") (term "2,0") (ifseqformula "4"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "21") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "21"))
                                          )
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "applyEq" (formula "22") (term "1,0,0,1") (ifseqformula "4"))
                                                (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "notRight" (formula "22"))
                                                (rule "applyEq" (formula "23") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "23") (term "0") (ifseqformula "9"))
                                                (rule "eqSymm" (formula "23"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "22"))
                                                (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "false_right" (formula "18"))
                                                (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "close" (formula "18") (ifseqformula "5"))
                                             )
                                             (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = Throwable::$message ∧ o_3 = a_15 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "false_right" (formula "19"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "false_right" (formula "18"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "21") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "4"))
                                                   (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "17"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "notRight" (formula "20"))
                                                   (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                   (rule "close" (formula "19") (ifseqformula "1"))
                                                )
                                                (branch "f_3 = Throwable::$message ∧ o_3 = a_15 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "22") (term "0,0"))
                                                   (branch "CUT: o_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "false_right" (formula "23"))
                                                      (rule "applyEqRigid" (formula "17") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "17") (term "1"))
                                                      (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "20"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "false_right" (formula "17"))
                                                      (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "17") (term "1"))
                                                      (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "false_right" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "17") (term "1"))
                                                      (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "18"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "false_right" (formula "17"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "17"))
                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "20")))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                   (branch "CUT: o_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "notRight" (formula "23"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 TRUE"
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "applyEq" (formula "20") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "false_right" (formula "20"))
                                                         (rule "applyEq" (formula "19") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "false_right" (formula "19"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "false_right" (formula "18"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                         (rule "close" (formula "19") (ifseqformula "1"))
                                                      )
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 FALSE"
                                                         (rule "close" (formula "25") (ifseqformula "4"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "b[1] ≤ -1 FALSE"
                                       (rule "inEqSimp_leqRight" (formula "17"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                                       (rule "ifthenelse_split" (formula "17") (term "0"))
                                       (branch "b[2] ≤ -1 TRUE"
                                          (rule "polySimp_homoEq" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "8"))
                                             (rule "eqSymm" (formula "22"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "replace_known_right" (formula "20") (term "0,1") (ifseqformula "21"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "notRight" (formula "20"))
                                             (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "5"))
                                             (rule "close" (formula "18") (ifseqformula "5"))
                                          )
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "false_right" (formula "17"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "21") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "20") (term "1,0,0,1") (ifseqformula "4"))
                                                (rule "replace_known_right" (formula "20") (term "0,1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "notRight" (formula "20"))
                                                (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "close" (formula "18") (ifseqformula "5"))
                                             )
                                             (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = Throwable::$message ∧ o_3 = a_15 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "false_right" (formula "18"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "false_right" (formula "18"))
                                                   (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "8"))
                                                   (rule "eqSymm" (formula "22"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "21"))
                                                   (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "4"))
                                                   (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "17"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "notRight" (formula "20"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                   (rule "close" (formula "19") (ifseqformula "1"))
                                                )
                                                (branch "f_3 = Throwable::$message ∧ o_3 = a_15 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "22") (term "0,0"))
                                                   (branch "CUT: o_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "false_right" (formula "23"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "20"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEqRigid" (formula "17") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "17") (term "1"))
                                                      (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "false_right" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "17") (term "1"))
                                                      (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "18"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "false_right" (formula "17"))
                                                      (rule "applyEqRigid" (formula "20") (term "1,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "closeTrue" (formula "20"))
                                                   )
                                                   (branch "CUT: o_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "notRight" (formula "23"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 TRUE"
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "false_right" (formula "19"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "false_right" (formula "18"))
                                                         (rule "applyEqRigid" (formula "23") (term "2,0") (ifseqformula "4"))
                                                         (rule "narrowSelectType" (formula "23") (term "0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "22") (term "0") (ifseqformula "5"))
                                                         (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "false_right" (formula "18"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                         (rule "close" (formula "19") (ifseqformula "1"))
                                                      )
                                                      (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 FALSE"
                                                         (rule "close" (formula "25") (ifseqformula "4"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "b[2] ≤ -1 FALSE"
                                          (rule "inEqSimp_leqRight" (formula "18"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "notRight" (formula "23"))
                                             (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "9"))
                                             (rule "hideAuxiliaryEq" (formula "9"))
                                             (rule "applyEq" (formula "23") (term "2,0") (ifseqformula "5"))
                                             (rule "narrowSelectType" (formula "23") (term "0") (ifseqformula "11"))
                                             (rule "eqSymm" (formula "23"))
                                             (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "8"))
                                             (rule "hideAuxiliaryEq" (formula "8"))
                                             (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "close" (formula "21") (ifseqformula "1"))
                                          )
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = a_15 FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "applyEqRigid" (formula "23") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "23") (term "0") (ifseqformula "9"))
                                                (rule "eqSymm" (formula "23"))
                                                (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "5"))
                                                (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "notRight" (formula "22"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "eqSymm" (formula "22"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "false_right" (formula "18"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
                                                (rule "close" (formula "19") (ifseqformula "1"))
                                             )
                                             (branch "f_3 = Throwable::$cause ∧ o_3 = a_15 FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_3 = Throwable::$message ∧ o_3 = a_15 TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "23") (term "1,0,0,1") (ifseqformula "5"))
                                                   (rule "replace_known_right" (formula "23") (term "0,1") (ifseqformula "21"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "notRight" (formula "23"))
                                                   (rule "applyEqRigid" (formula "24") (term "2,0") (ifseqformula "5"))
                                                   (rule "narrowSelectType" (formula "24") (term "0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "24"))
                                                   (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "eqSymm" (formula "23"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "false_right" (formula "18"))
                                                   (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "false_right" (formula "18"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "close" (formula "18") (ifseqformula "6"))
                                                )
                                                (branch "f_3 = Throwable::$message ∧ o_3 = a_15 FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "false_right" (formula "18"))
                                                      (rule "applyEq" (formula "22") (term "1,0,0,1") (ifseqformula "5"))
                                                      (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "20"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "notRight" (formula "22"))
                                                      (rule "applyEq" (formula "23") (term "2,0") (ifseqformula "5"))
                                                      (rule "narrowSelectType" (formula "23") (term "0") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "18") (term "0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "false_right" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "false_right" (formula "18"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "6"))
                                                      (rule "close" (formula "18") (ifseqformula "6"))
                                                   )
                                                   (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = a_15 FALSE"
                                                      (rule "close" (formula "24") (ifseqformula "4"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "ClassCastException (!(a_12 instanceof java.lang.Throwable))"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "closeTrue" (formula "15"))
                              )
                           )
                           (branch "if a_12 instanceof java.lang.Throwable false"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (a_13 = null)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Exceptional Post (unsign)"
                  (builtin "One Step Simplification" (formula "11"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "translateJavaAddInt" (formula "9") (term "1,1,0,1"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "11"))
                  (rule "notLeft" (formula "9"))
                  (rule "close" (formula "12") (ifseqformula "11"))
               )
               (branch "Pre (unsign)"
                  (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "2")))
                  (rule "closeTrue" (formula "10"))
               )
            )
            (branch "Null Reference (_b = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (_b != null, but 2 Out of Bounds!)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
               (rule "less_literals" (formula "1") (term "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "blockThrow" (formula "11") (term "1"))
               (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
               (rule "leq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "arrayLengthNotNegative" (formula "1") (term "0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "arrayLengthIsAShort" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "throwUnfold" (formula "10") (term "1") (inst "#v0=a"))
               (rule "variableDeclarationAssign" (formula "10") (term "1"))
               (rule "variableDeclaration" (formula "10") (term "1") (newnames "a_8"))
               (rule "instanceCreationAssignment" (formula "10") (term "1") (inst "#v0=a_9"))
               (rule "variableDeclarationAssign" (formula "10") (term "1"))
               (rule "variableDeclaration" (formula "10") (term "1") (newnames "a_9"))
               (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "10") (term "1") (inst "#v0=a_10"))
               (rule "variableDeclaration" (formula "10") (term "1") (newnames "a_10"))
               (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<createObject>_1,savedHeapBefore_<createObject>_1"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "variableDeclaration" (formula "10") (term "1") (newnames "__NEW___2"))
               (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "10") (term "1") (inst "#v0=a_11"))
               (rule "variableDeclaration" (formula "10") (term "1") (newnames "a_11"))
               (rule "allocateInstance" (formula "10"))
               (builtin "One Step Simplification" (formula "11"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "2"))
               (rule "notLeft" (formula "1"))
               (rule "blockEmpty" (formula "13") (term "1"))
               (rule "assignment" (formula "13") (term "1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<create>_1,savedHeapBefore_<create>_1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "assignment_write_attribute_this" (formula "13") (term "1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallWithinClass" (formula "13") (term "1"))
               (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<prepareEnter>_1,savedHeapBefore_<prepareEnter>_1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallSuper" (formula "13") (term "1"))
               (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<prepare>_9,savedHeapBefore_<prepare>_9"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallSuper" (formula "13") (term "1"))
               (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<prepare>_10,savedHeapBefore_<prepare>_10"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallSuper" (formula "13") (term "1"))
               (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<prepare>_11,savedHeapBefore_<prepare>_11"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallSuper" (formula "13") (term "1"))
               (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<prepare>_12,savedHeapBefore_<prepare>_12"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallSuper" (formula "13") (term "1"))
               (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<prepare>_13,savedHeapBefore_<prepare>_13"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
               (rule "blockEmpty" (formula "13") (term "1"))
               (rule "assignment_write_attribute_this" (formula "13") (term "1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "castDel" (formula "13") (term "1,0,1,0"))
               (rule "assignment_write_attribute_this" (formula "13") (term "1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "castDel" (formula "13") (term "1,0,1,0"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
               (rule "blockEmpty" (formula "13") (term "1"))
               (rule "methodCallReturnIgnoreResult" (formula "13") (term "1"))
               (rule "methodCallReturn" (formula "13") (term "1"))
               (rule "assignment" (formula "13") (term "1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
               (rule "blockEmpty" (formula "13") (term "1"))
               (rule "assignment" (formula "13") (term "1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<init>_11,savedHeapBefore_<init>_11"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallSuper" (formula "13") (term "1"))
               (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<init>_12,savedHeapBefore_<init>_12"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallSuper" (formula "13") (term "1"))
               (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<init>_13,savedHeapBefore_<init>_13"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallSuper" (formula "13") (term "1"))
               (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<init>_14,savedHeapBefore_<init>_14"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallSuper" (formula "13") (term "1"))
               (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<init>_15,savedHeapBefore_<init>_15"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallSuper" (formula "13") (term "1"))
               (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<init>_16,savedHeapBefore_<init>_16"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
               (rule "blockEmpty" (formula "13") (term "1"))
               (rule "assignment_write_attribute_this" (formula "13") (term "1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "castDel" (formula "13") (term "1,0,1,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "assignment_write_attribute_this" (formula "13") (term "1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "castDel" (formula "13") (term "1,0,1,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
               (rule "methodCallEmpty" (formula "13") (term "1"))
               (rule "blockEmpty" (formula "13") (term "1"))
               (rule "assignment_write_attribute" (formula "13") (term "1"))
               (branch "Normal Execution (a_9 != null)"
                  (builtin "One Step Simplification" (formula "14"))
                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "10")))
                  (rule "false_right" (formula "13"))
                  (rule "assignment" (formula "13") (term "1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "methodCallParamThrow" (formula "13") (term "1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "tryCatchThrow" (formula "13") (term "1"))
                  (rule "ifElseUnfold" (formula "13") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_18"))
                  (rule "equality_comparison_simple" (formula "13") (term "1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "replace_known_right" (formula "13") (term "0,0,1,0") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "ifElseSplit" (formula "13"))
                  (branch "if x_18 true"
                     (builtin "One Step Simplification" (formula "14"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_18 false"
                     (builtin "One Step Simplification" (formula "14"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifElseSplit" (formula "13"))
                     (branch "if a_8 instanceof java.lang.Throwable true"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "e_2"))
                        (rule "reference_type_cast" (formula "13") (term "1"))
                        (branch "Normal Execution (a_8 instanceof java.lang.Throwable)"
                           (builtin "One Step Simplification" (formula "14"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "assignment" (formula "13") (term "1"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "emptyModality" (formula "13") (term "1"))
                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                           (rule "allRight" (formula "13") (inst "sk=f_2"))
                           (rule "allRight" (formula "13") (inst "sk=o_2"))
                           (rule "orRight" (formula "13"))
                           (rule "eqSymm" (formula "14"))
                           (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=f_2_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "15"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_2"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_3"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "commute_and" (formula "4") (term "0,0"))
                           (rule "commute_and" (formula "3") (term "0,0"))
                           (rule "commute_and" (formula "2") (term "0,0"))
                           (rule "commute_and" (formula "1") (term "0,0"))
                           (rule "ifthenelse_split" (formula "13") (term "0"))
                           (branch "b[1] ≤ -1 TRUE"
                              (rule "polySimp_homoEq" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq0" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "add_literals" (formula "13") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "ifthenelse_split" (formula "11") (term "0"))
                              (branch "b[0] ≤ -1 TRUE"
                                 (rule "polySimp_homoEq" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                 (rule "inEqSimp_homoInEq0" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                 (rule "add_literals" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_2 = java.lang.Object::<created> ∧ o_2 = a_11 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "17") (term "1,0,0,1") (ifseqformula "2"))
                                    (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "notRight" (formula "17"))
                                    (rule "applyEqRigid" (formula "18") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "6"))
                                    (rule "applyEqRigid" (formula "18") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "close" (formula "15") (ifseqformula "3"))
                                 )
                                 (branch "f_2 = java.lang.Object::<created> ∧ o_2 = a_11 FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "cut_direct" (formula "19") (term "0,0"))
                                    (branch "CUT: o_2 = null TRUE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "false_right" (formula "20"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "3") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "18")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_2 = null FALSE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "notRight" (formula "20"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_2 = Throwable::$cause ∧ o_2 = a_11 TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "applyEqRigid" (formula "21") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "7"))
                                          (rule "eqSymm" (formula "21"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "18") (ifseqformula "1"))
                                       )
                                       (branch "f_2 = Throwable::$cause ∧ o_2 = a_11 FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_2 = Throwable::$message ∧ o_2 = a_11 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "false_right" (formula "17"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "false_right" (formula "16"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "19") (term "0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "16") (ifseqformula "1"))
                                          )
                                          (branch "f_2 = Throwable::$message ∧ o_2 = a_11 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_2 = java.lang.Object::<initialized> ∧ o_2 = a_11 TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "false_right" (formula "15"))
                                                (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "false_right" (formula "15"))
                                                (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "false_right" (formula "15"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "18") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "16") (ifseqformula "1"))
                                             )
                                             (branch "f_2 = java.lang.Object::<initialized> ∧ o_2 = a_11 FALSE"
                                                (rule "close" (formula "22") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "b[0] ≤ -1 FALSE"
                                 (rule "inEqSimp_leqRight" (formula "15"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_2 = java.lang.Object::<created> ∧ o_2 = a_11 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEq" (formula "20") (term "1,0,0,1") (ifseqformula "3"))
                                    (rule "replace_known_right" (formula "20") (term "0,1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "notRight" (formula "20"))
                                    (rule "applyEq" (formula "21") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "10"))
                                    (rule "eqSymm" (formula "21"))
                                    (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "eqSymm" (formula "18"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "close" (formula "15") (ifseqformula "4"))
                                 )
                                 (branch "f_2 = java.lang.Object::<created> ∧ o_2 = a_11 FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_2 = Throwable::$cause ∧ o_2 = a_11 TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "false_right" (formula "15"))
                                       (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "17") (term "1,0,0,1") (ifseqformula "3"))
                                       (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "notRight" (formula "17"))
                                       (rule "applyEqRigid" (formula "18") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "7"))
                                       (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "4"))
                                       (rule "close" (formula "15") (ifseqformula "4"))
                                    )
                                    (branch "f_2 = Throwable::$cause ∧ o_2 = a_11 FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_2 = Throwable::$message ∧ o_2 = a_11 TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "false_right" (formula "15"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "19") (term "0") (ifseqformula "6"))
                                          (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "3"))
                                          (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "notRight" (formula "18"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "false_right" (formula "15"))
                                          (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                          (rule "close" (formula "16") (ifseqformula "1"))
                                       )
                                       (branch "f_2 = Throwable::$message ∧ o_2 = a_11 FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_2 = java.lang.Object::<initialized> ∧ o_2 = a_11 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "false_right" (formula "15"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "false_right" (formula "14"))
                                             (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "3"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "notRight" (formula "18"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "false_right" (formula "15"))
                                             (rule "applyEqRigid" (formula "18") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                             (rule "close" (formula "16") (ifseqformula "1"))
                                          )
                                          (branch "f_2 = java.lang.Object::<initialized> ∧ o_2 = a_11 FALSE"
                                             (rule "close" (formula "21") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "b[1] ≤ -1 FALSE"
                              (rule "inEqSimp_leqRight" (formula "14"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                              (rule "ifthenelse_split" (formula "12") (term "0"))
                              (branch "b[0] ≤ -1 TRUE"
                                 (rule "polySimp_homoEq" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                 (rule "inEqSimp_homoInEq0" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "add_literals" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_2 = java.lang.Object::<created> ∧ o_2 = a_11 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "17") (term "1,0,0,1") (ifseqformula "3"))
                                    (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "notRight" (formula "17"))
                                    (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "18") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "7"))
                                    (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "close" (formula "15") (ifseqformula "4"))
                                 )
                                 (branch "f_2 = java.lang.Object::<created> ∧ o_2 = a_11 FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_2 = Throwable::$cause ∧ o_2 = a_11 TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "18") (term "1,0,0,1") (ifseqformula "3"))
                                       (rule "replace_known_right" (formula "18") (term "0,1") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "notRight" (formula "18"))
                                       (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "19") (term "0") (ifseqformula "7"))
                                       (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "false_right" (formula "15"))
                                       (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "4"))
                                       (rule "close" (formula "15") (ifseqformula "4"))
                                    )
                                    (branch "f_2 = Throwable::$cause ∧ o_2 = a_11 FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_2 = Throwable::$message ∧ o_2 = a_11 TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "false_right" (formula "14"))
                                          (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "false_right" (formula "14"))
                                          (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "3"))
                                          (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "14"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "notRight" (formula "17"))
                                          (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "18") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                          (rule "close" (formula "16") (ifseqformula "1"))
                                       )
                                       (branch "f_2 = Throwable::$message ∧ o_2 = a_11 FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_2 = java.lang.Object::<initialized> ∧ o_2 = a_11 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "false_right" (formula "16"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "false_right" (formula "15"))
                                             (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "false_right" (formula "14"))
                                             (rule "applyEq" (formula "17") (term "1,0,0,1") (ifseqformula "3"))
                                             (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "notRight" (formula "17"))
                                             (rule "applyEqRigid" (formula "18") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "4"))
                                             (rule "close" (formula "15") (ifseqformula "4"))
                                          )
                                          (branch "f_2 = java.lang.Object::<initialized> ∧ o_2 = a_11 FALSE"
                                             (rule "close" (formula "21") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "b[0] ≤ -1 FALSE"
                                 (rule "inEqSimp_leqRight" (formula "15"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch "f_2 = java.lang.Object::<created> ∧ o_2 = a_11 TRUE"
                                    (rule "andLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectType" (formula "19") (term "0") (ifseqformula "8"))
                                    (rule "eqSymm" (formula "19"))
                                    (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "4"))
                                    (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "notRight" (formula "18"))
                                    (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "eqSymm" (formula "18"))
                                    (rule "close" (formula "18") (ifseqformula "1"))
                                 )
                                 (branch "f_2 = java.lang.Object::<created> ∧ o_2 = a_11 FALSE"
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "f_2 = Throwable::$cause ∧ o_2 = a_11 TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "applyEqRigid" (formula "20") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "20") (term "0") (ifseqformula "8"))
                                       (rule "eqSymm" (formula "20"))
                                       (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "4"))
                                       (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "notRight" (formula "19"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "eqSymm" (formula "19"))
                                       (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "false_right" (formula "15"))
                                       (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                       (rule "close" (formula "16") (ifseqformula "1"))
                                    )
                                    (branch "f_2 = Throwable::$cause ∧ o_2 = a_11 FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "f_2 = Throwable::$message ∧ o_2 = a_11 TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "false_right" (formula "16"))
                                          (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "false_right" (formula "15"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "18") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "17") (term "1,0,0,1") (ifseqformula "4"))
                                          (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "notRight" (formula "17"))
                                          (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "5"))
                                          (rule "close" (formula "15") (ifseqformula "5"))
                                       )
                                       (branch "f_2 = Throwable::$message ∧ o_2 = a_11 FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_2 = java.lang.Object::<initialized> ∧ o_2 = a_11 TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEq" (formula "20") (term "1,0,0,1") (ifseqformula "4"))
                                             (rule "replace_known_right" (formula "20") (term "0,1") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "notRight" (formula "20"))
                                             (rule "applyEqRigid" (formula "21") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "8"))
                                             (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "false_right" (formula "15"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "false_right" (formula "15"))
                                             (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "false_right" (formula "15"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "5"))
                                             (rule "close" (formula "15") (ifseqformula "5"))
                                          )
                                          (branch "f_2 = java.lang.Object::<initialized> ∧ o_2 = a_11 FALSE"
                                             (rule "close" (formula "21") (ifseqformula "3"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "ClassCastException (!(a_8 instanceof java.lang.Throwable))"
                           (builtin "One Step Simplification" (formula "14"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "closeTrue" (formula "13"))
                        )
                     )
                     (branch "if a_8 instanceof java.lang.Throwable false"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Null Reference (a_9 = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Exceptional Post (unsign)"
            (builtin "One Step Simplification" (formula "9"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "translateJavaAddInt" (formula "7") (term "1,1,0,1"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "7"))
            (rule "close" (formula "10") (ifseqformula "9"))
         )
         (branch "Pre (unsign)"
            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")))
            (rule "closeTrue" (formula "8"))
         )
      )
      (branch "Null Reference (_b = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (_b != null, but 1 Out of Bounds!)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
         (rule "less_literals" (formula "1") (term "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "blockThrow" (formula "9") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "leq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "arrayLengthNotNegative" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "arrayLengthIsAShort" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "throwUnfold" (formula "8") (term "1") (inst "#v0=a"))
         (rule "variableDeclarationAssign" (formula "8") (term "1"))
         (rule "variableDeclaration" (formula "8") (term "1") (newnames "a_4"))
         (rule "instanceCreationAssignment" (formula "8") (term "1") (inst "#v0=a_5"))
         (rule "variableDeclarationAssign" (formula "8") (term "1"))
         (rule "variableDeclaration" (formula "8") (term "1") (newnames "a_5"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "8") (term "1") (inst "#v0=a_6"))
         (rule "variableDeclaration" (formula "8") (term "1") (newnames "a_6"))
         (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<createObject>_0,savedHeapBefore_<createObject>_0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "variableDeclaration" (formula "8") (term "1") (newnames "__NEW___1"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "8") (term "1") (inst "#v0=a_7"))
         (rule "variableDeclaration" (formula "8") (term "1") (newnames "a_7"))
         (rule "allocateInstance" (formula "8"))
         (builtin "One Step Simplification" (formula "9"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "2"))
         (rule "notLeft" (formula "1"))
         (rule "blockEmpty" (formula "11") (term "1"))
         (rule "assignment" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<create>_0,savedHeapBefore_<create>_0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "assignment_write_attribute_this" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallWithinClass" (formula "11") (term "1"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<prepareEnter>_0,savedHeapBefore_<prepareEnter>_0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallSuper" (formula "11") (term "1"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallSuper" (formula "11") (term "1"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<prepare>_5,savedHeapBefore_<prepare>_5"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallSuper" (formula "11") (term "1"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<prepare>_6,savedHeapBefore_<prepare>_6"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallSuper" (formula "11") (term "1"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<prepare>_7,savedHeapBefore_<prepare>_7"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallSuper" (formula "11") (term "1"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<prepare>_8,savedHeapBefore_<prepare>_8"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "blockEmpty" (formula "11") (term "1"))
         (rule "assignment_write_attribute_this" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "castDel" (formula "11") (term "1,0,1,0"))
         (rule "assignment_write_attribute_this" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "castDel" (formula "11") (term "1,0,1,0"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "blockEmpty" (formula "11") (term "1"))
         (rule "methodCallReturnIgnoreResult" (formula "11") (term "1"))
         (rule "methodCallReturn" (formula "11") (term "1"))
         (rule "assignment" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "blockEmpty" (formula "11") (term "1"))
         (rule "assignment" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<init>_5,savedHeapBefore_<init>_5"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallSuper" (formula "11") (term "1"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<init>_6,savedHeapBefore_<init>_6"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallSuper" (formula "11") (term "1"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<init>_7,savedHeapBefore_<init>_7"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallSuper" (formula "11") (term "1"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<init>_8,savedHeapBefore_<init>_8"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallSuper" (formula "11") (term "1"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<init>_9,savedHeapBefore_<init>_9"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallSuper" (formula "11") (term "1"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<init>_10,savedHeapBefore_<init>_10"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "blockEmpty" (formula "11") (term "1"))
         (rule "assignment_write_attribute_this" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "castDel" (formula "11") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "assignment_write_attribute_this" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "castDel" (formula "11") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "blockEmpty" (formula "11") (term "1"))
         (rule "assignment_write_attribute" (formula "11") (term "1"))
         (branch "Normal Execution (a_5 != null)"
            (builtin "One Step Simplification" (formula "12"))
            (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "8")))
            (rule "false_right" (formula "11"))
            (rule "assignment" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "methodCallParamThrow" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "tryCatchThrow" (formula "11") (term "1"))
            (rule "ifElseUnfold" (formula "11") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_12"))
            (rule "equality_comparison_simple" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "replace_known_right" (formula "11") (term "0,0,1,0") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "ifElseSplit" (formula "11"))
            (branch "if x_12 true"
               (builtin "One Step Simplification" (formula "12"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_12 false"
               (builtin "One Step Simplification" (formula "12"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "11"))
               (branch "if a_4 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "11") (term "1") (newnames "e_1"))
                  (rule "reference_type_cast" (formula "11") (term "1"))
                  (branch "Normal Execution (a_4 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "12"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "11") (term "1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "emptyModality" (formula "11") (term "1"))
                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")))
                     (rule "allRight" (formula "11") (inst "sk=f_1"))
                     (rule "allRight" (formula "11") (inst "sk=o_1"))
                     (rule "orRight" (formula "11"))
                     (rule "eqSymm" (formula "12"))
                     (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=f_1_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "13"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_2"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_3"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "ifthenelse_split" (formula "11") (term "0"))
                     (branch "b[0] ≤ -1 TRUE"
                        (rule "polySimp_homoEq" (formula "12"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0"))
                        (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq0" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "f_1 = java.lang.Object::<created> ∧ o_1 = a_7 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEq" (formula "18") (term "2,0") (ifseqformula "1"))
                           (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "8"))
                           (rule "eqSymm" (formula "18"))
                           (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "notRight" (formula "17"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "eqSymm" (formula "15"))
                           (rule "close" (formula "15") (ifseqformula "1"))
                        )
                        (branch "f_1 = java.lang.Object::<created> ∧ o_1 = a_7 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "f_1 = Throwable::$cause ∧ o_1 = a_7 TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "applyEqRigid" (formula "16") (term "2,0") (ifseqformula "1"))
                              (rule "narrowSelectType" (formula "16") (term "0") (ifseqformula "5"))
                              (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "false_right" (formula "11"))
                              (rule "applyEq" (formula "14") (term "1,0,0,1") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "notRight" (formula "14"))
                              (rule "applyEqRigid" (formula "15") (term "1,0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3"))
                              (rule "close" (formula "12") (ifseqformula "3"))
                           )
                           (branch "f_1 = Throwable::$cause ∧ o_1 = a_7 FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_1 = Throwable::$message ∧ o_1 = a_7 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "false_right" (formula "13"))
                                 (rule "applyEq" (formula "17") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "17") (term "0") (ifseqformula "6"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "false_right" (formula "11"))
                                 (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "2"))
                                 (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "notRight" (formula "14"))
                                 (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "13") (ifseqformula "1"))
                              )
                              (branch "f_1 = Throwable::$message ∧ o_1 = a_7 FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_1 = java.lang.Object::<initialized> ∧ o_1 = a_7 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "false_right" (formula "11"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "false_right" (formula "12"))
                                    (rule "applyEq" (formula "15") (term "1,0,0,1") (ifseqformula "2"))
                                    (rule "replace_known_right" (formula "15") (term "0,1") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "notRight" (formula "15"))
                                    (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "16") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "16") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "false_right" (formula "12"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "close" (formula "12") (ifseqformula "3"))
                                 )
                                 (branch "f_1 = java.lang.Object::<initialized> ∧ o_1 = a_7 FALSE"
                                    (rule "close" (formula "18") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                     )
                     (branch "b[0] ≤ -1 FALSE"
                        (rule "inEqSimp_leqRight" (formula "12"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_1 = java.lang.Object::<created> ∧ o_1 = a_7 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "applyEq" (formula "17") (term "2,0") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "17") (term "0") (ifseqformula "8"))
                           (rule "eqSymm" (formula "17"))
                           (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "3"))
                           (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "notRight" (formula "15"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "eqSymm" (formula "15"))
                           (rule "close" (formula "15") (ifseqformula "1"))
                        )
                        (branch "f_1 = java.lang.Object::<created> ∧ o_1 = a_7 FALSE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "f_1 = Throwable::$cause ∧ o_1 = a_7 TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "false_right" (formula "12"))
                              (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEqRigid" (formula "15") (term "2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "15") (term "0") (ifseqformula "6"))
                              (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "3"))
                              (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "notRight" (formula "14"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                              (rule "close" (formula "13") (ifseqformula "1"))
                           )
                           (branch "f_1 = Throwable::$cause ∧ o_1 = a_7 FALSE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "f_1 = Throwable::$message ∧ o_1 = a_7 TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "14"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "notRight" (formula "17"))
                                 (rule "applyEqRigid" (formula "18") (term "2,0") (ifseqformula "3"))
                                 (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "8"))
                                 (rule "eqSymm" (formula "18"))
                                 (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "false_right" (formula "13"))
                                 (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "false_right" (formula "12"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                 (rule "close" (formula "13") (ifseqformula "1"))
                              )
                              (branch "f_1 = Throwable::$message ∧ o_1 = a_7 FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_1 = java.lang.Object::<initialized> ∧ o_1 = a_7 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "false_right" (formula "11"))
                                    (rule "applyEq" (formula "16") (term "1,0,0,1") (ifseqformula "3"))
                                    (rule "replace_known_right" (formula "16") (term "0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "notRight" (formula "16"))
                                    (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "false_right" (formula "12"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "false_right" (formula "12"))
                                    (rule "applyEq" (formula "15") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectType" (formula "15") (term "0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                    (rule "close" (formula "12") (ifseqformula "1"))
                                 )
                                 (branch "f_1 = java.lang.Object::<initialized> ∧ o_1 = a_7 FALSE"
                                    (rule "close" (formula "18") (ifseqformula "2"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "ClassCastException (!(a_4 instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "12"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "closeTrue" (formula "11"))
                  )
               )
               (branch "if a_4 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (a_5 = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Exceptional Post (unsign)"
      (builtin "One Step Simplification" (formula "5"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "translateJavaAddInt" (formula "5") (term "1,1,0,1"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "5"))
      (rule "close" (formula "8") (ifseqformula "7"))
   )
   (branch "Pre (unsign)"
      (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "2")))
      (rule "closeTrue" (formula "6"))
   )
)
(branch "Null Reference (_b = null)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
   (rule "closeFalse" (formula "1"))
)
(branch "Index Out of Bounds (_b != null, but 0 Out of Bounds!)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
   (rule "less_literals" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "blockThrow" (formula "6") (term "1"))
   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
   (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
   (rule "leq_literals" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
   (rule "qeq_literals" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "arrayLengthIsAShort" (formula "1") (term "0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "throwUnfold" (formula "6") (term "1") (inst "#v0=a"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "a"))
   (rule "instanceCreationAssignment" (formula "6") (term "1") (inst "#v0=a_1"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "a_1"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "6") (term "1") (inst "#v0=a_2"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "a_2"))
   (rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "__NEW__"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "6") (term "1") (inst "#v0=a_3"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "a_3"))
   (rule "allocateInstance" (formula "6"))
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "2"))
   (rule "notLeft" (formula "1"))
   (rule "blockEmpty" (formula "9") (term "1"))
   (rule "assignment" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "assignment_write_attribute_this" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallWithinClass" (formula "9") (term "1"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallSuper" (formula "9") (term "1"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallSuper" (formula "9") (term "1"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallSuper" (formula "9") (term "1"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallSuper" (formula "9") (term "1"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallSuper" (formula "9") (term "1"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "blockEmpty" (formula "9") (term "1"))
   (rule "assignment_write_attribute_this" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "1,0,1,0"))
   (rule "assignment_write_attribute_this" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "1,0,1,0"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "blockEmpty" (formula "9") (term "1"))
   (rule "methodCallReturnIgnoreResult" (formula "9") (term "1"))
   (rule "methodCallReturn" (formula "9") (term "1"))
   (rule "assignment" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "blockEmpty" (formula "9") (term "1"))
   (rule "assignment" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallSuper" (formula "9") (term "1"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallSuper" (formula "9") (term "1"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallSuper" (formula "9") (term "1"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallSuper" (formula "9") (term "1"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallSuper" (formula "9") (term "1"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "blockEmpty" (formula "9") (term "1"))
   (rule "assignment_write_attribute_this" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "1,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "assignment_write_attribute_this" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "1,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "blockEmpty" (formula "9") (term "1"))
   (rule "assignment_write_attribute" (formula "9") (term "1"))
   (branch "Normal Execution (a_1 != null)"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
      (rule "false_right" (formula "9"))
      (rule "assignment" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "methodCallParamThrow" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "tryCatchThrow" (formula "9") (term "1"))
      (rule "ifElseUnfold" (formula "9") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_6"))
      (rule "equality_comparison_simple" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "replace_known_right" (formula "9") (term "0,0,1,0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "ifElseSplit" (formula "9"))
      (branch "if x_6 true"
         (builtin "One Step Simplification" (formula "10"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_6 false"
         (builtin "One Step Simplification" (formula "10"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "9"))
         (branch "if a instanceof java.lang.Throwable true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "9") (term "1") (newnames "e"))
            (rule "reference_type_cast" (formula "9") (term "1"))
            (branch "Normal Execution (a instanceof java.lang.Throwable)"
               (builtin "One Step Simplification" (formula "10"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "assignment" (formula "9") (term "1"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "emptyModality" (formula "9") (term "1"))
               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
               (rule "allRight" (formula "9") (inst "sk=f_0"))
               (rule "allRight" (formula "9") (inst "sk=o_0"))
               (rule "orRight" (formula "9"))
               (rule "eqSymm" (formula "10"))
               (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "11"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "10"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "commute_and" (formula "4") (term "0,0"))
               (rule "commute_and" (formula "3") (term "0,0"))
               (rule "commute_and" (formula "2") (term "0,0"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "2"))
                  (rule "applyEqRigid" (formula "15") (term "2,0") (ifseqformula "1"))
                  (rule "narrowSelectType" (formula "15") (term "0") (ifseqformula "8"))
                  (rule "eqSymm" (formula "15"))
                  (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "eqSymm" (formula "12"))
                  (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
                  (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "notRight" (formula "11"))
                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                  (rule "close" (formula "10") (ifseqformula "1"))
               )
               (branch "f_0 = java.lang.Object::<created> ∧ o_0 = a_3 FALSE"
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch "f_0 = Throwable::$cause ∧ o_0 = a_3 TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "1"))
                     (rule "narrowSelectType" (formula "14") (term "0") (ifseqformula "6"))
                     (rule "eqSymm" (formula "14"))
                     (rule "applyEq" (formula "13") (term "1,0,0,1") (ifseqformula "2"))
                     (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "11"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "notRight" (formula "13"))
                     (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "eqSymm" (formula "13"))
                     (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "false_right" (formula "9"))
                     (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "3"))
                     (rule "close" (formula "9") (ifseqformula "3"))
                  )
                  (branch "f_0 = Throwable::$cause ∧ o_0 = a_3 FALSE"
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "f_0 = Throwable::$message ∧ o_0 = a_3 TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "false_right" (formula "10"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "false_right" (formula "9"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "1,0,0,1") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "12") (term "0,1") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "notRight" (formula "12"))
                        (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "12") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "12") (term "0") (ifseqformula "6"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3"))
                        (rule "close" (formula "9") (ifseqformula "3"))
                     )
                     (branch "f_0 = Throwable::$message ∧ o_0 = a_3 FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "applyEq" (formula "14") (term "1,0,0,1") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "notRight" (formula "14"))
                           (rule "applyEqRigid" (formula "15") (term "2,0") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "15") (term "0") (ifseqformula "6"))
                           (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "false_right" (formula "9"))
                           (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "false_right" (formula "9"))
                           (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "false_right" (formula "9"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3"))
                           (rule "close" (formula "9") (ifseqformula "3"))
                        )
                        (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = a_3 FALSE"
                           (rule "close" (formula "15") (ifseqformula "1"))
                        )
                     )
                  )
               )
            )
            (branch "ClassCastException (!(a instanceof java.lang.Throwable))"
               (builtin "One Step Simplification" (formula "10"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "closeTrue" (formula "9"))
            )
         )
         (branch "if a instanceof java.lang.Throwable false"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (a_1 = null)"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
