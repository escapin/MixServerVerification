\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Apr 12 15:07:40 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=30000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue Apr 12 15:07:40 CEST 2016
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:trans([B,[B,[B)].JML model_behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:trans([B,[B,[B)].JML model_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))

(autoModeTime "26748")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "a,b,c,result,heapAtPre,heapBefore,heapAtPreBefore,o,f,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(builtin "One Step Simplification" (formula "12"))
(builtin "Evaluate Query" (formula "7") (term "0") (newnames "a1,a2,callee,queryResult,res_compare"))
(rule "variableDeclaration" (formula "1") (term "1,0") (newnames "queryResult") (userinteraction))
(rule "notLeft" (formula "1") (userinteraction))
(builtin "Use Operation Contract" (formula "9") (newnames "heapBefore_compare,result_0,exc") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::compare([B,[B)].JML normal_behavior operation contract.0"))
(branch "Post (compare)"
   (builtin "One Step Simplification" (formula "9"))
   (rule "assignment" (formula "10") (term "1") (userinteraction))
   (rule "methodCallEmpty" (formula "10") (term "1,1") (userinteraction))
   (rule "emptyModality" (formula "10") (term "1,1") (userinteraction))
   (builtin "One Step Simplification" (formula "10"))
   (rule "notRight" (formula "10") (userinteraction))
   (rule "applyEq" (formula "10") (term "0,1,0,1") (ifseqformula "1") (userinteraction))
   (rule "andLeft" (formula "10") (userinteraction))
   (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heap,a,b)__0" (formula "8") (term "0") (userinteraction))
   (rule "applyEqReverse" (formula "11") (term "0,1,0") (ifseqformula "1") (userinteraction))
   (rule "andLeft" (formula "11") (userinteraction))
   (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "1") (userinteraction))
   (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "8") (userinteraction))
   (builtin "One Step Simplification" (formula "11"))
   (builtin "Evaluate Query" (formula "9") (term "0") (newnames "a1_0,a2_0,callee,queryResult_0,res_compare_0"))
   (rule "variableDeclaration" (formula "1") (term "1,0") (newnames "queryResult_0") (userinteraction))
   (rule "notLeft" (formula "1") (userinteraction))
   (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_compare_0,result_1,exc_0") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::compare([B,[B)].JML normal_behavior operation contract.0"))
   (branch "Post (compare)"
      (builtin "One Step Simplification" (formula "12"))
      (rule "assignment" (formula "13") (term "1") (userinteraction))
      (rule "methodCallEmpty" (formula "13") (term "1,1") (userinteraction))
      (rule "emptyModality" (formula "13") (term "1,1") (userinteraction))
      (builtin "One Step Simplification" (formula "13"))
      (rule "notRight" (formula "13") (userinteraction))
      (rule "applyEq" (formula "13") (term "0,1,0,1") (ifseqformula "1") (userinteraction))
      (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heap,b,c)_0_1" (formula "10") (term "0") (userinteraction))
      (rule "replace_known_left" (formula "13") (term "1,0,1") (ifseqformula "10") (userinteraction))
      (builtin "One Step Simplification" (formula "13"))
      (rule "andLeft" (formula "13") (userinteraction))
      (rule "andLeft" (formula "14") (userinteraction))
      (builtin "Evaluate Query" (formula "18") (term "0") (newnames "a1_1,a2_1,callee,queryResult_1,res_compare_1"))
      (rule "variableDeclaration" (formula "1") (term "1,0") (newnames "queryResult_1") (userinteraction))
      (rule "notLeft" (formula "1") (userinteraction))
      (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_compare_1,result_2,exc_1") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::compare([B,[B)].JML normal_behavior operation contract.0"))
      (branch "Post (compare)"
         (builtin "One Step Simplification" (formula "15"))
         (rule "assignment" (formula "16") (term "1") (userinteraction))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallEmpty" (formula "16") (term "1") (userinteraction))
         (rule "emptyModality" (formula "16") (term "1") (userinteraction))
         (builtin "One Step Simplification" (formula "16"))
         (rule "notRight" (formula "16") (userinteraction))
         (rule "applyEq" (formula "16") (term "0,1,0,1") (ifseqformula "1") (userinteraction))
         (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heap,a,c)_00_2" (formula "20") (term "0") (userinteraction))
         (rule "replace_known_right" (formula "16") (term "1,0,1") (ifseqformula "20") (userinteraction))
         (builtin "One Step Simplification" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "17"))
         (rule "orRight" (formula "17"))
         (builtin "Evaluate Query" (formula "13") (term "1,1,0,0,0") (newnames "a_0,b_0,callee,queryResult_2,res_min"))
         (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heap,length(a),length(b))_000_3" (formula "14") (term "1,1,0,0,0") (userinteraction))
         (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heap,length(a),length(b))_000_3" (formula "14") (term "1,1,0,0,0,1") (userinteraction))
         (rule "notLeft" (formula "1") (userinteraction))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "queryResult_2") (userinteraction))
         (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_min,result_3,exc_2") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::min(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (min)"
            (rule "assignment" (formula "18") (term "1") (userinteraction))
            (rule "methodCallEmpty" (formula "18") (term "1,1") (userinteraction))
            (rule "emptyModality" (formula "18") (term "1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "18"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "notRight" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "19"))
            (builtin "Evaluate Query" (formula "16") (term "1,1,0,0,0") (newnames "a_1,b_1,callee,queryResult_3,res_min_0"))
            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heap,length(b),length(c))_0000_4" (formula "17") (term "1,1,0,0,0") (userinteraction))
            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heap,length(b),length(c))_0000_4" (formula "17") (term "1,1,0,0,0,1") (userinteraction))
            (rule "variableDeclaration" (formula "1") (term "1,0") (newnames "queryResult_3") (userinteraction))
            (rule "notLeft" (formula "1") (userinteraction))
            (builtin "Use Operation Contract" (formula "21") (newnames "heapBefore_min_0,result_4,exc_3") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::min(int,int)].JML normal_behavior operation contract.0"))
            (branch "Post (min)"
               (builtin "One Step Simplification" (formula "21"))
               (rule "assignment" (formula "22") (term "1") (userinteraction))
               (rule "methodCallEmpty" (formula "22") (term "1,1") (userinteraction))
               (rule "emptyModality" (formula "22") (term "1,1") (userinteraction))
               (builtin "One Step Simplification" (formula "22"))
               (rule "notRight" (formula "22"))
               (rule "andLeft" (formula "22"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "23"))
               (builtin "Evaluate Query" (formula "25") (term "1,1,0,0") (newnames "a_2,b_2,callee,queryResult_4,res_min_1"))
               (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heap,length(a),length(c))_00000_5" (formula "26") (term "1,1,0,0") (userinteraction))
               (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heap,length(a),length(c))_00000_5" (formula "27") (term "1,1,0,0,0") (userinteraction))
               (rule "variableDeclaration" (formula "1") (term "1,0") (newnames "queryResult_4") (userinteraction))
               (rule "notLeft" (formula "1") (userinteraction))
               (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_min_1,result_5,exc_4") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::min(int,int)].JML normal_behavior operation contract.0"))
               (branch "Post (min)"
                  (rule "assignment" (formula "26") (term "1") (userinteraction))
                  (rule "methodCallEmpty" (formula "26") (term "1,1") (userinteraction))
                  (rule "emptyModality" (formula "26") (term "1,1") (userinteraction))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "notRight" (formula "26") (userinteraction))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "andLeft" (formula "26"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "eqSymm" (formula "29") (term "1,0,1,1,0"))
                  (rule "eqSymm" (formula "22") (term "0,1,1"))
                  (rule "eqSymm" (formula "22") (term "0,1"))
                  (rule "eqSymm" (formula "30") (term "1,0,0"))
                  (rule "eqSymm" (formula "28") (term "0,1"))
                  (rule "eqSymm" (formula "28") (term "0,1,1"))
                  (rule "eqSymm" (formula "27") (term "1"))
                  (rule "eqSymm" (formula "25") (term "0,1"))
                  (rule "eqSymm" (formula "25") (term "0,1,1"))
                  (rule "eqSymm" (formula "24") (term "1"))
                  (rule "eqSymm" (formula "21") (term "1"))
                  (rule "eqSymm" (formula "18") (term "1,0,1,1,0,0"))
                  (rule "eqSymm" (formula "18") (term "1,0,0,1"))
                  (rule "eqSymm" (formula "16") (term "1,0,1,1,0,0"))
                  (rule "eqSymm" (formula "16") (term "1,0,0,1"))
                  (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "31"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_leqRight" (formula "34"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "26") (term "0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "23") (term "0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "29") (term "0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "25") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "31") (term "1"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "19") (term "1,1"))
                  (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "29") (term "1,0,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "26") (term "1,0,1") (ifseqformula "3"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0,1"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,1"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                  (rule "nnf_ex2all" (formula "30"))
                  (rule "nnf_imp2or" (formula "18") (term "0,0,1"))
                  (rule "nnf_imp2or" (formula "31") (term "0,0"))
                  (rule "nnf_imp2or" (formula "20") (term "0,0,1"))
                  (rule "nnf_imp2or" (formula "20") (term "0,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_imp2or" (formula "18") (term "0,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "1,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                  (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,1"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,1"))
                  (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,0,1"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,1"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0,0,1"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,1"))
                  (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,1"))
                  (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,0,1"))
                  (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,1"))
                  (rule "mul_literals" (formula "20") (term "1,0,0,0,0,1"))
                  (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,1,0,0"))
                  (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1,1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,1,1,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,0,0,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,1,0,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,1,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,1,1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0,1,1,0,0"))
                  (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                  (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "orLeft" (formula "20"))
                  (branch "∃ int i; ( i ≥ 0 ∧ i ≤ -1 + res_min_0 ∧ ( c[i] ≥ 1 + b[i] ∧ ∀ int j; (j ≤ -1 ∨ j ≥ i ∨ c[j] = b[j])))"
                     (rule "exLeft" (formula "20") (inst "sk=i_4"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "20"))
                     (rule "inEqSimp_homoInEq0" (formula "21"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                     (rule "mul_literals" (formula "21") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                     (rule "orLeft" (formula "18"))
                     (branch "∃ int i; ( i ≥ 0 ∧ i ≤ -1 + res_min ∧ ( b[i] ≥ 1 + a[i] ∧ ∀ int j; (j ≤ -1 ∨ j ≥ i ∨ b[j] = a[j])))"
                        (rule "exLeft" (formula "18") (inst "sk=i_5"))
                        (rule "andLeft" (formula "18"))
                        (rule "andLeft" (formula "19"))
                        (rule "andLeft" (formula "18"))
                        (rule "inEqSimp_homoInEq0" (formula "19"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1"))
                        (rule "mul_literals" (formula "19") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                        (rule "arrayLengthNotNegative" (formula "30") (term "1,0,1,1"))
                        (rule "arrayLengthIsAShort" (formula "31") (term "1,0,1,1"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "arrayLengthNotNegative" (formula "31") (term "0,0,1,1"))
                        (rule "arrayLengthIsAShort" (formula "32") (term "0,0,1,1"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "arrayLengthIsAShort" (formula "38") (term "0,0,1"))
                        (builtin "One Step Simplification" (formula "38"))
                        (rule "true_left" (formula "38"))
                        (rule "arrayLengthNotNegative" (formula "38") (term "0,0,1"))
                        (rule "equiv_left" (formula "29"))
                        (branch "Case 1"
                           (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "30"))
                           (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
                           (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                           (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "30"))
                           (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "30"))
                           (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "30"))
                           (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "30"))
                           (rule "eqSymm" (formula "38") (term "1"))
                           (rule "applyEq" (formula "40") (term "1,0,1,1") (ifseqformula "30"))
                           (rule "applyEq" (formula "33") (term "1,0,1,1") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "notLeft" (formula "33"))
                           (rule "inEqSimp_leqRight" (formula "40"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "equiv_left" (formula "34"))
                           (branch "Case 1"
                              (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "35"))
                              (rule "applyEq" (formula "34") (term "1") (ifseqformula "35"))
                              (rule "applyEq" (formula "32") (term "0") (ifseqformula "35"))
                              (rule "applyEq" (formula "36") (term "1,0,1,1") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "notLeft" (formula "36"))
                              (rule "inEqSimp_leqRight" (formula "40"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "commute_and" (formula "39") (term "1"))
                              (rule "applyEq_and_gen2" (formula "39") (term "1"))
                              (rule "ex_pull_out3" (formula "1") (term "1,0"))
                              (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                              (rule "commute_or" (formula "1") (term "1,0,1,0"))
                              (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                              (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                              (rule "ex_pull_out3" (formula "1") (term "0"))
                              (rule "cnf_rightDist" (formula "1") (term "0,0"))
                              (rule "commute_or_2" (formula "1") (term "1,0,0"))
                              (rule "commute_or" (formula "1") (term "0,1,0,0"))
                              (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                              (rule "commute_or_2" (formula "1") (term "1,0,0,0"))
                              (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
                              (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                              (rule "commute_and_2" (formula "1") (term "0,0"))
                              (rule "equiv_left" (formula "37"))
                              (branch "Case 1"
                                 (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "allRight" (formula "41") (inst "sk=j_149"))
                                 (rule "orRight" (formula "41"))
                                 (rule "orRight" (formula "41"))
                                 (rule "replace_known_left" (formula "40") (term "0,0,1") (ifseqformula "38"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "inEqSimp_geqRight" (formula "42"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "42"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "42"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,0,0,0,0,0,0") (ifseqformula "41"))
                                 (rule "applyEq" (formula "4") (term "1,1,0,0,1,0,0") (ifseqformula "41"))
                                 (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "41"))
                                 (rule "applyEqRigid" (formula "4") (term "1,1,0,0,1,0,0,0") (ifseqformula "41"))
                                 (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "41"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "commute_and" (formula "3") (term "0,0,0"))
                                 (rule "allLeft" (formula "28") (inst "t=i_5"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "20"))
                                 (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "cut_direct" (formula "28") (term "0"))
                                 (branch "CUT: i_5 ≥ i_4 TRUE"
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "allLeft" (formula "23") (inst "t=i_4"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "26"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "cut_direct" (formula "23") (term "0"))
                                    (branch "CUT: i_5 ≤ i_4 TRUE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "inEqSimp_antiSymm" (formula "29") (ifseqformula "23"))
                                       (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq0" (formula "23"))
                                       (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                       (rule "add_literals" (formula "23") (term "1,0"))
                                       (rule "times_zero_1" (formula "23") (term "0"))
                                       (rule "qeq_literals" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "applyEq" (formula "22") (term "0,2,1,1") (ifseqformula "28"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "28"))
                                       (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "27"))
                                       (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "27"))
                                       (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "27"))
                                       (rule "inEqSimp_homoInEq1" (formula "28"))
                                       (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                       (rule "add_literals" (formula "28") (term "1,0"))
                                       (rule "times_zero_1" (formula "28") (term "0"))
                                       (rule "leq_literals" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "applyEqRigid" (formula "21") (term "0,2,0") (ifseqformula "27"))
                                       (rule "allLeft" (formula "28") (inst "t=j_149"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "cut_direct" (formula "28") (term "0"))
                                       (branch "CUT: j_149 ≥ i_4 TRUE"
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "allLeft" (formula "3") (inst "t=j_149"))
                                          (rule "exLeft" (formula "3") (inst "sk=j_184"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "5") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "4") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "3") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "commute_or" (formula "5"))
                                          (rule "commute_or" (formula "4"))
                                          (rule "cut_direct" (formula "3") (term "0"))
                                          (branch "CUT: c[j_149] ≤ a[j_149] TRUE"
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "44"))
                                             (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "3"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                             (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "44") (term "0,0"))
                                             (rule "qeq_literals" (formula "44") (term "0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "false_right" (formula "44"))
                                             (rule "allLeft" (formula "4") (inst "t=i_4"))
                                             (rule "exLeft" (formula "4") (inst "sk=j_186"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "4") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "5") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "commute_or" (formula "6"))
                                             (rule "commute_or" (formula "5"))
                                             (rule "cut_direct" (formula "4") (term "0"))
                                             (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "4"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "28"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "inEqSimp_homoInEq1" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0"))
                                                (rule "add_zero_right" (formula "23") (term "0"))
                                                (rule "leq_literals" (formula "23"))
                                                (rule "closeFalse" (formula "23"))
                                             )
                                             (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_leqRight" (formula "47"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                                (rule "times_zero_1" (formula "5") (term "0,0"))
                                                (rule "add_zero_left" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "29") (term "0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "allLeft" (formula "27") (inst "t=j_186"))
                                                (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_contradInEq0" (formula "27") (term "0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                                (rule "leq_literals" (formula "27") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "allLeft" (formula "34") (inst "t=j_186"))
                                                (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "27"))
                                                (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "34") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "34"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0"))
                                                (rule "add_literals" (formula "7") (term "0"))
                                                (rule "leq_literals" (formula "7"))
                                                (rule "closeFalse" (formula "7"))
                                             )
                                          )
                                          (branch "CUT: c[j_149] ≤ a[j_149] FALSE"
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "inEqSimp_leqRight" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                             (rule "times_zero_1" (formula "4") (term "0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "allLeft" (formula "6") (inst "t=i_4"))
                                             (rule "exLeft" (formula "6") (inst "sk=j_185"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "30"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "8") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "7") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "30"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "30"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "commute_or" (formula "7"))
                                             (rule "commute_or" (formula "8"))
                                             (rule "cut_direct" (formula "6") (term "0"))
                                             (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "6"))
                                                (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "30"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "inEqSimp_homoInEq1" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0"))
                                                (rule "add_literals" (formula "25") (term "0"))
                                                (rule "leq_literals" (formula "25"))
                                                (rule "closeFalse" (formula "25"))
                                             )
                                             (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "notLeft" (formula "6"))
                                                (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_leqRight" (formula "49"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                                (rule "times_zero_1" (formula "7") (term "0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "allLeft" (formula "35") (inst "t=j_185"))
                                                (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                                (rule "leq_literals" (formula "35") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "35"))
                                                (rule "allLeft" (formula "29") (inst "t=j_185"))
                                                (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "29") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_contradInEq0" (formula "29") (ifseqformula "9"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "inEqSimp_homoInEq1" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                (rule "add_literals" (formula "29") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0"))
                                                (rule "add_zero_right" (formula "29") (term "0"))
                                                (rule "leq_literals" (formula "29"))
                                                (rule "closeFalse" (formula "29"))
                                             )
                                          )
                                       )
                                       (branch "CUT: j_149 ≥ i_4 FALSE"
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_geqRight" (formula "43"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "29"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "26") (term "0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "allLeft" (formula "24") (inst "t=j_149"))
                                          (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "24"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                    (branch "CUT: i_5 ≤ i_4 FALSE"
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_leqRight" (formula "44"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "24"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0"))
                                       (rule "qeq_literals" (formula "30") (term "0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "allLeft" (formula "30") (inst "t=j_149"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "cut_direct" (formula "30") (term "0"))
                                       (branch "CUT: j_149 ≥ i_4 TRUE"
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "allLeft" (formula "25") (inst "t=j_149"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "cut_direct" (formula "25") (term "0"))
                                          (branch "CUT: j_149 ≥ i_5 TRUE"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "allLeft" (formula "4") (inst "t=j_149"))
                                             (rule "exLeft" (formula "4") (inst "sk=j_177"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "5") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "4") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "commute_or" (formula "6"))
                                             (rule "commute_or" (formula "5"))
                                             (rule "cut_direct" (formula "4") (term "0"))
                                             (branch "CUT: c[j_149] ≤ a[j_149] TRUE"
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "47"))
                                                (rule "inEqSimp_contradEq3" (formula "47") (ifseqformula "4"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                                (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "47") (term "0,0"))
                                                (rule "qeq_literals" (formula "47") (term "0"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "false_right" (formula "47"))
                                                (rule "allLeft" (formula "5") (inst "t=i_5"))
                                                (rule "exLeft" (formula "5") (inst "sk=j_181"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "25"))
                                                (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "26"))
                                                (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "26"))
                                                (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "26"))
                                                (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "25"))
                                                (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "25"))
                                                (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "commute_or" (formula "7"))
                                                (rule "commute_or" (formula "6"))
                                                (rule "cut_direct" (formula "5") (term "0"))
                                                (branch "CUT: c[i_5] ≤ a[i_5] TRUE"
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "allLeft" (formula "6") (inst "t=i_4"))
                                                   (rule "exLeft" (formula "6") (inst "sk=j_183"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "33"))
                                                   (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "35"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "33"))
                                                   (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "35"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "33"))
                                                   (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "35"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "commute_or" (formula "8"))
                                                   (rule "commute_or" (formula "7"))
                                                   (rule "cut_direct" (formula "6") (term "0"))
                                                   (branch "CUT: res_min ≤ i_4 TRUE"
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "6"))
                                                      (rule "times_zero_1" (formula "40") (term "0,0"))
                                                      (rule "add_zero_left" (formula "40") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "35"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                   (branch "CUT: res_min ≤ i_4 FALSE"
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "notLeft" (formula "6"))
                                                      (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "inEqSimp_leqRight" (formula "51"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                                      (rule "times_zero_1" (formula "7") (term "0,0"))
                                                      (rule "add_zero_left" (formula "7") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "7"))
                                                      (rule "leq_literals" (formula "34") (term "0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "allLeft" (formula "37") (inst "t=j_183"))
                                                      (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "37") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "37"))
                                                      (rule "allLeft" (formula "32") (inst "t=j_183"))
                                                      (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "32") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "9"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "32"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_literals" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch "CUT: c[i_5] ≤ a[i_5] FALSE"
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "notLeft" (formula "5"))
                                                   (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_leqRight" (formula "50"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                                   (rule "times_zero_1" (formula "6") (term "0,0"))
                                                   (rule "add_zero_left" (formula "6") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "mul_literals" (formula "6") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "26") (term "0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "allLeft" (formula "30") (inst "t=j_181"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "7"))
                                                   (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "8"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "30") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "allLeft" (formula "9") (inst "t=i_4"))
                                                   (rule "exLeft" (formula "9") (inst "sk=j_182"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "38"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "36"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "38"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "36"))
                                                   (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "38"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "36"))
                                                   (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "commute_or" (formula "10"))
                                                   (rule "commute_or" (formula "11"))
                                                   (rule "cut_direct" (formula "9") (term "0"))
                                                   (branch "CUT: res_min ≤ i_4 TRUE"
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "9"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "38") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                                      (rule "add_literals" (formula "38") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0"))
                                                      (rule "add_literals" (formula "38") (term "0"))
                                                      (rule "leq_literals" (formula "38"))
                                                      (rule "closeFalse" (formula "38"))
                                                   )
                                                   (branch "CUT: res_min ≤ i_4 FALSE"
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "notLeft" (formula "9"))
                                                      (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "inEqSimp_leqRight" (formula "54"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                                                      (rule "times_zero_1" (formula "10") (term "0,0"))
                                                      (rule "add_zero_left" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "10"))
                                                      (rule "leq_literals" (formula "37") (term "0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "allLeft" (formula "40") (inst "t=j_182"))
                                                      (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "40") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_contradInEq0" (formula "40") (term "0") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "40") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "40") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "applyEq" (formula "55") (term "0") (ifseqformula "40"))
                                                      (rule "allLeft" (formula "35") (inst "t=j_182"))
                                                      (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "35") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "12"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "35") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "35"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: c[j_149] ≤ a[j_149] FALSE"
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_leqRight" (formula "49"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "50") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "50") (term "0,0"))
                                                (rule "leq_literals" (formula "50") (term "0"))
                                                (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                                (rule "times_zero_1" (formula "5") (term "0,0"))
                                                (rule "add_zero_left" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "allLeft" (formula "7") (inst "t=i_5"))
                                                (rule "exLeft" (formula "7") (inst "sk=j_178"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "28"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "9") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "28"))
                                                (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "28"))
                                                (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "8") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "commute_or" (formula "9"))
                                                (rule "commute_or" (formula "8"))
                                                (rule "cut_direct" (formula "7") (term "0"))
                                                (branch "CUT: c[i_5] ≤ a[i_5] TRUE"
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "allLeft" (formula "8") (inst "t=i_4"))
                                                   (rule "exLeft" (formula "8") (inst "sk=j_180"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "37"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "35"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "35"))
                                                   (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "35"))
                                                   (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "37"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "37"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "commute_or" (formula "10"))
                                                   (rule "commute_or" (formula "9"))
                                                   (rule "cut_direct" (formula "8") (term "0"))
                                                   (branch "CUT: res_min ≤ i_4 TRUE"
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "8"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "8"))
                                                      (rule "times_zero_1" (formula "42") (term "0,0"))
                                                      (rule "add_zero_left" (formula "42") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "inEqSimp_homoInEq1" (formula "37"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0"))
                                                      (rule "add_literals" (formula "37") (term "0"))
                                                      (rule "leq_literals" (formula "37"))
                                                      (rule "closeFalse" (formula "37"))
                                                   )
                                                   (branch "CUT: res_min ≤ i_4 FALSE"
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "notLeft" (formula "8"))
                                                      (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_leqRight" (formula "53"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                                      (rule "times_zero_1" (formula "9") (term "0,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "9"))
                                                      (rule "leq_literals" (formula "36") (term "0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "allLeft" (formula "39") (inst "t=j_180"))
                                                      (rule "inEqSimp_contradInEq0" (formula "39") (term "1,0") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "39") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "39") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "applyEq" (formula "54") (term "0") (ifseqformula "39"))
                                                      (rule "allLeft" (formula "34") (inst "t=j_180"))
                                                      (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "34") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "11"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "34") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "34"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch "CUT: c[i_5] ≤ a[i_5] FALSE"
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "notLeft" (formula "7"))
                                                   (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_leqRight" (formula "52"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                                   (rule "times_zero_1" (formula "8") (term "0,0"))
                                                   (rule "add_zero_left" (formula "8") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "8"))
                                                   (rule "leq_literals" (formula "28") (term "0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "allLeft" (formula "32") (inst "t=j_178"))
                                                   (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "32") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "9"))
                                                   (rule "qeq_literals" (formula "32") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "allLeft" (formula "11") (inst "t=i_4"))
                                                   (rule "exLeft" (formula "11") (inst "sk=j_179"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "40"))
                                                   (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "40"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "40"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "38"))
                                                   (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "38"))
                                                   (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "38"))
                                                   (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "commute_or" (formula "13"))
                                                   (rule "commute_or" (formula "12"))
                                                   (rule "allLeft" (formula "36") (inst "t=j_177"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "allLeft" (formula "43") (inst "t=j_177"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "cut_direct" (formula "11") (term "0"))
                                                   (branch "CUT: res_min ≤ i_4 TRUE"
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "11"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "29"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                   (branch "CUT: res_min ≤ i_4 FALSE"
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "notLeft" (formula "11"))
                                                      (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_leqRight" (formula "58"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                                      (rule "times_zero_1" (formula "12") (term "0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                      (rule "mul_literals" (formula "12") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "12"))
                                                      (rule "leq_literals" (formula "40") (term "0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "allLeft" (formula "44") (inst "t=j_179"))
                                                      (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "13"))
                                                      (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "inEqSimp_contradInEq0" (formula "44") (term "0") (ifseqformula "14"))
                                                      (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0"))
                                                      (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "44") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "applyEq" (formula "59") (term "0") (ifseqformula "44"))
                                                      (rule "allLeft" (formula "38") (inst "t=j_179"))
                                                      (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "13"))
                                                      (rule "qeq_literals" (formula "38") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "14"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "38") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "38") (term "0,0"))
                                                      (rule "add_literals" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                                      (rule "add_literals" (formula "38") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0"))
                                                      (rule "leq_literals" (formula "38"))
                                                      (rule "closeFalse" (formula "38"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: j_149 ≥ i_5 FALSE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_geqRight" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                             (rule "times_zero_1" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "3"))
                                             (rule "leq_literals" (formula "23") (term "0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                             (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1"))
                                             (rule "mul_literals" (formula "32") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                             (rule "allLeft" (formula "6") (inst "t=j_149"))
                                             (rule "exLeft" (formula "6") (inst "sk=j_172"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "7") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "8") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "commute_or" (formula "7"))
                                             (rule "commute_or" (formula "8"))
                                             (rule "cut_direct" (formula "6") (term "0"))
                                             (branch "CUT: c[j_149] ≤ a[j_149] TRUE"
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "48"))
                                                (rule "inEqSimp_contradEq3" (formula "48") (ifseqformula "6"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                                (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0"))
                                                (rule "qeq_literals" (formula "48") (term "0"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "allLeft" (formula "7") (inst "t=i_5"))
                                                (rule "exLeft" (formula "7") (inst "sk=j_175"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "27"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "9") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "27"))
                                                (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "27"))
                                                (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "8") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "commute_or" (formula "9"))
                                                (rule "commute_or" (formula "8"))
                                                (rule "allLeft" (formula "10") (inst "t=i_4"))
                                                (rule "exLeft" (formula "10") (inst "sk=j_176"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "38"))
                                                (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "38"))
                                                (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "38"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "commute_or" (formula "12"))
                                                (rule "commute_or" (formula "11"))
                                                (rule "cut_direct" (formula "7") (term "0"))
                                                (branch "CUT: c[i_5] ≤ a[i_5] TRUE"
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "cut_direct" (formula "8") (term "0"))
                                                   (branch "CUT: res_min ≤ i_4 TRUE"
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "8"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "8"))
                                                      (rule "times_zero_1" (formula "41") (term "0,0"))
                                                      (rule "add_zero_left" (formula "41") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "8"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "36"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0"))
                                                      (rule "leq_literals" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                   (branch "CUT: res_min ≤ i_4 FALSE"
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "notLeft" (formula "8"))
                                                      (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_leqRight" (formula "52"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                                      (rule "times_zero_1" (formula "9") (term "0,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "9"))
                                                      (rule "leq_literals" (formula "35") (term "0"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "allLeft" (formula "38") (inst "t=j_176"))
                                                      (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_contradInEq0" (formula "38") (term "0") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                                      (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "38") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "applyEq" (formula "53") (term "0") (ifseqformula "38"))
                                                      (rule "allLeft" (formula "33") (inst "t=j_176"))
                                                      (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "33") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "11"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "33"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_literals" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch "CUT: c[i_5] ≤ a[i_5] FALSE"
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "notLeft" (formula "7"))
                                                   (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_leqRight" (formula "54"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                                   (rule "times_zero_1" (formula "8") (term "0,0"))
                                                   (rule "add_zero_left" (formula "8") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1"))
                                                   (rule "allLeft" (formula "34") (inst "t=j_175"))
                                                   (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "34") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "34") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "cut_direct" (formula "10") (term "0"))
                                                   (branch "CUT: res_min ≤ i_4 TRUE"
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "10"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0"))
                                                      (rule "add_literals" (formula "28") (term "0"))
                                                      (rule "leq_literals" (formula "28"))
                                                      (rule "closeFalse" (formula "28"))
                                                   )
                                                   (branch "CUT: res_min ≤ i_4 FALSE"
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "notLeft" (formula "10"))
                                                      (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_leqRight" (formula "55"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                                                      (rule "times_zero_1" (formula "11") (term "0,0"))
                                                      (rule "add_zero_left" (formula "11") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "11"))
                                                      (rule "leq_literals" (formula "38") (term "0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "true_left" (formula "38"))
                                                      (rule "allLeft" (formula "41") (inst "t=j_176"))
                                                      (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_contradInEq0" (formula "41") (term "0") (ifseqformula "13"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "41") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "applyEq" (formula "56") (term "0") (ifseqformula "41"))
                                                      (rule "allLeft" (formula "36") (inst "t=j_176"))
                                                      (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "36") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "13"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "36") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "inEqSimp_homoInEq1" (formula "36"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                      (rule "add_literals" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0"))
                                                      (rule "leq_literals" (formula "36"))
                                                      (rule "closeFalse" (formula "36"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: c[j_149] ≤ a[j_149] FALSE"
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "notLeft" (formula "6"))
                                                (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_leqRight" (formula "50"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "51") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                                                (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0"))
                                                (rule "leq_literals" (formula "51") (term "0"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                                (rule "times_zero_1" (formula "7") (term "0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                                (rule "mul_literals" (formula "6") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                (rule "add_literals" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "6"))
                                                (rule "leq_literals" (formula "4") (term "0"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "allLeft" (formula "9") (inst "t=i_5"))
                                                (rule "exLeft" (formula "9") (inst "sk=j_173"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0") (ifseqformula "5"))
                                                (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "29"))
                                                (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "10") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "29"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "9") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "29"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "11") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "5"))
                                                (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "5"))
                                                (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or" (formula "11"))
                                                (rule "commute_or" (formula "10"))
                                                (rule "allLeft" (formula "12") (inst "t=i_4"))
                                                (rule "exLeft" (formula "12") (inst "sk=j_174"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "40"))
                                                (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "40"))
                                                (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "40"))
                                                (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "38"))
                                                (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "38"))
                                                (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "38"))
                                                (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "commute_or" (formula "14"))
                                                (rule "commute_or" (formula "13"))
                                                (rule "cut_direct" (formula "9") (term "0"))
                                                (branch "CUT: c[i_5] ≤ a[i_5] TRUE"
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "cut_direct" (formula "10") (term "0"))
                                                   (branch "CUT: res_min ≤ i_4 TRUE"
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "10"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "10"))
                                                      (rule "times_zero_1" (formula "43") (term "0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "10"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0"))
                                                      (rule "add_literals" (formula "28") (term "0"))
                                                      (rule "leq_literals" (formula "28"))
                                                      (rule "closeFalse" (formula "28"))
                                                   )
                                                   (branch "CUT: res_min ≤ i_4 FALSE"
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "notLeft" (formula "10"))
                                                      (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "inEqSimp_leqRight" (formula "54"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                                                      (rule "times_zero_1" (formula "11") (term "0,0"))
                                                      (rule "add_zero_left" (formula "11") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "11"))
                                                      (rule "leq_literals" (formula "37") (term "0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "allLeft" (formula "40") (inst "t=j_174"))
                                                      (rule "inEqSimp_contradInEq0" (formula "40") (term "1,0") (ifseqformula "13"))
                                                      (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "40") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "40") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "applyEq" (formula "55") (term "0") (ifseqformula "40"))
                                                      (rule "allLeft" (formula "35") (inst "t=j_174"))
                                                      (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "35") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "13"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "35") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "35") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_homoInEq1" (formula "35"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                      (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0"))
                                                      (rule "leq_literals" (formula "35"))
                                                      (rule "closeFalse" (formula "35"))
                                                   )
                                                )
                                                (branch "CUT: c[i_5] ≤ a[i_5] FALSE"
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "notLeft" (formula "9"))
                                                   (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_leqRight" (formula "56"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                                                   (rule "times_zero_1" (formula "10") (term "0,0"))
                                                   (rule "add_zero_left" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                   (rule "mul_literals" (formula "10") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "10") (term "0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "allLeft" (formula "36") (inst "t=j_173"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "10"))
                                                   (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "36") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "cut_direct" (formula "12") (term "0"))
                                                   (branch "CUT: res_min ≤ i_4 TRUE"
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "12"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "12"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "12"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "41"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0"))
                                                      (rule "leq_literals" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                   (branch "CUT: res_min ≤ i_4 FALSE"
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "notLeft" (formula "12"))
                                                      (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_leqRight" (formula "57"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                                      (rule "times_zero_1" (formula "13") (term "0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                      (rule "mul_literals" (formula "13") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "13"))
                                                      (rule "leq_literals" (formula "40") (term "0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "allLeft" (formula "43") (inst "t=j_174"))
                                                      (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "15"))
                                                      (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "43") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "43") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "43") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "43"))
                                                      (rule "allLeft" (formula "44") (inst "t=j_172"))
                                                      (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "allLeft" (formula "38") (inst "t=j_172"))
                                                      (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "allLeft" (formula "39") (inst "t=j_174"))
                                                      (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "39") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "15"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "39") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "5"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                                      (rule "add_literals" (formula "39") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0"))
                                                      (rule "leq_literals" (formula "39"))
                                                      (rule "closeFalse" (formula "39"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: j_149 ≥ i_4 FALSE"
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_geqRight" (formula "45"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "applyEq" (formula "46") (term "0") (ifseqformula "31"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "29") (term "0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "allLeft" (formula "27") (inst "t=j_149"))
                                          (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "27") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "27") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_literals" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                 )
                                 (branch "CUT: i_5 ≥ i_4 FALSE"
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_geqRight" (formula "43"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "21") (term "0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "21"))
                                    (rule "leq_literals" (formula "27") (term "0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "allLeft" (formula "30") (inst "t=j_149"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "cut_direct" (formula "30") (term "0"))
                                    (branch "CUT: j_149 ≥ i_4 TRUE"
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "allLeft" (formula "25") (inst "t=j_149"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "cut_direct" (formula "25") (term "0"))
                                       (branch "CUT: j_149 ≥ i_5 TRUE"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "allLeft" (formula "4") (inst "t=j_149"))
                                          (rule "exLeft" (formula "4") (inst "sk=j_161"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "6") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "4") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "5") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "commute_or" (formula "6"))
                                          (rule "commute_or" (formula "5"))
                                          (rule "cut_direct" (formula "4") (term "0"))
                                          (branch "CUT: c[j_149] ≤ a[j_149] TRUE"
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "47"))
                                             (rule "inEqSimp_contradEq3" (formula "47") (ifseqformula "4"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "qeq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "allLeft" (formula "5") (inst "t=i_5"))
                                             (rule "exLeft" (formula "5") (inst "sk=j_168"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                             (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "34"))
                                             (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "34"))
                                             (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "34"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "7") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "5") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                             (rule "leq_literals" (formula "5") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "notLeft" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                             (rule "times_zero_1" (formula "5") (term "0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "5") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "allLeft" (formula "29") (inst "t=j_168"))
                                             (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "29") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "allLeft" (formula "9") (inst "t=i_4"))
                                             (rule "exLeft" (formula "9") (inst "sk=j_169"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "commute_or_2" (formula "10"))
                                             (rule "commute_or_2" (formula "11"))
                                             (rule "commute_or" (formula "10") (term "0"))
                                             (rule "commute_or" (formula "11") (term "0"))
                                             (rule "cut_direct" (formula "9") (term "0,0"))
                                             (branch "CUT: res_min ≤ i_4 TRUE"
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "9"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "3"))
                                                (rule "andLeft" (formula "37"))
                                                (rule "inEqSimp_homoInEq1" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                                (rule "add_literals" (formula "37") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0"))
                                                (rule "add_literals" (formula "37") (term "0"))
                                                (rule "leq_literals" (formula "37"))
                                                (rule "closeFalse" (formula "37"))
                                             )
                                             (branch "CUT: res_min ≤ i_4 FALSE"
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_right" (formula "11") (term "1,0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_right" (formula "10") (term "1,0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_leqRight" (formula "53"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "cut_direct" (formula "10") (term "0"))
                                                (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "10"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                   (rule "allLeft" (formula "11") (inst "t=int::select(heap, a, arr(j_149))"))
                                                   (rule "exLeft" (formula "11") (inst "sk=j_171"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "inEqSimp_homoInEq0" (formula "13") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,1"))
                                                   (rule "commute_or_2" (formula "11"))
                                                   (rule "commute_or_2" (formula "12"))
                                                   (rule "commute_or_2" (formula "13"))
                                                   (rule "commute_or_2" (formula "12") (term "0"))
                                                   (rule "commute_or_2" (formula "13") (term "0"))
                                                   (rule "commute_or" (formula "12") (term "0,0"))
                                                   (rule "cut_direct" (formula "11") (term "1,0,0"))
                                                   (branch "CUT: a[j_149] ≥ res_min TRUE"
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "allLeft" (formula "40") (inst "t=j_168"))
                                                      (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "32"))
                                                      (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "40") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "9"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                      (rule "mul_literals" (formula "40") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "2"))
                                                      (rule "andLeft" (formula "40"))
                                                      (rule "inEqSimp_homoInEq1" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                                                      (rule "add_literals" (formula "40") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0"))
                                                      (rule "add_literals" (formula "40") (term "0"))
                                                      (rule "leq_literals" (formula "40"))
                                                      (rule "closeFalse" (formula "40"))
                                                   )
                                                   (branch "CUT: a[j_149] ≥ res_min FALSE"
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_geqRight" (formula "56"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "cut_direct" (formula "12") (term "0,0"))
                                                      (branch "CUT: a[j_149] ≤ -1 TRUE"
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "12"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "allLeft" (formula "41") (inst "t=j_168"))
                                                         (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "33"))
                                                         (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "41") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "10"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                         (rule "mul_literals" (formula "41") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "3"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                                         (rule "add_literals" (formula "41") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0"))
                                                         (rule "add_literals" (formula "41") (term "0"))
                                                         (rule "leq_literals" (formula "41"))
                                                         (rule "closeFalse" (formula "41"))
                                                      )
                                                      (branch "CUT: a[j_149] ≤ -1 FALSE"
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_leqRight" (formula "57"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                         (rule "times_zero_1" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "50") (term "0"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "cut_direct" (formula "14") (term "1"))
                                                         (branch "CUT: c[a[j_149]] ≤ a[a[j_149]] TRUE"
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "14"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "14"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "allLeft" (formula "43") (inst "t=j_168"))
                                                            (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "35"))
                                                            (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "57"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "43") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "12"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                            (rule "mul_literals" (formula "43") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "5"))
                                                            (rule "andLeft" (formula "43"))
                                                            (rule "inEqSimp_homoInEq1" (formula "43"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                                            (rule "add_literals" (formula "43") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "43") (term "0"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "43") (term "1,0"))
                                                            (rule "add_literals" (formula "43") (term "0"))
                                                            (rule "leq_literals" (formula "43"))
                                                            (rule "closeFalse" (formula "43"))
                                                         )
                                                         (branch "CUT: c[a[j_149]] ≤ a[a[j_149]] FALSE"
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "notLeft" (formula "14"))
                                                            (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "inEqSimp_leqRight" (formula "58"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "4"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                            (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                            (rule "mul_literals" (formula "16") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                            (rule "allLeft" (formula "46") (inst "t=j_168"))
                                                            (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "38"))
                                                            (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "61"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "46") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "13"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                            (rule "mul_literals" (formula "46") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "46"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0"))
                                                            (rule "leq_literals" (formula "6"))
                                                            (rule "closeFalse" (formula "6"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "notLeft" (formula "10"))
                                                   (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_leqRight" (formula "54"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                                                   (rule "times_zero_1" (formula "11") (term "0,0"))
                                                   (rule "add_zero_left" (formula "11") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                   (rule "mul_literals" (formula "11") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "7"))
                                                   (rule "leq_literals" (formula "11") (term "0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "allLeft" (formula "40") (inst "t=j_169"))
                                                   (rule "inEqSimp_contradInEq0" (formula "40") (term "1,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "40") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "40") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "40") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "40"))
                                                   (rule "allLeft" (formula "34") (inst "t=j_169"))
                                                   (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "34") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "12"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "34") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                   (rule "allLeft" (formula "13") (inst "t=int::select(heap, a, arr(j_149))"))
                                                   (rule "exLeft" (formula "13") (inst "sk=j_170"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "inEqSimp_homoInEq0" (formula "15") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,1"))
                                                   (rule "commute_or_2" (formula "13"))
                                                   (rule "commute_or_2" (formula "14"))
                                                   (rule "commute_or_2" (formula "15"))
                                                   (rule "commute_or_2" (formula "14") (term "0"))
                                                   (rule "commute_or_2" (formula "15") (term "0"))
                                                   (rule "commute_or" (formula "14") (term "0,0"))
                                                   (rule "cut_direct" (formula "13") (term "1,0,0"))
                                                   (branch "CUT: a[j_149] ≥ res_min TRUE"
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "allLeft" (formula "43") (inst "t=j_168"))
                                                      (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "34"))
                                                      (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "43") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "10"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                      (rule "mul_literals" (formula "43") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "inEqSimp_homoInEq1" (formula "43"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "43") (term "0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0"))
                                                      (rule "add_zero_right" (formula "43") (term "0"))
                                                      (rule "leq_literals" (formula "43"))
                                                      (rule "closeFalse" (formula "43"))
                                                   )
                                                   (branch "CUT: a[j_149] ≥ res_min FALSE"
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_geqRight" (formula "59"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "cut_direct" (formula "14") (term "0,0"))
                                                      (branch "CUT: a[j_149] ≤ -1 TRUE"
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "14"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "14"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "allLeft" (formula "44") (inst "t=j_168"))
                                                         (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "35"))
                                                         (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "44") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "11"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                         (rule "mul_literals" (formula "44") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "44"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0"))
                                                         (rule "add_zero_right" (formula "4") (term "0"))
                                                         (rule "leq_literals" (formula "4"))
                                                         (rule "closeFalse" (formula "4"))
                                                      )
                                                      (branch "CUT: a[j_149] ≤ -1 FALSE"
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_leqRight" (formula "60"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                         (rule "times_zero_1" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "53") (term "0"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "true_left" (formula "53"))
                                                         (rule "allLeft" (formula "48") (inst "t=j_168"))
                                                         (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "39"))
                                                         (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "48") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "13"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                         (rule "mul_literals" (formula "48") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "48") (ifseqformula "6"))
                                                         (rule "andLeft" (formula "48"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                                         (rule "add_literals" (formula "48") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "48") (term "0"))
                                                         (rule "add_literals" (formula "48") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "48") (term "1,0"))
                                                         (rule "add_zero_right" (formula "48") (term "0"))
                                                         (rule "leq_literals" (formula "48"))
                                                         (rule "closeFalse" (formula "48"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: c[j_149] ≤ a[j_149] FALSE"
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "notLeft" (formula "4"))
                                             (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "inEqSimp_leqRight" (formula "49"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "50") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0"))
                                             (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "50") (term "0,0"))
                                             (rule "leq_literals" (formula "50") (term "0"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                             (rule "times_zero_1" (formula "5") (term "0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "allLeft" (formula "7") (inst "t=i_5"))
                                             (rule "exLeft" (formula "7") (inst "sk=j_162"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "36"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "9") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "7") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "30"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "7") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "30"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "8") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "7") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "notLeft" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                             (rule "leq_literals" (formula "8") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                             (rule "leq_literals" (formula "7") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                             (rule "times_zero_1" (formula "7") (term "0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "7") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "allLeft" (formula "31") (inst "t=j_162"))
                                             (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "31") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "31") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "allLeft" (formula "11") (inst "t=i_4"))
                                             (rule "exLeft" (formula "11") (inst "sk=j_163"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "commute_or_2" (formula "13"))
                                             (rule "commute_or_2" (formula "12"))
                                             (rule "commute_or" (formula "13") (term "0"))
                                             (rule "commute_or" (formula "12") (term "0"))
                                             (rule "allLeft" (formula "41") (inst "t=j_161"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "allLeft" (formula "35") (inst "t=j_161"))
                                             (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "cut_direct" (formula "11") (term "0,0"))
                                             (branch "CUT: res_min ≤ i_4 TRUE"
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "11"))
                                                (rule "times_zero_1" (formula "46") (term "0,0"))
                                                (rule "add_zero_left" (formula "46") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "46") (term "0"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "11"))
                                                (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "40"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                             (branch "CUT: res_min ≤ i_4 FALSE"
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_leqRight" (formula "57"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "cut_direct" (formula "12") (term "0"))
                                                (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "12"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                   (rule "cut_direct" (formula "42") (term "0"))
                                                   (branch "CUT: j_161 ≥ i_4 TRUE"
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "7"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                      (rule "mul_literals" (formula "42") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "42"))
                                                      (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0"))
                                                      (rule "qeq_literals" (formula "41") (term "0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "cut_direct" (formula "34") (term "0"))
                                                      (branch "CUT: j_161 ≥ i_5 TRUE"
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "7"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                         (rule "mul_literals" (formula "34") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "34"))
                                                         (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                                         (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "32") (term "0,0"))
                                                         (rule "qeq_literals" (formula "32") (term "0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "allLeft" (formula "13") (inst "t=j_161"))
                                                         (rule "exLeft" (formula "13") (inst "sk=j_167"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0") (ifseqformula "6"))
                                                         (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "6"))
                                                         (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "6"))
                                                         (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "commute_or_2" (formula "15"))
                                                         (rule "commute_or_2" (formula "14"))
                                                         (rule "commute_or" (formula "15") (term "0"))
                                                         (rule "commute_or" (formula "14") (term "0"))
                                                         (rule "allLeft" (formula "46") (inst "t=j_162"))
                                                         (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "35"))
                                                         (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "61"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "46") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "11"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "46") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                         (rule "mul_literals" (formula "46") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "46"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                      (branch "CUT: j_161 ≥ i_5 FALSE"
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_geqRight" (formula "57"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                         (rule "mul_literals" (formula "43") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "43"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0"))
                                                         (rule "add_zero_right" (formula "4") (term "0"))
                                                         (rule "leq_literals" (formula "4"))
                                                         (rule "closeFalse" (formula "4"))
                                                      )
                                                   )
                                                   (branch "CUT: j_161 ≥ i_4 FALSE"
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_geqRight" (formula "57"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "applyEq" (formula "59") (term "0") (ifseqformula "43"))
                                                      (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "8"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                      (rule "mul_literals" (formula "35") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "35"))
                                                      (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0,0"))
                                                      (rule "qeq_literals" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "7") (term "0,0"))
                                                      (rule "add_zero_left" (formula "7") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                                      (rule "leq_literals" (formula "7") (term "0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "35") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                      (rule "allLeft" (formula "14") (inst "t=j_161"))
                                                      (rule "exLeft" (formula "14") (inst "sk=j_166"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "46"))
                                                      (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "46"))
                                                      (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "46"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "16") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "commute_or_2" (formula "16"))
                                                      (rule "commute_or_2" (formula "15"))
                                                      (rule "commute_or" (formula "16") (term "0"))
                                                      (rule "commute_or" (formula "15") (term "0"))
                                                      (rule "allLeft" (formula "47") (inst "t=j_162"))
                                                      (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "36"))
                                                      (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "62"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "47") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "12"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                      (rule "mul_literals" (formula "47") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "47") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "47"))
                                                      (rule "inEqSimp_homoInEq1" (formula "47"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                      (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                      (rule "add_literals" (formula "47") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                      (rule "add_literals" (formula "47") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "47") (term "1,0"))
                                                      (rule "add_zero_right" (formula "47") (term "0"))
                                                      (rule "leq_literals" (formula "47"))
                                                      (rule "closeFalse" (formula "47"))
                                                   )
                                                )
                                                (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "notLeft" (formula "12"))
                                                   (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_leqRight" (formula "58"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                                   (rule "mul_literals" (formula "13") (term "0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                   (rule "mul_literals" (formula "13") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "9"))
                                                   (rule "leq_literals" (formula "13") (term "0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "allLeft" (formula "44") (inst "t=j_163"))
                                                   (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0") (ifseqformula "14"))
                                                   (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "44") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "44") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "44") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "applyEq" (formula "59") (term "0") (ifseqformula "44"))
                                                   (rule "allLeft" (formula "37") (inst "t=j_163"))
                                                   (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "37") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "14"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "37") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                   (rule "cut_direct" (formula "44") (term "0"))
                                                   (branch "CUT: j_161 ≥ i_4 TRUE"
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "true_left" (formula "45"))
                                                      (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "8"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                      (rule "mul_literals" (formula "44") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "44"))
                                                      (rule "inEqSimp_homoInEq0" (formula "43") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "43") (term "0,0"))
                                                      (rule "qeq_literals" (formula "43") (term "0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "cut_direct" (formula "36") (term "0"))
                                                      (branch "CUT: j_161 ≥ i_5 TRUE"
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "8"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1"))
                                                         (rule "mul_literals" (formula "36") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "36"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0"))
                                                         (rule "qeq_literals" (formula "34") (term "0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "allLeft" (formula "15") (inst "t=j_161"))
                                                         (rule "exLeft" (formula "15") (inst "sk=j_165"))
                                                         (rule "andLeft" (formula "15"))
                                                         (rule "andLeft" (formula "15"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "16") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "17") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "commute_or_2" (formula "16"))
                                                         (rule "commute_or_2" (formula "17"))
                                                         (rule "commute_or" (formula "16") (term "0"))
                                                         (rule "commute_or" (formula "17") (term "0"))
                                                         (rule "allLeft" (formula "49") (inst "t=j_162"))
                                                         (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "37"))
                                                         (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "65"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "49") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "12"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                         (rule "mul_literals" (formula "49") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "49") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "49"))
                                                         (rule "inEqSimp_homoInEq1" (formula "49"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                         (rule "mul_literals" (formula "49") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                         (rule "add_literals" (formula "49") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                         (rule "add_literals" (formula "49") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "49") (term "1,0"))
                                                         (rule "add_zero_right" (formula "49") (term "0"))
                                                         (rule "leq_literals" (formula "49"))
                                                         (rule "closeFalse" (formula "49"))
                                                      )
                                                      (branch "CUT: j_161 ≥ i_5 FALSE"
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "inEqSimp_geqRight" (formula "60"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                                         (rule "times_zero_1" (formula "8") (term "0,0"))
                                                         (rule "add_zero_left" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                                         (rule "mul_literals" (formula "45") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "45"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0"))
                                                         (rule "add_zero_right" (formula "5") (term "0"))
                                                         (rule "leq_literals" (formula "5"))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                   )
                                                   (branch "CUT: j_161 ≥ i_4 FALSE"
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "inEqSimp_geqRight" (formula "60"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "applyEq" (formula "63") (term "0") (ifseqformula "45"))
                                                      (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "63"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "9"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                                      (rule "mul_literals" (formula "37") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "37"))
                                                      (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0"))
                                                      (rule "qeq_literals" (formula "35") (term "0"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "8") (term "0,0"))
                                                      (rule "add_zero_left" (formula "8") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                      (rule "mul_literals" (formula "8") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
                                                      (rule "leq_literals" (formula "8") (term "0"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "37") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                      (rule "allLeft" (formula "16") (inst "t=j_161"))
                                                      (rule "exLeft" (formula "16") (inst "sk=j_164"))
                                                      (rule "andLeft" (formula "16"))
                                                      (rule "andLeft" (formula "16"))
                                                      (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0"))
                                                      (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "48"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "17") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "18") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "16") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "commute_or_2" (formula "17"))
                                                      (rule "commute_or_2" (formula "18"))
                                                      (rule "commute_or" (formula "17") (term "0"))
                                                      (rule "commute_or" (formula "18") (term "0"))
                                                      (rule "allLeft" (formula "50") (inst "t=j_162"))
                                                      (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "38"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "66"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "50") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "13"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "50") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1"))
                                                      (rule "mul_literals" (formula "50") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "50"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0"))
                                                      (rule "leq_literals" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: j_149 ≥ i_5 FALSE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_geqRight" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "24") (term "0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                          (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1"))
                                          (rule "mul_literals" (formula "32") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "32"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_literals" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "CUT: j_149 ≥ i_4 FALSE"
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_geqRight" (formula "45"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "31"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "allLeft" (formula "26") (inst "t=j_149"))
                                       (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "26") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0"))
                                       (rule "allLeft" (formula "5") (inst "t=j_149"))
                                       (rule "exLeft" (formula "5") (inst "sk=j_150"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                       (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "35"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "7") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "commute_or" (formula "7"))
                                       (rule "commute_or" (formula "6"))
                                       (rule "cut_direct" (formula "5") (term "0"))
                                       (branch "CUT: b[j_149] ≤ a[j_149] TRUE"
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "48"))
                                          (rule "inEqSimp_contradEq3" (formula "48") (ifseqformula "5"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                          (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "48") (term "0,0"))
                                          (rule "qeq_literals" (formula "48") (term "0"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "false_right" (formula "48"))
                                          (rule "allLeft" (formula "6") (inst "t=i_5"))
                                          (rule "exLeft" (formula "6") (inst "sk=j_156"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                          (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "35"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "6") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "7") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                          (rule "leq_literals" (formula "6") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "notLeft" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                          (rule "leq_literals" (formula "6") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                          (rule "leq_literals" (formula "7") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                          (rule "times_zero_1" (formula "6") (term "0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "6") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "allLeft" (formula "30") (inst "t=j_156"))
                                          (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "30") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "30") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "allLeft" (formula "10") (inst "t=i_4"))
                                          (rule "exLeft" (formula "10") (inst "sk=j_157"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "commute_or_2" (formula "12"))
                                          (rule "commute_or_2" (formula "11"))
                                          (rule "commute_or" (formula "12") (term "0"))
                                          (rule "commute_or" (formula "11") (term "0"))
                                          (rule "cut_direct" (formula "10") (term "0,0"))
                                          (branch "CUT: res_min ≤ i_4 TRUE"
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "10"))
                                             (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "10"))
                                             (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "10"))
                                             (rule "mul_literals" (formula "43") (term "0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "allLeft" (formula "11") (inst "t=int::select(heap, a, arr(j_149))"))
                                             (rule "exLeft" (formula "11") (inst "sk=j_160"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "inEqSimp_homoInEq0" (formula "13") (term "1"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,1"))
                                             (rule "commute_or_2" (formula "12"))
                                             (rule "commute_or_2" (formula "11"))
                                             (rule "commute_or_2" (formula "13"))
                                             (rule "commute_or_2" (formula "12") (term "0"))
                                             (rule "commute_or_2" (formula "13") (term "0"))
                                             (rule "commute_or" (formula "12") (term "0,0"))
                                             (rule "cut_direct" (formula "11") (term "1,0,0"))
                                             (branch "CUT: a[j_149] ≥ res_min TRUE"
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "allLeft" (formula "39") (inst "t=j_156"))
                                                (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "32"))
                                                (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "39") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "9"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                (rule "mul_literals" (formula "39") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "2"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "inEqSimp_homoInEq1" (formula "39"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                                (rule "add_literals" (formula "39") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0"))
                                                (rule "add_literals" (formula "39") (term "0"))
                                                (rule "leq_literals" (formula "39"))
                                                (rule "closeFalse" (formula "39"))
                                             )
                                             (branch "CUT: a[j_149] ≥ res_min FALSE"
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_geqRight" (formula "55"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "cut_direct" (formula "12") (term "0,0"))
                                                (branch "CUT: a[j_149] ≤ -1 TRUE"
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "allLeft" (formula "40") (inst "t=j_156"))
                                                   (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "33"))
                                                   (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "9"))
                                                   (rule "qeq_literals" (formula "40") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "10"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                   (rule "mul_literals" (formula "40") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "40"))
                                                   (rule "inEqSimp_homoInEq1" (formula "40"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                                   (rule "add_literals" (formula "40") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "40") (term "1,0"))
                                                   (rule "add_literals" (formula "40") (term "0"))
                                                   (rule "leq_literals" (formula "40"))
                                                   (rule "closeFalse" (formula "40"))
                                                )
                                                (branch "CUT: a[j_149] ≤ -1 FALSE"
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "inEqSimp_leqRight" (formula "56"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "49") (term "0"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "49"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "13"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "cut_direct" (formula "14") (term "1"))
                                                   (branch "CUT: c[a[j_149]] ≤ a[a[j_149]] TRUE"
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "allLeft" (formula "42") (inst "t=j_156"))
                                                      (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "35"))
                                                      (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "42") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "12"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                      (rule "mul_literals" (formula "42") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "42") (ifseqformula "5"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "inEqSimp_homoInEq1" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                                                      (rule "add_literals" (formula "42") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0"))
                                                      (rule "add_literals" (formula "42") (term "0"))
                                                      (rule "leq_literals" (formula "42"))
                                                      (rule "closeFalse" (formula "42"))
                                                   )
                                                   (branch "CUT: c[a[j_149]] ≤ a[a[j_149]] FALSE"
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_leqRight" (formula "57"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "4"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                      (rule "mul_literals" (formula "16") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "14"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                      (rule "times_zero_1" (formula "15") (term "0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "allLeft" (formula "46") (inst "t=j_160"))
                                                      (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "inEqSimp_contradInEq0" (formula "46") (term "0") (ifseqformula "16"))
                                                      (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
                                                      (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "46") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "applyEq" (formula "60") (term "0") (ifseqformula "46"))
                                                      (rule "allLeft" (formula "40") (inst "t=j_160"))
                                                      (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "40") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "16"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "40") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "40"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "39"))
                                                      (rule "mul_literals" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                      (rule "add_literals" (formula "10") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                                                      (rule "leq_literals" (formula "9") (term "0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "allLeft" (formula "48") (inst "t=j_156"))
                                                      (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "38"))
                                                      (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "63"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "48") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "12"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                      (rule "mul_literals" (formula "48") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "48"))
                                                      (rule "andLeft" (formula "39"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                                      (rule "add_literals" (formula "39") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0"))
                                                      (rule "leq_literals" (formula "39"))
                                                      (rule "closeFalse" (formula "39"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: res_min ≤ i_4 FALSE"
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "replace_known_right" (formula "11") (term "1,0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_leqRight" (formula "54"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "cut_direct" (formula "11") (term "0"))
                                             (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "11"))
                                                (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                                (rule "mul_literals" (formula "36") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                (rule "allLeft" (formula "12") (inst "t=int::select(heap, a, arr(j_149))"))
                                                (rule "exLeft" (formula "12") (inst "sk=j_159"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "inEqSimp_homoInEq0" (formula "14") (term "1"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1"))
                                                (rule "commute_or_2" (formula "13"))
                                                (rule "commute_or_2" (formula "12"))
                                                (rule "commute_or_2" (formula "14"))
                                                (rule "commute_or_2" (formula "13") (term "0"))
                                                (rule "commute_or_2" (formula "14") (term "0"))
                                                (rule "commute_or" (formula "13") (term "0,0"))
                                                (rule "cut_direct" (formula "12") (term "1,0,0"))
                                                (branch "CUT: a[j_149] ≥ res_min TRUE"
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "allLeft" (formula "41") (inst "t=j_156"))
                                                   (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "33"))
                                                   (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "9"))
                                                   (rule "qeq_literals" (formula "41") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "10"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                   (rule "mul_literals" (formula "41") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "41"))
                                                   (rule "inEqSimp_homoInEq1" (formula "41"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0"))
                                                   (rule "add_literals" (formula "41") (term "0"))
                                                   (rule "leq_literals" (formula "41"))
                                                   (rule "closeFalse" (formula "41"))
                                                )
                                                (branch "CUT: a[j_149] ≥ res_min FALSE"
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_geqRight" (formula "57"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "cut_direct" (formula "13") (term "0,0"))
                                                   (branch "CUT: a[j_149] ≤ -1 TRUE"
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "allLeft" (formula "42") (inst "t=j_156"))
                                                      (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "34"))
                                                      (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "42") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "11"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                      (rule "mul_literals" (formula "42") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "42"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0"))
                                                      (rule "add_literals" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                   (branch "CUT: a[j_149] ≤ -1 FALSE"
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_leqRight" (formula "58"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "51") (term "0"))
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "true_left" (formula "51"))
                                                      (rule "cut_direct" (formula "15") (term "1"))
                                                      (branch "CUT: c[a[j_149]] ≤ a[a[j_149]] TRUE"
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "15"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "15"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "allLeft" (formula "44") (inst "t=j_156"))
                                                         (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "36"))
                                                         (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "44") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "13"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                         (rule "mul_literals" (formula "44") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "44"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0"))
                                                         (rule "add_literals" (formula "6") (term "0"))
                                                         (rule "leq_literals" (formula "6"))
                                                         (rule "closeFalse" (formula "6"))
                                                      )
                                                      (branch "CUT: c[a[j_149]] ≤ a[a[j_149]] FALSE"
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "notLeft" (formula "15"))
                                                         (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_leqRight" (formula "59"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "4"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                         (rule "allLeft" (formula "47") (inst "t=j_156"))
                                                         (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "39"))
                                                         (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "62"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "47") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "14"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                         (rule "mul_literals" (formula "47") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "47"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0"))
                                                         (rule "add_zero_right" (formula "7") (term "0"))
                                                         (rule "leq_literals" (formula "7"))
                                                         (rule "closeFalse" (formula "7"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "notLeft" (formula "11"))
                                                (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_leqRight" (formula "55"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                                (rule "times_zero_1" (formula "12") (term "0,0"))
                                                (rule "add_zero_left" (formula "12") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                (rule "mul_literals" (formula "12") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "8"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "allLeft" (formula "41") (inst "t=j_157"))
                                                (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0") (ifseqformula "13"))
                                                (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "41") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "41") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "41") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "12"))
                                                (rule "qeq_literals" (formula "41") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "41"))
                                                (rule "allLeft" (formula "35") (inst "t=j_157"))
                                                (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "12"))
                                                (rule "qeq_literals" (formula "35") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "13"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "35") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                (rule "allLeft" (formula "14") (inst "t=int::select(heap, a, arr(j_149))"))
                                                (rule "exLeft" (formula "14") (inst "sk=j_158"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                                                (rule "mul_literals" (formula "16") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
                                                (rule "commute_or_2" (formula "14"))
                                                (rule "commute_or_2" (formula "15"))
                                                (rule "commute_or_2" (formula "16"))
                                                (rule "commute_or_2" (formula "15") (term "0"))
                                                (rule "commute_or_2" (formula "16") (term "0"))
                                                (rule "commute_or" (formula "15") (term "0,0"))
                                                (rule "cut_direct" (formula "14") (term "1,0,0"))
                                                (branch "CUT: a[j_149] ≥ res_min TRUE"
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "14"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "14"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "allLeft" (formula "44") (inst "t=j_156"))
                                                   (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "35"))
                                                   (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "10"))
                                                   (rule "qeq_literals" (formula "44") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "11"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                   (rule "mul_literals" (formula "44") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "44") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "inEqSimp_homoInEq1" (formula "44"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                                   (rule "add_literals" (formula "44") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "44") (term "0"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0"))
                                                   (rule "add_zero_right" (formula "44") (term "0"))
                                                   (rule "leq_literals" (formula "44"))
                                                   (rule "closeFalse" (formula "44"))
                                                )
                                                (branch "CUT: a[j_149] ≥ res_min FALSE"
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_geqRight" (formula "60"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "cut_direct" (formula "15") (term "0,0"))
                                                   (branch "CUT: a[j_149] ≤ -1 TRUE"
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "15"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "15"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "allLeft" (formula "45") (inst "t=j_156"))
                                                      (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "36"))
                                                      (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "45") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "12"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                                      (rule "mul_literals" (formula "45") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "45"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0"))
                                                      (rule "leq_literals" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                   (branch "CUT: a[j_149] ≤ -1 FALSE"
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_leqRight" (formula "61"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "54") (term "0"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "true_left" (formula "54"))
                                                      (rule "allLeft" (formula "49") (inst "t=j_156"))
                                                      (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "40"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "64"))
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "13"))
                                                      (rule "qeq_literals" (formula "49") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "14"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                      (rule "mul_literals" (formula "49") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "49") (ifseqformula "7"))
                                                      (rule "andLeft" (formula "49"))
                                                      (rule "inEqSimp_homoInEq1" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                      (rule "add_literals" (formula "49") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                      (rule "add_literals" (formula "49") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "49") (term "1,0"))
                                                      (rule "add_zero_right" (formula "49") (term "0"))
                                                      (rule "leq_literals" (formula "49"))
                                                      (rule "closeFalse" (formula "49"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: b[j_149] ≤ a[j_149] FALSE"
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "notLeft" (formula "5"))
                                          (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_leqRight" (formula "50"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "51") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "51") (term "0,0"))
                                          (rule "leq_literals" (formula "51") (term "0"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "6") (term "0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "5") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "26") (term "0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "allLeft" (formula "9") (inst "t=i_5"))
                                          (rule "exLeft" (formula "9") (inst "sk=j_151"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                          (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "37"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "29"))
                                          (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0") (ifseqformula "29"))
                                          (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "29"))
                                          (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "11") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "30"))
                                          (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "9") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "30"))
                                          (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                          (rule "leq_literals" (formula "11") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "30"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0"))
                                          (rule "leq_literals" (formula "10") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                          (rule "leq_literals" (formula "9") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "notLeft" (formula "9"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                          (rule "times_zero_1" (formula "9") (term "0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "29") (term "0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "3"))
                                          (rule "mul_literals" (formula "9") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "allLeft" (formula "32") (inst "t=j_151"))
                                          (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "32") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "32") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "allLeft" (formula "12") (inst "t=i_4"))
                                          (rule "exLeft" (formula "12") (inst "sk=j_152"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "commute_or_2" (formula "14"))
                                          (rule "commute_or_2" (formula "13"))
                                          (rule "commute_or" (formula "14") (term "0"))
                                          (rule "commute_or" (formula "13") (term "0"))
                                          (rule "allLeft" (formula "42") (inst "t=j_150"))
                                          (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "allLeft" (formula "36") (inst "t=j_150"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "cut_direct" (formula "12") (term "0,0"))
                                          (branch "CUT: res_min ≤ i_4 TRUE"
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "12"))
                                             (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "12"))
                                             (rule "times_zero_1" (formula "47") (term "0,0"))
                                             (rule "add_zero_left" (formula "47") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "12"))
                                             (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "cut_direct" (formula "41") (term "0"))
                                             (branch "CUT: j_150 ≥ i_4 TRUE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "8"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                (rule "mul_literals" (formula "41") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "41"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: j_150 ≥ i_4 FALSE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "inEqSimp_geqRight" (formula "56"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "42"))
                                                (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                                (rule "times_zero_1" (formula "8") (term "0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "mul_literals" (formula "8") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
                                                (rule "leq_literals" (formula "8") (term "0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "9"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                (rule "mul_literals" (formula "35") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "35"))
                                                (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "33") (term "0,0"))
                                                (rule "qeq_literals" (formula "33") (term "0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "35") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "3"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "34"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "33"))
                                                (rule "mul_literals" (formula "9") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "add_literals" (formula "9") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "allLeft" (formula "13") (inst "t=j_150"))
                                                (rule "exLeft" (formula "13") (inst "sk=j_155"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                                (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "45"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "commute_or_2" (formula "14"))
                                                (rule "commute_or_2" (formula "15"))
                                                (rule "commute_or" (formula "14") (term "0"))
                                                (rule "commute_or" (formula "15") (term "0"))
                                                (rule "allLeft" (formula "46") (inst "t=j_151"))
                                                (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "35"))
                                                (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "61"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "46") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "11"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                (rule "polySimp_addComm0" (formula "46") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                (rule "mul_literals" (formula "46") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "46") (ifseqformula "36"))
                                                (rule "andLeft" (formula "46"))
                                                (rule "inEqSimp_homoInEq1" (formula "46"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                (rule "add_literals" (formula "46") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "46") (term "0"))
                                                (rule "add_literals" (formula "46") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0"))
                                                (rule "add_zero_right" (formula "46") (term "0"))
                                                (rule "leq_literals" (formula "46"))
                                                (rule "closeFalse" (formula "46"))
                                             )
                                          )
                                          (branch "CUT: res_min ≤ i_4 FALSE"
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "inEqSimp_leqRight" (formula "58"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "cut_direct" (formula "13") (term "0"))
                                             (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "13"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "13"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                                (rule "mul_literals" (formula "39") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                (rule "cut_direct" (formula "43") (term "0"))
                                                (branch "CUT: j_150 ≥ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "true_left" (formula "44"))
                                                   (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "9"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                   (rule "mul_literals" (formula "43") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "43"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                                   (rule "add_literals" (formula "43") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "43") (term "0"))
                                                   (rule "add_literals" (formula "43") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "43") (term "1,0"))
                                                   (rule "add_zero_right" (formula "43") (term "0"))
                                                   (rule "leq_literals" (formula "43"))
                                                   (rule "closeFalse" (formula "43"))
                                                )
                                                (branch "CUT: j_150 ≥ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_geqRight" (formula "58"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "applyEq" (formula "60") (term "0") (ifseqformula "44"))
                                                   (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "9") (term "0,0"))
                                                   (rule "add_zero_left" (formula "9") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                   (rule "mul_literals" (formula "9") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "7"))
                                                   (rule "leq_literals" (formula "9") (term "0"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "10"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1"))
                                                   (rule "mul_literals" (formula "36") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "36"))
                                                   (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0"))
                                                   (rule "qeq_literals" (formula "34") (term "0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "true_left" (formula "34"))
                                                   (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "4"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                   (rule "add_literals" (formula "35") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "35"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0,0"))
                                                   (rule "qeq_literals" (formula "5") (term "0"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "34"))
                                                   (rule "mul_literals" (formula "10") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                   (rule "add_literals" (formula "10") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                   (rule "mul_literals" (formula "10") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "6") (term "0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "allLeft" (formula "14") (inst "t=j_150"))
                                                   (rule "exLeft" (formula "14") (inst "sk=j_154"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                                   (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "47"))
                                                   (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "47"))
                                                   (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "47"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "7"))
                                                   (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0") (ifseqformula "7"))
                                                   (rule "qeq_literals" (formula "16") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0") (ifseqformula "7"))
                                                   (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "commute_or_2" (formula "16"))
                                                   (rule "commute_or_2" (formula "15"))
                                                   (rule "commute_or" (formula "16") (term "0"))
                                                   (rule "commute_or" (formula "15") (term "0"))
                                                   (rule "allLeft" (formula "48") (inst "t=j_151"))
                                                   (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "36"))
                                                   (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "63"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "48") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "12"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                   (rule "mul_literals" (formula "48") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "37") (ifseqformula "48"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "inEqSimp_homoInEq1" (formula "37"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                                   (rule "add_literals" (formula "37") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0"))
                                                   (rule "leq_literals" (formula "37"))
                                                   (rule "closeFalse" (formula "37"))
                                                )
                                             )
                                             (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "59"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "59"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_leqRight" (formula "59"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                                (rule "times_zero_1" (formula "14") (term "0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                (rule "mul_literals" (formula "14") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "allLeft" (formula "45") (inst "t=j_152"))
                                                (rule "inEqSimp_contradInEq0" (formula "45") (term "1,0") (ifseqformula "15"))
                                                (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "45") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "45") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "45") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "14"))
                                                (rule "qeq_literals" (formula "45") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "45"))
                                                (rule "allLeft" (formula "38") (inst "t=j_152"))
                                                (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "61"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "14"))
                                                (rule "qeq_literals" (formula "38") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "15"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                (rule "cut_direct" (formula "45") (term "0"))
                                                (branch "CUT: j_150 ≥ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "true_left" (formula "46"))
                                                   (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "10"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                   (rule "mul_literals" (formula "45") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "45") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "inEqSimp_homoInEq1" (formula "45"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                                   (rule "add_literals" (formula "45") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "45") (term "0"))
                                                   (rule "add_literals" (formula "45") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "45") (term "1,0"))
                                                   (rule "add_zero_right" (formula "45") (term "0"))
                                                   (rule "leq_literals" (formula "45"))
                                                   (rule "closeFalse" (formula "45"))
                                                )
                                                (branch "CUT: j_150 ≥ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "inEqSimp_geqRight" (formula "61"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "applyEq" (formula "64") (term "0") (ifseqformula "46"))
                                                   (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "64"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "11"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                   (rule "mul_literals" (formula "38") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "38"))
                                                   (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0"))
                                                   (rule "qeq_literals" (formula "36") (term "0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "10") (term "0,0"))
                                                   (rule "add_zero_left" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                   (rule "mul_literals" (formula "10") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "8"))
                                                   (rule "leq_literals" (formula "10") (term "0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "5"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "37"))
                                                   (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0"))
                                                   (rule "qeq_literals" (formula "6") (term "0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "36"))
                                                   (rule "mul_literals" (formula "11") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "add_literals" (formula "11") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                   (rule "mul_literals" (formula "11") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "11"))
                                                   (rule "leq_literals" (formula "7") (term "0"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "allLeft" (formula "16") (inst "t=j_150"))
                                                   (rule "exLeft" (formula "16") (inst "sk=j_153"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0"))
                                                   (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "49"))
                                                   (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "49"))
                                                   (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "49"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "17") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0,0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "18") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "16") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "commute_or_2" (formula "17"))
                                                   (rule "commute_or_2" (formula "18"))
                                                   (rule "commute_or" (formula "17") (term "0"))
                                                   (rule "commute_or" (formula "18") (term "0"))
                                                   (rule "allLeft" (formula "51") (inst "t=j_151"))
                                                   (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "38"))
                                                   (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "67"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "51") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "13"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "51") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                   (rule "mul_literals" (formula "51") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "51") (ifseqformula "39"))
                                                   (rule "andLeft" (formula "51"))
                                                   (rule "inEqSimp_homoInEq1" (formula "51"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                                   (rule "mul_literals" (formula "51") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                                                   (rule "add_literals" (formula "51") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "51") (term "0"))
                                                   (rule "add_literals" (formula "51") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "51") (term "1,0"))
                                                   (rule "add_zero_right" (formula "51") (term "0"))
                                                   (rule "leq_literals" (formula "51"))
                                                   (rule "closeFalse" (formula "51"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "false_right" (formula "41"))
                                 (rule "replace_known_right" (formula "38") (term "0,0,1") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_geqRight" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "39"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "39"))
                                 (rule "applyEq" (formula "38") (term "0") (ifseqformula "39"))
                                 (rule "inEqSimp_contradEq3" (formula "40") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0"))
                                 (rule "qeq_literals" (formula "40") (term "0"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "false_right" (formula "40"))
                                 (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "35") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "35"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "inEqSimp_homoInEq1" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0"))
                                 (rule "add_zero_right" (formula "30") (term "0"))
                                 (rule "leq_literals" (formula "30"))
                                 (rule "closeFalse" (formula "30"))
                              )
                           )
                           (branch "Case 2"
                              (rule "inEqSimp_geqRight" (formula "39"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "andLeft" (formula "35"))
                              (rule "notLeft" (formula "36"))
                              (rule "applyEq" (formula "38") (term "0") (ifseqformula "35"))
                              (rule "applyEq" (formula "42") (term "0,1") (ifseqformula "35"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "39") (term "0,0,1") (ifseqformula "35"))
                              (rule "eqSymm" (formula "39") (term "0,1"))
                              (rule "applyEq" (formula "39") (term "0,0,1,1") (ifseqformula "35"))
                              (rule "applyEq" (formula "40") (term "0") (ifseqformula "35"))
                              (rule "eqSymm" (formula "40"))
                              (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "35"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                              (rule "add_literals" (formula "40") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "40") (term "1,0,0"))
                              (rule "add_zero_right" (formula "40") (term "0,0"))
                              (rule "leq_literals" (formula "40") (term "0"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "false_right" (formula "40"))
                              (rule "commute_and" (formula "39") (term "1"))
                              (rule "ex_pull_out3" (formula "2") (term "1,0"))
                              (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
                              (rule "commute_or" (formula "2") (term "1,0,1,0"))
                              (rule "cnf_rightDist" (formula "2") (term "0,0,1,0"))
                              (rule "commute_or" (formula "2") (term "1,0,0,1,0"))
                              (rule "ex_pull_out3" (formula "2") (term "0"))
                              (rule "cnf_rightDist" (formula "2") (term "0,0"))
                              (rule "commute_or_2" (formula "2") (term "1,0,0"))
                              (rule "commute_or" (formula "2") (term "0,1,0,0"))
                              (rule "cnf_rightDist" (formula "2") (term "0,0,0"))
                              (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                              (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
                              (rule "commute_or" (formula "2") (term "0,1,0,0,0"))
                              (rule "commute_and_2" (formula "2") (term "0,0"))
                              (rule "equiv_left" (formula "37"))
                              (branch "Case 1"
                                 (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "allRight" (formula "41") (inst "sk=j_126"))
                                 (rule "orRight" (formula "41"))
                                 (rule "orRight" (formula "41"))
                                 (rule "inEqSimp_geqRight" (formula "42"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "42"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "42") (term "0,1,1") (ifseqformula "40"))
                                 (rule "eqSymm" (formula "42") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "notLeft" (formula "42"))
                                 (rule "inEqSimp_leqRight" (formula "42"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "5") (term "1,1,0,0,1,0,0") (ifseqformula "41"))
                                 (rule "applyEq" (formula "5") (term "1,1,0,0,1,0,0,0") (ifseqformula "41"))
                                 (rule "applyEqRigid" (formula "5") (term "1,1,0,0,0,0,0,0") (ifseqformula "41"))
                                 (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "41"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "commute_and" (formula "4") (term "0,0,0"))
                                 (rule "allLeft" (formula "24") (inst "t=i_4"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "27"))
                                 (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "cut_direct" (formula "24") (term "0"))
                                 (branch "CUT: i_5 ≤ i_4 TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "24"))
                                    (rule "times_zero_1" (formula "21") (term "0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0"))
                                    (rule "allLeft" (formula "30") (inst "t=i_5"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "21"))
                                    (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "cut_direct" (formula "30") (term "0"))
                                    (branch "CUT: i_5 ≥ i_4 TRUE"
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "inEqSimp_antiSymm" (formula "30") (ifseqformula "24"))
                                       (rule "applyEqRigid" (formula "22") (term "1,1") (ifseqformula "30"))
                                       (rule "applyEq" (formula "23") (term "0,2,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq1" (formula "23"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq0" (formula "23"))
                                       (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                       (rule "add_literals" (formula "23") (term "1,0"))
                                       (rule "times_zero_1" (formula "23") (term "0"))
                                       (rule "qeq_literals" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "applyEq" (formula "29") (term "0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "29"))
                                       (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                       (rule "add_literals" (formula "29") (term "1,0"))
                                       (rule "times_zero_1" (formula "29") (term "0"))
                                       (rule "leq_literals" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "28"))
                                       (rule "applyEqRigid" (formula "22") (term "0,2,1,0") (ifseqformula "28"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "allLeft" (formula "29") (inst "t=j_126"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "cut_direct" (formula "29") (term "0"))
                                       (branch "CUT: j_126 ≥ i_4 TRUE"
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "allLeft" (formula "4") (inst "t=j_126"))
                                          (rule "exLeft" (formula "4") (inst "sk=j_146"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "5") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "4") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "6") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "commute_or" (formula "5"))
                                          (rule "commute_or" (formula "6"))
                                          (rule "cut_direct" (formula "4") (term "0"))
                                          (branch "CUT: c[j_126] ≤ a[j_126] TRUE"
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "44"))
                                             (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "4"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                             (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "44") (term "0,0"))
                                             (rule "qeq_literals" (formula "44") (term "0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "false_right" (formula "44"))
                                             (rule "allLeft" (formula "5") (inst "t=i_4"))
                                             (rule "exLeft" (formula "5") (inst "sk=j_148"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "29"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "29"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "29"))
                                             (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "25"))
                                             (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "5") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "25"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "25"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "7") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "commute_or" (formula "6"))
                                             (rule "commute_or" (formula "7"))
                                             (rule "cut_direct" (formula "5") (term "0"))
                                             (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "5"))
                                                (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "29"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "inEqSimp_homoInEq1" (formula "24"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0"))
                                                (rule "leq_literals" (formula "24"))
                                                (rule "closeFalse" (formula "24"))
                                             )
                                             (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "notLeft" (formula "5"))
                                                (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_leqRight" (formula "47"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                                (rule "times_zero_1" (formula "6") (term "0,0"))
                                                (rule "add_zero_left" (formula "6") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "6"))
                                                (rule "leq_literals" (formula "30") (term "0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "allLeft" (formula "34") (inst "t=j_148"))
                                                (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "34") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "34") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "34"))
                                                (rule "allLeft" (formula "28") (inst "t=j_148"))
                                                (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "28") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "28"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0"))
                                                (rule "add_literals" (formula "8") (term "0"))
                                                (rule "leq_literals" (formula "8"))
                                                (rule "closeFalse" (formula "8"))
                                             )
                                          )
                                          (branch "CUT: c[j_126] ≤ a[j_126] FALSE"
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "notLeft" (formula "4"))
                                             (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_leqRight" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                             (rule "times_zero_1" (formula "5") (term "0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "allLeft" (formula "7") (inst "t=i_4"))
                                             (rule "exLeft" (formula "7") (inst "sk=j_147"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "31"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "8") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "9") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "7") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "31"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "31"))
                                             (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "commute_or" (formula "8"))
                                             (rule "commute_or" (formula "9"))
                                             (rule "cut_direct" (formula "7") (term "0"))
                                             (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "7"))
                                                (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "31"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "inEqSimp_homoInEq1" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0"))
                                                (rule "add_literals" (formula "26") (term "0"))
                                                (rule "leq_literals" (formula "26"))
                                                (rule "closeFalse" (formula "26"))
                                             )
                                             (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "notLeft" (formula "7"))
                                                (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_leqRight" (formula "49"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                                (rule "times_zero_1" (formula "8") (term "0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "mul_literals" (formula "8") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "8"))
                                                (rule "leq_literals" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "allLeft" (formula "30") (inst "t=j_147"))
                                                (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "10"))
                                                (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                                (rule "leq_literals" (formula "30") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "allLeft" (formula "37") (inst "t=j_147"))
                                                (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "30"))
                                                (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "37") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "37"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_homoInEq1" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0"))
                                                (rule "add_zero_right" (formula "10") (term "0"))
                                                (rule "leq_literals" (formula "10"))
                                                (rule "closeFalse" (formula "10"))
                                             )
                                          )
                                       )
                                       (branch "CUT: j_126 ≥ i_4 FALSE"
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_geqRight" (formula "43"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "30"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "allLeft" (formula "25") (inst "t=j_126"))
                                          (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                          (rule "leq_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "25") (term "0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                    )
                                    (branch "CUT: i_5 ≥ i_4 FALSE"
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_geqRight" (formula "44"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0"))
                                       (rule "qeq_literals" (formula "25") (term "0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "22") (term "0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "22"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "allLeft" (formula "31") (inst "t=j_126"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "cut_direct" (formula "31") (term "0"))
                                       (branch "CUT: j_126 ≥ i_4 TRUE"
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "allLeft" (formula "26") (inst "t=j_126"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "cut_direct" (formula "26") (term "0"))
                                          (branch "CUT: j_126 ≥ i_5 TRUE"
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "allLeft" (formula "5") (inst "t=i_5"))
                                             (rule "exLeft" (formula "5") (inst "sk=j_143"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                             (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "34"))
                                             (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "34"))
                                             (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "34"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "5") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "7") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                             (rule "leq_literals" (formula "7") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                             (rule "leq_literals" (formula "5") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "notLeft" (formula "5"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                             (rule "times_zero_1" (formula "5") (term "0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "5") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "allLeft" (formula "29") (inst "t=j_143"))
                                             (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "29") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "allLeft" (formula "9") (inst "t=j_126"))
                                             (rule "exLeft" (formula "9") (inst "sk=j_144"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "9") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "11") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "10") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "commute_or" (formula "11"))
                                             (rule "commute_or" (formula "10"))
                                             (rule "allLeft" (formula "12") (inst "t=i_4"))
                                             (rule "exLeft" (formula "12") (inst "sk=j_145"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "commute_or_2" (formula "14"))
                                             (rule "commute_or_2" (formula "13"))
                                             (rule "commute_or" (formula "14") (term "0"))
                                             (rule "commute_or" (formula "13") (term "0"))
                                             (rule "cut_direct" (formula "9") (term "0"))
                                             (branch "CUT: c[j_126] ≤ a[j_126] TRUE"
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "inEqSimp_strengthen0" (formula "9") (ifseqformula "54"))
                                                (rule "inEqSimp_contradEq3" (formula "54") (ifseqformula "9"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0"))
                                                (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "54") (term "0,0"))
                                                (rule "qeq_literals" (formula "54") (term "0"))
                                                (builtin "One Step Simplification" (formula "54"))
                                                (rule "false_right" (formula "54"))
                                                (rule "cut_direct" (formula "10") (term "0,0"))
                                                (branch "CUT: res_min ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "10"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "38"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch "CUT: res_min ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "replace_known_right" (formula "11") (term "1,0") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_leqRight" (formula "53"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "cut_direct" (formula "11") (term "0"))
                                                   (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "11"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                      (rule "allLeft" (formula "40") (inst "t=j_143"))
                                                      (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "32"))
                                                      (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "40") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "9"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                      (rule "mul_literals" (formula "40") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "40"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_literals" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "notLeft" (formula "11"))
                                                      (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "inEqSimp_leqRight" (formula "54"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                                      (rule "times_zero_1" (formula "12") (term "0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                      (rule "mul_literals" (formula "12") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "7"))
                                                      (rule "leq_literals" (formula "12") (term "0"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "allLeft" (formula "41") (inst "t=j_145"))
                                                      (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0") (ifseqformula "13"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "41") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "41") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "applyEq" (formula "55") (term "0") (ifseqformula "41"))
                                                      (rule "allLeft" (formula "35") (inst "t=j_145"))
                                                      (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "35") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "13"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "35") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                      (rule "allLeft" (formula "43") (inst "t=j_143"))
                                                      (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "34"))
                                                      (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "43") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "10"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                      (rule "mul_literals" (formula "43") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "43"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: c[j_126] ≤ a[j_126] FALSE"
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "notLeft" (formula "9"))
                                                (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_leqRight" (formula "55"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "57") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0"))
                                                (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "57") (term "0,0"))
                                                (rule "leq_literals" (formula "57") (term "0"))
                                                (builtin "One Step Simplification" (formula "57"))
                                                (rule "false_right" (formula "57"))
                                                (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                                                (rule "times_zero_1" (formula "10") (term "0,0"))
                                                (rule "add_zero_left" (formula "10") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                (rule "mul_literals" (formula "10") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "cut_direct" (formula "12") (term "0,0"))
                                                (branch "CUT: res_min ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "12"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "12"))
                                                   (rule "times_zero_1" (formula "45") (term "0,0"))
                                                   (rule "add_zero_left" (formula "45") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "5"))
                                                   (rule "leq_literals" (formula "45") (term "0"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "true_left" (formula "45"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "40"))
                                                   (rule "inEqSimp_homoInEq1" (formula "40"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                                   (rule "add_literals" (formula "40") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "40") (term "1,0"))
                                                   (rule "add_zero_right" (formula "40") (term "0"))
                                                   (rule "leq_literals" (formula "40"))
                                                   (rule "closeFalse" (formula "40"))
                                                )
                                                (branch "CUT: res_min ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_leqRight" (formula "55"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "cut_direct" (formula "13") (term "0"))
                                                   (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "13"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                      (rule "allLeft" (formula "42") (inst "t=j_143"))
                                                      (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "34"))
                                                      (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "42") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "9"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                      (rule "mul_literals" (formula "42") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "42"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                   (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "notLeft" (formula "13"))
                                                      (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_leqRight" (formula "56"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                                      (rule "times_zero_1" (formula "14") (term "0,0"))
                                                      (rule "add_zero_left" (formula "14") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "7"))
                                                      (rule "leq_literals" (formula "14") (term "0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "allLeft" (formula "43") (inst "t=j_145"))
                                                      (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_contradInEq0" (formula "43") (term "0") (ifseqformula "15"))
                                                      (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "43") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "43") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "43"))
                                                      (rule "allLeft" (formula "37") (inst "t=j_145"))
                                                      (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "37") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "15"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "37") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                      (rule "allLeft" (formula "45") (inst "t=j_143"))
                                                      (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "36"))
                                                      (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "45") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "10"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                      (rule "mul_literals" (formula "45") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "45"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: j_126 ≥ i_5 FALSE"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_geqRight" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                             (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1"))
                                             (rule "mul_literals" (formula "33") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "33"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_literals" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "CUT: j_126 ≥ i_4 FALSE"
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_geqRight" (formula "45"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "applyEq" (formula "46") (term "0") (ifseqformula "32"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "allLeft" (formula "27") (inst "t=j_126"))
                                          (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "27") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "27") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "allLeft" (formula "6") (inst "t=i_5"))
                                          (rule "exLeft" (formula "6") (inst "sk=j_140"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                          (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "35"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "8") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "7") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                          (rule "leq_literals" (formula "7") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "8") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                          (rule "leq_literals" (formula "6") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "notLeft" (formula "6"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                          (rule "times_zero_1" (formula "6") (term "0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "6") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "allLeft" (formula "30") (inst "t=j_140"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                          (rule "leq_literals" (formula "30") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "allLeft" (formula "10") (inst "t=j_126"))
                                          (rule "exLeft" (formula "10") (inst "sk=j_141"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                          (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "39"))
                                          (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "10") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0,0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "12") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "11") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "commute_or" (formula "11"))
                                          (rule "commute_or" (formula "12"))
                                          (rule "allLeft" (formula "13") (inst "t=i_4"))
                                          (rule "exLeft" (formula "13") (inst "sk=j_142"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "commute_or_2" (formula "15"))
                                          (rule "commute_or_2" (formula "14"))
                                          (rule "commute_or" (formula "15") (term "0"))
                                          (rule "commute_or" (formula "14") (term "0"))
                                          (rule "cut_direct" (formula "10") (term "0"))
                                          (branch "CUT: b[j_126] ≤ a[j_126] TRUE"
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "inEqSimp_strengthen0" (formula "10") (ifseqformula "55"))
                                             (rule "inEqSimp_contradEq3" (formula "55") (ifseqformula "10"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0"))
                                             (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "55") (term "0,0"))
                                             (rule "qeq_literals" (formula "55") (term "0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "false_right" (formula "55"))
                                             (rule "cut_direct" (formula "11") (term "0,0"))
                                             (branch "CUT: res_min ≤ i_4 TRUE"
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "11"))
                                                (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "11"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "11"))
                                                (rule "times_zero_1" (formula "44") (term "0,0"))
                                                (rule "add_zero_left" (formula "44") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "6"))
                                                (rule "leq_literals" (formula "44") (term "0"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "true_left" (formula "44"))
                                                (rule "allLeft" (formula "39") (inst "t=j_140"))
                                                (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "32"))
                                                (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "39") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "9"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                (rule "mul_literals" (formula "39") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "39"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_literals" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: res_min ≤ i_4 FALSE"
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_leqRight" (formula "54"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "cut_direct" (formula "12") (term "0"))
                                                (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "12"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                   (rule "allLeft" (formula "41") (inst "t=j_140"))
                                                   (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "33"))
                                                   (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "9"))
                                                   (rule "qeq_literals" (formula "41") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "10"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                   (rule "mul_literals" (formula "41") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "41"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "notLeft" (formula "12"))
                                                   (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_leqRight" (formula "55"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                                   (rule "times_zero_1" (formula "13") (term "0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                   (rule "mul_literals" (formula "13") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "8"))
                                                   (rule "leq_literals" (formula "13") (term "0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "allLeft" (formula "42") (inst "t=j_142"))
                                                   (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "14"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "42") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "42") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "42") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "applyEq" (formula "56") (term "0") (ifseqformula "42"))
                                                   (rule "allLeft" (formula "36") (inst "t=j_142"))
                                                   (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "36") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "14"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                   (rule "allLeft" (formula "44") (inst "t=j_140"))
                                                   (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "35"))
                                                   (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "10"))
                                                   (rule "qeq_literals" (formula "44") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "11"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                   (rule "mul_literals" (formula "44") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "44") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "inEqSimp_homoInEq1" (formula "44"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                                   (rule "add_literals" (formula "44") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "44") (term "0"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0"))
                                                   (rule "add_zero_right" (formula "44") (term "0"))
                                                   (rule "leq_literals" (formula "44"))
                                                   (rule "closeFalse" (formula "44"))
                                                )
                                             )
                                          )
                                          (branch "CUT: b[j_126] ≤ a[j_126] FALSE"
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "notLeft" (formula "10"))
                                             (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_leqRight" (formula "56"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                             (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0"))
                                             (rule "leq_literals" (formula "58") (term "0"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "false_right" (formula "58"))
                                             (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                                             (rule "mul_literals" (formula "11") (term "0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "10") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                             (rule "add_literals" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "mul_literals" (formula "10") (term "1"))
                                             (rule "cut_direct" (formula "13") (term "0,0"))
                                             (branch "CUT: res_min ≤ i_4 TRUE"
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "13"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "13"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "13"))
                                                (rule "times_zero_1" (formula "46") (term "0,0"))
                                                (rule "add_zero_left" (formula "46") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "6"))
                                                (rule "leq_literals" (formula "46") (term "0"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "allLeft" (formula "41") (inst "t=j_140"))
                                                (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "34"))
                                                (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "41") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "9"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                (rule "mul_literals" (formula "41") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "41"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                             (branch "CUT: res_min ≤ i_4 FALSE"
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_leqRight" (formula "56"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "cut_direct" (formula "14") (term "0"))
                                                (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "14"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "14"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "14"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                   (rule "allLeft" (formula "43") (inst "t=j_140"))
                                                   (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "35"))
                                                   (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "9"))
                                                   (rule "qeq_literals" (formula "43") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "10"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                   (rule "mul_literals" (formula "43") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "43"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "notLeft" (formula "14"))
                                                   (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_leqRight" (formula "57"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                   (rule "times_zero_1" (formula "15") (term "0,0"))
                                                   (rule "add_zero_left" (formula "15") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                   (rule "mul_literals" (formula "15") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "8"))
                                                   (rule "leq_literals" (formula "15") (term "0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "allLeft" (formula "44") (inst "t=j_142"))
                                                   (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_contradInEq0" (formula "44") (term "0") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "44") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "applyEq" (formula "58") (term "0") (ifseqformula "44"))
                                                   (rule "allLeft" (formula "38") (inst "t=j_142"))
                                                   (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "38") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "16"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                   (rule "allLeft" (formula "46") (inst "t=j_140"))
                                                   (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "37"))
                                                   (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "62"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "10"))
                                                   (rule "qeq_literals" (formula "46") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "11"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "46") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                   (rule "mul_literals" (formula "46") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "46"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: i_5 ≤ i_4 FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_leqRight" (formula "43"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "25"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "allLeft" (formula "31") (inst "t=j_126"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "cut_direct" (formula "31") (term "0"))
                                    (branch "CUT: j_126 ≥ i_4 TRUE"
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "allLeft" (formula "26") (inst "t=j_126"))
                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "cut_direct" (formula "26") (term "0"))
                                       (branch "CUT: j_126 ≥ i_5 TRUE"
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "allLeft" (formula "5") (inst "t=j_126"))
                                          (rule "exLeft" (formula "5") (inst "sk=j_133"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "7") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "6") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "commute_or" (formula "6"))
                                          (rule "commute_or" (formula "7"))
                                          (rule "cut_direct" (formula "5") (term "0"))
                                          (branch "CUT: c[j_126] ≤ a[j_126] TRUE"
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "47"))
                                             (rule "inEqSimp_contradEq3" (formula "47") (ifseqformula "5"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "qeq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "allLeft" (formula "6") (inst "t=i_5"))
                                             (rule "exLeft" (formula "6") (inst "sk=j_137"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "7") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "8") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "commute_or" (formula "8"))
                                             (rule "commute_or" (formula "7"))
                                             (rule "cut_direct" (formula "6") (term "0"))
                                             (branch "CUT: c[i_5] ≤ a[i_5] TRUE"
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "allLeft" (formula "7") (inst "t=i_4"))
                                                (rule "exLeft" (formula "7") (inst "sk=j_139"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "34"))
                                                (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "34"))
                                                (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "34"))
                                                (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "36"))
                                                (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "36"))
                                                (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "36"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or" (formula "8"))
                                                (rule "commute_or" (formula "9"))
                                                (rule "cut_direct" (formula "7") (term "0"))
                                                (branch "CUT: res_min ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "7"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "26"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "CUT: res_min ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "notLeft" (formula "7"))
                                                   (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_leqRight" (formula "51"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                                   (rule "times_zero_1" (formula "8") (term "0,0"))
                                                   (rule "add_zero_left" (formula "8") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "8"))
                                                   (rule "leq_literals" (formula "35") (term "0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "allLeft" (formula "38") (inst "t=j_139"))
                                                   (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "38") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "9"))
                                                   (rule "qeq_literals" (formula "38") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "38"))
                                                   (rule "allLeft" (formula "33") (inst "t=j_139"))
                                                   (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "9"))
                                                   (rule "qeq_literals" (formula "33") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "10"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "33") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "33"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0"))
                                                   (rule "add_literals" (formula "33") (term "0"))
                                                   (rule "leq_literals" (formula "33"))
                                                   (rule "closeFalse" (formula "33"))
                                                )
                                             )
                                             (branch "CUT: c[i_5] ≤ a[i_5] FALSE"
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "notLeft" (formula "6"))
                                                (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_leqRight" (formula "50"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                                (rule "times_zero_1" (formula "7") (term "0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "27") (term "0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "allLeft" (formula "31") (inst "t=j_137"))
                                                (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                                (rule "leq_literals" (formula "31") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "allLeft" (formula "10") (inst "t=i_4"))
                                                (rule "exLeft" (formula "10") (inst "sk=j_138"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "39"))
                                                (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "39"))
                                                (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0") (ifseqformula "37"))
                                                (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "37"))
                                                (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "39"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "37"))
                                                (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "commute_or" (formula "12"))
                                                (rule "commute_or" (formula "11"))
                                                (rule "cut_direct" (formula "10") (term "0"))
                                                (branch "CUT: res_min ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "10"))
                                                   (rule "times_zero_1" (formula "44") (term "0,0"))
                                                   (rule "add_zero_left" (formula "44") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "10"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "28"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0"))
                                                   (rule "add_literals" (formula "28") (term "0"))
                                                   (rule "leq_literals" (formula "28"))
                                                   (rule "closeFalse" (formula "28"))
                                                )
                                                (branch "CUT: res_min ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "notLeft" (formula "10"))
                                                   (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_leqRight" (formula "54"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                                                   (rule "times_zero_1" (formula "11") (term "0,0"))
                                                   (rule "add_zero_left" (formula "11") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                   (rule "mul_literals" (formula "11") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "11"))
                                                   (rule "leq_literals" (formula "38") (term "0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "allLeft" (formula "41") (inst "t=j_138"))
                                                   (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0") (ifseqformula "13"))
                                                   (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "41") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "41") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "41"))
                                                   (rule "allLeft" (formula "36") (inst "t=j_138"))
                                                   (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "36") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "13"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "36"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                          )
                                          (branch "CUT: c[j_126] ≤ a[j_126] FALSE"
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "notLeft" (formula "5"))
                                             (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_leqRight" (formula "49"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "50") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0"))
                                             (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "50") (term "0,0"))
                                             (rule "leq_literals" (formula "50") (term "0"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                             (rule "times_zero_1" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "allLeft" (formula "8") (inst "t=i_5"))
                                             (rule "exLeft" (formula "8") (inst "sk=j_134"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "10") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "8") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "9") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "commute_or" (formula "9"))
                                             (rule "commute_or" (formula "10"))
                                             (rule "cut_direct" (formula "8") (term "0"))
                                             (branch "CUT: c[i_5] ≤ a[i_5] TRUE"
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "allLeft" (formula "9") (inst "t=i_4"))
                                                (rule "exLeft" (formula "9") (inst "sk=j_136"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "38"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "38"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "38"))
                                                (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or" (formula "10"))
                                                (rule "commute_or" (formula "11"))
                                                (rule "cut_direct" (formula "9") (term "0"))
                                                (branch "CUT: res_min ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "9"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "28"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0"))
                                                   (rule "add_literals" (formula "28") (term "0"))
                                                   (rule "leq_literals" (formula "28"))
                                                   (rule "closeFalse" (formula "28"))
                                                )
                                                (branch "CUT: res_min ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "notLeft" (formula "9"))
                                                   (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_leqRight" (formula "53"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                                                   (rule "times_zero_1" (formula "10") (term "0,0"))
                                                   (rule "add_zero_left" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                   (rule "mul_literals" (formula "10") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "37") (term "0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "allLeft" (formula "40") (inst "t=j_136"))
                                                   (rule "inEqSimp_contradInEq0" (formula "40") (term "1,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "40") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "40") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "40") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "40"))
                                                   (rule "allLeft" (formula "35") (inst "t=j_136"))
                                                   (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "35") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "12"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "35"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                             (branch "CUT: c[i_5] ≤ a[i_5] FALSE"
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "notLeft" (formula "8"))
                                                (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "52"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "52"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_leqRight" (formula "52"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                                (rule "times_zero_1" (formula "9") (term "0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "29") (term "0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "allLeft" (formula "33") (inst "t=j_134"))
                                                (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "33") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "33") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "33") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "allLeft" (formula "12") (inst "t=i_4"))
                                                (rule "exLeft" (formula "12") (inst "sk=j_135"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "39"))
                                                (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "39"))
                                                (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "41"))
                                                (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "41"))
                                                (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "41"))
                                                (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "39"))
                                                (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "commute_or" (formula "14"))
                                                (rule "commute_or" (formula "13"))
                                                (rule "allLeft" (formula "37") (inst "t=j_133"))
                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "allLeft" (formula "44") (inst "t=j_133"))
                                                (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "cut_direct" (formula "12") (term "0"))
                                                (branch "CUT: res_min ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "12"))
                                                   (rule "times_zero_1" (formula "48") (term "0,0"))
                                                   (rule "add_zero_left" (formula "48") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "12"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "42"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch "CUT: res_min ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "notLeft" (formula "12"))
                                                   (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_leqRight" (formula "58"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                                   (rule "times_zero_1" (formula "13") (term "0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                   (rule "mul_literals" (formula "13") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "13"))
                                                   (rule "leq_literals" (formula "41") (term "0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "true_left" (formula "41"))
                                                   (rule "allLeft" (formula "45") (inst "t=j_135"))
                                                   (rule "inEqSimp_contradInEq0" (formula "45") (term "1,0") (ifseqformula "15"))
                                                   (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "45") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "45") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "45") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "45") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "45") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "45") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "applyEq" (formula "59") (term "0") (ifseqformula "45"))
                                                   (rule "allLeft" (formula "39") (inst "t=j_135"))
                                                   (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "39") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "15"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "39"))
                                                   (rule "inEqSimp_homoInEq1" (formula "39"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                                   (rule "add_literals" (formula "39") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0"))
                                                   (rule "leq_literals" (formula "39"))
                                                   (rule "closeFalse" (formula "39"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: j_126 ≥ i_5 FALSE"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_geqRight" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "24") (term "0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                          (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1"))
                                          (rule "mul_literals" (formula "33") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                          (rule "allLeft" (formula "7") (inst "t=j_126"))
                                          (rule "exLeft" (formula "7") (inst "sk=j_127"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "9") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "7") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "8") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "commute_or" (formula "9"))
                                          (rule "commute_or" (formula "8"))
                                          (rule "cut_direct" (formula "7") (term "0"))
                                          (branch "CUT: c[j_126] ≤ a[j_126] TRUE"
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "inEqSimp_strengthen0" (formula "7") (ifseqformula "48"))
                                             (rule "inEqSimp_contradEq3" (formula "48") (ifseqformula "7"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                             (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "48") (term "0,0"))
                                             (rule "qeq_literals" (formula "48") (term "0"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "false_right" (formula "48"))
                                             (rule "allLeft" (formula "8") (inst "t=i_5"))
                                             (rule "exLeft" (formula "8") (inst "sk=j_130"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "10") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "9") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "8") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "commute_or" (formula "10"))
                                             (rule "commute_or" (formula "9"))
                                             (rule "cut_direct" (formula "8") (term "0"))
                                             (branch "CUT: c[i_5] ≤ a[i_5] TRUE"
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "allLeft" (formula "9") (inst "t=i_4"))
                                                (rule "exLeft" (formula "9") (inst "sk=j_132"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "37"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "37"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "37"))
                                                (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "35"))
                                                (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "35"))
                                                (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "35"))
                                                (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or" (formula "10"))
                                                (rule "commute_or" (formula "11"))
                                                (rule "cut_direct" (formula "9") (term "0"))
                                                (branch "CUT: res_min ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "9"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch "CUT: res_min ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "notLeft" (formula "9"))
                                                   (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_leqRight" (formula "52"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                                                   (rule "times_zero_1" (formula "10") (term "0,0"))
                                                   (rule "add_zero_left" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                   (rule "mul_literals" (formula "10") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "36") (term "0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "allLeft" (formula "39") (inst "t=j_132"))
                                                   (rule "inEqSimp_contradInEq0" (formula "39") (term "1,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "39") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "39") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "applyEq" (formula "53") (term "0") (ifseqformula "39"))
                                                   (rule "allLeft" (formula "34") (inst "t=j_132"))
                                                   (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "34") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "12"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "34") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "34"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0"))
                                                   (rule "add_literals" (formula "34") (term "0"))
                                                   (rule "leq_literals" (formula "34"))
                                                   (rule "closeFalse" (formula "34"))
                                                )
                                             )
                                             (branch "CUT: c[i_5] ≤ a[i_5] FALSE"
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "notLeft" (formula "8"))
                                                (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_leqRight" (formula "51"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                                (rule "times_zero_1" (formula "9") (term "0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1"))
                                                (rule "allLeft" (formula "32") (inst "t=j_130"))
                                                (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "10"))
                                                (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "32") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "32") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "allLeft" (formula "11") (inst "t=i_4"))
                                                (rule "exLeft" (formula "11") (inst "sk=j_131"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "40"))
                                                (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "40"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "40"))
                                                (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "38"))
                                                (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "38"))
                                                (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "38"))
                                                (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "commute_or" (formula "12"))
                                                (rule "commute_or" (formula "13"))
                                                (rule "cut_direct" (formula "11") (term "0"))
                                                (branch "CUT: res_min ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "11"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "6"))
                                                   (rule "andLeft" (formula "40"))
                                                   (rule "inEqSimp_homoInEq1" (formula "40"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                                   (rule "add_literals" (formula "40") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "40") (term "1,0"))
                                                   (rule "add_literals" (formula "40") (term "0"))
                                                   (rule "leq_literals" (formula "40"))
                                                   (rule "closeFalse" (formula "40"))
                                                )
                                                (branch "CUT: res_min ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "notLeft" (formula "11"))
                                                   (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_leqRight" (formula "55"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                                   (rule "times_zero_1" (formula "12") (term "0,0"))
                                                   (rule "add_zero_left" (formula "12") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                   (rule "mul_literals" (formula "12") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "12"))
                                                   (rule "leq_literals" (formula "39") (term "0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "allLeft" (formula "42") (inst "t=j_131"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "14"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "42") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "42") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "applyEq" (formula "56") (term "0") (ifseqformula "42"))
                                                   (rule "allLeft" (formula "37") (inst "t=j_131"))
                                                   (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "37") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "14"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "37") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "37") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "37"))
                                                   (rule "inEqSimp_homoInEq1" (formula "37"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                                   (rule "add_literals" (formula "37") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0"))
                                                   (rule "leq_literals" (formula "37"))
                                                   (rule "closeFalse" (formula "37"))
                                                )
                                             )
                                          )
                                          (branch "CUT: c[j_126] ≤ a[j_126] FALSE"
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "notLeft" (formula "7"))
                                             (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_leqRight" (formula "50"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "51") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                                             (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "51") (term "0,0"))
                                             (rule "leq_literals" (formula "51") (term "0"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                             (rule "times_zero_1" (formula "8") (term "0,0"))
                                             (rule "add_zero_left" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "mul_literals" (formula "8") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "7") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "allLeft" (formula "10") (inst "t=i_5"))
                                             (rule "exLeft" (formula "10") (inst "sk=j_128"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "30"))
                                             (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "11") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "30"))
                                             (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "12") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "30"))
                                             (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "10") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "commute_or" (formula "11"))
                                             (rule "commute_or" (formula "12"))
                                             (rule "allLeft" (formula "13") (inst "t=i_4"))
                                             (rule "exLeft" (formula "13") (inst "sk=j_129"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "41"))
                                             (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "15") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "39"))
                                             (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "39"))
                                             (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "39"))
                                             (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "41"))
                                             (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "13") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "41"))
                                             (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "14") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "commute_or" (formula "15"))
                                             (rule "commute_or" (formula "14"))
                                             (rule "cut_direct" (formula "10") (term "0"))
                                             (branch "CUT: c[i_5] ≤ a[i_5] TRUE"
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "cut_direct" (formula "11") (term "0"))
                                                (branch "CUT: res_min ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "11"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "39"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_literals" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch "CUT: res_min ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "notLeft" (formula "11"))
                                                   (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_leqRight" (formula "54"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                                   (rule "times_zero_1" (formula "12") (term "0,0"))
                                                   (rule "add_zero_left" (formula "12") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                   (rule "mul_literals" (formula "12") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "12"))
                                                   (rule "leq_literals" (formula "38") (term "0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "allLeft" (formula "41") (inst "t=j_129"))
                                                   (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0") (ifseqformula "14"))
                                                   (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "41") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "41") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "41"))
                                                   (rule "allLeft" (formula "36") (inst "t=j_129"))
                                                   (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "36") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "14"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "36"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                             )
                                             (branch "CUT: c[i_5] ≤ a[i_5] FALSE"
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "notLeft" (formula "10"))
                                                (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_leqRight" (formula "56"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                                                (rule "times_zero_1" (formula "11") (term "0,0"))
                                                (rule "add_zero_left" (formula "11") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "11") (term "0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "allLeft" (formula "37") (inst "t=j_128"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (term "1,0") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "37") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "37") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "11"))
                                                (rule "qeq_literals" (formula "37") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "cut_direct" (formula "13") (term "0"))
                                                (branch "CUT: res_min ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "13"))
                                                   (rule "times_zero_1" (formula "47") (term "0,0"))
                                                   (rule "add_zero_left" (formula "47") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "13"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "31"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch "CUT: res_min ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_leqRight" (formula "57"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                                   (rule "times_zero_1" (formula "14") (term "0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                   (rule "mul_literals" (formula "14") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "14"))
                                                   (rule "leq_literals" (formula "41") (term "0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "true_left" (formula "41"))
                                                   (rule "allLeft" (formula "44") (inst "t=j_129"))
                                                   (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "44") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "44") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "44") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "applyEq" (formula "58") (term "0") (ifseqformula "44"))
                                                   (rule "allLeft" (formula "45") (inst "t=j_127"))
                                                   (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "10"))
                                                   (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "allLeft" (formula "39") (inst "t=j_127"))
                                                   (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "10"))
                                                   (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "allLeft" (formula "40") (inst "t=j_129"))
                                                   (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "61"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "40") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "16"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "5"))
                                                   (rule "andLeft" (formula "40"))
                                                   (rule "inEqSimp_homoInEq1" (formula "40"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                                   (rule "add_literals" (formula "40") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "40") (term "1,0"))
                                                   (rule "add_zero_right" (formula "40") (term "0"))
                                                   (rule "leq_literals" (formula "40"))
                                                   (rule "closeFalse" (formula "40"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: j_126 ≥ i_4 FALSE"
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_geqRight" (formula "45"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "32"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "30") (term "0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "allLeft" (formula "28") (inst "t=j_126"))
                                       (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "28") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "2"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0"))
                                       (rule "add_literals" (formula "28") (term "0"))
                                       (rule "leq_literals" (formula "28"))
                                       (rule "closeFalse" (formula "28"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "false_right" (formula "41"))
                                 (rule "inEqSimp_geqRight" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "andLeft" (formula "39"))
                                 (rule "notLeft" (formula "39"))
                                 (rule "applyEqRigid" (formula "3") (term "1,1,0,0,1,0,0,0") (ifseqformula "39"))
                                 (rule "applyEqRigid" (formula "3") (term "1,1,0,0,0,0,0,0") (ifseqformula "39"))
                                 (rule "applyEqRigid" (formula "3") (term "1,1,0,0,1,0,0") (ifseqformula "39"))
                                 (rule "applyEq" (formula "41") (term "0") (ifseqformula "39"))
                                 (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "39"))
                                 (rule "inEqSimp_contradEq3" (formula "40") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0"))
                                 (rule "qeq_literals" (formula "40") (term "0"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "false_right" (formula "40"))
                                 (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "39") (term "0,0"))
                                 (rule "add_zero_left" (formula "39") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                 (rule "mul_literals" (formula "39") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "39"))
                                 (rule "leq_literals" (formula "34") (term "0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "commute_and" (formula "3") (term "0,0,0"))
                                 (rule "allLeft" (formula "23") (inst "t=i_4"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "26"))
                                 (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "cut_direct" (formula "23") (term "0"))
                                 (branch "CUT: i_5 ≤ i_4 TRUE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "23"))
                                    (rule "times_zero_1" (formula "20") (term "0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0"))
                                    (rule "allLeft" (formula "30") (inst "t=i_5"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "20"))
                                    (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "cut_direct" (formula "30") (term "0"))
                                    (branch "CUT: i_5 ≥ i_4 TRUE"
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "inEqSimp_antiSymm" (formula "30") (ifseqformula "23"))
                                       (rule "applyEqRigid" (formula "21") (term "1,1") (ifseqformula "30"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq1" (formula "31"))
                                       (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                       (rule "add_literals" (formula "31") (term "1,0"))
                                       (rule "times_zero_1" (formula "31") (term "0"))
                                       (rule "leq_literals" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "30"))
                                       (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "23"))
                                       (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                       (rule "add_literals" (formula "23") (term "1,0"))
                                       (rule "times_zero_1" (formula "23") (term "0"))
                                       (rule "qeq_literals" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "21") (term "0,2,1,0") (ifseqformula "28"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "25"))
                                       (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0"))
                                       (rule "qeq_literals" (formula "20") (term "0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "allLeft" (formula "3") (inst "t=i_4"))
                                       (rule "exLeft" (formula "3") (inst "sk=j_125"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0,0") (ifseqformula "26"))
                                       (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "26"))
                                       (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "3") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "4") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "26"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "commute_or" (formula "4"))
                                       (rule "commute_or" (formula "5"))
                                       (rule "cut_direct" (formula "3") (term "0"))
                                       (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "3"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "21"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                       (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "43"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "43"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_leqRight" (formula "43"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                          (rule "times_zero_1" (formula "4") (term "0,0"))
                                          (rule "add_zero_left" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "allLeft" (formula "25") (inst "t=j_125"))
                                          (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "25") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "25") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "allLeft" (formula "32") (inst "t=j_125"))
                                          (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "25"))
                                          (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "32") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "32"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0"))
                                          (rule "add_literals" (formula "6") (term "0"))
                                          (rule "leq_literals" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                    (branch "CUT: i_5 ≥ i_4 FALSE"
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_geqRight" (formula "43"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0"))
                                       (rule "qeq_literals" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "21"))
                                       (rule "leq_literals" (formula "27") (term "0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "allLeft" (formula "4") (inst "t=i_4"))
                                       (rule "exLeft" (formula "4") (inst "sk=j_121"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "24"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "31"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "24"))
                                       (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "31"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "24"))
                                       (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "31"))
                                       (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "4") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "commute_or" (formula "5"))
                                       (rule "commute_or" (formula "6"))
                                       (rule "cut_direct" (formula "4") (term "0"))
                                       (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "4"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0"))
                                          (rule "allLeft" (formula "5") (inst "t=i_5"))
                                          (rule "exLeft" (formula "5") (inst "sk=j_124"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                          (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "35"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "26"))
                                          (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "26"))
                                          (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "6") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "5") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "26"))
                                          (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "7") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "commute_or" (formula "6"))
                                          (rule "commute_or" (formula "7"))
                                          (rule "cut_direct" (formula "5") (term "0"))
                                          (branch "CUT: res_min_0 ≤ i_5 TRUE"
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "5"))
                                             (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1"))
                                             (rule "mul_literals" (formula "30") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "1"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "inEqSimp_homoInEq1" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0"))
                                             (rule "add_zero_right" (formula "30") (term "0"))
                                             (rule "leq_literals" (formula "30"))
                                             (rule "closeFalse" (formula "30"))
                                          )
                                          (branch "CUT: res_min_0 ≤ i_5 FALSE"
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "notLeft" (formula "5"))
                                             (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_leqRight" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                             (rule "times_zero_1" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "27") (term "0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0"))
                                             (rule "qeq_literals" (formula "28") (term "0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                             (rule "mul_literals" (formula "7") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "allLeft" (formula "29") (inst "t=j_124"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq0" (formula "29") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "allLeft" (formula "37") (inst "t=j_124"))
                                             (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "29"))
                                             (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "37") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "10"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                             (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1"))
                                             (rule "mul_literals" (formula "37") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "3"))
                                             (rule "andLeft" (formula "37"))
                                             (rule "inEqSimp_homoInEq1" (formula "37"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                             (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                             (rule "add_literals" (formula "37") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "37") (term "1,0"))
                                             (rule "add_literals" (formula "37") (term "0"))
                                             (rule "leq_literals" (formula "37"))
                                             (rule "closeFalse" (formula "37"))
                                          )
                                       )
                                       (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "46"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "46"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_leqRight" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                          (rule "times_zero_1" (formula "5") (term "0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "allLeft" (formula "34") (inst "t=j_121"))
                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                          (rule "leq_literals" (formula "34") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "34"))
                                          (rule "allLeft" (formula "28") (inst "t=j_121"))
                                          (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "28") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "6"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "28") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "allLeft" (formula "7") (inst "t=i_5"))
                                          (rule "exLeft" (formula "7") (inst "sk=j_122"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                          (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "37"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "28"))
                                          (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "28"))
                                          (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "28"))
                                          (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "30"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "30"))
                                          (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "9") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "30"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "7") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "commute_or" (formula "8"))
                                          (rule "commute_or" (formula "9"))
                                          (rule "cut_direct" (formula "7") (term "0"))
                                          (branch "CUT: res_min_0 ≤ i_5 TRUE"
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "7"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "7"))
                                             (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                             (rule "mul_literals" (formula "33") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "2"))
                                             (rule "andLeft" (formula "33"))
                                             (rule "inEqSimp_homoInEq1" (formula "33"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                             (rule "add_literals" (formula "33") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0"))
                                             (rule "add_literals" (formula "33") (term "0"))
                                             (rule "leq_literals" (formula "33"))
                                             (rule "closeFalse" (formula "33"))
                                          )
                                          (branch "CUT: res_min_0 ≤ i_5 FALSE"
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "notLeft" (formula "7"))
                                             (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "51"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "51"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_leqRight" (formula "51"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                             (rule "times_zero_1" (formula "8") (term "0,0"))
                                             (rule "add_zero_left" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "mul_literals" (formula "8") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "29") (term "0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0"))
                                             (rule "qeq_literals" (formula "30") (term "0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "9") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "add_literals" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "30") (term "0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "allLeft" (formula "32") (inst "t=j_122"))
                                             (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "32") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "32") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "allLeft" (formula "13") (inst "t=j_121"))
                                             (rule "exLeft" (formula "13") (inst "sk=j_123"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                             (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "42"))
                                             (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "commute_or_2" (formula "14"))
                                             (rule "commute_or_2" (formula "15"))
                                             (rule "commute_or" (formula "14") (term "0"))
                                             (rule "commute_or" (formula "15") (term "0"))
                                             (rule "cut_direct" (formula "13") (term "0,0"))
                                             (branch "CUT: res_min_0 ≤ j_121 TRUE"
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "13"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "13"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                (rule "mul_literals" (formula "37") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                                (rule "mul_literals" (formula "37") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "8"))
                                                (rule "andLeft" (formula "37"))
                                                (rule "inEqSimp_homoInEq1" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                                (rule "add_literals" (formula "37") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0"))
                                                (rule "leq_literals" (formula "37"))
                                                (rule "closeFalse" (formula "37"))
                                             )
                                             (branch "CUT: res_min_0 ≤ j_121 FALSE"
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_leqRight" (formula "55"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "cut_direct" (formula "15") (term "0"))
                                                (branch "CUT: b[j_121] ≤ a[j_121] TRUE"
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "inEqSimp_strengthen0" (formula "15") (ifseqformula "56"))
                                                   (rule "inEqSimp_contradEq3" (formula "56") (ifseqformula "15"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                                                   (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0"))
                                                   (rule "qeq_literals" (formula "56") (term "0"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "false_right" (formula "56"))
                                                   (rule "allLeft" (formula "43") (inst "t=j_122"))
                                                   (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "35"))
                                                   (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "43") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "14"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                   (rule "mul_literals" (formula "43") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "43"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0"))
                                                   (rule "add_literals" (formula "6") (term "0"))
                                                   (rule "leq_literals" (formula "6"))
                                                   (rule "closeFalse" (formula "6"))
                                                )
                                                (branch "CUT: b[j_121] ≤ a[j_121] FALSE"
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "notLeft" (formula "15"))
                                                   (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_leqRight" (formula "57"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                                   (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "59") (term "0,0"))
                                                   (rule "leq_literals" (formula "59") (term "0"))
                                                   (builtin "One Step Simplification" (formula "59"))
                                                   (rule "false_right" (formula "59"))
                                                   (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "17"))
                                                   (rule "times_zero_1" (formula "16") (term "0,0"))
                                                   (rule "add_zero_left" (formula "16") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                   (rule "mul_literals" (formula "16") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
                                                   (rule "leq_literals" (formula "10") (term "0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "10"))
                                                   (rule "mul_literals" (formula "15") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                   (rule "add_literals" (formula "15") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                   (rule "mul_literals" (formula "15") (term "1"))
                                                   (rule "allLeft" (formula "45") (inst "t=j_122"))
                                                   (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "37"))
                                                   (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "45") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "14"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                                   (rule "mul_literals" (formula "45") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "45") (ifseqformula "7"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "inEqSimp_homoInEq1" (formula "45"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                                   (rule "add_literals" (formula "45") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "45") (term "0"))
                                                   (rule "add_literals" (formula "45") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "45") (term "1,0"))
                                                   (rule "add_zero_right" (formula "45") (term "0"))
                                                   (rule "leq_literals" (formula "45"))
                                                   (rule "closeFalse" (formula "45"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: i_5 ≤ i_4 FALSE"
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_leqRight" (formula "42"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "24"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "allLeft" (formula "4") (inst "t=i_4"))
                                    (rule "exLeft" (formula "4") (inst "sk=j_120"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "30"))
                                    (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "33"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "5") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "33"))
                                    (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "4") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "33"))
                                    (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "6") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "30"))
                                    (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "30"))
                                    (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "32"))
                                    (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                    (rule "leq_literals" (formula "6") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "32"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                    (rule "leq_literals" (formula "5") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "32"))
                                    (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                    (rule "leq_literals" (formula "4") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "notLeft" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                    (rule "times_zero_1" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "30") (term "0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "allLeft" (formula "33") (inst "t=j_120"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                    (rule "leq_literals" (formula "33") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "applyEq" (formula "46") (term "0") (ifseqformula "33"))
                                    (rule "allLeft" (formula "28") (inst "t=j_120"))
                                    (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "28") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "1"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "inEqSimp_homoInEq1" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0"))
                                    (rule "add_literals" (formula "28") (term "0"))
                                    (rule "leq_literals" (formula "28"))
                                    (rule "closeFalse" (formula "28"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "inEqSimp_geqRight" (formula "39"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "andLeft" (formula "32"))
                           (rule "notLeft" (formula "33"))
                           (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "32"))
                           (rule "eqSymm" (formula "34") (term "1"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "32"))
                           (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "32"))
                           (rule "eqSymm" (formula "40"))
                           (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "32"))
                           (rule "applyEq" (formula "35") (term "1,0,1,1") (ifseqformula "32"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0"))
                           (rule "leq_literals" (formula "40") (term "0"))
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "false_right" (formula "40"))
                           (rule "equiv_left" (formula "37"))
                           (branch "Case 1"
                              (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "allRight" (formula "41") (inst "sk=j_87"))
                              (rule "orRight" (formula "41"))
                              (rule "orRight" (formula "41"))
                              (rule "inEqSimp_geqRight" (formula "42"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "42"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "applyEq" (formula "39") (term "1") (ifseqformula "40"))
                              (rule "applyEq" (formula "32") (term "0") (ifseqformula "40"))
                              (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "40"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "40"))
                              (rule "applyEq" (formula "42") (term "1,0,1,1") (ifseqformula "40"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "notLeft" (formula "42"))
                              (rule "inEqSimp_leqRight" (formula "42"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "commute_and" (formula "37") (term "1"))
                              (rule "applyEq_and_gen2" (formula "37") (term "1"))
                              (rule "ex_pull_out3" (formula "4") (term "1,0"))
                              (rule "cnf_rightDist" (formula "4") (term "0,1,0"))
                              (rule "commute_or" (formula "4") (term "1,0,1,0"))
                              (rule "cnf_rightDist" (formula "4") (term "0,0,1,0"))
                              (rule "commute_or" (formula "4") (term "1,0,0,1,0"))
                              (rule "ex_pull_out3" (formula "4") (term "0"))
                              (rule "cnf_rightDist" (formula "4") (term "0,0"))
                              (rule "commute_or_2" (formula "4") (term "1,0,0"))
                              (rule "commute_or" (formula "4") (term "0,1,0,0"))
                              (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                              (rule "commute_or_2" (formula "4") (term "1,0,0,0"))
                              (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                              (rule "commute_or" (formula "4") (term "0,1,0,0,0"))
                              (rule "equiv_left" (formula "36"))
                              (branch "Case 1"
                                 (rule "replace_known_left" (formula "38") (term "0,0,1") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "notLeft" (formula "38"))
                                 (rule "inEqSimp_leqRight" (formula "42"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "38"))
                                 (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "38"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "commute_and_2" (formula "4") (term "0,0"))
                                 (rule "commute_and" (formula "4") (term "0,0,0"))
                                 (rule "allLeft" (formula "24") (inst "t=i_4"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "27"))
                                 (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "cut_direct" (formula "24") (term "0"))
                                 (branch "CUT: i_5 ≤ i_4 TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "24"))
                                    (rule "times_zero_1" (formula "21") (term "0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0"))
                                    (rule "allLeft" (formula "30") (inst "t=i_5"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "21"))
                                    (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "cut_direct" (formula "30") (term "0"))
                                    (branch "CUT: i_5 ≥ i_4 TRUE"
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "inEqSimp_antiSymm" (formula "30") (ifseqformula "24"))
                                       (rule "applyEq" (formula "23") (term "0,2,1,1") (ifseqformula "30"))
                                       (rule "applyEq" (formula "23") (term "0,2,0") (ifseqformula "30"))
                                       (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "24"))
                                       (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                       (rule "add_literals" (formula "24") (term "1,0"))
                                       (rule "times_zero_1" (formula "24") (term "0"))
                                       (rule "qeq_literals" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "29") (term "0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "29"))
                                       (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                       (rule "add_literals" (formula "29") (term "1,0"))
                                       (rule "times_zero_1" (formula "29") (term "0"))
                                       (rule "leq_literals" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "28"))
                                       (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "27"))
                                       (rule "allLeft" (formula "28") (inst "t=j_87"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "cut_direct" (formula "28") (term "0"))
                                       (branch "CUT: j_87 ≥ i_4 TRUE"
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "allLeft" (formula "4") (inst "t=j_87"))
                                          (rule "exLeft" (formula "4") (inst "sk=j_117"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "6") (term "1"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                                          (rule "mul_literals" (formula "6") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "5") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "4") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "6") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "commute_or" (formula "5"))
                                          (rule "commute_or" (formula "4"))
                                          (rule "commute_or" (formula "6"))
                                          (rule "cut_direct" (formula "4") (term "1"))
                                          (branch "CUT: c[j_87] ≤ a[j_87] TRUE"
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "43"))
                                             (rule "inEqSimp_contradEq3" (formula "43") (ifseqformula "4"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "qeq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "allLeft" (formula "5") (inst "t=i_4"))
                                             (rule "exLeft" (formula "5") (inst "sk=j_119"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "commute_or_2" (formula "6"))
                                             (rule "commute_or_2" (formula "7"))
                                             (rule "commute_or" (formula "6") (term "0"))
                                             (rule "commute_or" (formula "7") (term "0"))
                                             (rule "cut_direct" (formula "5") (term "0,0"))
                                             (branch "CUT: res_min_1 ≤ i_4 TRUE"
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "31"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: res_min_1 ≤ i_4 FALSE"
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_right" (formula "6") (term "1,0") (ifseqformula "46"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_right" (formula "7") (term "1,0") (ifseqformula "46"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_leqRight" (formula "46"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "cut_direct" (formula "6") (term "0"))
                                                (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "6"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "24"))
                                                   (rule "andLeft" (formula "29"))
                                                   (rule "inEqSimp_homoInEq1" (formula "29"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                   (rule "add_literals" (formula "29") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                   (rule "add_literals" (formula "29") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "29") (term "1,0"))
                                                   (rule "add_zero_right" (formula "29") (term "0"))
                                                   (rule "leq_literals" (formula "29"))
                                                   (rule "closeFalse" (formula "29"))
                                                )
                                                (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "notLeft" (formula "6"))
                                                   (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_leqRight" (formula "47"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                                   (rule "times_zero_1" (formula "7") (term "0,0"))
                                                   (rule "add_zero_left" (formula "7") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                   (rule "mul_literals" (formula "7") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "7"))
                                                   (rule "leq_literals" (formula "30") (term "0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "allLeft" (formula "34") (inst "t=j_119"))
                                                   (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "34") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "34") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "applyEq" (formula "48") (term "0") (ifseqformula "34"))
                                                   (rule "allLeft" (formula "28") (inst "t=j_119"))
                                                   (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "28") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "28"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0"))
                                                   (rule "add_literals" (formula "9") (term "0"))
                                                   (rule "leq_literals" (formula "9"))
                                                   (rule "closeFalse" (formula "9"))
                                                )
                                             )
                                          )
                                          (branch "CUT: c[j_87] ≤ a[j_87] FALSE"
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "notLeft" (formula "4"))
                                             (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "inEqSimp_leqRight" (formula "45"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "46") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                                             (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "46") (term "0,0"))
                                             (rule "leq_literals" (formula "46") (term "0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "false_right" (formula "46"))
                                             (rule "allLeft" (formula "7") (inst "t=i_4"))
                                             (rule "exLeft" (formula "7") (inst "sk=j_118"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "30"))
                                             (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "30"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "30"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "commute_or_2" (formula "9"))
                                             (rule "commute_or_2" (formula "8"))
                                             (rule "commute_or" (formula "9") (term "0"))
                                             (rule "commute_or" (formula "8") (term "0"))
                                             (rule "cut_direct" (formula "7") (term "0,0"))
                                             (branch "CUT: res_min_1 ≤ i_4 TRUE"
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "7"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "7"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "3"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "33"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0"))
                                                (rule "add_literals" (formula "33") (term "0"))
                                                (rule "leq_literals" (formula "33"))
                                                (rule "closeFalse" (formula "33"))
                                             )
                                             (branch "CUT: res_min_1 ≤ i_4 FALSE"
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_right" (formula "9") (term "1,0") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_right" (formula "8") (term "1,0") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_leqRight" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "cut_direct" (formula "8") (term "0"))
                                                (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "8"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "26"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "inEqSimp_homoInEq1" (formula "31"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0"))
                                                   (rule "add_literals" (formula "31") (term "0"))
                                                   (rule "leq_literals" (formula "31"))
                                                   (rule "closeFalse" (formula "31"))
                                                )
                                                (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "notLeft" (formula "8"))
                                                   (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_leqRight" (formula "49"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                                   (rule "times_zero_1" (formula "9") (term "0,0"))
                                                   (rule "add_zero_left" (formula "9") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                   (rule "mul_literals" (formula "9") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "9"))
                                                   (rule "leq_literals" (formula "32") (term "0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "allLeft" (formula "30") (inst "t=j_118"))
                                                   (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "30") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "10"))
                                                   (rule "qeq_literals" (formula "30") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "allLeft" (formula "37") (inst "t=j_118"))
                                                   (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "30"))
                                                   (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "10"))
                                                   (rule "qeq_literals" (formula "37") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "37"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0"))
                                                   (rule "add_zero_right" (formula "11") (term "0"))
                                                   (rule "leq_literals" (formula "11"))
                                                   (rule "closeFalse" (formula "11"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: j_87 ≥ i_4 FALSE"
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_geqRight" (formula "42"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "applyEq" (formula "43") (term "0") (ifseqformula "29"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "26") (term "0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "allLeft" (formula "24") (inst "t=j_87"))
                                          (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "24") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "1"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "inEqSimp_homoInEq1" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0"))
                                          (rule "add_literals" (formula "24") (term "0"))
                                          (rule "leq_literals" (formula "24"))
                                          (rule "closeFalse" (formula "24"))
                                       )
                                    )
                                    (branch "CUT: i_5 ≥ i_4 FALSE"
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_geqRight" (formula "44"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0"))
                                       (rule "qeq_literals" (formula "25") (term "0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "22") (term "0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "22"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "allLeft" (formula "26") (inst "t=j_87"))
                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "cut_direct" (formula "26") (term "0"))
                                       (branch "CUT: j_87 ≥ i_5 TRUE"
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "allLeft" (formula "32") (inst "t=j_87"))
                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "cut_direct" (formula "32") (term "0"))
                                          (branch "CUT: j_87 ≥ i_4 TRUE"
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "allLeft" (formula "5") (inst "t=j_87"))
                                             (rule "exLeft" (formula "5") (inst "sk=j_104"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "7") (term "1"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,1"))
                                             (rule "mul_literals" (formula "7") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "5") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "7") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "commute_or" (formula "5"))
                                             (rule "commute_or" (formula "7"))
                                             (rule "commute_or" (formula "6"))
                                             (rule "cut_direct" (formula "5") (term "1"))
                                             (branch "CUT: c[j_87] ≤ a[j_87] TRUE"
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "47"))
                                                (rule "inEqSimp_contradEq3" (formula "47") (ifseqformula "5"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                                (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "47") (term "0,0"))
                                                (rule "qeq_literals" (formula "47") (term "0"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "false_right" (formula "47"))
                                                (rule "allLeft" (formula "6") (inst "t=i_4"))
                                                (rule "exLeft" (formula "6") (inst "sk=j_109"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "26"))
                                                (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "26"))
                                                (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "26"))
                                                (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "commute_or_2" (formula "8"))
                                                (rule "commute_or_2" (formula "7"))
                                                (rule "commute_or" (formula "8") (term "0"))
                                                (rule "commute_or" (formula "7") (term "0"))
                                                (rule "cut_direct" (formula "6") (term "0,0"))
                                                (branch "CUT: res_min_1 ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "6"))
                                                   (rule "times_zero_1" (formula "38") (term "0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "24"))
                                                   (rule "leq_literals" (formula "38") (term "0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "32") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "inEqSimp_homoInEq1" (formula "32"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0"))
                                                   (rule "leq_literals" (formula "32"))
                                                   (rule "closeFalse" (formula "32"))
                                                )
                                                (branch "CUT: res_min_1 ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_right" (formula "7") (term "1,0") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_right" (formula "8") (term "1,0") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_leqRight" (formula "50"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "cut_direct" (formula "7") (term "0"))
                                                   (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "7"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                      (rule "allLeft" (formula "8") (inst "t=i_5"))
                                                      (rule "exLeft" (formula "8") (inst "sk=j_115"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                                      (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "38"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "29"))
                                                      (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "31"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "29"))
                                                      (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "31"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "29"))
                                                      (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "31"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "commute_or" (formula "10"))
                                                      (rule "commute_or" (formula "9"))
                                                      (rule "cut_direct" (formula "8") (term "0"))
                                                      (branch "CUT: res_min_1 ≤ i_5 TRUE"
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "8"))
                                                         (rule "times_zero_1" (formula "41") (term "0,0"))
                                                         (rule "add_zero_left" (formula "41") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "8"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "inEqSimp_homoInEq1" (formula "31"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0"))
                                                         (rule "add_zero_right" (formula "31") (term "0"))
                                                         (rule "leq_literals" (formula "31"))
                                                         (rule "closeFalse" (formula "31"))
                                                      )
                                                      (branch "CUT: res_min_1 ≤ i_5 FALSE"
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "notLeft" (formula "8"))
                                                         (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "inEqSimp_leqRight" (formula "53"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                                         (rule "times_zero_1" (formula "9") (term "0,0"))
                                                         (rule "add_zero_left" (formula "9") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                         (rule "mul_literals" (formula "9") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "9"))
                                                         (rule "leq_literals" (formula "30") (term "0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "3"))
                                                         (rule "mul_literals" (formula "9") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                         (rule "add_literals" (formula "9") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                         (rule "mul_literals" (formula "9") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "9"))
                                                         (rule "leq_literals" (formula "30") (term "0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "allLeft" (formula "33") (inst "t=j_115"))
                                                         (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "12"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "33") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "33") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "33") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "allLeft" (formula "13") (inst "t=int::select(heap, a, arr(j_87))"))
                                                         (rule "exLeft" (formula "13") (inst "sk=j_116"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "inEqSimp_homoInEq0" (formula "15") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,1"))
                                                         (rule "commute_or_2" (formula "14"))
                                                         (rule "commute_or_2" (formula "13"))
                                                         (rule "commute_or_2" (formula "15"))
                                                         (rule "commute_or_2" (formula "14") (term "0"))
                                                         (rule "commute_or_2" (formula "13") (term "0"))
                                                         (rule "commute_or_2" (formula "15") (term "0"))
                                                         (rule "commute_or" (formula "14") (term "0,0"))
                                                         (rule "commute_or" (formula "13") (term "0,0"))
                                                         (rule "cut_direct" (formula "13") (term "1,0"))
                                                         (branch "CUT: a[j_87] ≥ res_min_1 TRUE"
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "13"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "13"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "allLeft" (formula "42") (inst "t=j_115"))
                                                            (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "34"))
                                                            (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "42") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "12"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                            (rule "mul_literals" (formula "42") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "42") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "42"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                                            (rule "add_literals" (formula "42") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0"))
                                                            (rule "add_literals" (formula "42") (term "0"))
                                                            (rule "leq_literals" (formula "42"))
                                                            (rule "closeFalse" (formula "42"))
                                                         )
                                                         (branch "CUT: a[j_87] ≥ res_min_1 FALSE"
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "57"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "57"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "inEqSimp_geqRight" (formula "57"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "cut_direct" (formula "14") (term "1,0"))
                                                            (branch "CUT: a[j_87] ≤ -1 TRUE"
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "allLeft" (formula "43") (inst "t=j_115"))
                                                               (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "35"))
                                                               (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "57"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "12"))
                                                               (rule "qeq_literals" (formula "43") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "13"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                               (rule "mul_literals" (formula "43") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "4"))
                                                               (rule "andLeft" (formula "43"))
                                                               (rule "inEqSimp_homoInEq1" (formula "43"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                               (rule "mul_literals" (formula "43") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                                               (rule "add_literals" (formula "43") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "43") (term "0"))
                                                               (rule "add_literals" (formula "43") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "43") (term "1,0"))
                                                               (rule "add_literals" (formula "43") (term "0"))
                                                               (rule "leq_literals" (formula "43"))
                                                               (rule "closeFalse" (formula "43"))
                                                            )
                                                            (branch "CUT: a[j_87] ≤ -1 FALSE"
                                                               (builtin "One Step Simplification" (formula "14"))
                                                               (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "58"))
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "58"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "inEqSimp_leqRight" (formula "58"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "1"))
                                                               (rule "leq_literals" (formula "50") (term "0"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "true_left" (formula "50"))
                                                               (rule "cut_direct" (formula "16") (term "1"))
                                                               (branch "CUT: c[a[j_87]] ≤ a[a[j_87]] TRUE"
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "16"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "16"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "allLeft" (formula "45") (inst "t=j_115"))
                                                                  (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "37"))
                                                                  (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "58"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "45") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1"))
                                                                  (rule "mul_literals" (formula "45") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "45") (ifseqformula "6"))
                                                                  (rule "andLeft" (formula "45"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "45"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                                  (rule "mul_literals" (formula "45") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                                                  (rule "add_literals" (formula "45") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "45") (term "0"))
                                                                  (rule "add_literals" (formula "45") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "45") (term "1,0"))
                                                                  (rule "add_literals" (formula "45") (term "0"))
                                                                  (rule "leq_literals" (formula "45"))
                                                                  (rule "closeFalse" (formula "45"))
                                                               )
                                                               (branch "CUT: c[a[j_87]] ≤ a[a[j_87]] FALSE"
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "notLeft" (formula "16"))
                                                                  (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "59"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "59"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "inEqSimp_leqRight" (formula "59"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                                                  (rule "allLeft" (formula "48") (inst "t=j_115"))
                                                                  (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "40"))
                                                                  (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "15"))
                                                                  (rule "qeq_literals" (formula "48") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "16"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                                  (rule "mul_literals" (formula "48") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "48"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "7") (term "0"))
                                                                  (rule "leq_literals" (formula "7"))
                                                                  (rule "closeFalse" (formula "7"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "notLeft" (formula "7"))
                                                      (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "inEqSimp_leqRight" (formula "51"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                                      (rule "times_zero_1" (formula "8") (term "0,0"))
                                                      (rule "add_zero_left" (formula "8") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                      (rule "mul_literals" (formula "8") (term "1"))
                                                      (rule "allLeft" (formula "38") (inst "t=j_109"))
                                                      (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "38") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "38") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "38"))
                                                      (rule "allLeft" (formula "32") (inst "t=j_109"))
                                                      (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "32") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "9"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                      (rule "allLeft" (formula "10") (inst "t=i_5"))
                                                      (rule "exLeft" (formula "10") (inst "sk=j_110"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                      (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "40"))
                                                      (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "40"))
                                                      (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "40"))
                                                      (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "31"))
                                                      (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "33"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "33"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "31"))
                                                      (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "33"))
                                                      (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "31"))
                                                      (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "commute_or" (formula "11"))
                                                      (rule "commute_or" (formula "12"))
                                                      (rule "cut_direct" (formula "10") (term "0"))
                                                      (branch "CUT: res_min_1 ≤ i_5 TRUE"
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "10"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0"))
                                                         (rule "add_literals" (formula "4") (term "0"))
                                                         (rule "leq_literals" (formula "4"))
                                                         (rule "closeFalse" (formula "4"))
                                                      )
                                                      (branch "CUT: res_min_1 ≤ i_5 FALSE"
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "notLeft" (formula "10"))
                                                         (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "inEqSimp_leqRight" (formula "56"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                                                         (rule "times_zero_1" (formula "11") (term "0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "11"))
                                                         (rule "leq_literals" (formula "32") (term "0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "4"))
                                                         (rule "mul_literals" (formula "11") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                         (rule "add_literals" (formula "11") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "11"))
                                                         (rule "leq_literals" (formula "32") (term "0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "allLeft" (formula "36") (inst "t=j_110"))
                                                         (rule "inEqSimp_contradInEq0" (formula "36") (term "1,0") (ifseqformula "14"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "36") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "36") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "allLeft" (formula "15") (inst "t=int::select(heap, a, arr(j_87))"))
                                                         (rule "exLeft" (formula "15") (inst "sk=j_111"))
                                                         (rule "andLeft" (formula "15"))
                                                         (rule "andLeft" (formula "15"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                                                         (rule "commute_or_2" (formula "16"))
                                                         (rule "commute_or_2" (formula "15"))
                                                         (rule "commute_or_2" (formula "17"))
                                                         (rule "commute_or_2" (formula "16") (term "0"))
                                                         (rule "commute_or_2" (formula "15") (term "0"))
                                                         (rule "commute_or_2" (formula "17") (term "0"))
                                                         (rule "commute_or" (formula "16") (term "0,0"))
                                                         (rule "commute_or" (formula "15") (term "0,0"))
                                                         (rule "cut_direct" (formula "15") (term "1,0"))
                                                         (branch "CUT: a[j_87] ≥ res_min_1 TRUE"
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "allLeft" (formula "16") (inst "t=j_109"))
                                                            (rule "exLeft" (formula "16") (inst "sk=j_114"))
                                                            (rule "andLeft" (formula "16"))
                                                            (rule "andLeft" (formula "16"))
                                                            (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0"))
                                                            (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "47"))
                                                            (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "47"))
                                                            (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "17") (term "0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "18") (term "0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "16") (term "0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "commute_or_2" (formula "17"))
                                                            (rule "commute_or_2" (formula "18"))
                                                            (rule "commute_or" (formula "17") (term "0"))
                                                            (rule "commute_or" (formula "18") (term "0"))
                                                            (rule "cut_direct" (formula "16") (term "0,0"))
                                                            (branch "CUT: res_min_1 ≤ j_109 TRUE"
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "true_left" (formula "18"))
                                                               (rule "replace_known_left" (formula "17") (term "1,0") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "3"))
                                                               (rule "andLeft" (formula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0"))
                                                               (rule "add_zero_right" (formula "11") (term "0"))
                                                               (rule "leq_literals" (formula "11"))
                                                               (rule "closeFalse" (formula "11"))
                                                            )
                                                            (branch "CUT: res_min_1 ≤ j_109 FALSE"
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "replace_known_right" (formula "17") (term "1,0") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "replace_known_right" (formula "18") (term "1,0") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "inEqSimp_leqRight" (formula "61"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "cut_direct" (formula "17") (term "0"))
                                                               (branch "CUT: b[j_109] ≤ a[j_109] TRUE"
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "17"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "17"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "inEqSimp_strengthen0" (formula "17") (ifseqformula "61"))
                                                                  (rule "inEqSimp_contradEq3" (formula "61") (ifseqformula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0"))
                                                                  (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "61") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "61") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "false_right" (formula "61"))
                                                                  (rule "allLeft" (formula "47") (inst "t=j_110"))
                                                                  (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "39"))
                                                                  (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "47") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "47"))
                                                                  (rule "andLeft" (formula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                  (rule "add_literals" (formula "5") (term "0"))
                                                                  (rule "leq_literals" (formula "5"))
                                                                  (rule "closeFalse" (formula "5"))
                                                               )
                                                               (branch "CUT: b[j_109] ≤ a[j_109] FALSE"
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "notLeft" (formula "17"))
                                                                  (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "inEqSimp_leqRight" (formula "62"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                                                  (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "64") (term "0,0"))
                                                                  (rule "leq_literals" (formula "64") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "false_right" (formula "64"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                                                  (rule "times_zero_1" (formula "18") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "18") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                  (rule "mul_literals" (formula "18") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "18"))
                                                                  (rule "leq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "11"))
                                                                  (rule "mul_literals" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                  (rule "add_literals" (formula "17") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                  (rule "mul_literals" (formula "17") (term "1"))
                                                                  (rule "allLeft" (formula "49") (inst "t=j_110"))
                                                                  (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "41"))
                                                                  (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "49") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "49") (ifseqformula "6"))
                                                                  (rule "andLeft" (formula "49"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "49"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                                  (rule "add_literals" (formula "49") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                                  (rule "add_literals" (formula "49") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "49") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "49") (term "0"))
                                                                  (rule "leq_literals" (formula "49"))
                                                                  (rule "closeFalse" (formula "49"))
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: a[j_87] ≥ res_min_1 FALSE"
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "60"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "replace_known_right" (formula "17") (term "1,0") (ifseqformula "60"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "inEqSimp_geqRight" (formula "60"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "cut_direct" (formula "16") (term "1,0"))
                                                            (branch "CUT: a[j_87] ≤ -1 TRUE"
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "true_left" (formula "18"))
                                                               (rule "replace_known_left" (formula "17") (term "1,0") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "allLeft" (formula "17") (inst "t=j_109"))
                                                               (rule "exLeft" (formula "17") (inst "sk=j_113"))
                                                               (rule "andLeft" (formula "17"))
                                                               (rule "andLeft" (formula "17"))
                                                               (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0"))
                                                               (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "48"))
                                                               (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "48"))
                                                               (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "48"))
                                                               (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "17") (term "0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "19") (term "0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0,0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "18") (term "0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "commute_or_2" (formula "19"))
                                                               (rule "commute_or_2" (formula "18"))
                                                               (rule "commute_or" (formula "19") (term "0"))
                                                               (rule "commute_or" (formula "18") (term "0"))
                                                               (rule "cut_direct" (formula "17") (term "0,0"))
                                                               (branch "CUT: res_min_1 ≤ j_109 TRUE"
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "17"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "17"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "17"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "12"))
                                                                  (rule "andLeft" (formula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0"))
                                                                  (rule "leq_literals" (formula "4"))
                                                                  (rule "closeFalse" (formula "4"))
                                                               )
                                                               (branch "CUT: res_min_1 ≤ j_109 FALSE"
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "replace_known_right" (formula "18") (term "1,0") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_leqRight" (formula "62"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "cut_direct" (formula "18") (term "0"))
                                                                  (branch "CUT: b[j_109] ≤ a[j_109] TRUE"
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "true_left" (formula "19"))
                                                                     (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "18"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "true_left" (formula "20"))
                                                                     (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "18"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "true_left" (formula "19"))
                                                                     (rule "inEqSimp_strengthen0" (formula "18") (ifseqformula "62"))
                                                                     (rule "inEqSimp_contradEq3" (formula "62") (ifseqformula "18"))
                                                                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0"))
                                                                     (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "62") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "62") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "false_right" (formula "62"))
                                                                     (rule "allLeft" (formula "48") (inst "t=j_110"))
                                                                     (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "40"))
                                                                     (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "15"))
                                                                     (rule "qeq_literals" (formula "48") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "16"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                                     (rule "mul_literals" (formula "48") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "48") (ifseqformula "6"))
                                                                     (rule "andLeft" (formula "48"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "48"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                                     (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                                                     (rule "add_literals" (formula "48") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "48") (term "0"))
                                                                     (rule "add_literals" (formula "48") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "48") (term "1,0"))
                                                                     (rule "add_literals" (formula "48") (term "0"))
                                                                     (rule "leq_literals" (formula "48"))
                                                                     (rule "closeFalse" (formula "48"))
                                                                  )
                                                                  (branch "CUT: b[j_109] ≤ a[j_109] FALSE"
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "notLeft" (formula "18"))
                                                                     (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "inEqSimp_leqRight" (formula "63"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_contradEq7" (formula "65") (ifseqformula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0"))
                                                                     (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "65") (term "0,0"))
                                                                     (rule "leq_literals" (formula "65") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "false_right" (formula "65"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                                                     (rule "times_zero_1" (formula "19") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "19") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                     (rule "mul_literals" (formula "19") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "19"))
                                                                     (rule "leq_literals" (formula "12") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "true_left" (formula "12"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "12"))
                                                                     (rule "mul_literals" (formula "18") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                     (rule "add_literals" (formula "18") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                     (rule "mul_literals" (formula "18") (term "1"))
                                                                     (rule "allLeft" (formula "50") (inst "t=j_110"))
                                                                     (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "42"))
                                                                     (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "15"))
                                                                     (rule "qeq_literals" (formula "50") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "16"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "50") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "1"))
                                                                     (rule "mul_literals" (formula "50") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "50") (ifseqformula "7"))
                                                                     (rule "andLeft" (formula "50"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "50"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                                                     (rule "mul_literals" (formula "50") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                                                                     (rule "add_literals" (formula "50") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                                     (rule "add_literals" (formula "50") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "50") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "50") (term "0"))
                                                                     (rule "leq_literals" (formula "50"))
                                                                     (rule "closeFalse" (formula "50"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "CUT: a[j_87] ≤ -1 FALSE"
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "replace_known_right" (formula "17") (term "1,0") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "inEqSimp_leqRight" (formula "61"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "1"))
                                                               (rule "leq_literals" (formula "53") (term "0"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "true_left" (formula "53"))
                                                               (rule "allLeft" (formula "21") (inst "t=j_109"))
                                                               (rule "exLeft" (formula "21") (inst "sk=j_112"))
                                                               (rule "andLeft" (formula "21"))
                                                               (rule "andLeft" (formula "21"))
                                                               (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0"))
                                                               (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "52"))
                                                               (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "52"))
                                                               (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "52"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0") (ifseqformula "12"))
                                                               (rule "qeq_literals" (formula "23") (term "0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0") (ifseqformula "12"))
                                                               (rule "qeq_literals" (formula "21") (term "0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "21"))
                                                               (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0") (ifseqformula "12"))
                                                               (rule "qeq_literals" (formula "22") (term "0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "22"))
                                                               (rule "commute_or_2" (formula "23"))
                                                               (rule "commute_or_2" (formula "22"))
                                                               (rule "commute_or" (formula "23") (term "0"))
                                                               (rule "commute_or" (formula "22") (term "0"))
                                                               (rule "cut_direct" (formula "18") (term "1"))
                                                               (branch "CUT: c[a[j_87]] ≤ a[a[j_87]] TRUE"
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "18"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "18"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "cut_direct" (formula "19") (term "0,0"))
                                                                  (branch "CUT: res_min_1 ≤ j_109 TRUE"
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "true_left" (formula "20"))
                                                                     (rule "replace_known_left" (formula "20") (term "1,0") (ifseqformula "19"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "true_left" (formula "20"))
                                                                     (rule "replace_known_left" (formula "20") (term "1,0") (ifseqformula "19"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "true_left" (formula "20"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "19"))
                                                                     (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                     (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                     (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                     (rule "mul_literals" (formula "6") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "14"))
                                                                     (rule "andLeft" (formula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                     (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                     (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                     (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                     (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "6") (term "0"))
                                                                     (rule "leq_literals" (formula "6"))
                                                                     (rule "closeFalse" (formula "6"))
                                                                  )
                                                                  (branch "CUT: res_min_1 ≤ j_109 FALSE"
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "replace_known_right" (formula "21") (term "1,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "replace_known_right" (formula "20") (term "1,0") (ifseqformula "63"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "inEqSimp_leqRight" (formula "63"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "allLeft" (formula "52") (inst "t=j_110"))
                                                                     (rule "applyEq" (formula "52") (term "1,1") (ifseqformula "44"))
                                                                     (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "52") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "18"))
                                                                     (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "52") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                                     (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "52") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                                                     (rule "mul_literals" (formula "52") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "52"))
                                                                     (rule "andLeft" (formula "8"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                     (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                     (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "8") (term "0"))
                                                                     (rule "leq_literals" (formula "8"))
                                                                     (rule "closeFalse" (formula "8"))
                                                                  )
                                                               )
                                                               (branch "CUT: c[a[j_87]] ≤ a[a[j_87]] FALSE"
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "notLeft" (formula "18"))
                                                                  (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "65"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "65"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_leqRight" (formula "65"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "4"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                                  (rule "cut_direct" (formula "22") (term "0,0"))
                                                                  (branch "CUT: res_min_1 ≤ j_109 TRUE"
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "true_left" (formula "23"))
                                                                     (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "22"))
                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "true_left" (formula "24"))
                                                                     (rule "replace_known_left" (formula "23") (term "1,0") (ifseqformula "22"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "true_left" (formula "23"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "22"))
                                                                     (rule "mul_literals" (formula "2") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "mul_literals" (formula "2") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                                                                     (rule "leq_literals" (formula "14") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "true_left" (formula "14"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                                     (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "23"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                     (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                     (rule "mul_literals" (formula "8") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "15"))
                                                                     (rule "andLeft" (formula "8"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                     (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                     (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "8") (term "0"))
                                                                     (rule "leq_literals" (formula "8"))
                                                                     (rule "closeFalse" (formula "8"))
                                                                  )
                                                                  (branch "CUT: res_min_1 ≤ j_109 FALSE"
                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                     (rule "replace_known_right" (formula "23") (term "1,0") (ifseqformula "66"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "replace_known_right" (formula "24") (term "1,0") (ifseqformula "66"))
                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "inEqSimp_leqRight" (formula "66"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "allLeft" (formula "55") (inst "t=j_110"))
                                                                     (rule "applyEq" (formula "55") (term "1,1") (ifseqformula "47"))
                                                                     (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "69"))
                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "55") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "19"))
                                                                     (rule "polySimp_mulComm0" (formula "55") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "55") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                                     (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                                     (rule "mul_literals" (formula "55") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "55") (ifseqformula "9"))
                                                                     (rule "andLeft" (formula "55"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "55"))
                                                                     (rule "polySimp_mulComm0" (formula "55") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "55") (term "1,0"))
                                                                     (rule "mul_literals" (formula "55") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                                                     (rule "add_literals" (formula "55") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "55") (term "0"))
                                                                     (rule "add_literals" (formula "55") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "55") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "55") (term "0"))
                                                                     (rule "leq_literals" (formula "55"))
                                                                     (rule "closeFalse" (formula "55"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "CUT: c[j_87] ≤ a[j_87] FALSE"
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "notLeft" (formula "5"))
                                                (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_leqRight" (formula "49"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "50") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "50") (term "0,0"))
                                                (rule "leq_literals" (formula "50") (term "0"))
                                                (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "allLeft" (formula "8") (inst "t=i_4"))
                                                (rule "exLeft" (formula "8") (inst "sk=j_105"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "28"))
                                                (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "28"))
                                                (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "28"))
                                                (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or_2" (formula "10"))
                                                (rule "commute_or_2" (formula "9"))
                                                (rule "commute_or" (formula "10") (term "0"))
                                                (rule "commute_or" (formula "9") (term "0"))
                                                (rule "cut_direct" (formula "8") (term "0,0"))
                                                (branch "CUT: res_min_1 ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0") (ifseqformula "8"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0") (ifseqformula "8"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "8"))
                                                   (rule "times_zero_1" (formula "40") (term "0,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "26"))
                                                   (rule "leq_literals" (formula "40") (term "0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "8"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "5"))
                                                   (rule "andLeft" (formula "34"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0"))
                                                   (rule "add_literals" (formula "34") (term "0"))
                                                   (rule "leq_literals" (formula "34"))
                                                   (rule "closeFalse" (formula "34"))
                                                )
                                                (branch "CUT: res_min_1 ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_right" (formula "9") (term "1,0") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_right" (formula "10") (term "1,0") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_leqRight" (formula "52"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "allLeft" (formula "12") (inst "t=i_5"))
                                                   (rule "exLeft" (formula "12") (inst "sk=j_106"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                                   (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "41"))
                                                   (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "41"))
                                                   (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "41"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "33"))
                                                   (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "33"))
                                                   (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "33"))
                                                   (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "35"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "35"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "35"))
                                                   (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "commute_or" (formula "14"))
                                                   (rule "commute_or" (formula "13"))
                                                   (rule "cut_direct" (formula "9") (term "0"))
                                                   (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "9"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "9"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                      (rule "cut_direct" (formula "10") (term "0"))
                                                      (branch "CUT: res_min_1 ≤ i_5 TRUE"
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "10"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "10"))
                                                         (rule "times_zero_1" (formula "43") (term "0,0"))
                                                         (rule "add_zero_left" (formula "43") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_literals" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "CUT: res_min_1 ≤ i_5 FALSE"
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "notLeft" (formula "10"))
                                                         (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "inEqSimp_leqRight" (formula "55"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                                                         (rule "times_zero_1" (formula "11") (term "0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "11"))
                                                         (rule "leq_literals" (formula "32") (term "0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "4"))
                                                         (rule "mul_literals" (formula "11") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                         (rule "add_literals" (formula "11") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "11"))
                                                         (rule "leq_literals" (formula "32") (term "0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "allLeft" (formula "35") (inst "t=j_106"))
                                                         (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "14"))
                                                         (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                         (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "35") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "allLeft" (formula "43") (inst "t=j_104"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "allLeft" (formula "36") (inst "t=j_104"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "allLeft" (formula "15") (inst "t=j_104"))
                                                         (rule "exLeft" (formula "15") (inst "sk=j_108"))
                                                         (rule "andLeft" (formula "15"))
                                                         (rule "andLeft" (formula "15"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "17") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "16") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "commute_or_2" (formula "17"))
                                                         (rule "commute_or_2" (formula "16"))
                                                         (rule "commute_or" (formula "17") (term "0"))
                                                         (rule "commute_or" (formula "16") (term "0"))
                                                         (rule "cut_direct" (formula "15") (term "0,0"))
                                                         (branch "CUT: res_min_1 ≤ j_104 TRUE"
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "replace_known_left" (formula "17") (term "1,0") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "15"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "39") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                            (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                            (rule "qeq_literals" (formula "39") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "true_left" (formula "39"))
                                                            (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "17"))
                                                            (rule "times_zero_1" (formula "50") (term "0,0"))
                                                            (rule "add_zero_left" (formula "50") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "47") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "47") (term "0,0,0"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "true_left" (formula "47"))
                                                            (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "18"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "8"))
                                                            (rule "andLeft" (formula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "13"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                                            (rule "add_literals" (formula "13") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0"))
                                                            (rule "add_zero_right" (formula "13") (term "0"))
                                                            (rule "leq_literals" (formula "13"))
                                                            (rule "closeFalse" (formula "13"))
                                                         )
                                                         (branch "CUT: res_min_1 ≤ j_104 FALSE"
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "61"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "replace_known_right" (formula "17") (term "1,0") (ifseqformula "61"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "inEqSimp_leqRight" (formula "61"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "cut_direct" (formula "48") (term "0"))
                                                            (branch "CUT: j_104 ≥ i_4 TRUE"
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "true_left" (formula "49"))
                                                               (rule "cut_direct" (formula "40") (term "0"))
                                                               (branch "CUT: j_104 ≥ i_5 TRUE"
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "true_left" (formula "41"))
                                                                  (rule "cut_direct" (formula "16") (term "0"))
                                                                  (branch "CUT: c[j_104] ≤ a[j_104] TRUE"
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "16"))
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "16"))
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "inEqSimp_strengthen0" (formula "16") (ifseqformula "61"))
                                                                     (rule "inEqSimp_contradEq3" (formula "61") (ifseqformula "16"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0"))
                                                                     (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "61") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "61") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "false_right" (formula "61"))
                                                                     (rule "allLeft" (formula "47") (inst "t=j_106"))
                                                                     (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "37"))
                                                                     (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "61"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "47") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "15"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                                     (rule "mul_literals" (formula "47") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "47") (ifseqformula "5"))
                                                                     (rule "andLeft" (formula "47"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "47"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                                     (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                                     (rule "add_literals" (formula "47") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                                     (rule "add_literals" (formula "47") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "47") (term "1,0"))
                                                                     (rule "add_literals" (formula "47") (term "0"))
                                                                     (rule "leq_literals" (formula "47"))
                                                                     (rule "closeFalse" (formula "47"))
                                                                  )
                                                                  (branch "CUT: c[j_104] ≤ a[j_104] FALSE"
                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "notLeft" (formula "16"))
                                                                     (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "inEqSimp_leqRight" (formula "62"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                                                     (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "64") (term "0,0"))
                                                                     (rule "leq_literals" (formula "64") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "false_right" (formula "64"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                                                                     (rule "times_zero_1" (formula "17") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "17") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                     (rule "mul_literals" (formula "17") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "17"))
                                                                     (rule "leq_literals" (formula "10") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "true_left" (formula "10"))
                                                                     (rule "allLeft" (formula "49") (inst "t=j_106"))
                                                                     (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "39"))
                                                                     (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "49") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "15"))
                                                                     (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                                     (rule "mul_literals" (formula "49") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "49"))
                                                                     (rule "andLeft" (formula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                     (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                     (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                     (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                     (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "6") (term "0"))
                                                                     (rule "leq_literals" (formula "6"))
                                                                     (rule "closeFalse" (formula "6"))
                                                                  )
                                                               )
                                                               (branch "CUT: j_104 ≥ i_5 FALSE"
                                                                  (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "inEqSimp_geqRight" (formula "62"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "49"))
                                                                  (rule "andLeft" (formula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0"))
                                                                  (rule "leq_literals" (formula "6"))
                                                                  (rule "closeFalse" (formula "6"))
                                                               )
                                                            )
                                                            (branch "CUT: j_104 ≥ i_4 FALSE"
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "inEqSimp_geqRight" (formula "62"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "49"))
                                                               (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "49"))
                                                               (rule "applyEq" (formula "64") (term "0") (ifseqformula "49"))
                                                               (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "64"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "49"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                                                               (rule "times_zero_1" (formula "10") (term "0,0"))
                                                               (rule "add_zero_left" (formula "10") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                               (rule "mul_literals" (formula "10") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "14"))
                                                               (rule "leq_literals" (formula "10") (term "0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "41") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                               (rule "cut_direct" (formula "18") (term "0"))
                                                               (branch "CUT: j_108 ≥ 0 TRUE"
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "cut_direct" (formula "19") (term "0"))
                                                                  (branch "CUT: j_108 ≤ -1 + j_104 TRUE"
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "true_left" (formula "20"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                                                     (rule "times_zero_1" (formula "18") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "18") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                     (rule "mul_literals" (formula "18") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "18"))
                                                                     (rule "leq_literals" (formula "10") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "true_left" (formula "10"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                                                     (rule "mul_literals" (formula "17") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                     (rule "add_literals" (formula "17") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                     (rule "mul_literals" (formula "17") (term "1"))
                                                                     (rule "allLeft" (formula "50") (inst "t=j_106"))
                                                                     (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "40"))
                                                                     (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "50") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "15"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "50") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "1"))
                                                                     (rule "mul_literals" (formula "50") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "50") (ifseqformula "6"))
                                                                     (rule "andLeft" (formula "50"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "50"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                                                     (rule "mul_literals" (formula "50") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                                                                     (rule "add_literals" (formula "50") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                                     (rule "add_literals" (formula "50") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "50") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "50") (term "0"))
                                                                     (rule "leq_literals" (formula "50"))
                                                                     (rule "closeFalse" (formula "50"))
                                                                  )
                                                                  (branch "CUT: j_108 ≤ -1 + j_104 FALSE"
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "19"))
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "inEqSimp_leqRight" (formula "62"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_strengthen0" (formula "19") (ifseqformula "64"))
                                                                     (rule "inEqSimp_contradEq3" (formula "64") (ifseqformula "19"))
                                                                     (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                                                     (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "64") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "64") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "false_right" (formula "64"))
                                                                     (rule "allLeft" (formula "50") (inst "t=j_106"))
                                                                     (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "40"))
                                                                     (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "16"))
                                                                     (rule "qeq_literals" (formula "50") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "17"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "50") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                                                     (rule "mul_literals" (formula "50") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "50"))
                                                                     (rule "andLeft" (formula "7"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                     (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                     (rule "add_literals" (formula "7") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                                     (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                     (rule "add_literals" (formula "7") (term "0"))
                                                                     (rule "leq_literals" (formula "7"))
                                                                     (rule "closeFalse" (formula "7"))
                                                                  )
                                                               )
                                                               (branch "CUT: j_108 ≥ 0 FALSE"
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "18"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "17"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "inEqSimp_geqRight" (formula "61"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_strengthen0" (formula "18") (ifseqformula "63"))
                                                                  (rule "inEqSimp_contradEq3" (formula "63") (ifseqformula "18"))
                                                                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                                                                  (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "63") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "63") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "false_right" (formula "63"))
                                                                  (rule "allLeft" (formula "49") (inst "t=j_106"))
                                                                  (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "39"))
                                                                  (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "63"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "16"))
                                                                  (rule "qeq_literals" (formula "49") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "49"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                  (rule "add_literals" (formula "7") (term "0"))
                                                                  (rule "leq_literals" (formula "7"))
                                                                  (rule "closeFalse" (formula "7"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "notLeft" (formula "9"))
                                                      (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_leqRight" (formula "56"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                                                      (rule "times_zero_1" (formula "10") (term "0,0"))
                                                      (rule "add_zero_left" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1"))
                                                      (rule "allLeft" (formula "43") (inst "t=j_105"))
                                                      (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_contradInEq0" (formula "43") (term "0") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "43") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "43") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "43"))
                                                      (rule "allLeft" (formula "37") (inst "t=j_105"))
                                                      (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "37") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "11"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "37") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                      (rule "cut_direct" (formula "12") (term "0"))
                                                      (branch "CUT: res_min_1 ≤ i_5 TRUE"
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "12"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "12"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "12"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "7"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                         (rule "add_literals" (formula "33") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0"))
                                                         (rule "add_zero_right" (formula "33") (term "0"))
                                                         (rule "leq_literals" (formula "33"))
                                                         (rule "closeFalse" (formula "33"))
                                                      )
                                                      (branch "CUT: res_min_1 ≤ i_5 FALSE"
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "notLeft" (formula "12"))
                                                         (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_leqRight" (formula "58"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                                         (rule "times_zero_1" (formula "13") (term "0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "13"))
                                                         (rule "leq_literals" (formula "34") (term "0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "5"))
                                                         (rule "mul_literals" (formula "13") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                         (rule "add_literals" (formula "13") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "13"))
                                                         (rule "leq_literals" (formula "34") (term "0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "allLeft" (formula "38") (inst "t=j_106"))
                                                         (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "16"))
                                                         (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "38") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "15"))
                                                         (rule "qeq_literals" (formula "38") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "allLeft" (formula "46") (inst "t=j_104"))
                                                         (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "allLeft" (formula "39") (inst "t=j_104"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "allLeft" (formula "17") (inst "t=j_104"))
                                                         (rule "exLeft" (formula "17") (inst "sk=j_107"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "19") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "17") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "18") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "commute_or_2" (formula "19"))
                                                         (rule "commute_or_2" (formula "18"))
                                                         (rule "commute_or" (formula "19") (term "0"))
                                                         (rule "commute_or" (formula "18") (term "0"))
                                                         (rule "cut_direct" (formula "17") (term "0,0"))
                                                         (branch "CUT: res_min_1 ≤ j_104 TRUE"
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "replace_known_left" (formula "19") (term "1,0") (ifseqformula "17"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "17"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "17"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "42") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                                            (rule "qeq_literals" (formula "42") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "true_left" (formula "42"))
                                                            (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "19"))
                                                            (rule "times_zero_1" (formula "53") (term "0,0"))
                                                            (rule "add_zero_left" (formula "53") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "19"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                            (rule "mul_literals" (formula "4") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "50") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0"))
                                                            (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "50") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "50") (term "0,0,0"))
                                                            (rule "qeq_literals" (formula "50") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "true_left" (formula "50"))
                                                            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "20"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "14"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "inEqSimp_homoInEq1" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                            (rule "add_literals" (formula "9") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "9") (term "1,0"))
                                                            (rule "add_zero_right" (formula "9") (term "0"))
                                                            (rule "leq_literals" (formula "9"))
                                                            (rule "closeFalse" (formula "9"))
                                                         )
                                                         (branch "CUT: res_min_1 ≤ j_104 FALSE"
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "replace_known_right" (formula "18") (term "1,0") (ifseqformula "64"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "64"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "inEqSimp_leqRight" (formula "64"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "cut_direct" (formula "51") (term "0"))
                                                            (branch "CUT: j_104 ≥ i_4 TRUE"
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "true_left" (formula "52"))
                                                               (rule "cut_direct" (formula "43") (term "0"))
                                                               (branch "CUT: j_104 ≥ i_5 TRUE"
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "true_left" (formula "44"))
                                                                  (rule "cut_direct" (formula "18") (term "0"))
                                                                  (branch "CUT: c[j_104] ≤ a[j_104] TRUE"
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "true_left" (formula "19"))
                                                                     (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "18"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "true_left" (formula "20"))
                                                                     (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "18"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "true_left" (formula "19"))
                                                                     (rule "inEqSimp_strengthen0" (formula "18") (ifseqformula "65"))
                                                                     (rule "inEqSimp_contradEq3" (formula "65") (ifseqformula "18"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0"))
                                                                     (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "65") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "65") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "false_right" (formula "65"))
                                                                     (rule "allLeft" (formula "50") (inst "t=j_106"))
                                                                     (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "40"))
                                                                     (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "16"))
                                                                     (rule "qeq_literals" (formula "50") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "17"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "50") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "1"))
                                                                     (rule "mul_literals" (formula "50") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "50") (ifseqformula "6"))
                                                                     (rule "andLeft" (formula "50"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "50"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                                                     (rule "mul_literals" (formula "50") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                                                                     (rule "add_literals" (formula "50") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                                     (rule "add_literals" (formula "50") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "50") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "50") (term "0"))
                                                                     (rule "leq_literals" (formula "50"))
                                                                     (rule "closeFalse" (formula "50"))
                                                                  )
                                                                  (branch "CUT: c[j_104] ≤ a[j_104] FALSE"
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "notLeft" (formula "18"))
                                                                     (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "inEqSimp_leqRight" (formula "65"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_contradEq7" (formula "68") (ifseqformula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0"))
                                                                     (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "68") (term "0,0"))
                                                                     (rule "leq_literals" (formula "68") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                     (rule "false_right" (formula "68"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                                                     (rule "times_zero_1" (formula "19") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "19") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                     (rule "mul_literals" (formula "19") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "19"))
                                                                     (rule "leq_literals" (formula "11") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "true_left" (formula "11"))
                                                                     (rule "allLeft" (formula "52") (inst "t=j_106"))
                                                                     (rule "applyEq" (formula "52") (term "1,1") (ifseqformula "42"))
                                                                     (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "67"))
                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "16"))
                                                                     (rule "qeq_literals" (formula "52") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "17"))
                                                                     (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "52") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                                     (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "52") (term "1"))
                                                                     (rule "mul_literals" (formula "52") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "52"))
                                                                     (rule "andLeft" (formula "7"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                     (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                     (rule "add_literals" (formula "7") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                                     (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "7") (term "0"))
                                                                     (rule "leq_literals" (formula "7"))
                                                                     (rule "closeFalse" (formula "7"))
                                                                  )
                                                               )
                                                               (branch "CUT: j_104 ≥ i_5 FALSE"
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "inEqSimp_geqRight" (formula "65"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                                  (rule "times_zero_1" (formula "11") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "mul_literals" (formula "11") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "52") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                                                  (rule "mul_literals" (formula "52") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "52") (ifseqformula "7"))
                                                                  (rule "andLeft" (formula "52"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "52"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                                                  (rule "mul_literals" (formula "52") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                                                  (rule "add_literals" (formula "52") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "52") (term "0"))
                                                                  (rule "add_literals" (formula "52") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "52") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "52") (term "0"))
                                                                  (rule "leq_literals" (formula "52"))
                                                                  (rule "closeFalse" (formula "52"))
                                                               )
                                                            )
                                                            (branch "CUT: j_104 ≥ i_4 FALSE"
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "inEqSimp_geqRight" (formula "65"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "52"))
                                                               (rule "applyEq" (formula "68") (term "0") (ifseqformula "52"))
                                                               (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "68"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "52"))
                                                               (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "52"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                               (rule "times_zero_1" (formula "11") (term "0,0"))
                                                               (rule "add_zero_left" (formula "11") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                               (rule "mul_literals" (formula "11") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "16"))
                                                               (rule "leq_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                               (rule "allLeft" (formula "53") (inst "t=j_106"))
                                                               (rule "applyEq" (formula "53") (term "1,1") (ifseqformula "43"))
                                                               (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "67"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "53") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "18"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "53") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1"))
                                                               (rule "mul_literals" (formula "53") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "53") (ifseqformula "7"))
                                                               (rule "andLeft" (formula "53"))
                                                               (rule "inEqSimp_homoInEq1" (formula "53"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                                                               (rule "mul_literals" (formula "53") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                                                               (rule "add_literals" (formula "53") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                                               (rule "add_literals" (formula "53") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "53") (term "1,0"))
                                                               (rule "add_zero_right" (formula "53") (term "0"))
                                                               (rule "leq_literals" (formula "53"))
                                                               (rule "closeFalse" (formula "53"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: j_87 ≥ i_4 FALSE"
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_geqRight" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "applyEq" (formula "47") (term "0") (ifseqformula "33"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                             (rule "times_zero_1" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "allLeft" (formula "6") (inst "t=j_87"))
                                             (rule "exLeft" (formula "6") (inst "sk=j_95"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                             (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "36"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "8") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "7") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "commute_or" (formula "7"))
                                             (rule "commute_or" (formula "8"))
                                             (rule "cut_direct" (formula "6") (term "0"))
                                             (branch "CUT: b[j_87] ≤ a[j_87] TRUE"
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "48"))
                                                (rule "inEqSimp_contradEq3" (formula "48") (ifseqformula "6"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                                (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0"))
                                                (rule "qeq_literals" (formula "48") (term "0"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "allLeft" (formula "7") (inst "t=i_4"))
                                                (rule "exLeft" (formula "7") (inst "sk=j_100"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "commute_or_2" (formula "9"))
                                                (rule "commute_or_2" (formula "8"))
                                                (rule "commute_or" (formula "9") (term "0"))
                                                (rule "commute_or" (formula "8") (term "0"))
                                                (rule "allLeft" (formula "10") (inst "t=i_5"))
                                                (rule "exLeft" (formula "10") (inst "sk=j_101"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "39"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "31"))
                                                (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "31"))
                                                (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "31"))
                                                (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "commute_or" (formula "12"))
                                                (rule "commute_or" (formula "11"))
                                                (rule "cut_direct" (formula "7") (term "0,0"))
                                                (branch "CUT: res_min_1 ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "36") (ifseqformula "5"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0"))
                                                   (rule "leq_literals" (formula "36"))
                                                   (rule "closeFalse" (formula "36"))
                                                )
                                                (branch "CUT: res_min_1 ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_right" (formula "9") (term "1,0") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_right" (formula "8") (term "1,0") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_leqRight" (formula "54"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "cut_direct" (formula "11") (term "0"))
                                                   (branch "CUT: res_min_1 ≤ i_5 TRUE"
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                   (branch "CUT: res_min_1 ≤ i_5 FALSE"
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "notLeft" (formula "11"))
                                                      (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "inEqSimp_leqRight" (formula "55"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                                      (rule "times_zero_1" (formula "12") (term "0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                      (rule "mul_literals" (formula "12") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "12"))
                                                      (rule "leq_literals" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "4"))
                                                      (rule "mul_literals" (formula "12") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                      (rule "add_literals" (formula "12") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                      (rule "mul_literals" (formula "12") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "12"))
                                                      (rule "leq_literals" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "allLeft" (formula "36") (inst "t=j_101"))
                                                      (rule "inEqSimp_contradInEq0" (formula "36") (term "1,0") (ifseqformula "15"))
                                                      (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "36") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "36") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "cut_direct" (formula "9") (term "0"))
                                                      (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "9"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                         (rule "allLeft" (formula "14") (inst "t=int::select(heap, a, arr(j_87))"))
                                                         (rule "exLeft" (formula "14") (inst "sk=j_103"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
                                                         (rule "commute_or_2" (formula "15"))
                                                         (rule "commute_or_2" (formula "14"))
                                                         (rule "commute_or_2" (formula "16"))
                                                         (rule "commute_or_2" (formula "15") (term "0"))
                                                         (rule "commute_or_2" (formula "14") (term "0"))
                                                         (rule "commute_or_2" (formula "16") (term "0"))
                                                         (rule "commute_or" (formula "15") (term "0,0"))
                                                         (rule "commute_or" (formula "14") (term "0,0"))
                                                         (rule "cut_direct" (formula "14") (term "1,0"))
                                                         (branch "CUT: a[j_87] ≥ res_min_1 TRUE"
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "14"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "14"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "allLeft" (formula "43") (inst "t=j_101"))
                                                            (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "35"))
                                                            (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "57"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "43") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "13"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                            (rule "mul_literals" (formula "43") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "4"))
                                                            (rule "andLeft" (formula "43"))
                                                            (rule "inEqSimp_homoInEq1" (formula "43"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                                            (rule "add_literals" (formula "43") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "43") (term "0"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "43") (term "1,0"))
                                                            (rule "add_literals" (formula "43") (term "0"))
                                                            (rule "leq_literals" (formula "43"))
                                                            (rule "closeFalse" (formula "43"))
                                                         )
                                                         (branch "CUT: a[j_87] ≥ res_min_1 FALSE"
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "inEqSimp_geqRight" (formula "58"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "cut_direct" (formula "15") (term "1,0"))
                                                            (branch "CUT: a[j_87] ≤ -1 TRUE"
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "true_left" (formula "16"))
                                                               (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "15"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "15"))
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "true_left" (formula "16"))
                                                               (rule "allLeft" (formula "44") (inst "t=j_101"))
                                                               (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "36"))
                                                               (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "58"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "44") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "14"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                               (rule "mul_literals" (formula "44") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "44"))
                                                               (rule "andLeft" (formula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0"))
                                                               (rule "add_literals" (formula "5") (term "0"))
                                                               (rule "leq_literals" (formula "5"))
                                                               (rule "closeFalse" (formula "5"))
                                                            )
                                                            (branch "CUT: a[j_87] ≤ -1 FALSE"
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "59"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "59"))
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "inEqSimp_leqRight" (formula "59"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "1"))
                                                               (rule "leq_literals" (formula "51") (term "0"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "true_left" (formula "51"))
                                                               (rule "cut_direct" (formula "17") (term "1"))
                                                               (branch "CUT: c[a[j_87]] ≤ a[a[j_87]] TRUE"
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "17"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "17"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "allLeft" (formula "46") (inst "t=j_101"))
                                                                  (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "38"))
                                                                  (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "59"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "15"))
                                                                  (rule "qeq_literals" (formula "46") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "16"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "46") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "46") (ifseqformula "7"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "46"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                                  (rule "add_literals" (formula "46") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "46") (term "0"))
                                                                  (rule "add_literals" (formula "46") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "46") (term "1,0"))
                                                                  (rule "add_literals" (formula "46") (term "0"))
                                                                  (rule "leq_literals" (formula "46"))
                                                                  (rule "closeFalse" (formula "46"))
                                                               )
                                                               (branch "CUT: c[a[j_87]] ≤ a[a[j_87]] FALSE"
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "notLeft" (formula "17"))
                                                                  (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "inEqSimp_leqRight" (formula "60"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                                  (rule "allLeft" (formula "49") (inst "t=j_101"))
                                                                  (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "41"))
                                                                  (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "63"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "16"))
                                                                  (rule "qeq_literals" (formula "49") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "49") (ifseqformula "8"))
                                                                  (rule "andLeft" (formula "49"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "49"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                                  (rule "add_literals" (formula "49") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                                  (rule "add_literals" (formula "49") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "49") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "49") (term "0"))
                                                                  (rule "leq_literals" (formula "49"))
                                                                  (rule "closeFalse" (formula "49"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "notLeft" (formula "9"))
                                                         (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "inEqSimp_leqRight" (formula "56"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                                                         (rule "times_zero_1" (formula "10") (term "0,0"))
                                                         (rule "add_zero_left" (formula "10") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                         (rule "mul_literals" (formula "10") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "13"))
                                                         (rule "leq_literals" (formula "10") (term "0"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "allLeft" (formula "43") (inst "t=j_100"))
                                                         (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "43") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "43") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "43") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "43") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "43") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "applyEq" (formula "57") (term "0") (ifseqformula "43"))
                                                         (rule "allLeft" (formula "37") (inst "t=j_100"))
                                                         (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "37") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "11"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "37") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                         (rule "allLeft" (formula "16") (inst "t=int::select(heap, a, arr(j_87))"))
                                                         (rule "exLeft" (formula "16") (inst "sk=j_102"))
                                                         (rule "andLeft" (formula "16"))
                                                         (rule "andLeft" (formula "16"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                         (rule "commute_or_2" (formula "16"))
                                                         (rule "commute_or_2" (formula "17"))
                                                         (rule "commute_or_2" (formula "18"))
                                                         (rule "commute_or_2" (formula "16") (term "0"))
                                                         (rule "commute_or_2" (formula "17") (term "0"))
                                                         (rule "commute_or_2" (formula "18") (term "0"))
                                                         (rule "commute_or" (formula "16") (term "0,0"))
                                                         (rule "commute_or" (formula "17") (term "0,0"))
                                                         (rule "allLeft" (formula "48") (inst "t=j_101"))
                                                         (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "39"))
                                                         (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "48") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "15"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                         (rule "mul_literals" (formula "48") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "48") (ifseqformula "5"))
                                                         (rule "andLeft" (formula "48"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                                         (rule "add_literals" (formula "48") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "48") (term "0"))
                                                         (rule "add_literals" (formula "48") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "48") (term "1,0"))
                                                         (rule "add_zero_right" (formula "48") (term "0"))
                                                         (rule "leq_literals" (formula "48"))
                                                         (rule "closeFalse" (formula "48"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "CUT: b[j_87] ≤ a[j_87] FALSE"
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "notLeft" (formula "6"))
                                                (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_leqRight" (formula "50"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "51") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                                                (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0"))
                                                (rule "leq_literals" (formula "51") (term "0"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                                (rule "times_zero_1" (formula "7") (term "0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "4") (term "0"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                                (rule "mul_literals" (formula "6") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                (rule "add_literals" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "6"))
                                                (rule "leq_literals" (formula "27") (term "0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "allLeft" (formula "10") (inst "t=i_4"))
                                                (rule "exLeft" (formula "10") (inst "sk=j_96"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "commute_or_2" (formula "12"))
                                                (rule "commute_or_2" (formula "11"))
                                                (rule "commute_or" (formula "12") (term "0"))
                                                (rule "commute_or" (formula "11") (term "0"))
                                                (rule "allLeft" (formula "13") (inst "t=i_5"))
                                                (rule "exLeft" (formula "13") (inst "sk=j_97"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                                (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "41"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "33"))
                                                (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "35"))
                                                (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "35"))
                                                (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "15") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "33"))
                                                (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "35"))
                                                (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "33"))
                                                (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "commute_or" (formula "15"))
                                                (rule "commute_or" (formula "14"))
                                                (rule "cut_direct" (formula "10") (term "0,0"))
                                                (branch "CUT: res_min_1 ≤ i_4 TRUE"
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "10"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "38"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "add_literals" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                                (branch "CUT: res_min_1 ≤ i_4 FALSE"
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "replace_known_right" (formula "11") (term "1,0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_leqRight" (formula "56"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "cut_direct" (formula "14") (term "0"))
                                                   (branch "CUT: res_min_1 ≤ i_5 TRUE"
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "36"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0"))
                                                      (rule "add_literals" (formula "5") (term "0"))
                                                      (rule "leq_literals" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                   (branch "CUT: res_min_1 ≤ i_5 FALSE"
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_leqRight" (formula "57"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                      (rule "times_zero_1" (formula "15") (term "0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "35") (term "0"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "5"))
                                                      (rule "mul_literals" (formula "15") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                      (rule "add_literals" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "allLeft" (formula "38") (inst "t=j_97"))
                                                      (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "38") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "16"))
                                                      (rule "qeq_literals" (formula "38") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "cut_direct" (formula "12") (term "0"))
                                                      (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "12"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "12"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "12"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                         (rule "allLeft" (formula "44") (inst "t=j_95"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "allLeft" (formula "37") (inst "t=j_95"))
                                                         (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "allLeft" (formula "16") (inst "t=j_95"))
                                                         (rule "exLeft" (formula "16") (inst "sk=j_99"))
                                                         (rule "andLeft" (formula "16"))
                                                         (rule "andLeft" (formula "16"))
                                                         (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "16") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0,0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "18") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "17") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "commute_or_2" (formula "18"))
                                                         (rule "commute_or_2" (formula "17"))
                                                         (rule "commute_or" (formula "18") (term "0"))
                                                         (rule "commute_or" (formula "17") (term "0"))
                                                         (rule "cut_direct" (formula "16") (term "0,0"))
                                                         (branch "CUT: res_min_1 ≤ j_95 TRUE"
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "16"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "replace_known_left" (formula "17") (term "1,0") (ifseqformula "16"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "16"))
                                                            (rule "times_zero_1" (formula "50") (term "0,0"))
                                                            (rule "add_zero_left" (formula "50") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "16"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                            (rule "mul_literals" (formula "6") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "12"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0"))
                                                            (rule "leq_literals" (formula "6"))
                                                            (rule "closeFalse" (formula "6"))
                                                         )
                                                         (branch "CUT: res_min_1 ≤ j_95 FALSE"
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "replace_known_right" (formula "18") (term "1,0") (ifseqformula "62"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "replace_known_right" (formula "17") (term "1,0") (ifseqformula "62"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "inEqSimp_leqRight" (formula "62"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "cut_direct" (formula "49") (term "0"))
                                                            (branch "CUT: j_95 ≥ i_4 TRUE"
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "true_left" (formula "50"))
                                                               (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "12"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                               (rule "mul_literals" (formula "49") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "49") (ifseqformula "5"))
                                                               (rule "andLeft" (formula "49"))
                                                               (rule "inEqSimp_homoInEq1" (formula "49"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                               (rule "add_literals" (formula "49") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "49") (term "1,0"))
                                                               (rule "add_zero_right" (formula "49") (term "0"))
                                                               (rule "leq_literals" (formula "49"))
                                                               (rule "closeFalse" (formula "49"))
                                                            )
                                                            (branch "CUT: j_95 ≥ i_4 FALSE"
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "inEqSimp_geqRight" (formula "63"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "applyEq" (formula "65") (term "0") (ifseqformula "50"))
                                                               (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "65"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "50"))
                                                               (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "50"))
                                                               (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "50"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                                                               (rule "times_zero_1" (formula "12") (term "0,0"))
                                                               (rule "add_zero_left" (formula "12") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                               (rule "mul_literals" (formula "12") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                                               (rule "leq_literals" (formula "12") (term "0"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "13"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                               (rule "mul_literals" (formula "42") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "42"))
                                                               (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                               (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "40") (term "0,0"))
                                                               (rule "qeq_literals" (formula "40") (term "0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "true_left" (formula "40"))
                                                               (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "6"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                                               (rule "mul_literals" (formula "41") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                                               (rule "add_literals" (formula "41") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "41"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0"))
                                                               (rule "qeq_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "40"))
                                                               (rule "mul_literals" (formula "14") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                               (rule "add_literals" (formula "14") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                               (rule "mul_literals" (formula "14") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "14"))
                                                               (rule "leq_literals" (formula "9") (term "0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "cut_direct" (formula "19") (term "0"))
                                                               (branch "CUT: j_99 ≤ -1 + j_95 TRUE"
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "cut_direct" (formula "18") (term "0"))
                                                                  (branch "CUT: j_99 ≥ 0 TRUE"
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "true_left" (formula "19"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                                                     (rule "times_zero_1" (formula "18") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "18") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                     (rule "mul_literals" (formula "18") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "18"))
                                                                     (rule "leq_literals" (formula "10") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "true_left" (formula "10"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                                                     (rule "mul_literals" (formula "17") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                     (rule "add_literals" (formula "17") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                     (rule "mul_literals" (formula "17") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "12"))
                                                                     (rule "leq_literals" (formula "17") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "10"))
                                                                     (rule "mul_literals" (formula "17") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                     (rule "add_literals" (formula "17") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                     (rule "mul_literals" (formula "17") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "17"))
                                                                     (rule "leq_literals" (formula "9") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "true_left" (formula "9"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "6"))
                                                                     (rule "mul_literals" (formula "16") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                     (rule "add_literals" (formula "16") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                     (rule "mul_literals" (formula "16") (term "1"))
                                                                     (rule "allLeft" (formula "51") (inst "t=j_97"))
                                                                     (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "39"))
                                                                     (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "13"))
                                                                     (rule "qeq_literals" (formula "51") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "14"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "51") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "51"))
                                                                     (rule "andLeft" (formula "40"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "40"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                                                     (rule "mul_literals" (formula "40") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                                                     (rule "add_literals" (formula "40") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "40") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "40") (term "0"))
                                                                     (rule "leq_literals" (formula "40"))
                                                                     (rule "closeFalse" (formula "40"))
                                                                  )
                                                                  (branch "CUT: j_99 ≥ 0 FALSE"
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "18"))
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "inEqSimp_geqRight" (formula "63"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "mul_literals" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_strengthen0" (formula "18") (ifseqformula "65"))
                                                                     (rule "inEqSimp_contradEq3" (formula "65") (ifseqformula "18"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0"))
                                                                     (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "65") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "65") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "false_right" (formula "65"))
                                                                     (rule "allLeft" (formula "51") (inst "t=j_97"))
                                                                     (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "39"))
                                                                     (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "16"))
                                                                     (rule "qeq_literals" (formula "51") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "17"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "51") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "51") (ifseqformula "40"))
                                                                     (rule "andLeft" (formula "51"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "51"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                                                                     (rule "add_literals" (formula "51") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "51") (term "0"))
                                                                     (rule "add_literals" (formula "51") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "51") (term "1,0"))
                                                                     (rule "add_literals" (formula "51") (term "0"))
                                                                     (rule "leq_literals" (formula "51"))
                                                                     (rule "closeFalse" (formula "51"))
                                                                  )
                                                               )
                                                               (branch "CUT: j_99 ≤ -1 + j_95 FALSE"
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "19"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "18"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "inEqSimp_leqRight" (formula "62"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_strengthen0" (formula "18") (ifseqformula "64"))
                                                                  (rule "inEqSimp_contradEq3" (formula "64") (ifseqformula "18"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                                                  (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "64") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "64") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "false_right" (formula "64"))
                                                                  (rule "allLeft" (formula "50") (inst "t=j_97"))
                                                                  (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "38"))
                                                                  (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "16"))
                                                                  (rule "qeq_literals" (formula "50") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "50") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                                                  (rule "mul_literals" (formula "50") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "50"))
                                                                  (rule "andLeft" (formula "39"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "39"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                                                  (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                                                  (rule "add_literals" (formula "39") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                                                  (rule "add_literals" (formula "39") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "39") (term "1,0"))
                                                                  (rule "add_literals" (formula "39") (term "0"))
                                                                  (rule "leq_literals" (formula "39"))
                                                                  (rule "closeFalse" (formula "39"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "notLeft" (formula "12"))
                                                         (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_leqRight" (formula "58"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                                         (rule "times_zero_1" (formula "13") (term "0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "9"))
                                                         (rule "leq_literals" (formula "13") (term "0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "allLeft" (formula "45") (inst "t=j_96"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "inEqSimp_contradInEq0" (formula "45") (term "0") (ifseqformula "14"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0"))
                                                         (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "45") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "45") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "applyEq" (formula "59") (term "0") (ifseqformula "45"))
                                                         (rule "allLeft" (formula "46") (inst "t=j_95"))
                                                         (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "allLeft" (formula "39") (inst "t=j_95"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "allLeft" (formula "40") (inst "t=j_96"))
                                                         (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "62"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "40") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "14"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "40") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                         (rule "allLeft" (formula "18") (inst "t=j_95"))
                                                         (rule "exLeft" (formula "18") (inst "sk=j_98"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "20") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0,0") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "18") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "19") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "commute_or_2" (formula "20"))
                                                         (rule "commute_or_2" (formula "19"))
                                                         (rule "commute_or" (formula "20") (term "0"))
                                                         (rule "commute_or" (formula "19") (term "0"))
                                                         (rule "cut_direct" (formula "51") (term "0"))
                                                         (branch "CUT: j_95 ≥ i_4 TRUE"
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "52"))
                                                            (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "12"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "51") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                            (rule "mul_literals" (formula "51") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "51"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0"))
                                                            (rule "add_zero_right" (formula "5") (term "0"))
                                                            (rule "leq_literals" (formula "5"))
                                                            (rule "closeFalse" (formula "5"))
                                                         )
                                                         (branch "CUT: j_95 ≥ i_4 FALSE"
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "inEqSimp_geqRight" (formula "65"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "68") (term "0") (ifseqformula "52"))
                                                            (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "68"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "52"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                                                            (rule "mul_literals" (formula "12") (term "0,0"))
                                                            (rule "add_zero_left" (formula "12") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                            (rule "mul_literals" (formula "12") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                                            (rule "leq_literals" (formula "12") (term "0"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "43") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "13"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                            (rule "mul_literals" (formula "43") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "43"))
                                                            (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                            (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "41") (term "0,0"))
                                                            (rule "qeq_literals" (formula "41") (term "0"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "true_left" (formula "41"))
                                                            (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "6"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                                                            (rule "mul_literals" (formula "42") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                                            (rule "add_literals" (formula "42") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "42"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "7") (term "0,0"))
                                                            (rule "qeq_literals" (formula "7") (term "0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "41"))
                                                            (rule "mul_literals" (formula "15") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                            (rule "add_literals" (formula "15") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                            (rule "mul_literals" (formula "15") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "15"))
                                                            (rule "leq_literals" (formula "9") (term "0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "allLeft" (formula "53") (inst "t=j_97"))
                                                            (rule "applyEq" (formula "53") (term "1,1") (ifseqformula "40"))
                                                            (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "68"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "16"))
                                                            (rule "qeq_literals" (formula "53") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "17"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "53") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1"))
                                                            (rule "mul_literals" (formula "53") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "53") (ifseqformula "41"))
                                                            (rule "andLeft" (formula "53"))
                                                            (rule "inEqSimp_homoInEq1" (formula "53"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                                                            (rule "mul_literals" (formula "53") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                                                            (rule "add_literals" (formula "53") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                                            (rule "add_literals" (formula "53") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "53") (term "1,0"))
                                                            (rule "add_zero_right" (formula "53") (term "0"))
                                                            (rule "leq_literals" (formula "53"))
                                                            (rule "closeFalse" (formula "53"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: j_87 ≥ i_5 FALSE"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_geqRight" (formula "45"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "25") (term "0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "3") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "25") (term "0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "allLeft" (formula "33") (inst "t=j_87"))
                                          (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "27"))
                                          (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "33") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                          (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1"))
                                          (rule "mul_literals" (formula "33") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "33"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_literals" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: i_5 ≤ i_4 FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_leqRight" (formula "43"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "25"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "allLeft" (formula "26") (inst "t=j_87"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "cut_direct" (formula "26") (term "0"))
                                    (branch "CUT: j_87 ≥ i_5 TRUE"
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "allLeft" (formula "32") (inst "t=j_87"))
                                       (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "cut_direct" (formula "32") (term "0"))
                                       (branch "CUT: j_87 ≥ i_4 TRUE"
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "allLeft" (formula "5") (inst "t=j_87"))
                                          (rule "exLeft" (formula "5") (inst "sk=j_92"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "7") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "6") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "commute_or" (formula "6"))
                                          (rule "commute_or" (formula "7"))
                                          (rule "cut_direct" (formula "5") (term "0"))
                                          (branch "CUT: c[j_87] ≤ a[j_87] TRUE"
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "47"))
                                             (rule "inEqSimp_contradEq3" (formula "47") (ifseqformula "5"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "qeq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "allLeft" (formula "6") (inst "t=i_4"))
                                             (rule "exLeft" (formula "6") (inst "sk=j_94"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "33"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "35"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "7") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "33"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "35"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "8") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "35"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "6") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "33"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "commute_or" (formula "8"))
                                             (rule "commute_or" (formula "7"))
                                             (rule "cut_direct" (formula "6") (term "0"))
                                             (branch "CUT: res_min_1 ≤ i_4 TRUE"
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "4"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "33"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0"))
                                                (rule "add_zero_right" (formula "33") (term "0"))
                                                (rule "leq_literals" (formula "33"))
                                                (rule "closeFalse" (formula "33"))
                                             )
                                             (branch "CUT: res_min_1 ≤ i_4 FALSE"
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "notLeft" (formula "6"))
                                                (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_leqRight" (formula "50"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                                (rule "times_zero_1" (formula "7") (term "0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "34") (term "0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "allLeft" (formula "37") (inst "t=j_94"))
                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                (rule "leq_literals" (formula "37") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "37"))
                                                (rule "allLeft" (formula "32") (inst "t=j_94"))
                                                (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "52"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "32") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "9"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "2"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_homoInEq1" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "32") (term "1,0"))
                                                (rule "add_literals" (formula "32") (term "0"))
                                                (rule "leq_literals" (formula "32"))
                                                (rule "closeFalse" (formula "32"))
                                             )
                                          )
                                          (branch "CUT: c[j_87] ≤ a[j_87] FALSE"
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "notLeft" (formula "5"))
                                             (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_leqRight" (formula "49"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "50") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0"))
                                             (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "50") (term "0,0"))
                                             (rule "leq_literals" (formula "50") (term "0"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                             (rule "times_zero_1" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "allLeft" (formula "8") (inst "t=i_4"))
                                             (rule "exLeft" (formula "8") (inst "sk=j_93"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "35"))
                                             (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "37"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "8") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "35"))
                                             (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "37"))
                                             (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "9") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "35"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "37"))
                                             (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "10") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "commute_or" (formula "9"))
                                             (rule "commute_or" (formula "10"))
                                             (rule "cut_direct" (formula "8") (term "0"))
                                             (branch "CUT: res_min_1 ≤ i_4 TRUE"
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "37"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_literals" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                             (branch "CUT: res_min_1 ≤ i_4 FALSE"
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "notLeft" (formula "8"))
                                                (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "52"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "52"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_leqRight" (formula "52"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                                (rule "times_zero_1" (formula "9") (term "0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "36") (term "0"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "true_left" (formula "36"))
                                                (rule "allLeft" (formula "39") (inst "t=j_93"))
                                                (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "inEqSimp_contradInEq0" (formula "39") (term "0") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "39") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                (rule "leq_literals" (formula "39") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "applyEq" (formula "53") (term "0") (ifseqformula "39"))
                                                (rule "allLeft" (formula "34") (inst "t=j_93"))
                                                (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "34") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "11"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "34"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                       )
                                       (branch "CUT: j_87 ≥ i_4 FALSE"
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_geqRight" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "33"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "27") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_literals" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                    (branch "CUT: j_87 ≥ i_5 FALSE"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "inEqSimp_geqRight" (formula "45"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "allLeft" (formula "33") (inst "t=j_87"))
                                       (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "27"))
                                       (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "33") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1"))
                                       (rule "mul_literals" (formula "33") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                       (rule "allLeft" (formula "7") (inst "t=j_87"))
                                       (rule "exLeft" (formula "7") (inst "sk=j_88"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "8") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "7") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "9") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "commute_or" (formula "8"))
                                       (rule "commute_or" (formula "9"))
                                       (rule "cut_direct" (formula "7") (term "0"))
                                       (branch "CUT: c[j_87] ≤ a[j_87] TRUE"
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_strengthen0" (formula "7") (ifseqformula "48"))
                                          (rule "inEqSimp_contradEq3" (formula "48") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                          (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "48") (term "0,0"))
                                          (rule "qeq_literals" (formula "48") (term "0"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "false_right" (formula "48"))
                                          (rule "allLeft" (formula "8") (inst "t=i_4"))
                                          (rule "exLeft" (formula "8") (inst "sk=j_91"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "34"))
                                          (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "9") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "34"))
                                          (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "34"))
                                          (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "commute_or" (formula "10"))
                                          (rule "commute_or" (formula "9"))
                                          (rule "cut_direct" (formula "8") (term "0"))
                                          (branch "CUT: res_min_1 ≤ i_4 TRUE"
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                                             (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "6"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "inEqSimp_homoInEq1" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0"))
                                             (rule "leq_literals" (formula "34"))
                                             (rule "closeFalse" (formula "34"))
                                          )
                                          (branch "CUT: res_min_1 ≤ i_4 FALSE"
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "notLeft" (formula "8"))
                                             (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "51"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "51"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_leqRight" (formula "51"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                             (rule "times_zero_1" (formula "9") (term "0,0"))
                                             (rule "add_zero_left" (formula "9") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "35") (term "0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "allLeft" (formula "38") (inst "t=j_91"))
                                             (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "38") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "38") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEq" (formula "52") (term "0") (ifseqformula "38"))
                                             (rule "allLeft" (formula "33") (inst "t=j_91"))
                                             (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "33") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "11"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "33") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "33"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                             (rule "add_literals" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                       (branch "CUT: c[j_87] ≤ a[j_87] FALSE"
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "notLeft" (formula "7"))
                                          (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_leqRight" (formula "50"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "51") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "51") (term "0,0"))
                                          (rule "leq_literals" (formula "51") (term "0"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                          (rule "times_zero_1" (formula "8") (term "0,0"))
                                          (rule "add_zero_left" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "7") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                          (rule "add_literals" (formula "7") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "7"))
                                          (rule "leq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "allLeft" (formula "10") (inst "t=i_4"))
                                          (rule "exLeft" (formula "10") (inst "sk=j_89"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0") (ifseqformula "36"))
                                          (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "36"))
                                          (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "12") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "11") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "36"))
                                          (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "commute_or" (formula "12"))
                                          (rule "commute_or" (formula "11"))
                                          (rule "allLeft" (formula "13") (inst "t=i_5"))
                                          (rule "exLeft" (formula "13") (inst "sk=j_90"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "commute_or_2" (formula "14"))
                                          (rule "commute_or_2" (formula "15"))
                                          (rule "commute_or" (formula "14") (term "0"))
                                          (rule "commute_or" (formula "15") (term "0"))
                                          (rule "cut_direct" (formula "10") (term "0"))
                                          (branch "CUT: res_min_1 ≤ i_4 TRUE"
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "10"))
                                             (rule "times_zero_1" (formula "44") (term "0,0"))
                                             (rule "add_zero_left" (formula "44") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "10"))
                                             (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "4"))
                                             (rule "andLeft" (formula "41"))
                                             (rule "inEqSimp_homoInEq1" (formula "41"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                             (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                             (rule "add_literals" (formula "41") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0"))
                                             (rule "add_literals" (formula "41") (term "0"))
                                             (rule "leq_literals" (formula "41"))
                                             (rule "closeFalse" (formula "41"))
                                          )
                                          (branch "CUT: res_min_1 ≤ i_4 FALSE"
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "notLeft" (formula "10"))
                                             (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_leqRight" (formula "56"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                                             (rule "times_zero_1" (formula "11") (term "0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "40") (term "0"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "allLeft" (formula "43") (inst "t=j_89"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradInEq0" (formula "43") (term "0") (ifseqformula "13"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,0"))
                                             (rule "leq_literals" (formula "43") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "applyEq" (formula "57") (term "0") (ifseqformula "43"))
                                             (rule "allLeft" (formula "38") (inst "t=j_89"))
                                             (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "38") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "13"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "38") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "38"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0"))
                                             (rule "add_zero_right" (formula "4") (term "0"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "replace_known_right" (formula "36") (term "0,0,1") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_geqRight" (formula "41"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "applyEq" (formula "41") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "39") (term "0") (ifseqformula "37"))
                                 (rule "inEqSimp_commuteGeq" (formula "39"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "37"))
                                 (rule "inEqSimp_contradEq3" (formula "42") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0"))
                                 (rule "qeq_literals" (formula "42") (term "0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "false_right" (formula "42"))
                                 (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "39"))
                                 (rule "mul_literals" (formula "33") (term "0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "39"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "40"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_literals" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "false_right" (formula "41"))
                              (rule "inEqSimp_geqRight" (formula "39"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "notLeft" (formula "40"))
                              (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "39"))
                              (rule "applyEq" (formula "36") (term "0,0,1") (ifseqformula "39"))
                              (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "39"))
                              (rule "applyEq" (formula "36") (term "0,0,1,1") (ifseqformula "39"))
                              (rule "applyEq" (formula "38") (term "0") (ifseqformula "39"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "39"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "applyEq" (formula "40") (term "0") (ifseqformula "39"))
                              (rule "eqSymm" (formula "40"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                              (rule "add_literals" (formula "40") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "40") (term "1,0,0"))
                              (rule "add_zero_right" (formula "40") (term "0,0"))
                              (rule "leq_literals" (formula "40") (term "0"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "false_right" (formula "40"))
                              (rule "commute_and" (formula "36") (term "1"))
                              (rule "ex_pull_out3" (formula "3") (term "1,0"))
                              (rule "applyEq_and_gen2" (formula "36") (term "1"))
                              (rule "cnf_rightDist" (formula "3") (term "0,1,0"))
                              (rule "commute_or" (formula "3") (term "1,0,1,0"))
                              (rule "cnf_rightDist" (formula "3") (term "0,0,1,0"))
                              (rule "commute_or" (formula "3") (term "1,0,0,1,0"))
                              (rule "ex_pull_out3" (formula "3") (term "0"))
                              (rule "cnf_rightDist" (formula "3") (term "0,0"))
                              (rule "commute_or_2" (formula "3") (term "1,0,0"))
                              (rule "commute_or" (formula "3") (term "0,1,0,0"))
                              (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
                              (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                              (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                              (rule "commute_or" (formula "3") (term "0,1,0,0,0"))
                              (rule "commute_and_2" (formula "3") (term "0,0"))
                              (rule "equiv_left" (formula "35"))
                              (branch "Case 1"
                                 (rule "replace_known_left" (formula "37") (term "0,0,1") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "notLeft" (formula "37"))
                                 (rule "inEqSimp_leqRight" (formula "40"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "7") (term "1") (ifseqformula "37"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "commute_and" (formula "3") (term "0,0,0"))
                                 (rule "allLeft" (formula "23") (inst "t=i_4"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "26"))
                                 (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "cut_direct" (formula "23") (term "0"))
                                 (branch "CUT: i_5 ≤ i_4 TRUE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "23"))
                                    (rule "times_zero_1" (formula "20") (term "0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0"))
                                    (rule "allLeft" (formula "29") (inst "t=i_5"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "20"))
                                    (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "cut_direct" (formula "29") (term "0"))
                                    (branch "CUT: i_5 ≥ i_4 TRUE"
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "inEqSimp_antiSymm" (formula "29") (ifseqformula "23"))
                                       (rule "applyEqRigid" (formula "21") (term "1,1") (ifseqformula "29"))
                                       (rule "applyEqRigid" (formula "21") (term "0,2,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "28"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "27"))
                                       (rule "inEqSimp_homoInEq0" (formula "21"))
                                       (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "1,0"))
                                       (rule "times_zero_1" (formula "21") (term "0"))
                                       (rule "qeq_literals" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "26"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                                       (rule "add_literals" (formula "27") (term "1,0"))
                                       (rule "times_zero_1" (formula "27") (term "0"))
                                       (rule "leq_literals" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "26"))
                                       (rule "applyEqRigid" (formula "20") (term "0,2,1,0") (ifseqformula "26"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0"))
                                       (rule "allLeft" (formula "3") (inst "t=i_4"))
                                       (rule "exLeft" (formula "3") (inst "sk=j_86"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0,0") (ifseqformula "26"))
                                       (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "26"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "26"))
                                       (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "commute_or_2" (formula "5"))
                                       (rule "commute_or_2" (formula "4"))
                                       (rule "commute_or" (formula "5") (term "0"))
                                       (rule "commute_or" (formula "4") (term "0"))
                                       (rule "cut_direct" (formula "3") (term "0,0"))
                                       (branch "CUT: res_min_1 ≤ i_4 TRUE"
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "35") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "35"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0"))
                                          (rule "add_zero_right" (formula "25") (term "0"))
                                          (rule "leq_literals" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                       (branch "CUT: res_min_1 ≤ i_4 FALSE"
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_right" (formula "5") (term "1,0") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "4") (term "1,0") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_leqRight" (formula "42"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "cut_direct" (formula "4") (term "0"))
                                          (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "4"))
                                             (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "22"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0"))
                                             (rule "leq_literals" (formula "27"))
                                             (rule "closeFalse" (formula "27"))
                                          )
                                          (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "notLeft" (formula "4"))
                                             (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "inEqSimp_leqRight" (formula "43"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                             (rule "times_zero_1" (formula "5") (term "0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "allLeft" (formula "26") (inst "t=j_86"))
                                             (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "26") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "26") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "allLeft" (formula "32") (inst "t=j_86"))
                                             (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "26"))
                                             (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_contradInEq0" (formula "32") (term "1") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                             (rule "leq_literals" (formula "32") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "32") (term "0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "closeFalse" (formula "32"))
                                          )
                                       )
                                    )
                                    (branch "CUT: i_5 ≥ i_4 FALSE"
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_geqRight" (formula "42"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0"))
                                       (rule "qeq_literals" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "21"))
                                       (rule "leq_literals" (formula "27") (term "0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "allLeft" (formula "4") (inst "t=i_4"))
                                       (rule "exLeft" (formula "4") (inst "sk=j_82"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "24"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "24"))
                                       (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "24"))
                                       (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "commute_or_2" (formula "5"))
                                       (rule "commute_or_2" (formula "6"))
                                       (rule "commute_or" (formula "5") (term "0"))
                                       (rule "commute_or" (formula "6") (term "0"))
                                       (rule "cut_direct" (formula "4") (term "0,0"))
                                       (branch "CUT: res_min_1 ≤ i_4 TRUE"
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "replace_known_left" (formula "5") (term "1,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "4"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "38"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "28"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0"))
                                          (rule "leq_literals" (formula "28"))
                                          (rule "closeFalse" (formula "28"))
                                       )
                                       (branch "CUT: res_min_1 ≤ i_4 FALSE"
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "5") (term "1,0") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "6") (term "1,0") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_leqRight" (formula "45"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "cut_direct" (formula "5") (term "0"))
                                          (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "5"))
                                             (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "allLeft" (formula "6") (inst "t=i_5"))
                                             (rule "exLeft" (formula "6") (inst "sk=j_85"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                             (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "35"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "27"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "27"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "27"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "6") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "8") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "7") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "commute_or" (formula "8"))
                                             (rule "commute_or" (formula "7"))
                                             (rule "cut_direct" (formula "6") (term "0"))
                                             (branch "CUT: res_min_1 ≤ i_5 TRUE"
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "6"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "41"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "inEqSimp_homoInEq1" (formula "26"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0"))
                                                (rule "add_zero_right" (formula "26") (term "0"))
                                                (rule "leq_literals" (formula "26"))
                                                (rule "closeFalse" (formula "26"))
                                             )
                                             (branch "CUT: res_min_1 ≤ i_5 FALSE"
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "notLeft" (formula "6"))
                                                (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_leqRight" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                                (rule "times_zero_1" (formula "7") (term "0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "28") (term "0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "7") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                (rule "add_literals" (formula "7") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "28") (term "0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "allLeft" (formula "30") (inst "t=j_85"))
                                                (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "10"))
                                                (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "30") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "30") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "allLeft" (formula "37") (inst "t=j_85"))
                                                (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "30"))
                                                (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "37") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "10"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1"))
                                                (rule "mul_literals" (formula "37") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "3"))
                                                (rule "andLeft" (formula "37"))
                                                (rule "inEqSimp_homoInEq1" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                                (rule "add_literals" (formula "37") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0"))
                                                (rule "add_literals" (formula "37") (term "0"))
                                                (rule "leq_literals" (formula "37"))
                                                (rule "closeFalse" (formula "37"))
                                             )
                                          )
                                          (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "notLeft" (formula "5"))
                                             (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_leqRight" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                             (rule "times_zero_1" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1"))
                                             (rule "allLeft" (formula "34") (inst "t=j_82"))
                                             (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "34") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "34") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "applyEq" (formula "47") (term "0") (ifseqformula "34"))
                                             (rule "allLeft" (formula "29") (inst "t=j_82"))
                                             (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "7"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "29") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0"))
                                             (rule "allLeft" (formula "8") (inst "t=i_5"))
                                             (rule "exLeft" (formula "8") (inst "sk=j_83"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                             (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "37"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "29"))
                                             (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "29"))
                                             (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "31"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "8") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "31"))
                                             (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "10") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "31"))
                                             (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "9") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "29"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "commute_or" (formula "10"))
                                             (rule "commute_or" (formula "9"))
                                             (rule "cut_direct" (formula "8") (term "0"))
                                             (branch "CUT: res_min_1 ≤ i_5 TRUE"
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "4"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_literals" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: res_min_1 ≤ i_5 FALSE"
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "notLeft" (formula "8"))
                                                (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_leqRight" (formula "51"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                                (rule "times_zero_1" (formula "9") (term "0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "30") (term "0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "9") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "add_literals" (formula "9") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "30") (term "0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "allLeft" (formula "33") (inst "t=j_83"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "11"))
                                                (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                                (rule "leq_literals" (formula "33") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "allLeft" (formula "13") (inst "t=j_82"))
                                                (rule "exLeft" (formula "13") (inst "sk=j_84"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                                (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "42"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "commute_or_2" (formula "15"))
                                                (rule "commute_or_2" (formula "14"))
                                                (rule "commute_or" (formula "15") (term "0"))
                                                (rule "commute_or" (formula "14") (term "0"))
                                                (rule "cut_direct" (formula "13") (term "0,0"))
                                                (branch "CUT: res_min_1 ≤ j_82 TRUE"
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "13"))
                                                   (rule "times_zero_1" (formula "51") (term "0,0"))
                                                   (rule "add_zero_left" (formula "51") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "13"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "9"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch "CUT: res_min_1 ≤ j_82 FALSE"
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_leqRight" (formula "55"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "cut_direct" (formula "14") (term "0"))
                                                   (branch "CUT: b[j_82] ≤ a[j_82] TRUE"
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "inEqSimp_strengthen0" (formula "14") (ifseqformula "55"))
                                                      (rule "inEqSimp_contradEq3" (formula "55") (ifseqformula "14"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0"))
                                                      (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "55") (term "0,0"))
                                                      (rule "qeq_literals" (formula "55") (term "0"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "false_right" (formula "55"))
                                                      (rule "allLeft" (formula "42") (inst "t=j_83"))
                                                      (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "35"))
                                                      (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "42") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "13"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                      (rule "mul_literals" (formula "42") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "42") (ifseqformula "5"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "inEqSimp_homoInEq1" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                                                      (rule "add_literals" (formula "42") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0"))
                                                      (rule "add_literals" (formula "42") (term "0"))
                                                      (rule "leq_literals" (formula "42"))
                                                      (rule "closeFalse" (formula "42"))
                                                   )
                                                   (branch "CUT: b[j_82] ≤ a[j_82] FALSE"
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_leqRight" (formula "56"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                                      (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "58") (term "0,0"))
                                                      (rule "leq_literals" (formula "58") (term "0"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                      (rule "times_zero_1" (formula "15") (term "0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "9") (term "0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "9"))
                                                      (rule "mul_literals" (formula "14") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                      (rule "add_literals" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1"))
                                                      (rule "allLeft" (formula "44") (inst "t=j_83"))
                                                      (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "37"))
                                                      (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "44") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "13"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                      (rule "mul_literals" (formula "44") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "44"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0"))
                                                      (rule "leq_literals" (formula "6"))
                                                      (rule "closeFalse" (formula "6"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: i_5 ≤ i_4 FALSE"
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_leqRight" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "24"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "allLeft" (formula "4") (inst "t=i_4"))
                                    (rule "exLeft" (formula "4") (inst "sk=j_81"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "32"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "5") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "30"))
                                    (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "32"))
                                    (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "4") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "30"))
                                    (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "30"))
                                    (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "32"))
                                    (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "6") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "commute_or" (formula "5"))
                                    (rule "commute_or" (formula "6"))
                                    (rule "cut_direct" (formula "4") (term "0"))
                                    (branch "CUT: res_min_1 ≤ i_4 TRUE"
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "4"))
                                       (rule "times_zero_1" (formula "41") (term "0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "38") (ifseqformula "29"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "inEqSimp_homoInEq1" (formula "38"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0"))
                                       (rule "add_zero_right" (formula "38") (term "0"))
                                       (rule "leq_literals" (formula "38"))
                                       (rule "closeFalse" (formula "38"))
                                    )
                                    (branch "CUT: res_min_1 ≤ i_4 FALSE"
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_leqRight" (formula "45"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                       (rule "times_zero_1" (formula "5") (term "0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "31") (term "0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "allLeft" (formula "33") (inst "t=j_81"))
                                       (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "33") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "33") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "33"))
                                       (rule "allLeft" (formula "29") (inst "t=j_81"))
                                       (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "29") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "7"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "29") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "29"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_literals" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "replace_known_right" (formula "35") (term "0,0,1") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_geqRight" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "36"))
                                 (rule "applyEqRigid" (formula "4") (term "1,1,0,0,1,0,0") (ifseqformula "36"))
                                 (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "4") (term "1,1,0,0,1,0,0,0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "36"))
                                 (rule "applyEqRigid" (formula "4") (term "1,1,0,0,0,0,0,0") (ifseqformula "36"))
                                 (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "36"))
                                 (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "36"))
                                 (rule "inEqSimp_contradEq3" (formula "40") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0"))
                                 (rule "qeq_literals" (formula "40") (term "0"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "false_right" (formula "40"))
                                 (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                 (rule "mul_literals" (formula "27") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "39") (term "0,0"))
                                 (rule "add_zero_left" (formula "39") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                 (rule "mul_literals" (formula "39") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "39"))
                                 (rule "leq_literals" (formula "34") (term "0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "commute_and" (formula "4") (term "0,0,0"))
                                 (rule "allLeft" (formula "24") (inst "t=i_4"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "27"))
                                 (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "cut_direct" (formula "24") (term "0"))
                                 (branch "CUT: i_5 ≤ i_4 TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "24"))
                                    (rule "times_zero_1" (formula "21") (term "0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0"))
                                    (rule "allLeft" (formula "31") (inst "t=i_5"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "21"))
                                    (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "cut_direct" (formula "31") (term "0"))
                                    (branch "CUT: i_5 ≥ i_4 TRUE"
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "inEqSimp_antiSymm" (formula "31") (ifseqformula "24"))
                                       (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "32") (term "0") (ifseqformula "31"))
                                       (rule "inEqSimp_homoInEq1" (formula "32"))
                                       (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                       (rule "add_literals" (formula "32") (term "1,0"))
                                       (rule "times_zero_1" (formula "32") (term "0"))
                                       (rule "leq_literals" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "31"))
                                       (rule "applyEqRigid" (formula "22") (term "0,2,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "23"))
                                       (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                       (rule "add_literals" (formula "23") (term "1,0"))
                                       (rule "times_zero_1" (formula "23") (term "0"))
                                       (rule "qeq_literals" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "applyEqRigid" (formula "21") (term "1,1") (ifseqformula "29"))
                                       (rule "applyEqRigid" (formula "22") (term "0,2,1,0") (ifseqformula "29"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "26"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0"))
                                       (rule "qeq_literals" (formula "21") (term "0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "allLeft" (formula "4") (inst "t=i_4"))
                                       (rule "exLeft" (formula "4") (inst "sk=j_80"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "27"))
                                       (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "27"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "27"))
                                       (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "6") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "4") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "commute_or" (formula "6"))
                                       (rule "commute_or" (formula "5"))
                                       (rule "cut_direct" (formula "4") (term "0"))
                                       (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "4"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "22"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0"))
                                          (rule "leq_literals" (formula "28"))
                                          (rule "closeFalse" (formula "28"))
                                       )
                                       (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "43"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "43"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_leqRight" (formula "43"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                          (rule "times_zero_1" (formula "5") (term "0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "allLeft" (formula "32") (inst "t=j_80"))
                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                          (rule "leq_literals" (formula "32") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "32"))
                                          (rule "allLeft" (formula "26") (inst "t=j_80"))
                                          (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (term "1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                          (rule "leq_literals" (formula "26") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "26"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                    (branch "CUT: i_5 ≥ i_4 FALSE"
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_geqRight" (formula "43"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0"))
                                       (rule "qeq_literals" (formula "25") (term "0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "22") (term "0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "22"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "allLeft" (formula "5") (inst "t=i_4"))
                                       (rule "exLeft" (formula "5") (inst "sk=j_76"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "25"))
                                       (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "25"))
                                       (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "25"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "32"))
                                       (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "7") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "32"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "6") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "32"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "commute_or" (formula "7"))
                                       (rule "commute_or" (formula "6"))
                                       (rule "cut_direct" (formula "5") (term "0"))
                                       (branch "CUT: c[i_4] ≤ a[i_4] TRUE"
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "5"))
                                          (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "0"))
                                          (rule "allLeft" (formula "6") (inst "t=i_5"))
                                          (rule "exLeft" (formula "6") (inst "sk=j_79"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                          (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "7") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "6") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "commute_or" (formula "7"))
                                          (rule "commute_or" (formula "8"))
                                          (rule "cut_direct" (formula "6") (term "0"))
                                          (branch "CUT: res_min_0 ≤ i_5 TRUE"
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "6"))
                                             (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1"))
                                             (rule "mul_literals" (formula "31") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "1"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "inEqSimp_homoInEq1" (formula "31"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                             (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                             (rule "add_literals" (formula "31") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0"))
                                             (rule "add_zero_right" (formula "31") (term "0"))
                                             (rule "leq_literals" (formula "31"))
                                             (rule "closeFalse" (formula "31"))
                                          )
                                          (branch "CUT: res_min_0 ≤ i_5 FALSE"
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "notLeft" (formula "6"))
                                             (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_leqRight" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0"))
                                             (rule "qeq_literals" (formula "29") (term "0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                             (rule "times_zero_1" (formula "8") (term "0,0"))
                                             (rule "add_zero_left" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "mul_literals" (formula "8") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "29") (term "0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                                             (rule "mul_literals" (formula "8") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                             (rule "add_literals" (formula "8") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "mul_literals" (formula "8") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "29") (term "0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "allLeft" (formula "30") (inst "t=j_79"))
                                             (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "allLeft" (formula "38") (inst "t=j_79"))
                                             (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "30"))
                                             (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "38") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "11"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                             (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1"))
                                             (rule "mul_literals" (formula "38") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "38"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                             (rule "add_literals" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                       (branch "CUT: c[i_4] ≤ a[i_4] FALSE"
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "notLeft" (formula "5"))
                                          (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "46"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "46"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_leqRight" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                          (rule "times_zero_1" (formula "6") (term "0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "allLeft" (formula "35") (inst "t=j_76"))
                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                          (rule "leq_literals" (formula "35") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "35"))
                                          (rule "allLeft" (formula "29") (inst "t=j_76"))
                                          (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "29") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "29") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0"))
                                          (rule "allLeft" (formula "8") (inst "t=i_5"))
                                          (rule "exLeft" (formula "8") (inst "sk=j_77"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                          (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "38"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "29"))
                                          (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "29"))
                                          (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "29"))
                                          (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "9") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "commute_or" (formula "9"))
                                          (rule "commute_or" (formula "10"))
                                          (rule "cut_direct" (formula "8") (term "0"))
                                          (branch "CUT: res_min_0 ≤ i_5 TRUE"
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "8"))
                                             (rule "times_zero_1" (formula "47") (term "0,0"))
                                             (rule "add_zero_left" (formula "47") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "8"))
                                             (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                             (rule "mul_literals" (formula "34") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "2"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "inEqSimp_homoInEq1" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0"))
                                             (rule "add_literals" (formula "34") (term "0"))
                                             (rule "leq_literals" (formula "34"))
                                             (rule "closeFalse" (formula "34"))
                                          )
                                          (branch "CUT: res_min_0 ≤ i_5 FALSE"
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "notLeft" (formula "8"))
                                             (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "51"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "51"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_leqRight" (formula "51"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "31") (term "0,0"))
                                             (rule "qeq_literals" (formula "31") (term "0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                                             (rule "times_zero_1" (formula "10") (term "0,0"))
                                             (rule "add_zero_left" (formula "10") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "mul_literals" (formula "10") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "31") (term "0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "10") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                             (rule "add_literals" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "mul_literals" (formula "10") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "31") (term "0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "allLeft" (formula "33") (inst "t=j_77"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "13"))
                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                             (rule "leq_literals" (formula "33") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "allLeft" (formula "14") (inst "t=j_76"))
                                             (rule "exLeft" (formula "14") (inst "sk=j_78"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                             (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "16") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "commute_or_2" (formula "15"))
                                             (rule "commute_or_2" (formula "16"))
                                             (rule "commute_or" (formula "15") (term "0"))
                                             (rule "commute_or" (formula "16") (term "0"))
                                             (rule "cut_direct" (formula "14") (term "0,0"))
                                             (branch "CUT: res_min_0 ≤ j_76 TRUE"
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "14"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "14"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "14"))
                                                (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                (rule "mul_literals" (formula "38") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "38"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0"))
                                                (rule "add_zero_right" (formula "9") (term "0"))
                                                (rule "leq_literals" (formula "9"))
                                                (rule "closeFalse" (formula "9"))
                                             )
                                             (branch "CUT: res_min_0 ≤ j_76 FALSE"
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_leqRight" (formula "55"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "cut_direct" (formula "16") (term "0"))
                                                (branch "CUT: b[j_76] ≤ a[j_76] TRUE"
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "16"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "16"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "inEqSimp_strengthen0" (formula "16") (ifseqformula "56"))
                                                   (rule "inEqSimp_contradEq3" (formula "56") (ifseqformula "16"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                                                   (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0"))
                                                   (rule "qeq_literals" (formula "56") (term "0"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "false_right" (formula "56"))
                                                   (rule "allLeft" (formula "44") (inst "t=j_77"))
                                                   (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "36"))
                                                   (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "44") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "15"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                   (rule "mul_literals" (formula "44") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "44") (ifseqformula "6"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "inEqSimp_homoInEq1" (formula "44"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                                   (rule "add_literals" (formula "44") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "44") (term "0"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0"))
                                                   (rule "add_literals" (formula "44") (term "0"))
                                                   (rule "leq_literals" (formula "44"))
                                                   (rule "closeFalse" (formula "44"))
                                                )
                                                (branch "CUT: b[j_76] ≤ a[j_76] FALSE"
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "notLeft" (formula "16"))
                                                   (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_leqRight" (formula "57"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                                   (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "59") (term "0,0"))
                                                   (rule "leq_literals" (formula "59") (term "0"))
                                                   (builtin "One Step Simplification" (formula "59"))
                                                   (rule "false_right" (formula "59"))
                                                   (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                                                   (rule "times_zero_1" (formula "17") (term "0,0"))
                                                   (rule "add_zero_left" (formula "17") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                   (rule "mul_literals" (formula "17") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "17"))
                                                   (rule "leq_literals" (formula "11") (term "0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "11"))
                                                   (rule "mul_literals" (formula "16") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                   (rule "add_literals" (formula "16") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                   (rule "mul_literals" (formula "16") (term "1"))
                                                   (rule "allLeft" (formula "46") (inst "t=j_77"))
                                                   (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "38"))
                                                   (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "46") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "15"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "46") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                   (rule "mul_literals" (formula "46") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "46") (ifseqformula "7"))
                                                   (rule "andLeft" (formula "46"))
                                                   (rule "inEqSimp_homoInEq1" (formula "46"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                   (rule "add_literals" (formula "46") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "46") (term "0"))
                                                   (rule "add_literals" (formula "46") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "46") (term "1,0"))
                                                   (rule "add_zero_right" (formula "46") (term "0"))
                                                   (rule "leq_literals" (formula "46"))
                                                   (rule "closeFalse" (formula "46"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: i_5 ≤ i_4 FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_leqRight" (formula "42"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "25"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "allLeft" (formula "5") (inst "t=i_4"))
                                    (rule "exLeft" (formula "5") (inst "sk=j_75"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "34"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "5") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "34"))
                                    (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "6") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "33"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "7") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "31"))
                                    (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "31"))
                                    (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "33"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "5") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "33"))
                                    (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                    (rule "leq_literals" (formula "6") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "34"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                    (rule "leq_literals" (formula "7") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "31"))
                                    (rule "qeq_literals" (formula "5") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "notLeft" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                    (rule "times_zero_1" (formula "5") (term "0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "31") (term "0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "allLeft" (formula "34") (inst "t=j_75"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                    (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                    (rule "leq_literals" (formula "34") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "applyEq" (formula "46") (term "0") (ifseqformula "34"))
                                    (rule "allLeft" (formula "29") (inst "t=j_75"))
                                    (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "29") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "7"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "1"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "inEqSimp_homoInEq1" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0"))
                                    (rule "add_literals" (formula "29") (term "0"))
                                    (rule "leq_literals" (formula "29"))
                                    (rule "closeFalse" (formula "29"))
                                 )
                              )
                           )
                        )
                     )
                     (branch " ∀ int j; (j ≤ -1 ∨ j ≥ res_min ∨ b[j] = a[j]) ∧ b.length ≥ a.length"
                        (rule "andLeft" (formula "18"))
                        (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "27"))
                        (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "27"))
                        (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "27"))
                        (rule "applyEq" (formula "19") (term "1") (ifseqformula "27"))
                        (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "27"))
                        (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "27"))
                        (rule "eqSymm" (formula "33") (term "1"))
                        (rule "applyEq" (formula "34") (term "1,0,1,1") (ifseqformula "27"))
                        (rule "applyEq" (formula "28") (term "1,0,1,1") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "notLeft" (formula "28"))
                        (rule "inEqSimp_leqRight" (formula "34"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "commute_and" (formula "33") (term "1"))
                        (rule "arrayLengthIsAShort" (formula "30") (term "0,0,1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "arrayLengthNotNegative" (formula "30") (term "0,0,1"))
                        (rule "arrayLengthNotNegative" (formula "31") (term "1,0,1,1"))
                        (rule "arrayLengthIsAShort" (formula "32") (term "1,0,1,1"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "equiv_left" (formula "29"))
                        (branch "Case 1"
                           (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                           (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "30"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "30"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "30"))
                           (rule "applyEq" (formula "33") (term "1,0,1,1") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "notLeft" (formula "33"))
                           (rule "inEqSimp_leqRight" (formula "36"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "applyEq_and_gen2" (formula "35") (term "1"))
                           (rule "ex_pull_out3" (formula "1") (term "1,0"))
                           (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                           (rule "commute_or" (formula "1") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                           (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                           (rule "ex_pull_out3" (formula "1") (term "0"))
                           (rule "cnf_rightDist" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "1") (term "1,0,0"))
                           (rule "commute_or" (formula "1") (term "0,1,0,0"))
                           (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                           (rule "commute_or_2" (formula "1") (term "1,0,0,0"))
                           (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
                           (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                           (rule "equiv_left" (formula "34"))
                           (branch "Case 1"
                              (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "allRight" (formula "37") (inst "sk=j_73"))
                              (rule "orRight" (formula "37"))
                              (rule "orRight" (formula "37"))
                              (rule "replace_known_left" (formula "36") (term "0,0,1") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "notLeft" (formula "36"))
                              (rule "inEqSimp_leqRight" (formula "37"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "38"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "38"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "applyEqRigid" (formula "4") (term "1,1,0,0,0,0,0,0") (ifseqformula "38"))
                              (rule "applyEqRigid" (formula "4") (term "1,1,0,0,1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "38"))
                              (rule "applyEqRigid" (formula "4") (term "1,1,0,0,1,0,0,0") (ifseqformula "38"))
                              (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "38"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "commute_and_2" (formula "3") (term "0,0"))
                              (rule "arrayLengthIsAShort" (formula "29") (term "0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                              (rule "allLeft" (formula "20") (inst "t=j_73"))
                              (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "20") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "20") (term "0,0"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "commute_and" (formula "3") (term "0,0,0"))
                              (rule "allLeft" (formula "21") (inst "t=i_4"))
                              (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "25"))
                              (rule "qeq_literals" (formula "21") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "cut_direct" (formula "21") (term "0"))
                              (branch "CUT: res_min ≤ i_4 TRUE"
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "21"))
                                 (rule "times_zero_1" (formula "31") (term "0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "21"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "3") (term "0,0"))
                                 (rule "add_zero_left" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "27") (term "0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "allLeft" (formula "29") (inst "t=j_73"))
                                 (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "22"))
                                 (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_contradInEq0" (formula "29") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                 (rule "leq_literals" (formula "29") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "29") (term "0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "closeFalse" (formula "29"))
                              )
                              (branch "CUT: res_min ≤ i_4 FALSE"
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_leqRight" (formula "41"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "22"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "allLeft" (formula "4") (inst "t=i_4"))
                                 (rule "exLeft" (formula "4") (inst "sk=j_74"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "6") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "29"))
                                 (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "5") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "4") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "6") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "5") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                 (rule "leq_literals" (formula "4") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "notLeft" (formula "4"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "28"))
                                 (rule "qeq_literals" (formula "4") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "28"))
                                 (rule "qeq_literals" (formula "5") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                 (rule "times_zero_1" (formula "4") (term "0,0"))
                                 (rule "add_zero_left" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "29") (term "0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "allLeft" (formula "31") (inst "t=j_74"))
                                 (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "31") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "31") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "applyEq" (formula "45") (term "0") (ifseqformula "31"))
                                 (rule "allLeft" (formula "26") (inst "t=j_74"))
                                 (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "26") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "26"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "1"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0"))
                                 (rule "add_zero_right" (formula "7") (term "0"))
                                 (rule "leq_literals" (formula "7"))
                                 (rule "closeFalse" (formula "7"))
                              )
                           )
                           (branch "Case 2"
                              (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "false_right" (formula "37"))
                              (rule "replace_known_right" (formula "34") (term "0,0,1") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "inEqSimp_geqRight" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "35"))
                              (rule "applyEq" (formula "32") (term "0") (ifseqformula "35"))
                              (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                              (rule "add_literals" (formula "36") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "36") (term "1,0,0"))
                              (rule "add_zero_right" (formula "36") (term "0,0"))
                              (rule "qeq_literals" (formula "36") (term "0"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "false_right" (formula "36"))
                              (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                              (rule "polySimp_elimOne" (formula "30") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "20"))
                              (rule "andLeft" (formula "30"))
                              (rule "inEqSimp_homoInEq1" (formula "30"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                              (rule "add_literals" (formula "30") (term "1,1,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0"))
                              (rule "add_zero_right" (formula "30") (term "0"))
                              (rule "leq_literals" (formula "30"))
                              (rule "closeFalse" (formula "30"))
                           )
                        )
                        (branch "Case 2"
                           (rule "inEqSimp_geqRight" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "andLeft" (formula "32"))
                           (rule "notLeft" (formula "33"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "32"))
                           (rule "applyEq" (formula "36") (term "0") (ifseqformula "32"))
                           (rule "eqSymm" (formula "36"))
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "32"))
                           (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "32"))
                           (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "32"))
                           (rule "eqSymm" (formula "35") (term "1,1"))
                           (rule "applyEq" (formula "35") (term "0,0,0,1") (ifseqformula "32"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "32"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                           (rule "add_literals" (formula "36") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0"))
                           (rule "leq_literals" (formula "36") (term "0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "false_right" (formula "36"))
                           (rule "ex_pull_out3" (formula "2") (term "1,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
                           (rule "commute_or" (formula "2") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,1,0"))
                           (rule "commute_or" (formula "2") (term "1,0,0,1,0"))
                           (rule "ex_pull_out3" (formula "2") (term "0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0"))
                           (rule "commute_or_2" (formula "2") (term "1,0,0"))
                           (rule "commute_or" (formula "2") (term "0,1,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,0"))
                           (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                           (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
                           (rule "commute_or" (formula "2") (term "0,1,0,0,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0"))
                           (rule "equiv_left" (formula "34"))
                           (branch "Case 1"
                              (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "allRight" (formula "37") (inst "sk=j_71"))
                              (rule "orRight" (formula "37"))
                              (rule "orRight" (formula "37"))
                              (rule "inEqSimp_geqRight" (formula "38"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "38"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "4") (term "1,1,0,0,1,0,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "38") (term "0,1,1") (ifseqformula "37"))
                              (rule "eqSymm" (formula "38") (term "1,1"))
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "notLeft" (formula "38"))
                              (rule "inEqSimp_leqRight" (formula "38"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "5") (term "1,1,0,0,1,0,0,0") (ifseqformula "38"))
                              (rule "applyEqRigid" (formula "5") (term "1,1,0,0,0,0,0,0") (ifseqformula "38"))
                              (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "38"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "arrayLengthIsAShort" (formula "30") (term "0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "arrayLengthNotNegative" (formula "30") (term "0"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                              (rule "commute_and" (formula "4") (term "0,0,0"))
                              (rule "allLeft" (formula "21") (inst "t=j_71"))
                              (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "21") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "21") (term "0,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "allLeft" (formula "22") (inst "t=i_4"))
                              (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "26"))
                              (rule "qeq_literals" (formula "22") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "cut_direct" (formula "22") (term "0"))
                              (branch "CUT: res_min ≤ i_4 TRUE"
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "22"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "23"))
                                 (rule "times_zero_1" (formula "33") (term "0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "28") (term "0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "allLeft" (formula "30") (inst "t=j_71"))
                                 (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "23"))
                                 (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "30") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "30"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0"))
                                 (rule "add_literals" (formula "3") (term "0"))
                                 (rule "leq_literals" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch "CUT: res_min ≤ i_4 FALSE"
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_leqRight" (formula "41"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "23"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "allLeft" (formula "5") (inst "t=i_4"))
                                 (rule "exLeft" (formula "5") (inst "sk=j_72"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "32"))
                                 (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "7") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "32"))
                                 (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "6") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "32"))
                                 (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "5") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "30"))
                                 (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "6") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "30"))
                                 (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                 (rule "leq_literals" (formula "7") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "30"))
                                 (rule "qeq_literals" (formula "6") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                 (rule "leq_literals" (formula "5") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "notLeft" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                 (rule "times_zero_1" (formula "5") (term "0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "30") (term "0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "true_left" (formula "30"))
                                 (rule "allLeft" (formula "32") (inst "t=j_72"))
                                 (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                 (rule "leq_literals" (formula "32") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "applyEq" (formula "45") (term "0") (ifseqformula "32"))
                                 (rule "allLeft" (formula "27") (inst "t=j_72"))
                                 (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "27") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "27"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "8"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "false_right" (formula "37"))
                              (rule "inEqSimp_geqRight" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "andLeft" (formula "35"))
                              (rule "notLeft" (formula "35"))
                              (rule "applyEq" (formula "37") (term "0") (ifseqformula "35"))
                              (rule "applyEq" (formula "3") (term "1,1,0,0,1,0,0,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "3") (term "1,1,0,0,0,0,0,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "3") (term "1,1,0,0,1,0,0") (ifseqformula "35"))
                              (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "35"))
                              (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                              (rule "add_literals" (formula "36") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "36") (term "1,0,0"))
                              (rule "add_zero_right" (formula "36") (term "0,0"))
                              (rule "qeq_literals" (formula "36") (term "0"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "false_right" (formula "36"))
                              (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                              (rule "mul_literals" (formula "24") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1"))
                              (rule "mul_literals" (formula "24") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "32") (term "0,0"))
                              (rule "add_zero_left" (formula "32") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                              (rule "mul_literals" (formula "32") (term "1"))
                              (rule "arrayLengthNotNegative" (formula "30") (term "0"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                              (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "33"))
                              (rule "leq_literals" (formula "30") (term "0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "arrayLengthIsAShort" (formula "30") (term "0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "commute_and" (formula "3") (term "0,0,0"))
                              (rule "allLeft" (formula "20") (inst "t=i_4"))
                              (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "20") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "24"))
                              (rule "qeq_literals" (formula "20") (term "0,0"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "20"))
                              (rule "allLeft" (formula "3") (inst "t=i_4"))
                              (rule "exLeft" (formula "3") (inst "sk=j_70"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "27"))
                              (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0,0") (ifseqformula "27"))
                              (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                              (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "30"))
                              (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "4") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "30"))
                              (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "5") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "30"))
                              (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "3") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0,0"))
                              (rule "leq_literals" (formula "4") (term "0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,0"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "notLeft" (formula "3"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "26"))
                              (rule "qeq_literals" (formula "4") (term "0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "3") (term "0,0"))
                              (rule "add_zero_left" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "3"))
                              (rule "leq_literals" (formula "27") (term "0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "allLeft" (formula "30") (inst "t=j_70"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "30") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "applyEq" (formula "42") (term "0") (ifseqformula "30"))
                              (rule "allLeft" (formula "24") (inst "t=j_70"))
                              (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "43"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "24"))
                              (rule "mul_literals" (formula "37") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                              (rule "mul_literals" (formula "37") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "37"))
                              (rule "leq_literals" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "23"))
                              (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                              (rule "mul_literals" (formula "27") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1"))
                              (rule "polySimp_rightDist" (formula "27") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                              (rule "mul_literals" (formula "27") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                              (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "4"))
                              (rule "andLeft" (formula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                              (rule "add_literals" (formula "27") (term "1,1,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0"))
                              (rule "add_literals" (formula "27") (term "0"))
                              (rule "leq_literals" (formula "27"))
                              (rule "closeFalse" (formula "27"))
                           )
                        )
                     )
                  )
                  (branch " ∀ int j; (j ≤ -1 ∨ j ≥ res_min_0 ∨ c[j] = b[j]) ∧ c.length ≥ b.length"
                     (rule "andLeft" (formula "20"))
                     (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "applyEq" (formula "21") (term "1") (ifseqformula "27"))
                     (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "27"))
                     (rule "inEqSimp_commuteGeq" (formula "18") (term "1,1"))
                     (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "27"))
                     (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                     (rule "applyEq" (formula "25") (term "0,0,1,1") (ifseqformula "27"))
                     (rule "eqSymm" (formula "25") (term "0,1,1"))
                     (rule "applyEq" (formula "25") (term "0,0,1") (ifseqformula "27"))
                     (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "27"))
                     (rule "inEqSimp_commuteGeq" (formula "24") (term "0"))
                     (rule "applyEq" (formula "28") (term "1,0,1,1") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "notLeft" (formula "28"))
                     (rule "inEqSimp_leqRight" (formula "31"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "arrayLengthIsAShort" (formula "30") (term "0,0,1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "true_left" (formula "30"))
                     (rule "arrayLengthNotNegative" (formula "30") (term "0,0,1"))
                     (rule "arrayLengthIsAShort" (formula "31") (term "1,0,1,1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "true_left" (formula "31"))
                     (rule "arrayLengthNotNegative" (formula "31") (term "1,0,1,1"))
                     (rule "orLeft" (formula "18"))
                     (branch "∃ int i; ( i ≥ 0 ∧ i ≤ -1 + res_min ∧ ( b[i] ≥ 1 + a[i] ∧ ∀ int j; (j ≤ -1 ∨ j ≥ i ∨ b[j] = a[j])))"
                        (rule "exLeft" (formula "18") (inst "sk=i_3"))
                        (rule "andLeft" (formula "18"))
                        (rule "andLeft" (formula "19"))
                        (rule "andLeft" (formula "18"))
                        (rule "inEqSimp_homoInEq0" (formula "19"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1"))
                        (rule "mul_literals" (formula "19") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                        (rule "equiv_left" (formula "32"))
                        (branch "Case 1"
                           (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "allRight" (formula "37") (inst "sk=j_58"))
                           (rule "orRight" (formula "37"))
                           (rule "orRight" (formula "37"))
                           (rule "inEqSimp_leqRight" (formula "37"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "38"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "applyEq" (formula "34") (term "1") (ifseqformula "35"))
                           (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "35"))
                           (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "35"))
                           (rule "applyEq" (formula "30") (term "0,0,1,1") (ifseqformula "35"))
                           (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "35"))
                           (rule "applyEq" (formula "37") (term "0") (ifseqformula "35"))
                           (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "35"))
                           (rule "applyEq" (formula "38") (term "1,0,1,1") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "notLeft" (formula "38"))
                           (rule "inEqSimp_leqRight" (formula "38"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "ex_pull_out3" (formula "3") (term "1,0"))
                           (rule "cnf_rightDist" (formula "3") (term "0,1,0"))
                           (rule "commute_or" (formula "3") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "3") (term "0,0,1,0"))
                           (rule "commute_or" (formula "3") (term "1,0,0,1,0"))
                           (rule "ex_pull_out3" (formula "3") (term "0"))
                           (rule "cnf_rightDist" (formula "3") (term "0,0"))
                           (rule "commute_or_2" (formula "3") (term "1,0,0"))
                           (rule "commute_or" (formula "3") (term "0,1,0,0"))
                           (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
                           (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                           (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                           (rule "commute_or" (formula "3") (term "0,1,0,0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0"))
                           (rule "arrayLengthNotNegative" (formula "32") (term "0"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                           (rule "arrayLengthIsAShort" (formula "33") (term "0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "equiv_left" (formula "29"))
                           (branch "Case 1"
                              (rule "applyEq" (formula "3") (term "1,1,0,0,0,0,0,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                              (rule "inEqSimp_homoInEq1" (formula "31") (term "0"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "30"))
                              (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "30"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                              (rule "inEqSimp_commuteLeq" (formula "29"))
                              (rule "applyEq" (formula "3") (term "1,1,0,0,1,0,0") (ifseqformula "30"))
                              (rule "applyEqRigid" (formula "31") (term "0,0,1,1") (ifseqformula "30"))
                              (rule "eqSymm" (formula "31") (term "0,1,1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "notLeft" (formula "31"))
                              (rule "inEqSimp_leqRight" (formula "39"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "31"))
                              (rule "applyEqRigid" (formula "4") (term "1,1,0,0,1,0,0,0") (ifseqformula "31"))
                              (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "31"))
                              (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "31"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "commute_and" (formula "3") (term "0,0,0"))
                              (rule "allLeft" (formula "23") (inst "t=j_58"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "23") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "cut_direct" (formula "23") (term "0"))
                              (branch "CUT: j_58 ≥ i_3 TRUE"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "allLeft" (formula "26") (inst "t=i_3"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "20"))
                                 (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "cut_direct" (formula "26") (term "0"))
                                 (branch "CUT: res_min_0 ≤ i_3 TRUE"
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "26"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "21"))
                                    (rule "andLeft" (formula "31"))
                                    (rule "inEqSimp_homoInEq1" (formula "31"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0"))
                                    (rule "add_literals" (formula "31") (term "0"))
                                    (rule "leq_literals" (formula "31"))
                                    (rule "closeFalse" (formula "31"))
                                 )
                                 (branch "CUT: res_min_0 ≤ i_3 FALSE"
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_leqRight" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "allLeft" (formula "28") (inst "t=j_58"))
                                    (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "cut_direct" (formula "28") (term "0"))
                                    (branch "CUT: res_min_0 ≤ j_58 TRUE"
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "28"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "2"))
                                       (rule "andLeft" (formula "33"))
                                       (rule "inEqSimp_homoInEq1" (formula "33"))
                                       (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0"))
                                       (rule "add_literals" (formula "33") (term "0"))
                                       (rule "leq_literals" (formula "33"))
                                       (rule "closeFalse" (formula "33"))
                                    )
                                    (branch "CUT: res_min_0 ≤ j_58 FALSE"
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_leqRight" (formula "43"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "applyEq" (formula "44") (term "0") (ifseqformula "29"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "allLeft" (formula "5") (inst "t=i_3"))
                                       (rule "exLeft" (formula "5") (inst "sk=j_68"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                       (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "31"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "25"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "25"))
                                       (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "26"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "27"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "27"))
                                       (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "7") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "27"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "6") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "26"))
                                       (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                       (rule "leq_literals" (formula "7") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "26"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "notLeft" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "24"))
                                       (rule "qeq_literals" (formula "5") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                       (rule "mul_literals" (formula "5") (term "0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "25") (term "0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "allLeft" (formula "28") (inst "t=j_68"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                       (rule "leq_literals" (formula "28") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "allLeft" (formula "8") (inst "t=j_58"))
                                       (rule "exLeft" (formula "8") (inst "sk=j_69"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                       (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "35"))
                                       (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "10") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "8") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "9") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "commute_or" (formula "9"))
                                       (rule "commute_or" (formula "10"))
                                       (rule "cut_direct" (formula "8") (term "0"))
                                       (branch "CUT: b[j_58] ≤ a[j_58] TRUE"
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "inEqSimp_strengthen0" (formula "8") (ifseqformula "49"))
                                          (rule "inEqSimp_contradEq3" (formula "49") (ifseqformula "8"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                                          (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "49") (term "0,0"))
                                          (rule "qeq_literals" (formula "49") (term "0"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "false_right" (formula "49"))
                                          (rule "allLeft" (formula "34") (inst "t=j_68"))
                                          (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                                          (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "29"))
                                          (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "34") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "34"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "2"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0"))
                                          (rule "add_literals" (formula "8") (term "0"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "closeFalse" (formula "8"))
                                       )
                                       (branch "CUT: b[j_58] ≤ a[j_58] FALSE"
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "notLeft" (formula "8"))
                                          (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_leqRight" (formula "50"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                                          (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "52") (term "0,0"))
                                          (rule "leq_literals" (formula "52") (term "0"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "false_right" (formula "52"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                          (rule "times_zero_1" (formula "9") (term "0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "allLeft" (formula "36") (inst "t=j_68"))
                                          (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                                          (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "31"))
                                          (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "36") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "36"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "37"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "4"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0"))
                                          (rule "leq_literals" (formula "9"))
                                          (rule "closeFalse" (formula "9"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: j_58 ≥ i_3 FALSE"
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_geqRight" (formula "40"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "3") (term "0,0"))
                                 (rule "add_zero_left" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "22") (term "0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "allLeft" (formula "27") (inst "t=i_3"))
                                 (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "cut_direct" (formula "27") (term "0"))
                                 (branch "CUT: res_min_0 ≤ i_3 TRUE"
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "27"))
                                    (rule "times_zero_1" (formula "35") (term "0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "35") (term "0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "27"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "32"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "inEqSimp_homoInEq1" (formula "22"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0"))
                                    (rule "add_literals" (formula "22") (term "0"))
                                    (rule "leq_literals" (formula "22"))
                                    (rule "closeFalse" (formula "22"))
                                 )
                                 (branch "CUT: res_min_0 ≤ i_3 FALSE"
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_leqRight" (formula "42"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "allLeft" (formula "29") (inst "t=j_58"))
                                    (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                    (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "25"))
                                    (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "29") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "29"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "3"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "inEqSimp_leqRight" (formula "38"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "notLeft" (formula "31"))
                              (rule "applyEqRigid" (formula "26") (term "1,1,0,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "27") (term "1") (ifseqformula "30"))
                              (rule "applyEq" (formula "32") (term "0") (ifseqformula "30"))
                              (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "30"))
                              (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "30"))
                              (rule "applyEqRigid" (formula "33") (term "1") (ifseqformula "30"))
                              (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "30"))
                              (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                              (rule "add_literals" (formula "39") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "39") (term "1,0,0"))
                              (rule "add_zero_right" (formula "39") (term "0,0"))
                              (rule "leq_literals" (formula "39") (term "0"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "false_right" (formula "39"))
                              (rule "commute_and" (formula "4") (term "0,0,0"))
                              (rule "allLeft" (formula "26") (inst "t=i_3"))
                              (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "22"))
                              (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                              (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "26") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "21"))
                              (rule "qeq_literals" (formula "26") (term "0,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "allLeft" (formula "24") (inst "t=j_58"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "24") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "cut_direct" (formula "24") (term "0"))
                              (branch "CUT: j_58 ≥ i_3 TRUE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "allLeft" (formula "28") (inst "t=j_58"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "cut_direct" (formula "28") (term "0"))
                                 (branch "CUT: res_min ≤ j_58 TRUE"
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "28"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1"))
                                    (rule "mul_literals" (formula "22") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "22"))
                                    (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0"))
                                    (rule "qeq_literals" (formula "25") (term "0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "28"))
                                    (rule "times_zero_1" (formula "35") (term "0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0"))
                                    (rule "allLeft" (formula "4") (inst "t=j_58"))
                                    (rule "exLeft" (formula "4") (inst "sk=j_63"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "4") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "commute_or" (formula "5"))
                                    (rule "commute_or" (formula "6"))
                                    (rule "cut_direct" (formula "4") (term "0"))
                                    (branch "CUT: c[j_58] ≤ a[j_58] TRUE"
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "43"))
                                       (rule "inEqSimp_contradEq3" (formula "43") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                       (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0"))
                                       (rule "qeq_literals" (formula "43") (term "0"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "false_right" (formula "43"))
                                       (rule "allLeft" (formula "5") (inst "t=i_3"))
                                       (rule "exLeft" (formula "5") (inst "sk=j_67"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                       (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "31"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "25"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "25"))
                                       (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "25"))
                                       (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "6") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "7") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "commute_or" (formula "6"))
                                       (rule "commute_or" (formula "7"))
                                       (rule "cut_direct" (formula "5") (term "0"))
                                       (branch "CUT: res_min_1 ≤ i_3 TRUE"
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "2"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0"))
                                          (rule "add_zero_right" (formula "25") (term "0"))
                                          (rule "leq_literals" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                       (branch "CUT: res_min_1 ≤ i_3 FALSE"
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "notLeft" (formula "5"))
                                          (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "46"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "46"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_leqRight" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                          (rule "times_zero_1" (formula "6") (term "0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "26") (term "0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "allLeft" (formula "29") (inst "t=j_67"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq0" (formula "29") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                          (rule "leq_literals" (formula "29") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "allLeft" (formula "34") (inst "t=j_67"))
                                          (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                                          (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "29"))
                                          (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "34") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "34"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1"))
                                          (rule "mul_literals" (formula "27") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "8"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_literals" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                    (branch "CUT: c[j_58] ≤ a[j_58] FALSE"
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_leqRight" (formula "45"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "46") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                                       (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "46") (term "0,0"))
                                       (rule "leq_literals" (formula "46") (term "0"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "false_right" (formula "46"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                       (rule "times_zero_1" (formula "5") (term "0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "allLeft" (formula "7") (inst "t=i_3"))
                                       (rule "exLeft" (formula "7") (inst "sk=j_64"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                       (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "33"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "27"))
                                       (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "27"))
                                       (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "27"))
                                       (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "9") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "7") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "8") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "commute_or" (formula "9"))
                                       (rule "commute_or" (formula "8"))
                                       (rule "cut_direct" (formula "7") (term "0"))
                                       (branch "CUT: res_min_1 ≤ i_3 TRUE"
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "7"))
                                          (rule "times_zero_1" (formula "45") (term "0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "28"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_literals" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: res_min_1 ≤ i_3 FALSE"
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "notLeft" (formula "7"))
                                          (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_leqRight" (formula "48"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                          (rule "times_zero_1" (formula "8") (term "0,0"))
                                          (rule "add_zero_left" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "allLeft" (formula "31") (inst "t=j_64"))
                                          (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                          (rule "leq_literals" (formula "31") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "allLeft" (formula "32") (inst "t=j_63"))
                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "allLeft" (formula "37") (inst "t=j_63"))
                                          (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "cut_direct" (formula "32") (term "0"))
                                          (branch "CUT: j_63 ≥ i_3 TRUE"
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "7"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                             (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                             (rule "mul_literals" (formula "32") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                             (rule "cut_direct" (formula "37") (term "0"))
                                             (branch "CUT: res_min ≤ j_63 TRUE"
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "37"))
                                                (rule "times_zero_1" (formula "44") (term "0,0"))
                                                (rule "add_zero_left" (formula "44") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "37"))
                                                (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                (rule "mul_literals" (formula "29") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "29"))
                                                (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "33") (term "0,0"))
                                                (rule "qeq_literals" (formula "33") (term "0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "7"))
                                                (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                (rule "mul_literals" (formula "29") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "29"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0"))
                                                (rule "qeq_literals" (formula "28") (term "0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "allLeft" (formula "11") (inst "t=j_63"))
                                                (rule "exLeft" (formula "11") (inst "sk=j_66"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "commute_or_2" (formula "12"))
                                                (rule "commute_or_2" (formula "13"))
                                                (rule "commute_or" (formula "12") (term "0"))
                                                (rule "commute_or" (formula "13") (term "0"))
                                                (rule "cut_direct" (formula "11") (term "0,0"))
                                                (branch "CUT: res_min_1 ≤ j_63 TRUE"
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "39") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                                   (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0"))
                                                   (rule "qeq_literals" (formula "39") (term "0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "12"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "mul_literals" (formula "5") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "5"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0"))
                                                   (rule "leq_literals" (formula "9"))
                                                   (rule "closeFalse" (formula "9"))
                                                )
                                                (branch "CUT: res_min_1 ≤ j_63 FALSE"
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "inEqSimp_leqRight" (formula "54"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "allLeft" (formula "42") (inst "t=j_64"))
                                                   (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                   (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "36"))
                                                   (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "10"))
                                                   (rule "qeq_literals" (formula "42") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "42"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                   (rule "mul_literals" (formula "34") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "34"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0"))
                                                   (rule "add_zero_right" (formula "11") (term "0"))
                                                   (rule "leq_literals" (formula "11"))
                                                   (rule "closeFalse" (formula "11"))
                                                )
                                             )
                                             (branch "CUT: res_min ≤ j_63 FALSE"
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_leqRight" (formula "51"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "applyEq" (formula "53") (term "0") (ifseqformula "38"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "37"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "allLeft" (formula "12") (inst "t=j_63"))
                                                (rule "exLeft" (formula "12") (inst "sk=j_65"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                                (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "41"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0,0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "commute_or_2" (formula "13"))
                                                (rule "commute_or_2" (formula "14"))
                                                (rule "commute_or" (formula "13") (term "0"))
                                                (rule "commute_or" (formula "14") (term "0"))
                                                (rule "cut_direct" (formula "12") (term "0,0"))
                                                (branch "CUT: res_min_1 ≤ j_63 TRUE"
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "12"))
                                                   (rule "times_zero_1" (formula "52") (term "0,0"))
                                                   (rule "add_zero_left" (formula "52") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "12"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch "CUT: res_min_1 ≤ j_63 FALSE"
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_leqRight" (formula "55"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "cut_direct" (formula "13") (term "0"))
                                                   (branch "CUT: b[j_63] ≤ a[j_63] TRUE"
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_strengthen0" (formula "13") (ifseqformula "55"))
                                                      (rule "inEqSimp_contradEq3" (formula "55") (ifseqformula "13"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0"))
                                                      (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "55") (term "0,0"))
                                                      (rule "qeq_literals" (formula "55") (term "0"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "false_right" (formula "55"))
                                                      (rule "allLeft" (formula "41") (inst "t=j_64"))
                                                      (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                                                      (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "34"))
                                                      (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "41") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "41"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                      (rule "mul_literals" (formula "32") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "32"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                      (rule "add_literals" (formula "12") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "12") (term "1,0"))
                                                      (rule "add_literals" (formula "12") (term "0"))
                                                      (rule "leq_literals" (formula "12"))
                                                      (rule "closeFalse" (formula "12"))
                                                   )
                                                   (branch "CUT: b[j_63] ≤ a[j_63] FALSE"
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "notLeft" (formula "13"))
                                                      (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_leqRight" (formula "56"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                                      (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "58") (term "0,0"))
                                                      (rule "leq_literals" (formula "58") (term "0"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                                      (rule "times_zero_1" (formula "14") (term "0,0"))
                                                      (rule "add_zero_left" (formula "14") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "14"))
                                                      (rule "leq_literals" (formula "9") (term "0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "9"))
                                                      (rule "mul_literals" (formula "13") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                      (rule "add_literals" (formula "13") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                      (rule "mul_literals" (formula "13") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "13"))
                                                      (rule "leq_literals" (formula "8") (term "0"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "allLeft" (formula "43") (inst "t=j_64"))
                                                      (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0"))
                                                      (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "36"))
                                                      (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "43") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "43"))
                                                      (rule "mul_literals" (formula "50") (term "0,0"))
                                                      (rule "add_zero_left" (formula "50") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "43"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                      (rule "mul_literals" (formula "34") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "34"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0"))
                                                      (rule "add_zero_right" (formula "11") (term "0"))
                                                      (rule "leq_literals" (formula "11"))
                                                      (rule "closeFalse" (formula "11"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: j_63 ≥ i_3 FALSE"
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_geqRight" (formula "51"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "33"))
                                             (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "38"))
                                             (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1"))
                                             (rule "mul_literals" (formula "30") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "1"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "inEqSimp_homoInEq1" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0"))
                                             (rule "add_zero_right" (formula "30") (term "0"))
                                             (rule "leq_literals" (formula "30"))
                                             (rule "closeFalse" (formula "30"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: res_min ≤ j_58 FALSE"
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_leqRight" (formula "42"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "applyEq" (formula "43") (term "0") (ifseqformula "29"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "allLeft" (formula "5") (inst "t=j_58"))
                                    (rule "exLeft" (formula "5") (inst "sk=j_59"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                                    (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "32"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "7") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "5") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "commute_or" (formula "6"))
                                    (rule "commute_or" (formula "7"))
                                    (rule "cut_direct" (formula "5") (term "0"))
                                    (branch "CUT: b[j_58] ≤ a[j_58] TRUE"
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "44"))
                                       (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "5"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                       (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0"))
                                       (rule "qeq_literals" (formula "44") (term "0"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "false_right" (formula "44"))
                                       (rule "allLeft" (formula "6") (inst "t=i_3"))
                                       (rule "exLeft" (formula "6") (inst "sk=j_62"))
                                       (rule "andLeft" (formula "6"))
                                       (rule "andLeft" (formula "6"))
                                       (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                       (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "32"))
                                       (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "32"))
                                       (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "32"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "26"))
                                       (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0,0") (ifseqformula "26"))
                                       (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "26"))
                                       (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "8") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "6") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "7") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "commute_or" (formula "8"))
                                       (rule "commute_or" (formula "7"))
                                       (rule "cut_direct" (formula "6") (term "0"))
                                       (branch "CUT: res_min_1 ≤ i_3 TRUE"
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "6"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "28"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "CUT: res_min_1 ≤ i_3 FALSE"
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "notLeft" (formula "6"))
                                          (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_leqRight" (formula "47"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                          (rule "times_zero_1" (formula "7") (term "0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "7"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "allLeft" (formula "30") (inst "t=j_62"))
                                          (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "30") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "30") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "allLeft" (formula "35") (inst "t=j_62"))
                                          (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
                                          (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "30"))
                                          (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "35") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "35"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "36"))
                                          (rule "times_zero_1" (formula "43") (term "0,0"))
                                          (rule "add_zero_left" (formula "43") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "36"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1"))
                                          (rule "mul_literals" (formula "28") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "10"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0"))
                                          (rule "add_literals" (formula "28") (term "0"))
                                          (rule "leq_literals" (formula "28"))
                                          (rule "closeFalse" (formula "28"))
                                       )
                                    )
                                    (branch "CUT: b[j_58] ≤ a[j_58] FALSE"
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "notLeft" (formula "5"))
                                       (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_leqRight" (formula "46"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                       (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "47") (term "0,0"))
                                       (rule "leq_literals" (formula "47") (term "0"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "false_right" (formula "47"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                       (rule "times_zero_1" (formula "6") (term "0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "allLeft" (formula "8") (inst "t=i_3"))
                                       (rule "exLeft" (formula "8") (inst "sk=j_60"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                       (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "34"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "28"))
                                       (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "9") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "10") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "8") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "28"))
                                       (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "28"))
                                       (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "commute_or" (formula "10"))
                                       (rule "commute_or" (formula "9"))
                                       (rule "cut_direct" (formula "8") (term "0"))
                                       (branch "CUT: res_min_1 ≤ i_3 TRUE"
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "8"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "4"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "inEqSimp_homoInEq1" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                          (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0"))
                                          (rule "add_literals" (formula "30") (term "0"))
                                          (rule "leq_literals" (formula "30"))
                                          (rule "closeFalse" (formula "30"))
                                       )
                                       (branch "CUT: res_min_1 ≤ i_3 FALSE"
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "notLeft" (formula "8"))
                                          (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_leqRight" (formula "49"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                          (rule "times_zero_1" (formula "9") (term "0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "29") (term "0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "allLeft" (formula "32") (inst "t=j_60"))
                                          (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "32") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "32") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "allLeft" (formula "37") (inst "t=j_59"))
                                          (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "allLeft" (formula "33") (inst "t=j_59"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "cut_direct" (formula "38") (term "0"))
                                          (branch "CUT: res_min ≤ j_59 TRUE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "38"))
                                             (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1"))
                                             (rule "mul_literals" (formula "29") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "34") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "34") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "38"))
                                             (rule "times_zero_1" (formula "45") (term "0,0"))
                                             (rule "add_zero_left" (formula "45") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "38"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "3"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                             (rule "add_literals" (formula "9") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0"))
                                             (rule "add_zero_right" (formula "9") (term "0"))
                                             (rule "leq_literals" (formula "9"))
                                             (rule "closeFalse" (formula "9"))
                                          )
                                          (branch "CUT: res_min ≤ j_59 FALSE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_leqRight" (formula "52"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "applyEq" (formula "54") (term "0") (ifseqformula "39"))
                                             (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "9"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                             (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                             (rule "mul_literals" (formula "34") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "34"))
                                             (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0"))
                                             (rule "qeq_literals" (formula "32") (term "0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "allLeft" (formula "13") (inst "t=j_59"))
                                             (rule "exLeft" (formula "13") (inst "sk=j_61"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0"))
                                             (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "42"))
                                             (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "13") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "commute_or_2" (formula "15"))
                                             (rule "commute_or_2" (formula "14"))
                                             (rule "commute_or" (formula "15") (term "0"))
                                             (rule "commute_or" (formula "14") (term "0"))
                                             (rule "cut_direct" (formula "13") (term "0,0"))
                                             (branch "CUT: res_min_1 ≤ j_59 TRUE"
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "13"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "13"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "5"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "CUT: res_min_1 ≤ j_59 FALSE"
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "inEqSimp_leqRight" (formula "56"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "cut_direct" (formula "14") (term "0"))
                                                (branch "CUT: b[j_59] ≤ a[j_59] TRUE"
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "14"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "14"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "inEqSimp_strengthen0" (formula "14") (ifseqformula "56"))
                                                   (rule "inEqSimp_contradEq3" (formula "56") (ifseqformula "14"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                                                   (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0"))
                                                   (rule "qeq_literals" (formula "56") (term "0"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "false_right" (formula "56"))
                                                   (rule "allLeft" (formula "42") (inst "t=j_60"))
                                                   (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                   (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "34"))
                                                   (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "42") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "42"))
                                                   (rule "times_zero_1" (formula "49") (term "0,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "42"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "mul_literals" (formula "5") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "43"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1"))
                                                   (rule "mul_literals" (formula "33") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "33"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0"))
                                                   (rule "add_literals" (formula "14") (term "0"))
                                                   (rule "leq_literals" (formula "14"))
                                                   (rule "closeFalse" (formula "14"))
                                                )
                                                (branch "CUT: b[j_59] ≤ a[j_59] FALSE"
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "notLeft" (formula "14"))
                                                   (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_leqRight" (formula "57"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                                   (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "59") (term "0,0"))
                                                   (rule "leq_literals" (formula "59") (term "0"))
                                                   (builtin "One Step Simplification" (formula "59"))
                                                   (rule "false_right" (formula "59"))
                                                   (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                   (rule "times_zero_1" (formula "15") (term "0,0"))
                                                   (rule "add_zero_left" (formula "15") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                   (rule "mul_literals" (formula "15") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "15"))
                                                   (rule "leq_literals" (formula "10") (term "0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "10"))
                                                   (rule "mul_literals" (formula "14") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                   (rule "add_literals" (formula "14") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                   (rule "mul_literals" (formula "14") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "14"))
                                                   (rule "leq_literals" (formula "9") (term "0"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "allLeft" (formula "44") (inst "t=j_60"))
                                                   (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0"))
                                                   (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "36"))
                                                   (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "44") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "44"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "45"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                   (rule "mul_literals" (formula "7") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "46"))
                                                   (rule "mul_literals" (formula "53") (term "0,0"))
                                                   (rule "add_zero_left" (formula "53") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "46"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                                   (rule "mul_literals" (formula "36") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "36") (ifseqformula "14"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0"))
                                                   (rule "leq_literals" (formula "36"))
                                                   (rule "closeFalse" (formula "36"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: j_58 ≥ i_3 FALSE"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_geqRight" (formula "41"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "4") (term "0,0"))
                                 (rule "add_zero_left" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "23") (term "0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "allLeft" (formula "29") (inst "t=j_58"))
                                 (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                 (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "25"))
                                 (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "29") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "29"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1"))
                                 (rule "mul_literals" (formula "23") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "1"))
                                 (rule "andLeft" (formula "23"))
                                 (rule "inEqSimp_homoInEq1" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0"))
                                 (rule "add_literals" (formula "23") (term "0"))
                                 (rule "leq_literals" (formula "23"))
                                 (rule "closeFalse" (formula "23"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "false_right" (formula "37"))
                           (rule "inEqSimp_geqRight" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "andLeft" (formula "35"))
                           (rule "notLeft" (formula "36"))
                           (rule "applyEq" (formula "36") (term "0") (ifseqformula "35"))
                           (rule "eqSymm" (formula "36"))
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "35"))
                           (rule "applyEq" (formula "33") (term "0") (ifseqformula "35"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                           (rule "add_literals" (formula "36") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0"))
                           (rule "leq_literals" (formula "36") (term "0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "false_right" (formula "36"))
                           (rule "ex_pull_out3" (formula "2") (term "1,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
                           (rule "commute_or" (formula "2") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,1,0"))
                           (rule "commute_or" (formula "2") (term "1,0,0,1,0"))
                           (rule "equiv_left" (formula "28"))
                           (branch "Case 1"
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_commuteLeq" (formula "28"))
                              (rule "applyEq" (formula "30") (term "0,0,1,1") (ifseqformula "29"))
                              (rule "eqSymm" (formula "30") (term "0,1,1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "notLeft" (formula "30"))
                              (rule "inEqSimp_geqRight" (formula "36"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "35") (term "0") (ifseqformula "30"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "30"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "30"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "29") (ifseqformula "25"))
                              (rule "andLeft" (formula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0"))
                              (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                              (rule "add_literals" (formula "29") (term "1,1,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0"))
                              (rule "add_zero_right" (formula "29") (term "0"))
                              (rule "leq_literals" (formula "29"))
                              (rule "closeFalse" (formula "29"))
                           )
                           (branch "Case 2"
                              (rule "inEqSimp_leqRight" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "andLeft" (formula "29"))
                              (rule "notLeft" (formula "30"))
                              (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "29"))
                              (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "29"))
                              (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "29"))
                              (rule "applyEq" (formula "6") (term "1") (ifseqformula "29"))
                              (rule "applyEq" (formula "31") (term "1") (ifseqformula "29"))
                              (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "29"))
                              (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                              (rule "add_literals" (formula "36") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "36") (term "1,0,0"))
                              (rule "add_zero_right" (formula "36") (term "0,0"))
                              (rule "leq_literals" (formula "36") (term "0"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "false_right" (formula "36"))
                              (rule "ex_pull_out3" (formula "3") (term "0"))
                              (rule "cnf_rightDist" (formula "3") (term "0,0"))
                              (rule "commute_or_2" (formula "3") (term "1,0,0"))
                              (rule "commute_or" (formula "3") (term "0,1,0,0"))
                              (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
                              (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                              (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                              (rule "commute_or" (formula "3") (term "0,1,0,0,0"))
                              (rule "arrayLengthNotNegative" (formula "31") (term "0"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                              (rule "arrayLengthIsAShort" (formula "32") (term "0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "true_left" (formula "32"))
                              (rule "commute_and_2" (formula "3") (term "0,0"))
                              (rule "allLeft" (formula "25") (inst "t=i_3"))
                              (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "25") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "20"))
                              (rule "qeq_literals" (formula "25") (term "0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "commute_and" (formula "3") (term "0,0,0"))
                              (rule "allLeft" (formula "3") (inst "t=i_3"))
                              (rule "exLeft" (formula "3") (inst "sk=j_57"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0,0"))
                              (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "28"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "23"))
                              (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "5") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0,0") (ifseqformula "23"))
                              (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "4") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "3") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "23"))
                              (rule "qeq_literals" (formula "5") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "commute_or" (formula "4"))
                              (rule "commute_or" (formula "5"))
                              (rule "cut_direct" (formula "3") (term "0"))
                              (branch "CUT: res_min_1 ≤ i_3 TRUE"
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "3"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "22"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0"))
                                 (rule "add_zero_right" (formula "28") (term "0"))
                                 (rule "leq_literals" (formula "28"))
                                 (rule "closeFalse" (formula "28"))
                              )
                              (branch "CUT: res_min_1 ≤ i_3 FALSE"
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "notLeft" (formula "3"))
                                 (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "41"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "41"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_leqRight" (formula "41"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                 (rule "times_zero_1" (formula "4") (term "0,0"))
                                 (rule "add_zero_left" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "allLeft" (formula "26") (inst "t=j_57"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq0" (formula "26") (term "0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                 (rule "leq_literals" (formula "26") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "allLeft" (formula "30") (inst "t=j_57"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                 (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "26"))
                                 (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "30") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "30"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1"))
                                 (rule "mul_literals" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "24"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0"))
                                 (rule "add_literals" (formula "6") (term "0"))
                                 (rule "leq_literals" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                           )
                        )
                     )
                     (branch " ∀ int j; (j ≤ -1 ∨ j ≥ res_min ∨ b[j] = a[j]) ∧ a.length ≤ res_min_0"
                        (rule "andLeft" (formula "18"))
                        (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "25"))
                        (rule "inEqSimp_commuteLeq" (formula "19"))
                        (rule "applyEq" (formula "30") (term "0,1") (ifseqformula "25"))
                        (rule "eqSymm" (formula "30") (term "1"))
                        (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "25"))
                        (rule "applyEq" (formula "32") (term "0") (ifseqformula "25"))
                        (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "25"))
                        (rule "inEqSimp_homoInEq1" (formula "26") (term "0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                        (rule "applyEq" (formula "26") (term "0,0,1,1") (ifseqformula "25"))
                        (rule "eqSymm" (formula "26") (term "0,1,1"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "notLeft" (formula "26"))
                        (rule "inEqSimp_leqRight" (formula "33"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "33") (term "1,0,1,1") (ifseqformula "26"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "commute_and" (formula "32") (term "1"))
                        (rule "applyEq_and_gen2" (formula "32") (term "1"))
                        (rule "ex_pull_out3" (formula "1") (term "1,0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                        (rule "commute_or" (formula "1") (term "1,0,1,0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                        (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                        (rule "ex_pull_out3" (formula "1") (term "0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "1") (term "1,0,0"))
                        (rule "commute_or" (formula "1") (term "0,1,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                        (rule "commute_or_2" (formula "1") (term "1,0,0,0"))
                        (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
                        (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0"))
                        (rule "equiv_left" (formula "29"))
                        (branch "Case 1"
                           (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "allRight" (formula "34") (inst "sk=j_56"))
                           (rule "orRight" (formula "34"))
                           (rule "orRight" (formula "34"))
                           (rule "replace_known_left" (formula "33") (term "0,0,1") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "notLeft" (formula "33"))
                           (rule "inEqSimp_leqRight" (formula "34"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "35"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "applyEq" (formula "4") (term "1,1,0,0,1,0,0") (ifseqformula "33"))
                           (rule "applyEqRigid" (formula "4") (term "1,1,0,0,1,0,0,0") (ifseqformula "33"))
                           (rule "applyEq" (formula "4") (term "1,1,0,0,0,0,0,0") (ifseqformula "33"))
                           (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "33"))
                           (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "33"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "29") (term "0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                           (rule "commute_and" (formula "3") (term "0,0,0"))
                           (rule "allLeft" (formula "20") (inst "t=j_56"))
                           (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "20") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0"))
                           (rule "leq_literals" (formula "20") (term "0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "allLeft" (formula "24") (inst "t=j_56"))
                           (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                           (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "20"))
                           (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "38"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "24") (term "0,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "24"))
                           (rule "times_zero_1" (formula "31") (term "0,0"))
                           (rule "add_zero_left" (formula "31") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "24"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "1"))
                           (rule "andLeft" (formula "22"))
                           (rule "inEqSimp_homoInEq1" (formula "22"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "1,1,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0"))
                           (rule "add_literals" (formula "22") (term "0"))
                           (rule "leq_literals" (formula "22"))
                           (rule "closeFalse" (formula "22"))
                        )
                        (branch "Case 2"
                           (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "false_right" (formula "34"))
                           (rule "replace_known_right" (formula "31") (term "0,0,1") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_geqRight" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "32"))
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "32"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                           (rule "inEqSimp_contradEq3" (formula "33") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0"))
                           (rule "qeq_literals" (formula "33") (term "0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "false_right" (formula "33"))
                           (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "1"))
                           (rule "mul_literals" (formula "30") (term "0,0"))
                           (rule "add_zero_left" (formula "30") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                           (rule "mul_literals" (formula "30") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "30"))
                           (rule "leq_literals" (formula "32") (term "0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "20"))
                           (rule "andLeft" (formula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "1,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0"))
                           (rule "add_zero_right" (formula "23") (term "0"))
                           (rule "leq_literals" (formula "23"))
                           (rule "closeFalse" (formula "23"))
                        )
                     )
                  )
               )
               (branch "Exceptional Post (min)"
                  (builtin "One Step Simplification" (formula "25"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "andLeft" (formula "25"))
                  (rule "andLeft" (formula "26"))
                  (rule "andLeft" (formula "25"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "25"))
                  (rule "close" (formula "29") (ifseqformula "28"))
               )
               (branch "Pre (min)"
                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "6")))
                  (rule "closeTrue" (formula "25"))
               )
            )
            (branch "Exceptional Post (min)"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "andLeft" (formula "21"))
               (rule "andLeft" (formula "22"))
               (rule "andLeft" (formula "21"))
               (rule "andLeft" (formula "23"))
               (rule "notLeft" (formula "21"))
               (rule "close" (formula "25") (ifseqformula "24"))
            )
            (branch "Pre (min)"
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "5")))
               (rule "closeTrue" (formula "21"))
            )
         )
         (branch "Exceptional Post (min)"
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "19"))
            (rule "notLeft" (formula "17"))
            (rule "close" (formula "21") (ifseqformula "20"))
         )
         (branch "Pre (min)"
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "4")))
            (rule "closeTrue" (formula "17"))
         )
      )
      (branch "Exceptional Post (compare)"
         (builtin "One Step Simplification" (formula "15"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heap,a,c)_00_2" (formula "20") (term "0"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "15"))
         (rule "close" (formula "18") (ifseqformula "17"))
      )
      (branch "Pre (compare)"
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")) (ifInst ""  (formula "3")) (ifInst ""  (formula "18")) (ifInst ""  (formula "17")))
         (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heap,a,c)_00_2" (formula "19") (term "0"))
         (rule "eqSymm" (formula "12") (term "1,0,1,1,0,0"))
         (rule "eqSymm" (formula "14") (term "1,0,1,1,0,0"))
         (rule "eqSymm" (formula "14") (term "1,0,0,1"))
         (rule "eqSymm" (formula "12") (term "1,0,0,1"))
         (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "5"))
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "7")))
         (rule "closeTrue" (formula "15"))
      )
   )
   (branch "Exceptional Post (compare)"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heap,b,c)_0_1" (formula "9") (term "0"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "14"))
      (rule "notLeft" (formula "12"))
      (rule "close" (formula "15") (ifseqformula "14"))
   )
   (branch "Pre (compare)"
      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "2")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")))
      (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heap,b,c)_0_1" (formula "9") (term "0"))
      (rule "eqSymm" (formula "11") (term "1,0,1,1,0,0"))
      (rule "eqSymm" (formula "11") (term "1,0,0,1"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "6")))
      (rule "closeTrue" (formula "12"))
   )
)
(branch "Exceptional Post (compare)"
   (builtin "One Step Simplification" (formula "9"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heap,a,b)__0" (formula "7") (term "0"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "9"))
   (rule "close" (formula "12") (ifseqformula "11"))
)
(branch "Pre (compare)"
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "1")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")))
   (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heap,a,b)__0" (formula "7") (term "0"))
   (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")))
   (rule "closeTrue" (formula "9"))
)
)

}
