\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Jul 08 15:01:05 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=4000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sat Jul 08 15:01:05 CEST 2017
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:decryptSingleBallot([[B,[[B,int)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:decryptSingleBallot([[B,[[B,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "3" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "4" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "5" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "6" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "7" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "8" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "9" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "10" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "11" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "12" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "13" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "14" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "15" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "16" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "17" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "18" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "19" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "20" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))

(autoModeTime "1009444")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "msg,res,i,self,exc,heapAtPre,o,f") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "14"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "16"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "20") (userinteraction))
(builtin "One Step Simplification" (formula "5"))
(builtin "One Step Simplification" (formula "21"))
(rule "assignment" (formula "21") (term "1") (userinteraction))
(rule "methodBodyExpand" (formula "21") (term "1,1") (newnames "heapBefore_decryptSingleBallot,savedHeapBefore_decryptSingleBallot") (userinteraction))
(builtin "One Step Simplification" (formula "21"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "18"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "nonNull" (formula "17") (inst "i=i_1") (userinteraction))
(rule "andLeft" (formula "17") (userinteraction))
(rule "greater_literals" (formula "18") (term "0") (userinteraction))
(builtin "One Step Simplification" (formula "18"))
(rule "variableDeclarationAssign" (formula "25") (term "1") (userinteraction))
(rule "Contract_axiom_for_ghostFieldsPre_in_MixServer" (formula "13") (term "0") (inst "i=i_1") (userinteraction))
(rule "impLeft" (formula "13") (userinteraction))
(branch "Case 1"
   (builtin "One Step Simplification" (formula "15"))
   (builtin "One Step Simplification" (formula "14"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "sub_literals" (formula "17") (term "2,1,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "notLeft" (formula "16"))
   (rule "eqSymm" (formula "11"))
   (rule "eqSymm" (formula "7"))
   (rule "eqSymm" (formula "19"))
   (rule "eqSymm" (formula "21"))
   (rule "eqSymm" (formula "20"))
   (rule "eqSymm" (formula "25") (term "0,1,0,0,0,1"))
   (rule "eqSymm" (formula "25") (term "1,0,0,1,0,1"))
   (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "22")))
   (rule "closeTrue" (formula "18"))
)
(branch "Case 2"
   (rule "applyEq" (formula "13") (term "0") (ifseqformula "14") (userinteraction))
   (builtin "One Step Simplification" (formula "13"))
   (rule "eqSymm" (formula "13") (userinteraction))
   (rule "ifEqualsTRUE" (formula "13") (userinteraction))
   (rule "orLeft" (formula "13") (userinteraction))
   (branch " verif.selectvoting.system.core.MixServer.ghostFieldsNonNull(self) = TRUE ∧ ∀ int i_1; ( 0 ≤ i_1 ∧ i_1 < self.encrypted.length → array2seq(heap, self.encrypted[i_1]) = mEncrypt(mConcat(array2seq(heap, self.electionID), array2seq(heap, self.chosen[i_1])))) ∧ seqPerm(array2seq2d(heap, self.sorted), array2seq2d(heap, self.encrypted)) ∧ array2seq(heap, self.concatenated) = mConcat(int2seq(self.sorted.length), arrConcat(0, array2seq2d(heap, self.sorted))) ∧ array2seq(heap, self.unsigned) = mConcat(array2seq(heap, verif.selectvoting.system.core.Tag.BALLOTS), mConcat(array2seq(heap, self.electionID), array2seq(heap, self.concatenated))) ∧ self.chosen.length = self.encrypted.length ∧ self.encrypted.length = self.sorted.length ∧ TRUE = TRUE"
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "equalityToSeqGetAndSeqLenLeft" (formula "12") (inst "iv=iv") (userinteraction))
      (rule "andLeft" (formula "12") (userinteraction))
      (rule "allLeft" (formula "13") (inst "t=i") (userinteraction))
      (rule "impLeft" (formula "13") (userinteraction))
      (branch "Case 1"
         (rule "array2seq2dDef" (formula "28") (term "0,1,1") (inst "u=u") (userinteraction))
         (rule "lenOfSeqDef" (formula "28") (term "1,1") (userinteraction))
         (rule "andRight" (formula "28") (userinteraction))
         (branch "Case 1"
            (rule "close" (formula "28") (ifseqformula "9"))
         )
         (branch "Case 2"
            (rule "ifthenelse_split" (formula "28") (term "1") (userinteraction))
            (branch "0 < msg.length TRUE"
               (rule "sub_zero_2" (formula "29") (term "1") (userinteraction))
               (rule "close" (formula "29") (ifseqformula "11") (userinteraction))
            )
            (branch "0 < msg.length FALSE"
               (rule "applyEq" (formula "28") (term "1") (ifseqformula "8") (userinteraction))
               (rule "applyEq" (formula "10") (term "1") (ifseqformula "8") (userinteraction))
               (builtin "One Step Simplification" (formula "6"))
               (builtin "One Step Simplification" (formula "25"))
               (builtin "One Step Simplification" (formula "24"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "6"))
               (rule "sub_literals" (formula "25") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "eqSymm" (formula "7"))
               (rule "eqSymm" (formula "35") (term "0,1,0,0,0,1"))
               (rule "eqSymm" (formula "29"))
               (rule "eqSymm" (formula "31"))
               (rule "eqSymm" (formula "30"))
               (rule "eqSymm" (formula "12") (term "1,0"))
               (rule "eqSymm" (formula "17"))
               (rule "eqSymm" (formula "20"))
               (rule "eqSymm" (formula "19"))
               (rule "eqSymm" (formula "18"))
               (rule "eqSymm" (formula "35") (term "1,0,0,1,0,1"))
               (rule "eqSymm" (formula "15") (term "1,0"))
               (rule "eqSymm" (formula "11"))
               (rule "eqSymm" (formula "13"))
               (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "elementOfSingleton" (formula "35") (term "0,0,0,0,1,0,1"))
               (rule "inEqSimp_ltRight" (formula "27"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_ltRight" (formula "27"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "11"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
               (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "28"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0,1,1,1,0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "10"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,1,1,0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
               (rule "variableDeclaration" (formula "34") (term "1") (newnames "decr_1"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "14"))
               (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "9"))
               (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "9"))
               (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "20"))
               (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
               (rule "applyEq" (formula "19") (term "1") (ifseqformula "18"))
               (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "18"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polySimp_elimOne" (formula "10") (term "0"))
               (rule "inEqSimp_invertInEq1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
               (rule "array2seqDef" (formula "22") (term "0,0,1,1,0") (inst "u=u"))
               (rule "eqSymm" (formula "22") (term "1,0"))
               (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "16"))
               (rule "array2seqDef" (formula "17") (term "1,1,0") (inst "u=u"))
               (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "16"))
               (rule "array2seqDef" (formula "17") (term "0,1,0") (inst "u=u"))
               (rule "array2seqDef" (formula "17") (term "0,0") (inst "u=u"))
               (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
               (rule "array2seqDef" (formula "14") (term "1,0,0,1,0") (inst "u=u"))
               (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
               (rule "eqSymm" (formula "14") (term "1,0"))
               (rule "array2seqDef" (formula "32") (term "0,0,1,1,0,0,1,1,1,0,0,0,1") (inst "u=u"))
               (rule "eqSymm" (formula "32") (term "1,0,0,1,1,1,0,0,0,1"))
               (rule "array2seqDef" (formula "22") (term "1,1,0") (inst "u=u"))
               (rule "eqSymm" (formula "22") (term "1,0"))
               (rule "eqSeqDef" (formula "17") (inst "iv=iv"))
               (rule "andLeft" (formula "17"))
               (rule "getOfSeqDef" (formula "18") (term "1,1,0"))
               (rule "castDel" (formula "18") (term "1,1,1,0"))
               (rule "castDel" (formula "18") (term "2,1,1,0"))
               (rule "add_zero_right" (formula "18") (term "0,2,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0"))
               (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0"))
               (rule "lenOfSeqDef" (formula "17") (term "1"))
               (rule "polySimp_elimSub" (formula "17") (term "1,1"))
               (rule "times_zero_2" (formula "17") (term "1,1,1"))
               (rule "add_zero_right" (formula "17") (term "1,1"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1"))
               (rule "add_zero_right" (formula "17") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0"))
               (rule "applyEq" (formula "18") (term "0,1,0,1,0,0") (ifseqformula "17"))
               (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
               (rule "array2seqDef" (formula "14") (term "0,0,1,1,0") (inst "u=u"))
               (rule "array2seqDef" (formula "33") (term "1,1,0,0,1,1,1,0,0,0,1") (inst "u=u"))
               (rule "eqSymm" (formula "33") (term "1,0,0,1,1,1,0,0,0,1"))
               (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
               (rule "add_zero_right" (formula "10") (term "0"))
               (rule "polySimp_rightDist" (formula "10") (term "0"))
               (rule "mul_literals" (formula "10") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polySimp_elimOne" (formula "10") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "10"))
               (rule "qeq_literals" (formula "2") (term "0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
         )
      )
      (branch "Case 2"
         (rule "array2seq2dDef" (formula "13") (term "0,0") (inst "u=u") (userinteraction))
         (rule "array2seq2dDef" (formula "13") (term "0,1") (inst "u=u") (userinteraction))
         (rule "array2seq2dDef" (formula "12") (term "0,0") (inst "u=u") (userinteraction))
         (rule "array2seq2dDef" (formula "12") (term "0,1") (inst "u=u") (userinteraction))
         (rule "lenOfSeqDef" (formula "12") (term "0") (userinteraction))
         (rule "lenOfSeqDef" (formula "12") (term "1") (userinteraction))
         (rule "getOfSeqDef" (formula "13") (term "0") (userinteraction))
         (rule "getOfSeqDef" (formula "13") (term "1") (userinteraction))
         (rule "ifthenelse_split" (formula "13") (term "0") (userinteraction))
         (branch "0 ≤ i ∧ i < msg.length - 0 TRUE"
            (rule "castDel" (formula "14") (term "0") (userinteraction))
            (rule "add_zero_right" (formula "14") (term "0,2,1,0") (userinteraction))
            (rule "ifthenelse_split" (formula "14") (term "1") (userinteraction))
            (branch "0 ≤ i ∧ i < self.sorted.length - 0 TRUE"
               (opengoal " ")
            )
            (branch
               (rule "sub_zero_2" (formula "30") (term "1,1") (userinteraction))
               (rule "sub_zero_2" (formula "13") (term "1,1") (userinteraction))
               (rule "sub_zero_2" (formula "12") (term "1,1") (userinteraction))
               (rule "andLeft" (formula "13") (userinteraction))
               (rule "ifthenelse_split" (formula "12") (term "0") (userinteraction))
               (branch
                  (rule "ifthenelse_split" (formula "13") (term "1") (userinteraction))
                  (branch "0 < self.sorted.length TRUE"
                     (rule "sub_zero_2" (formula "14") (term "0") (userinteraction))
                     (builtin "One Step Simplification" (formula "28"))
                     (builtin "One Step Simplification" (formula "27"))
                     (builtin "One Step Simplification" (formula "25"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "24"))
                     (rule "castDel" (formula "14") (term "1"))
                     (rule "sub_literals" (formula "28") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "eqSymm" (formula "37") (term "0,1,0,0,0,1"))
                     (rule "eqSymm" (formula "31"))
                     (rule "eqSymm" (formula "7"))
                     (rule "eqSymm" (formula "37") (term "1,0,0,1,0,1"))
                     (rule "eqSymm" (formula "33"))
                     (rule "eqSymm" (formula "15") (term "1,0"))
                     (rule "eqSymm" (formula "13"))
                     (rule "eqSymm" (formula "21"))
                     (rule "eqSymm" (formula "18") (term "1,0"))
                     (rule "eqSymm" (formula "16"))
                     (rule "eqSymm" (formula "32"))
                     (rule "eqSymm" (formula "23"))
                     (rule "eqSymm" (formula "22"))
                     (rule "eqSymm" (formula "20"))
                     (rule "eqSymm" (formula "14"))
                     (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "elementOfSingleton" (formula "37") (term "0,0,0,0,1,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12"))
                     (rule "add_zero_right" (formula "12") (term "0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11"))
                     (rule "add_zero_right" (formula "11") (term "0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                     (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "30"))
                     (rule "inEqSimp_ltRight" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "9"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0,1,1,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0,1,1,1,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                     (rule "variableDeclaration" (formula "37") (term "1") (newnames "decr_5"))
                     (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "24"))
                     (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "16"))
                     (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "23") (term "1") (ifseqformula "22"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "22"))
                     (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "21") (term "1") (ifseqformula "13"))
                     (rule "applyEq" (formula "22") (term "1") (ifseqformula "13"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "0 < self.sorted.length FALSE"
                     (builtin "One Step Simplification" (formula "27"))
                     (builtin "One Step Simplification" (formula "26"))
                     (builtin "One Step Simplification" (formula "24"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "23"))
                     (rule "castDel" (formula "13") (term "1"))
                     (rule "sub_literals" (formula "27") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "eqSymm" (formula "20"))
                     (rule "eqSymm" (formula "17") (term "1,0"))
                     (rule "eqSymm" (formula "37") (term "0,1,0,0,0,1"))
                     (rule "eqSymm" (formula "37") (term "1,0,0,1,0,1"))
                     (rule "eqSymm" (formula "33"))
                     (rule "eqSymm" (formula "31"))
                     (rule "eqSymm" (formula "15"))
                     (rule "eqSymm" (formula "32"))
                     (rule "eqSymm" (formula "7"))
                     (rule "eqSymm" (formula "14") (term "1,0"))
                     (rule "eqSymm" (formula "22"))
                     (rule "eqSymm" (formula "21"))
                     (rule "eqSymm" (formula "19"))
                     (rule "eqSymm" (formula "13"))
                     (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_elimSub" (formula "12") (term "0"))
                     (rule "times_zero_2" (formula "12") (term "1,0"))
                     (rule "add_zero_right" (formula "12") (term "0"))
                     (rule "elementOfSingleton" (formula "37") (term "0,0,0,0,1,0,1"))
                     (rule "inEqSimp_ltRight" (formula "28"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12"))
                     (rule "add_zero_right" (formula "12") (term "0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                     (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "30"))
                     (rule "inEqSimp_ltRight" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "10"))
                     (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0,1,1,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0,1,1,1,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                     (rule "variableDeclaration" (formula "37") (term "1") (newnames "decr_6"))
                     (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "14"))
                     (rule "mul_literals" (formula "11") (term "1,0"))
                     (rule "add_zero_right" (formula "11") (term "0"))
                     (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "14"))
                     (rule "mul_literals" (formula "13") (term "1,0"))
                     (rule "add_literals" (formula "13") (term "0"))
                     (rule "leq_literals" (formula "13"))
                     (rule "closeFalse" (formula "13"))
                  )
               )
               (branch "0 < msg.length FALSE"
                  (builtin "One Step Simplification" (formula "26"))
                  (builtin "One Step Simplification" (formula "25"))
                  (builtin "One Step Simplification" (formula "23"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "22"))
                  (rule "castDel" (formula "12") (term "1"))
                  (rule "sub_literals" (formula "26") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "eqSymm" (formula "16") (term "1,0"))
                  (rule "eqSymm" (formula "21"))
                  (rule "eqSymm" (formula "31"))
                  (rule "eqSymm" (formula "32"))
                  (rule "eqSymm" (formula "13") (term "1,0"))
                  (rule "eqSymm" (formula "14"))
                  (rule "eqSymm" (formula "30"))
                  (rule "eqSymm" (formula "18"))
                  (rule "eqSymm" (formula "36") (term "0,1,0,0,0,1"))
                  (rule "eqSymm" (formula "36") (term "1,0,0,1,0,1"))
                  (rule "eqSymm" (formula "19"))
                  (rule "eqSymm" (formula "20"))
                  (rule "eqSymm" (formula "7"))
                  (rule "eqSymm" (formula "11"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "eqSymm" (formula "12"))
                  (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "elementOfSingleton" (formula "36") (term "0,0,0,0,1,0,1"))
                  (rule "inEqSimp_ltRight" (formula "27"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                  (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "29"))
                  (rule "inEqSimp_ltRight" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0,1,1,1,0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10"))
                  (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0,1,1,0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                  (rule "variableDeclaration" (formula "36") (term "1") (newnames "decr_7"))
                  (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "23"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "16"))
                  (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "16"))
                  (rule "applyEq" (formula "13") (term "0,1,0,0,0") (ifseqformula "23"))
                  (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "23"))
                  (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "23"))
                  (rule "applyEq" (formula "15") (term "0,0,1,0") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "applyEq" (formula "22") (term "1") (ifseqformula "21"))
                  (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "13") (term "0,1,0,0,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "21"))
                  (rule "inEqSimp_invertInEq1" (formula "2"))
                  (rule "times_zero_2" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "array2seqDef" (formula "25") (term "0,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "25") (term "0,0,1,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "17") (term "0,0,0,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "17") (term "1,0,0,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "17") (term "1,1,0") (inst "u=u"))
                  (rule "eqSymm" (formula "17") (term "1,0"))
                  (rule "array2seqDef" (formula "19") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "19"))
                  (rule "array2seqDef" (formula "20") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "20"))
                  (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "14"))
                  (rule "array2seqDef" (formula "35") (term "0,1,0,0,1,1,1,0,0,0,1") (inst "u=u"))
                  (rule "array2seqDef" (formula "35") (term "0,0,1,1,0,0,1,1,1,0,0,0,1") (inst "u=u"))
                  (rule "array2seqDef" (formula "20") (term "0,1,1") (inst "u=u"))
                  (rule "array2seqDef" (formula "20") (term "1,1,1") (inst "u=u"))
                  (rule "applyEq" (formula "20") (term "1,1,1") (ifseqformula "19"))
                  (rule "array2seqDef" (formula "20") (term "0,1") (inst "u=u"))
                  (rule "eqSymm" (formula "20"))
                  (rule "eqSeqDef2" (formula "19") (inst "iv=iv") (ifseqformula "19"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "eqSeqDef" (formula "19") (inst "iv=iv"))
                  (rule "andLeft" (formula "19"))
                  (rule "getOfSeqDef" (formula "20") (term "1,1,0"))
                  (rule "castDel" (formula "20") (term "2,1,1,0"))
                  (rule "castDel" (formula "20") (term "1,1,1,0"))
                  (rule "add_zero_right" (formula "20") (term "0,2,1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,1,0"))
                  (rule "times_zero_2" (formula "20") (term "1,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "20") (term "1,1,0,1,1,0"))
                  (rule "lenOfSeqDef" (formula "19") (term "1"))
                  (rule "polySimp_elimSub" (formula "19") (term "1,1"))
                  (rule "times_zero_2" (formula "19") (term "1,1,1"))
                  (rule "add_zero_right" (formula "19") (term "1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1"))
                  (rule "add_zero_right" (formula "19") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,1,1,0"))
                  (rule "applyEq" (formula "20") (term "0,1,0,1,0,0") (ifseqformula "19"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "19") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1,1,0,0"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                  (rule "add_zero_right" (formula "11") (term "0"))
                  (rule "polySimp_rightDist" (formula "11") (term "0"))
                  (rule "mul_literals" (formula "11") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "11"))
                  (rule "qeq_literals" (formula "10") (term "0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "closeFalse" (formula "10"))
               )
            )
         )
         (branch "0 ≤ i ∧ i < msg.length - 0 FALSE"
            (builtin "One Step Simplification" (formula "26"))
            (builtin "One Step Simplification" (formula "25"))
            (builtin "One Step Simplification" (formula "23"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "22"))
            (rule "castDel" (formula "12") (term "0"))
            (rule "castDel" (formula "12") (term "1,1"))
            (rule "castDel" (formula "12") (term "2,1"))
            (rule "sub_literals" (formula "26") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "add_zero_right" (formula "12") (term "0,2,1,1,1"))
            (rule "eqSymm" (formula "35") (term "1,0,0,1,0,1"))
            (rule "eqSymm" (formula "35") (term "0,1,0,0,0,1"))
            (rule "eqSymm" (formula "14"))
            (rule "eqSymm" (formula "7"))
            (rule "eqSymm" (formula "29"))
            (rule "eqSymm" (formula "20"))
            (rule "eqSymm" (formula "30"))
            (rule "eqSymm" (formula "31"))
            (rule "eqSymm" (formula "21"))
            (rule "eqSymm" (formula "19"))
            (rule "eqSymm" (formula "18"))
            (rule "eqSymm" (formula "13") (term "1,0"))
            (rule "eqSymm" (formula "16") (term "1,0"))
            (rule "eqSymm" (formula "11"))
            (rule "eqSymm" (formula "12"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "8")))
            (rule "eqSymm" (formula "12") (term "1"))
            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "polySimp_elimSub" (formula "11") (term "1,1"))
            (rule "times_zero_2" (formula "11") (term "1,1,1"))
            (rule "add_zero_right" (formula "11") (term "1,1"))
            (rule "polySimp_elimSub" (formula "11") (term "1,0"))
            (rule "times_zero_2" (formula "11") (term "1,1,0"))
            (rule "add_zero_right" (formula "11") (term "1,0"))
            (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
            (rule "times_zero_2" (formula "12") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "12") (term "1,0,0"))
            (rule "polySimp_elimSub" (formula "27") (term "1"))
            (rule "times_zero_2" (formula "27") (term "1,1"))
            (rule "add_zero_right" (formula "27") (term "1"))
            (rule "close" (formula "27") (ifseqformula "9"))
         )
      )
   )
   (branch " ¬( verif.selectvoting.system.core.MixServer.ghostFieldsNonNull(self) = TRUE ∧ ∀ int i_1; ( 0 ≤ i_1 ∧ i_1 < self.encrypted.length → array2seq(heap, self.encrypted[i_1]) = mEncrypt(mConcat(array2seq(heap, self.electionID), array2seq(heap, self.chosen[i_1])))) ∧ seqPerm(array2seq2d(heap, self.sorted), array2seq2d(heap, self.encrypted)) ∧ array2seq(heap, self.concatenated) = mConcat(int2seq(self.sorted.length), arrConcat(0, array2seq2d(heap, self.sorted))) ∧ array2seq(heap, self.unsigned) = mConcat(array2seq(heap, verif.selectvoting.system.core.Tag.BALLOTS), mConcat(array2seq(heap, self.electionID), array2seq(heap, self.concatenated))) ∧ self.chosen.length = self.encrypted.length ∧ self.encrypted.length = self.sorted.length) ∧ FALSE = TRUE"
      (builtin "One Step Simplification" (formula "13"))
      (rule "closeFalse" (formula "13") (userinteraction))
   )
)
)

}
