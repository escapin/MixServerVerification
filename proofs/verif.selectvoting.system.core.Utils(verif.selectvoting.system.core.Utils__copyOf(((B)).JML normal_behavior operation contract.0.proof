\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jul 12 08:41:42 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=7000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Jul 12 08:41:42 CEST 2017
name=verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils\\:\\:copyOf([[B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils\\:\\:copyOf([[B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "61579")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "arr_0,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "6") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
(builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "nonNull" (formula "4") (inst "i=i"))
(rule "greater_literals" (formula "4") (term "0,1"))
(builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "5")))
(rule "sub_literals" (formula "4") (term "2,1,0"))
(builtin "One Step Simplification" (formula "4"))
(rule "narrowSelectArrayType" (formula "4") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "5"))
(rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
(rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
(rule "nonNull" (formula "6") (term "1,1,0,0,0,1") (inst "i=i"))
(rule "sub_literals" (formula "6") (term "2,1,0,1,1,1,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "6"))
(rule "greater_literals" (formula "6") (term "0,1,1,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "6"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "0,1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,1,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "4") (term "0"))
(rule "nnf_notAnd" (formula "4") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0"))
(rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "4") (term "0,0,0"))
(rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "4") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
(rule "mul_literals" (formula "4") (term "1,0,0,0"))
(rule "nnf_imp2or" (formula "6") (term "0,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "6") (term "0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "6") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "6") (term "0,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "6") (term "0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "6") (term "0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "1,0,0,0,1,1,1,0,0,0,1"))
(rule "commute_or_2" (formula "4") (term "0"))
(rule "commute_or" (formula "4") (term "0,0"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_copyOf,savedHeapBefore_copyOf,_arr_0Before_copyOf"))
(builtin "One Step Simplification" (formula "6"))
(rule "ifUnfold" (formula "6") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x"))
(rule "equality_comparison_simple" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "replace_known_right" (formula "6") (term "0,0,1,0") (ifseqformula "5"))
(builtin "One Step Simplification" (formula "6"))
(rule "ifSplit" (formula "6"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "1"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "copy"))
   (rule "arrayCreation" (formula "6") (term "1") (inst "#v0=x_arr_arr"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_arr_arr"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "dim0"))
   (rule "assignment_read_length" (formula "6") (term "1"))
   (branch "Normal Execution (_arr_0 != null)"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "5")))
      (rule "false_right" (formula "6"))
      (rule "ifUnfold" (formula "6") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_1"))
      (rule "less_than_comparison_simple" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,1,0"))
      (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "6") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,1,0"))
      (rule "mul_literals" (formula "6") (term "1,0,0,1,0"))
      (rule "ifSplit" (formula "6"))
      (branch "if x_1 true"
         (builtin "One Step Simplification" (formula "7"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "blockThrow" (formula "7") (term "1"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "throwUnfold" (formula "7") (term "1") (inst "#v0=n"))
         (rule "variableDeclarationAssign" (formula "7") (term "1"))
         (rule "variableDeclaration" (formula "7") (term "1") (newnames "n"))
         (rule "arrayLengthIsAShort" (formula "5") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "arrayLengthNotNegative" (formula "5") (term "1,1,0"))
         (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
         (rule "qeq_literals" (formula "5") (term "0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "closeFalse" (formula "5"))
      )
      (branch "if x_1 false"
         (builtin "One Step Simplification" (formula "7"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "5"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "arrayLengthIsAShort" (formula "5") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "arrayLengthNotNegative" (formula "5") (term "1,1,0"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "7") (term "1") (inst "#v0=x_arr_arr_1"))
         (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_arr_arr_1"))
         (rule "variableDeclarationAssign" (formula "7") (term "1"))
         (rule "variableDeclaration" (formula "7") (term "1") (newnames "length_1"))
         (rule "assignment" (formula "7") (term "1"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "variableDeclaration" (formula "7") (term "1") (newnames "newObject"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "7") (term "1") (inst "#v0=x_arr_arr_2"))
         (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_arr_arr_2"))
         (rule "variableDeclarationAssign" (formula "7") (term "1"))
         (rule "variableDeclaration" (formula "7") (term "1") (newnames "length_2"))
         (rule "assignment" (formula "7") (term "1"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "allocateInstanceWithLength" (formula "7"))
         (builtin "One Step Simplification" (formula "8"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "2"))
         (rule "notLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "blockEmpty" (formula "11") (term "1"))
         (rule "assignment" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "arrayLengthNotNegative" (formula "1") (term "0"))
         (rule "arrayLengthIsAShort" (formula "2") (term "0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "methodCall" (formula "12") (term "1"))
         (branch "Normal Execution (newObject != null )"
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "10")))
            (rule "false_right" (formula "12"))
            (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "assignment_write_attribute_this" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "methodCallWithinClass" (formula "12") (term "1"))
            (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "arrayInitialisation" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "polySimp_elimSub" (formula "12") (term "2,1,0,1,0"))
            (rule "mul_literals" (formula "12") (term "1,2,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "12") (term "2,1,0,1,0"))
            (rule "methodCallEmpty" (formula "12") (term "1"))
            (rule "blockEmpty" (formula "12") (term "1"))
            (rule "assignment_write_attribute_this" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "methodCallReturnIgnoreResult" (formula "12") (term "1"))
            (rule "blockEmpty" (formula "12") (term "1"))
            (rule "methodCallReturn" (formula "12") (term "1"))
            (rule "assignment" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "methodCallEmpty" (formula "12") (term "1"))
            (rule "blockEmpty" (formula "12") (term "1"))
            (rule "assignment" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "blockEmpty" (formula "12") (term "1"))
            (rule "assignment" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "emptyStatement" (formula "12") (term "1"))
            (rule "for_to_while" (formula "12") (term "1") (inst "#innerLabel=_label0") (inst "#outerLabel=_label1"))
            (rule "variableDeclarationAssign" (formula "12") (term "1"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "i"))
            (rule "assignment" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (builtin "Loop Invariant" (formula "12") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
            (branch "Invariant Initially Valid"
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "2")) (ifInst ""  (formula "10")) (ifInst ""  (formula "9")) (ifInst ""  (formula "10")))
               (rule "wellFormedStorePrimitive" (formula "12") (term "1"))
               (rule "leq_literals" (formula "12") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "eqSymm" (formula "12") (term "0,1,0,0,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "1,1,1,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "1,0,1,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,1,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0"))
               (rule "replace_known_left" (formula "12") (term "0,0,0,0") (ifseqformula "4"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "applyEq" (formula "12") (term "1,2,1,0,1") (ifseqformula "2"))
               (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,1,0,1,0,0") (ifseqformula "2"))
               (rule "eqSymm" (formula "12") (term "1,0,1,0,0"))
               (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,1,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
               (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,1,0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "11") (term "1,0,1,0,0"))
               (rule "applyEq" (formula "11") (term "1,2,1,0,1,0,1,0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "11") (term "1,0,1,0,0"))
               (rule "applyEq" (formula "11") (term "1,2,1,0,1,0,1,0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "11") (term "1,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "11") (term "1,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "11") (term "1,1,0,0,1,0"))
               (rule "wellFormedMemsetArrayObject" (formula "11") (term "1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "wellFormedStorePrimitive" (formula "11") (term "0,1"))
               (rule "wellFormedStorePrimitive" (formula "11") (term "0,1"))
               (rule "wellFormedStorePrimitive" (formula "11") (term "0,1"))
               (rule "wellFormedCreate" (formula "11") (term "0,1"))
               (rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "4"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "array2seqDef" (formula "11") (term "0,1,0,1,0") (inst "u=u"))
               (rule "dismissNonSelectedField" (formula "11") (term "2,0,1,0,1,0"))
               (rule "array2seqDef" (formula "11") (term "1,1,0,1,0") (inst "u=u"))
               (rule "eqSymm" (formula "11") (term "1,0,1,0"))
               (rule "dismissNonSelectedField" (formula "11") (term "2,0,1,0,1,0"))
               (rule "eqSymm" (formula "11") (term "1,0,1,0"))
               (rule "eqSeqDef" (formula "11") (term "1,0,1,0") (inst "iv=iv"))
               (rule "getOfSeqDef" (formula "11") (term "1,1,0,1,1,0,1,0"))
               (rule "castDel" (formula "11") (term "2,1,1,0,1,1,0,1,0"))
               (rule "castDel" (formula "11") (term "1,1,1,0,1,1,0,1,0"))
               (rule "add_zero_right" (formula "11") (term "0,2,1,1,1,0,1,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "11") (term "1,1,0,1,1,0,1,1,0,1,0"))
               (rule "times_zero_2" (formula "11") (term "1,1,1,0,1,1,0,1,1,0,1,0"))
               (rule "add_zero_right" (formula "11") (term "1,1,0,1,1,0,1,1,0,1,0"))
               (rule "lenOfSeqDef" (formula "11") (term "0,0,1,0,1,0"))
               (rule "eqSymm" (formula "11") (term "0,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "11") (term "1,1,0,1,0,1,0"))
               (rule "times_zero_2" (formula "11") (term "1,1,1,0,1,0,1,0"))
               (rule "add_zero_right" (formula "11") (term "1,1,0,1,0,1,0"))
               (rule "getOfSeqDef" (formula "11") (term "0,1,0,1,1,0,1,0"))
               (rule "castDel" (formula "11") (term "2,0,1,0,1,1,0,1,0"))
               (rule "castDel" (formula "11") (term "1,0,1,0,1,1,0,1,0"))
               (rule "add_zero_right" (formula "11") (term "0,2,1,0,1,0,1,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0,1,0,1,1,0,1,0"))
               (rule "mul_literals" (formula "11") (term "1,1,1,0,0,1,0,1,1,0,1,0"))
               (rule "add_zero_right" (formula "11") (term "1,1,0,0,1,0,1,1,0,1,0"))
               (rule "lenOfSeqDef" (formula "11") (term "1,1,0,0,1,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "11") (term "1,1,1,0,0,1,1,0,1,0"))
               (rule "mul_literals" (formula "11") (term "1,1,1,1,0,0,1,1,0,1,0"))
               (rule "add_zero_right" (formula "11") (term "1,1,1,0,0,1,1,0,1,0"))
               (rule "lenOfSeqDef" (formula "11") (term "0,0,1,0,1,0"))
               (rule "eqSymm" (formula "11") (term "0,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "11") (term "1,1,0,1,0,1,0"))
               (rule "times_zero_2" (formula "11") (term "1,1,1,0,1,0,1,0"))
               (rule "add_zero_right" (formula "11") (term "1,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,1,1,0,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,1,1,0,1,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1,1,0,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,1,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,1,0,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0,0,1,1,0,1,0"))
               (rule "add_zero_right" (formula "11") (term "0,0,1,1,0,0,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,1,0,0,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0,1,0,1,0"))
               (rule "add_zero_right" (formula "11") (term "0,0,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0,1,0"))
               (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,1,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,1,1,0,1,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,1,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1,0,1,1,0,1,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1,0,1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,1,0,1,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1,0,0,1,0,1,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1,0,1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,1,0,1,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "11") (term "0,0,1,0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1,0,0,1,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,1,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,1,0,0,1,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1,0,0,1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1,0,0,1,1,0,1,0"))
               (rule "nnf_imp2or" (formula "11") (term "0,1"))
               (rule "nnf_imp2or" (formula "11") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "11") (term "0,0,1"))
               (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1"))
               (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,1"))
               (rule "add_literals" (formula "11") (term "0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "11") (term "0,1,0,0,1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "nnf_notAnd" (formula "11") (term "0,0,1"))
               (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1"))
               (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,1"))
               (rule "add_literals" (formula "11") (term "0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "11") (term "0,1,0,0,1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "notRight" (formula "11"))
               (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "1"))
               (rule "close" (formula "9") (ifseqformula "6"))
            )
            (branch "Body Preserves Invariant"
               (builtin "One Step Simplification" (formula "14"))
               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "2")) (ifInst ""  (formula "12")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")))
               (rule "translateJavaSubInt" (formula "14") (term "0,1,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "14") (term "0,1,1,1,0,1"))
               (rule "andLeft" (formula "10"))
               (rule "impRight" (formula "15"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "notLeft" (formula "12"))
               (rule "andLeft" (formula "11"))
               (rule "eqSymm" (formula "19") (term "0,1,0,0,0,0,0,0,1,1,0,1"))
               (rule "eqSymm" (formula "19") (term "1,0,0,1,0,1,1,0,1"))
               (rule "eqSymm" (formula "15"))
               (rule "polySimp_elimSub" (formula "19") (term "0,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "19") (term "0,1,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "19") (term "0,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "19") (term "0,1,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,0,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12"))
               (rule "inEqSimp_commuteLeq" (formula "11"))
               (rule "variableDeclarationAssign" (formula "1") (term "1"))
               (rule "variableDeclarationAssign" (formula "19") (term "1"))
               (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
               (rule "variableDeclaration" (formula "19") (term "1") (newnames "exc_1"))
               (rule "assignment" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "variableDeclaration" (formula "19") (term "1") (newnames "thrownExc"))
               (rule "blockThrow" (formula "19") (term "1,0,0,1"))
               (rule "blockThrow" (formula "19") (term "1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "array2seqDef" (formula "13") (term "0,1,0") (inst "u=u"))
               (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
               (rule "array2seqDef" (formula "19") (term "1,1,0,1,0,0,0,0,1,1,0,1") (inst "u=u"))
               (rule "eqSymm" (formula "19") (term "1,0,1,0,0,0,0,1,1,0,1"))
               (rule "eqSeqDef" (formula "13") (term "1,0") (inst "iv=iv"))
               (rule "lenOfSeqDef" (formula "13") (term "0,0,1,0"))
               (rule "eqSymm" (formula "13") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "13") (term "1,1,0,1,0"))
               (rule "times_zero_2" (formula "13") (term "1,1,1,0,1,0"))
               (rule "add_zero_right" (formula "13") (term "1,1,0,1,0"))
               (rule "getOfSeqDef" (formula "13") (term "1,1,0,1,1,0"))
               (rule "castDel" (formula "13") (term "1,1,1,0,1,1,0"))
               (rule "castDel" (formula "13") (term "2,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "13") (term "0,2,1,1,1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "13") (term "1,1,0,1,1,0,1,1,0"))
               (rule "times_zero_2" (formula "13") (term "1,1,1,0,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "13") (term "1,1,0,1,1,0,1,1,0"))
               (rule "lenOfSeqDef" (formula "13") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "13") (term "1,1,1,0,0,1,1,0"))
               (rule "times_zero_2" (formula "13") (term "1,1,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "13") (term "1,1,1,0,0,1,1,0"))
               (rule "getOfSeqDef" (formula "13") (term "0,1,0,1,1,0"))
               (rule "castDel" (formula "13") (term "2,0,1,0,1,1,0"))
               (rule "castDel" (formula "13") (term "1,0,1,0,1,1,0"))
               (rule "add_zero_right" (formula "13") (term "0,2,1,0,1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "13") (term "1,1,0,0,1,0,1,1,0"))
               (rule "times_zero_2" (formula "13") (term "1,1,1,0,0,1,0,1,1,0"))
               (rule "add_zero_right" (formula "13") (term "1,1,0,0,1,0,1,1,0"))
               (rule "lenOfSeqDef" (formula "13") (term "0,0,1,0"))
               (rule "eqSymm" (formula "13") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "13") (term "1,1,0,1,0"))
               (rule "times_zero_2" (formula "13") (term "1,1,1,0,1,0"))
               (rule "add_zero_right" (formula "13") (term "1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0"))
               (rule "eqSymm" (formula "13") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0"))
               (rule "eqSymm" (formula "13") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,1,1,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0,1,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,1,0"))
               (rule "eqSymm" (formula "13") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "13") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,1,0"))
               (rule "eqSymm" (formula "13") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "13") (term "0,0,1,0,1,0"))
               (rule "array2seqDef" (formula "19") (term "1,1,0,1,0,0,0,0,1,1,0,1") (inst "u=u"))
               (rule "eqSymm" (formula "19") (term "1,0,1,0,0,0,0,1,1,0,1"))
               (rule "eqSeqDef" (formula "19") (term "1,0,1,0,0,0,0,1,1,0,1") (inst "iv=iv"))
               (rule "lenOfSeqDef" (formula "19") (term "0,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "eqSymm" (formula "19") (term "0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_zero_right" (formula "19") (term "1,1,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "getOfSeqDef" (formula "19") (term "1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "castDel" (formula "19") (term "1,1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "castDel" (formula "19") (term "2,1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_zero_right" (formula "19") (term "0,2,1,1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "lenOfSeqDef" (formula "19") (term "1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "19") (term "1,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "times_zero_2" (formula "19") (term "1,1,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_zero_right" (formula "19") (term "1,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "getOfSeqDef" (formula "19") (term "0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "castDel" (formula "19") (term "2,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "castDel" (formula "19") (term "1,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_zero_right" (formula "19") (term "0,2,1,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "times_zero_2" (formula "19") (term "1,1,1,0,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_zero_right" (formula "19") (term "1,1,0,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "lenOfSeqDef" (formula "19") (term "0,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "eqSymm" (formula "19") (term "0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_zero_right" (formula "19") (term "1,1,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_zero_right" (formula "19") (term "0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_zero_right" (formula "19") (term "0,0,1,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_zero_right" (formula "19") (term "0,0,0,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "19") (term "0,1,0,1,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "19") (term "0,0,1,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "boxToDiamond" (formula "1") (term "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "nnf_imp2or" (formula "13") (term "0"))
               (rule "nnf_imp2or" (formula "19") (term "0,1,0,0,1,1,0,1"))
               (rule "nnf_imp2or" (formula "12") (term "0"))
               (rule "nnf_notAnd" (formula "13") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
               (rule "mul_literals" (formula "13") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "12") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "12") (term "0,1,1,0"))
               (rule "nnf_notAnd" (formula "12") (term "0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "19") (term "0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,1,0,0,1,1,0,1"))
               (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0,1,1,0,1"))
               (rule "nnf_imp2or" (formula "19") (term "0,1,0,0,0,0,1,1,0,1"))
               (rule "nnf_notAnd" (formula "19") (term "0,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0,0,0,0,1,1,0,1"))
               (rule "nnf_imp2or" (formula "19") (term "0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "nnf_notAnd" (formula "19") (term "0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "19") (term "1,0,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "commute_or_2" (formula "12") (term "0,1,1,0"))
               (rule "commute_or" (formula "13") (term "0,0"))
               (rule "compound_less_than_comparison_2" (formula "14") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
               (rule "variableDeclarationAssign" (formula "14") (term "1"))
               (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_4"))
               (rule "assignment" (formula "14") (term "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "variableDeclarationAssign" (formula "14") (term "1"))
               (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_5"))
               (rule "assignment_read_length" (formula "14") (term "1"))
               (branch "Normal Execution (_arr_0 != null)"
                  (builtin "One Step Simplification" (formula "15"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "19")))
                  (rule "false_right" (formula "14"))
                  (rule "ifthenelse_to_or_right" (formula "12") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,1,1,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,0,1,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,1,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,1,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,0"))
                  (rule "commute_or" (formula "12") (term "0,0,1,1,0"))
                  (rule "shift_paren_or" (formula "12") (term "1,0,1,0"))
                  (rule "less_than_comparison_simple" (formula "14") (term "1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,0,0,1,0"))
                  (rule "methodCallEmpty" (formula "14") (term "1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "methodCallParamThrow" (formula "19") (term "1,0,0,1"))
                  (rule "emptyModality" (formula "14") (term "1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "notRight" (formula "14"))
                  (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0"))
                  (rule "qeq_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "ifthenelse_to_or_left" (formula "12") (term "1,0,0,1,0"))
                  (rule "eqSymm" (formula "12") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,1,0,0,1,0"))
                  (rule "commute_or" (formula "12") (term "1,1,0,0,1,0"))
                  (rule "cnf_rightDist" (formula "12") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "12") (term "1,0,0,1,0"))
                  (rule "inEqSimp_or_subsumption4" (formula "12") (term "0,1,0,0,1,0"))
                  (rule "greater_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "shift_paren_or" (formula "12") (term "0,0,0,1,0"))
                  (rule "ifthenelse_to_or_right" (formula "12") (term "0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,1,1,0,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,1,1,0,0,0,1,1,0"))
                  (rule "commute_or" (formula "12") (term "0,0,1,1,0"))
                  (rule "commute_or_2" (formula "12") (term "0,1,1,0"))
                  (rule "commute_or" (formula "12") (term "1,1,0,1,1,0"))
                  (rule "commute_or_2" (formula "12") (term "0,1,0,1,1,0"))
                  (rule "commute_or_2" (formula "12") (term "0,1,1,0,1,1,0"))
                  (rule "commute_or" (formula "12") (term "0,0,1,0,1,1,0"))
                  (rule "commute_or" (formula "12") (term "0,0,1,1,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "12") (term "1,1,0,1,1,0"))
                  (rule "commute_or_2" (formula "12") (term "0,1,1,0,1,1,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "12") (term "0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "12") (term "1,1,0,0,1,1,0,1,1,0"))
                  (rule "qeq_literals" (formula "12") (term "1,0,0,1,1,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "shift_paren_or" (formula "12") (term "1,1,0,1,1,0"))
                  (rule "commute_or" (formula "12") (term "0,1,1,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "12") (term "0,1,1,0"))
                  (rule "commute_or_2" (formula "12") (term "0,0,1,1,0"))
                  (rule "shift_paren_or" (formula "12") (term "1,0,1,1,0"))
                  (rule "commute_or_2" (formula "12") (term "0,1,0,1,1,0"))
                  (rule "shift_paren_or" (formula "12") (term "0,0,0,1,1,0"))
                  (rule "commute_or_2" (formula "12") (term "0,0,1,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "shift_paren_or" (formula "12") (term "0,0,0,0,1,1,0"))
                  (rule "commute_or" (formula "12") (term "0,0,0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "ifUnfold" (formula "18") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_6"))
                  (rule "compound_less_than_comparison_2" (formula "18") (term "1") (inst "#v0=x_7") (inst "#v1=x_8"))
                  (rule "variableDeclarationAssign" (formula "18") (term "1"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_7"))
                  (rule "assignment" (formula "18") (term "1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "variableDeclarationAssign" (formula "18") (term "1"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_8"))
                  (rule "assignment_read_length" (formula "18") (term "1"))
                  (branch "Normal Execution (_arr_0 != null)"
                     (builtin "One Step Simplification" (formula "19"))
                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
                     (rule "false_right" (formula "18"))
                     (rule "less_than_comparison_simple" (formula "18") (term "1"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0"))
                     (rule "replace_known_left" (formula "18") (term "0,0,1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "all_pull_out1" (formula "12") (term "1,0"))
                     (rule "shift_paren_and" (formula "12") (term "0,1,0"))
                     (rule "all_pull_out3" (formula "12") (term "0"))
                     (rule "cnf_rightDist" (formula "12") (term "0,0"))
                     (rule "distr_forallAnd" (formula "12") (term "0"))
                     (rule "distr_forallAnd" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "commute_or_2" (formula "13") (term "0,0"))
                     (rule "commute_or_2" (formula "13") (term "0,0,0"))
                     (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                     (rule "cnf_rightDist" (formula "12") (term "0,0"))
                     (rule "distr_forallAnd" (formula "12") (term "0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "distr_forallAnd" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "commute_or_2" (formula "13") (term "0,0"))
                     (rule "commute_or_2" (formula "13") (term "0,0,0"))
                     (rule "cnf_rightDist" (formula "12") (term "0"))
                     (rule "distr_forallAnd" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_or_2" (formula "13") (term "0,0"))
                     (rule "commute_or" (formula "13") (term "0,0,0"))
                     (rule "cnf_rightDist" (formula "12") (term "0"))
                     (rule "distr_forallAnd" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "shift_paren_or" (formula "12") (term "0"))
                     (rule "commute_or" (formula "13") (term "0,0"))
                     (rule "shift_paren_or" (formula "12") (term "0,0"))
                     (rule "shift_paren_or" (formula "15") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "16") (term "0,0,0,0,0"))
                     (rule "ifthenelse_to_or_left" (formula "15") (term "0,0,0,0,0,0,0"))
                     (rule "eqSymm" (formula "15") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "15") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "commute_or" (formula "15") (term "0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "15") (term "0,0,0,0,0"))
                     (rule "commute_or_2" (formula "15") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "15") (term "0,0,0"))
                     (rule "commute_or_2" (formula "15") (term "0,0"))
                     (rule "commute_or_2" (formula "15") (term "0,1,0,0"))
                     (rule "commute_or" (formula "15") (term "1,1,0,0"))
                     (rule "commute_or" (formula "15") (term "0,0,1,0,0"))
                     (rule "cnf_rightDist" (formula "15") (term "1,1,0,0"))
                     (rule "cnf_rightDist" (formula "15") (term "0,0"))
                     (rule "distr_forallAnd" (formula "15") (term "0"))
                     (rule "distr_forallAnd" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "commute_or_2" (formula "15") (term "0,0"))
                     (rule "commute_or" (formula "16") (term "0,0"))
                     (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                     (rule "commute_or" (formula "16") (term "1,1,0,0"))
                     (rule "commute_or_2" (formula "15") (term "0,0,0,0"))
                     (rule "cnf_rightDist" (formula "16") (term "0,0"))
                     (rule "distr_forallAnd" (formula "16") (term "0"))
                     (rule "distr_forallAnd" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "commute_or_2" (formula "16") (term "0,0"))
                     (rule "shift_paren_or" (formula "17") (term "0,0"))
                     (rule "commute_or_2" (formula "16") (term "0,0,0"))
                     (rule "commute_or_2" (formula "17") (term "0,0,0"))
                     (rule "commute_or_2" (formula "16") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "15") (term "0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "17") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "16") (term "0,0,0,0,0"))
                     (rule "commute_or_2" (formula "15") (term "0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "17") (term "0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "16") (term "0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "commute_or" (formula "16") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_or_tautInEq1" (formula "16") (term "0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "16") (term "1,1,0,0,0,0,0,0"))
                     (rule "qeq_literals" (formula "16") (term "1,0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "shift_paren_or" (formula "15") (term "0,0,0,0,0,0,0"))
                     (rule "commute_or" (formula "15") (term "0,0,0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "ifSplit" (formula "23"))
                     (branch "if x_6 true"
                        (builtin "One Step Simplification" (formula "24"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "eval_order_array_access3" (formula "23") (term "1") (inst "#v0=x_arr_arr") (inst "#v2=x") (inst "#v1=x_arr"))
                        (rule "variableDeclarationAssign" (formula "23") (term "1"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr_arr_3"))
                        (rule "assignment" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "variableDeclarationAssign" (formula "23") (term "1"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_9"))
                        (rule "assignment" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "ifUnfold" (formula "23") (term "1") (inst "#boolv=x_10"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_10"))
                        (rule "compound_assignment_5_nonsimple" (formula "23") (term "1"))
                        (rule "ifElseUnfold" (formula "23") (term "1") (inst "#boolv=x_11"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_11"))
                        (rule "compound_less_equal_than_comparison_1" (formula "23") (term "1") (inst "#v0=x_12"))
                        (rule "variableDeclarationAssign" (formula "23") (term "1"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_12"))
                        (rule "eval_order_access2" (formula "23") (term "1") (inst "#v0=x_arr_arr_4"))
                        (rule "variableDeclarationAssign" (formula "23") (term "1"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr_arr_4"))
                        (rule "remove_parentheses_right" (formula "23") (term "1"))
                        (rule "assignment" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "assignment_read_length" (formula "23") (term "1"))
                        (branch "Normal Execution (x_arr_arr_4 != null)"
                           (builtin "One Step Simplification" (formula "24"))
                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")))
                           (rule "false_right" (formula "23"))
                           (rule "less_equal_than_comparison_simple" (formula "23") (term "1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "ifElseSplit" (formula "23"))
                           (branch "if x_11 true"
                              (builtin "One Step Simplification" (formula "24"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "ifEnterThen" (formula "24") (term "1"))
                              (rule "assignment" (formula "24") (term "1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "blockThrow" (formula "24") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "3") (term "0,0"))
                              (rule "add_zero_left" (formula "3") (term "0"))
                              (rule "tryCatchThrow" (formula "24") (term "1,0,0,1"))
                              (rule "ifElseUnfold" (formula "24") (term "1,0,0,1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "24") (term "1,0,0,1") (newnames "x_14"))
                              (rule "equality_comparison_simple" (formula "24") (term "1,0,0,1"))
                              (rule "throwUnfold" (formula "24") (term "1") (inst "#v0=a"))
                              (rule "variableDeclarationAssign" (formula "24") (term "1"))
                              (rule "variableDeclaration" (formula "24") (term "1") (newnames "a"))
                              (rule "instanceCreationAssignment" (formula "24") (term "1") (inst "#v0=a_1"))
                              (rule "variableDeclarationAssign" (formula "24") (term "1"))
                              (rule "variableDeclaration" (formula "24") (term "1") (newnames "a_1"))
                              (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "24") (term "1") (inst "#v0=a_2"))
                              (rule "variableDeclaration" (formula "24") (term "1") (newnames "a_2"))
                              (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "variableDeclaration" (formula "24") (term "1") (newnames "__NEW__"))
                              (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "24") (term "1") (inst "#v0=a_3"))
                              (rule "variableDeclaration" (formula "24") (term "1") (newnames "a_3"))
                              (rule "allocateInstance" (formula "24"))
                              (builtin "One Step Simplification" (formula "25"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                              (rule "wellFormedStorePrimitive" (formula "1") (term "0,0,1,0"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "13"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1"))
                              (rule "blockEmpty" (formula "27") (term "1"))
                              (rule "assignment" (formula "27") (term "1"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "wellFormedMemsetArrayObject" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                              (rule "wellFormedCreate" (formula "1") (term "0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "21"))
                              (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010101_5" (formula "21") (term "0"))
                              (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "assignment_write_attribute_this" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallWithinClass" (formula "28") (term "1"))
                              (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallSuper" (formula "28") (term "1"))
                              (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallSuper" (formula "28") (term "1"))
                              (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallSuper" (formula "28") (term "1"))
                              (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallSuper" (formula "28") (term "1"))
                              (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallSuper" (formula "28") (term "1"))
                              (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "blockEmpty" (formula "28") (term "1"))
                              (rule "assignment_write_attribute_this" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "1,0,1,0"))
                              (rule "assignment_write_attribute_this" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "1,0,1,0"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "blockEmpty" (formula "28") (term "1"))
                              (rule "methodCallReturnIgnoreResult" (formula "28") (term "1"))
                              (rule "methodCallReturn" (formula "28") (term "1"))
                              (rule "assignment" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "blockEmpty" (formula "28") (term "1"))
                              (rule "assignment" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallSuper" (formula "28") (term "1"))
                              (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallSuper" (formula "28") (term "1"))
                              (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallSuper" (formula "28") (term "1"))
                              (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallSuper" (formula "28") (term "1"))
                              (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallSuper" (formula "28") (term "1"))
                              (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "blockEmpty" (formula "28") (term "1"))
                              (rule "assignment_write_attribute_this" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "1,0,1,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "assignment_write_attribute_this" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "1,0,1,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "blockEmpty" (formula "28") (term "1"))
                              (rule "assignment_write_attribute" (formula "28") (term "1"))
                              (branch "Normal Execution (a_1 != null)"
                                 (builtin "One Step Simplification" (formula "29"))
                                 (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "23")))
                                 (rule "false_right" (formula "28"))
                                 (rule "assignment" (formula "28") (term "1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "tryCatchThrow" (formula "28") (term "1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "ifElseUnfold" (formula "28") (term "1") (inst "#boolv=x"))
                                 (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_15"))
                                 (rule "equality_comparison_simple" (formula "28") (term "1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "replace_known_right" (formula "28") (term "0,0,1,0") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "ifElseSplit" (formula "28"))
                                 (branch "if x_15 true"
                                    (builtin "One Step Simplification" (formula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_15 false"
                                    (builtin "One Step Simplification" (formula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "ifElseSplit" (formula "28"))
                                    (branch "if a instanceof Throwable true"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                       (rule "true_left" (formula "1"))
                                       (rule "variableDeclaration" (formula "28") (term "1") (newnames "t"))
                                       (rule "reference_type_cast" (formula "28") (term "1"))
                                       (branch "Normal Execution (a instanceof Throwable)"
                                          (builtin "One Step Simplification" (formula "29"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "blockEmpty" (formula "28") (term "1"))
                                          (rule "postincrement" (formula "28") (term "1"))
                                          (rule "compound_int_cast_expression" (formula "28") (term "1") (inst "#v=x"))
                                          (rule "variableDeclarationAssign" (formula "28") (term "1"))
                                          (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_16"))
                                          (rule "remove_parentheses_right" (formula "28") (term "1"))
                                          (rule "assignmentAdditionInt" (formula "28") (term "1"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "translateJavaAddInt" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "28") (term "0,1,0"))
                                          (rule "widening_identity_cast_5" (formula "28") (term "1"))
                                          (rule "assignment" (formula "28") (term "1"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "tryEmpty" (formula "28") (term "1"))
                                          (rule "methodCallEmpty" (formula "28") (term "1"))
                                          (rule "emptyModality" (formula "28") (term "1"))
                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "3")) (ifInst ""  (formula "5")) (ifInst ""  (formula "24")) (ifInst ""  (formula "26")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")))
                                          (rule "eqSymm" (formula "28") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,0,1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,0,1"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "1,1,0,1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,0,1,0,1,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "28") (term "1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,1,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "28") (term "0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,1,0,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,1,0,0,0,1,0"))
                                          (rule "precOfInt" (formula "28") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "1,1,1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,0,1,0,1,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "28") (term "1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,1,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,1,0,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,0,1,0,1,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "28") (term "1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,1,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,1,0,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "1,1,0,1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "1,1,1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,0,1,0,1,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "28") (term "1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "28") (term "0,1,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,1,1"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1"))
                                          (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,1,1"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,1,1"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,1,1"))
                                          (rule "add_zero_right" (formula "28") (term "0,1,1"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "1,1,1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "1,1,0,1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,0,1,0,1,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "28") (term "1,0,1,1,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,1,1"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "28") (term "0,0,1,1"))
                                          (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1,1"))
                                          (rule "add_literals" (formula "28") (term "1,0,1,1"))
                                          (rule "times_zero_1" (formula "28") (term "0,1,1"))
                                          (rule "leq_literals" (formula "28") (term "1,1"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "1,0,1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "1,1,1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,0,1,0,1,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "28") (term "1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "1,1,0,1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "1,1,1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "1,1,1,1,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "28") (term "1,1,1,1,0,1,1,0,1,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "28") (term "1"))
                                          (rule "times_zero_2" (formula "28") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "28") (term "0,1"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,1,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "28") (term "1,2,1,0,0,0,0,0,0,1,0,0,1,0,1,1,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "eqSymm" (formula "28") (term "1,0,1,1,0,1,0,0,0"))
                                          (rule "applyEq" (formula "28") (term "1,2,1,0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "27") (term "0,1,0,1,0,0,0"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,0,1,0,1,0,0,1,1,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,1,0,1,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,0,0,1,0,1,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,1,0,1,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,1,1,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,1,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,0,0,1,0,0,1,0,1,1,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "27") (term "1,0,1,1,0,1,0,0,0"))
                                          (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "13") (term "1,0"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "27") (term "0,1,0,1,0,0,0"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,1,0,1,0,1,1,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,1,1,0,1,0,1,1,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,1,1,1,0,1,1,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,1,1,1,1,0,1,1,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                          (rule "mul_literals" (formula "27") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                          (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (term "0,0,0") (ifseqformula "12"))
                                          (rule "leq_literals" (formula "27") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "ClassCastException (!(a instanceof Throwable))"
                                          (builtin "One Step Simplification" (formula "29"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "closeTrue" (formula "28"))
                                       )
                                    )
                                    (branch "if a instanceof Throwable false"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch "Null Reference (a_1 = null)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "if x_11 false"
                              (builtin "One Step Simplification" (formula "24"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "inEqSimp_leqRight" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "less_than_comparison_simple" (formula "24") (term "1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,0,0,1,0"))
                              (rule "blockEmpty" (formula "24") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,1,0"))
                              (rule "mul_literals" (formula "24") (term "1,0,0,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,1,0") (ifseqformula "12"))
                              (rule "qeq_literals" (formula "24") (term "0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "ifSplit" (formula "24"))
                              (branch "if x_10 true"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_10 false"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "variableDeclarationAssign" (formula "24") (term "1"))
                                 (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr"))
                                 (rule "methodCallWithAssignmentUnfoldArguments" (formula "24") (term "1"))
                                 (rule "variableDeclarationAssign" (formula "24") (term "1"))
                                 (rule "variableDeclaration" (formula "24") (term "1") (newnames "var"))
                                 (rule "assignment_array2" (formula "24") (term "1"))
                                 (branch "Normal Execution (_arr_0 != null)"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
                                    (rule "orRight" (formula "24"))
                                    (rule "inEqSimp_leqRight" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "25"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=arr_1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "24")))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000010101_6" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "23")))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000010101_12" (formula "24") (term "0,1,0"))
                                    (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore_copyOf_0,result_0,exc_0,heapAfter_copyOf,anon_heap_copyOf") (contract "verif.utils.MessageTools[verif.utils.MessageTools::copyOf([B)].JML normal_behavior operation contract.0"))
                                    (branch "Post (copyOf)"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,1,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "notLeft" (formula "25"))
                                       (rule "notLeft" (formula "24"))
                                       (rule "orRight" (formula "25"))
                                       (rule "eqSymm" (formula "24"))
                                       (rule "replace_known_right" (formula "23") (term "0,0,1") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")) (ifInst ""  (formula "26")))
                                       (rule "dismissNonSelectedField" (formula "25") (term "0"))
                                       (rule "assignment" (formula "32") (term "1"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "blockEmpty" (formula "32") (term "1"))
                                       (rule "assignment_to_reference_array_component" (formula "32") (term "1"))
                                       (branch "Normal Execution (x_arr_arr_3 != null)"
                                          (builtin "One Step Simplification" (formula "33"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "13")))
                                          (rule "andLeft" (formula "1"))
                                          (rule "array_store_known_dynamic_array_type" (formula "2") (ifseqformula "7"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "29")))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_ltToLeq" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,1,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "33") (term "1,2,1,0,0,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "eqSymm" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                          (rule "applyEq" (formula "26") (term "1,2,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,1,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,1,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "15") (term "0,0,0,0,0,0,0,0"))
                                          (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "12") (term "1,0"))
                                          (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "array2seqDef" (formula "22") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "array2seqDef" (formula "22") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "eqSeqDef" (formula "22") (inst "iv=iv"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "lenOfSeqDef" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "23") (term "1,1,1,0,0"))
                                          (rule "times_zero_2" (formula "23") (term "1,1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "1,1,1,0,0"))
                                          (rule "lenOfSeqDef" (formula "22") (term "0"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "polySimp_elimSub" (formula "22") (term "1,1"))
                                          (rule "times_zero_2" (formula "22") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "22") (term "1,1"))
                                          (rule "getOfSeqDef" (formula "23") (term "0,1,0"))
                                          (rule "castDel" (formula "23") (term "1,0,1,0"))
                                          (rule "castDel" (formula "23") (term "2,0,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0"))
                                          (rule "eqSymm" (formula "23") (term "1,0"))
                                          (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0"))
                                          (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0"))
                                          (rule "lenOfSeqDef" (formula "22") (term "0"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "polySimp_elimSub" (formula "22") (term "1,1"))
                                          (rule "mul_literals" (formula "22") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "22") (term "1,1"))
                                          (rule "getOfSeqDef" (formula "23") (term "0,1,0"))
                                          (rule "castDel" (formula "23") (term "1,0,1,0"))
                                          (rule "castDel" (formula "23") (term "2,0,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0"))
                                          (rule "eqSymm" (formula "23") (term "1,0"))
                                          (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "1,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0"))
                                          (rule "eqSymm" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0"))
                                          (rule "eqSymm" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,1,0"))
                                          (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                                          (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0"))
                                          (rule "eqSymm" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                                          (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0"))
                                          (rule "eqSymm" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                          (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                                          (rule "simplifySelectOfMemset" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                          (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "nnf_imp2or" (formula "23") (term "0"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                          (rule "tryEmpty" (formula "31") (term "1"))
                                          (rule "blockEmpty" (formula "31") (term "1"))
                                          (rule "commute_or_2" (formula "23") (term "0"))
                                          (rule "commute_or" (formula "23") (term "0,0"))
                                          (rule "postincrement" (formula "31") (term "1"))
                                          (rule "compound_int_cast_expression" (formula "31") (term "1") (inst "#v=x"))
                                          (rule "variableDeclarationAssign" (formula "31") (term "1"))
                                          (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_13"))
                                          (rule "remove_parentheses_right" (formula "31") (term "1"))
                                          (rule "assignmentAdditionInt" (formula "31") (term "1"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "translateJavaAddInt" (formula "31") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "31") (term "0,1,0"))
                                          (rule "widening_identity_cast_5" (formula "31") (term "1"))
                                          (rule "assignment" (formula "31") (term "1"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "arrayLengthNotNegative" (formula "2") (term "1"))
                                          (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                          (rule "arrayLengthIsAShort" (formula "8") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "ifthenelse_to_or_right" (formula "23") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,1,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,1,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "23") (term "1,0,1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,1,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,1,0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1,1,0,0,0"))
                                          (rule "commute_or" (formula "23") (term "0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0"))
                                          (rule "commute_or" (formula "23") (term "1,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,1,1,0"))
                                          (rule "tryEmpty" (formula "31") (term "1"))
                                          (rule "cnf_rightDist" (formula "23") (term "1,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "23") (term "0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "23") (term "1,0,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "shift_paren_or" (formula "23") (term "1,1,0"))
                                          (rule "commute_or" (formula "23") (term "0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "23") (term "0"))
                                          (rule "distr_forallAnd" (formula "23"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "commute_or_2" (formula "23") (term "0"))
                                          (rule "shift_paren_or" (formula "24") (term "0"))
                                          (rule "commute_or_2" (formula "24") (term "0,0"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0"))
                                          (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "methodCallEmpty" (formula "32") (term "1"))
                                          (rule "emptyModality" (formula "32") (term "1"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "28")) (ifInst ""  (formula "30")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                                          (rule "polySimp_mulComm0" (formula "32") (term "0,0,1"))
                                          (rule "polySimp_rightDist" (formula "32") (term "0,0,1"))
                                          (rule "mul_literals" (formula "32") (term "0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,1,0,0,0,1,0"))
                                          (rule "precOfInt" (formula "32") (term "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,1,1"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,0,1,1"))
                                          (rule "polySimp_pullOutFactor2b" (formula "32") (term "0,1,1"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,1,1"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,1,1"))
                                          (rule "add_zero_right" (formula "32") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,1,1"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,0,1,1"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "32") (term "0,0,1,1"))
                                          (rule "polySimp_pullOutFactor1" (formula "32") (term "0,1,1"))
                                          (rule "add_literals" (formula "32") (term "1,0,1,1"))
                                          (rule "times_zero_1" (formula "32") (term "0,1,1"))
                                          (rule "leq_literals" (formula "32") (term "1,1"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
                                          (rule "times_zero_2" (formula "32") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "32") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                          (rule "mul_literals" (formula "32") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                                          (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_subsumption1" (formula "32") (term "0,0,0") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "andRight" (formula "32"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "32"))
                                             (branch "Case 1"
                                                (rule "allRight" (formula "32") (inst "sk=j_3"))
                                                (rule "cutUpperBound" (formula "32") (ifseqformula "12"))
                                                (branch "Case 1"
                                                   (rule "crossInst" (formula "13") (inst "sk=j_17") (ifseqformula "33"))
                                                   (rule "orRight" (formula "34"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "inEqSimp_geqRight" (formula "36"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "36"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0,1,1,0,1"))
                                                   (rule "eqSymm" (formula "37") (term "1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,1,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0,1,1,0,1"))
                                                   (rule "eqSymm" (formula "37") (term "1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,1,0,1"))
                                                   (rule "applyEq" (formula "37") (term "0,2,0,1,1,1,0,0,1") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "37") (term "0,2,1,1,0,1,0,1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "37") (term "0,2,0,0,0,1,1,0,0,1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch "Case 2"
                                                   (rule "crossInst" (formula "13") (inst "sk=j_4") (ifseqformula "33"))
                                                   (rule "orRight" (formula "34"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "inEqSimp_leqRight" (formula "35"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "36"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0,1,1,0,1"))
                                                   (rule "eqSymm" (formula "37") (term "1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,1,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0,1,1,0,1"))
                                                   (rule "eqSymm" (formula "37") (term "1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,1,0,1"))
                                                   (rule "applyEqRigid" (formula "15") (term "0,2,0,0,1,0") (ifseqformula "14"))
                                                   (rule "applyEqRigid" (formula "15") (term "0,2,0,0,1") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "14"))
                                                   (rule "applyEqRigid" (formula "15") (term "0,1,0,0") (ifseqformula "14"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,1,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,1,0,1,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,1,1,0,1"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,1,0,1,1,0,1"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,1,1,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0,1"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0,1"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                                   (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "29") (term "0,0"))
                                                   (rule "qeq_literals" (formula "29") (term "0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "false_right" (formula "29"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "pullOutSelect" (formula "36") (term "0,0,0,1,0") (inst "selectSK=arr_7"))
                                                   (rule "applyEq" (formula "37") (term "1,1,1,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "37") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "37") (term "0,1,1,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "pullOutSelect" (formula "37") (term "0,0,0,0,0") (inst "selectSK=arr_8"))
                                                   (rule "applyEq" (formula "38") (term "0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "38") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "38") (term "0,1,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "38") (term "1,1,0,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "38") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "17") (term "0,0,1") (inst "selectSK=arr_9"))
                                                   (rule "simplifySelectOfAnon" (formula "17"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "applyEqReverse" (formula "18") (term "0,0,1") (ifseqformula "17"))
                                                   (rule "hideAuxiliaryEq" (formula "17"))
                                                   (rule "pullOutSelect" (formula "17") (term "0,0,1,0") (inst "selectSK=arr_10"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "17"))
                                                   (rule "simplifySelectOfAnon" (formula "17"))
                                                   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "38")))
                                                   (rule "eqSymm" (formula "17") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0"))
                                                   (rule "ifthenelse_negated" (formula "17") (term "0"))
                                                   (rule "pullOutSelect" (formula "2") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "simplifySelectOfMemset" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "replaceKnownSelect_taclet011000010101_2" (formula "2") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet011000010101_6" (formula "2") (term "0"))
                                                   (rule "applyEqReverse" (formula "18") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "simplifySelectOfMemset" (formula "17"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "39") (term "0,0,0,1,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "39") (term "1,1,1,1,0,1") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "39") (term "0,1,1,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                                                   (rule "eqSymm" (formula "16") (term "0,0,0,0"))
                                                   (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "34"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "simplifySelectOfStore" (formula "16"))
                                                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "34")))
                                                   (rule "simplifySelectOfStore" (formula "16"))
                                                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "34")))
                                                   (rule "simplifySelectOfStore" (formula "16"))
                                                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "34")))
                                                   (rule "simplifySelectOfCreate" (formula "16"))
                                                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "34")) (ifInst ""  (formula "36")))
                                                   (rule "applyEqReverse" (formula "38") (term "0,1,1,0") (ifseqformula "16"))
                                                   (rule "applyEqReverse" (formula "17") (term "0,0,1,0") (ifseqformula "16"))
                                                   (rule "applyEqReverse" (formula "38") (term "0,0,0,1,0") (ifseqformula "16"))
                                                   (rule "applyEqReverse" (formula "38") (term "1,1,1,1,0,1") (ifseqformula "16"))
                                                   (rule "applyEqReverse" (formula "38") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "16"))
                                                   (rule "hideAuxiliaryEq" (formula "16"))
                                                   (rule "eqSymm" (formula "37") (term "0"))
                                                   (rule "eqSymm" (formula "37") (term "1,0,1"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_11"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                                   (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                                   (rule "times_zero_1" (formula "4") (term "0,0"))
                                                   (rule "add_zero_left" (formula "4") (term "0"))
                                                   (rule "pullOutSelect" (formula "1") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__7"))
                                                   (rule "simplifySelectOfMemset" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "allLeft" (formula "11") (inst "t=i_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "11") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "11") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "11") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "notLeft" (formula "11"))
                                                   (rule "ifthenelse_to_or_left" (formula "28") (term "0,0,0,0"))
                                                   (rule "eqSymm" (formula "28") (term "1,1,0,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "28") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "arrayLengthNotNegative" (formula "27") (term "1,0"))
                                                   (rule "arrayLengthNotNegative" (formula "28") (term "1,1"))
                                                   (rule "arrayLengthIsAShort" (formula "29") (term "1,1"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "arrayLengthIsAShort" (formula "29") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "ifthenelse_split" (formula "31") (term "1,1,0"))
                                                   (branch "result_0.length ≥ 1 TRUE"
                                                      (rule "replace_known_left" (formula "30") (term "0,1,1,0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "31"))
                                                      (rule "leq_literals" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "commute_or_2" (formula "31") (term "0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "31") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "31") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "31") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "31") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "31") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "commute_or" (formula "29") (term "0,0"))
                                                      (rule "commute_or_2" (formula "29") (term "0"))
                                                      (rule "commute_or_2" (formula "29") (term "0,1,0"))
                                                      (rule "commute_or" (formula "29") (term "1,1,0"))
                                                      (rule "commute_or" (formula "29") (term "0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "29") (term "1,1,0"))
                                                      (rule "cnf_rightDist" (formula "29") (term "0"))
                                                      (rule "distr_forallAnd" (formula "29"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "commute_or" (formula "30") (term "0"))
                                                      (rule "shift_paren_or" (formula "29") (term "0"))
                                                      (rule "commute_or_2" (formula "29") (term "0,0"))
                                                      (rule "commute_or" (formula "30") (term "1,1,0"))
                                                      (rule "cnf_rightDist" (formula "30") (term "0"))
                                                      (rule "distr_forallAnd" (formula "30"))
                                                      (rule "andLeft" (formula "30"))
                                                      (rule "commute_or_2" (formula "31") (term "0"))
                                                      (rule "commute_or_2" (formula "30") (term "0"))
                                                      (rule "shift_paren_or" (formula "31") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "30") (term "0,0"))
                                                      (rule "commute_or" (formula "30") (term "0,0,0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "30") (term "0,0"))
                                                      (rule "add_zero_right" (formula "30") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "30") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                                      (rule "commute_or" (formula "29") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "cut_direct" (formula "16") (term "0,0"))
                                                      (branch "CUT: j_3 ≥ i_0 TRUE"
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "2"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "16"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "41") (term "1,1,1,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "41") (term "0,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "41") (term "0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_left" (formula "40") (term "0,1,0") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "31")))
                                                         (rule "applyEq" (formula "40") (term "0,2,0,0,0,0,0") (ifseqformula "15"))
                                                         (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "39") (term "0,2,0,1,0,0") (ifseqformula "14"))
                                                         (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "27"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "allRight" (formula "39") (inst "sk=iv_5"))
                                                         (rule "cutUpperBound" (formula "39") (ifseqformula "16"))
                                                         (branch "Case 1"
                                                            (rule "crossInst" (formula "17") (inst "sk=j_16") (ifseqformula "40"))
                                                            (rule "orRight" (formula "41"))
                                                            (rule "andLeft" (formula "17"))
                                                            (rule "orRight" (formula "42"))
                                                            (rule "eqSymm" (formula "1"))
                                                            (rule "inEqSimp_geqRight" (formula "43"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "43"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "1")))
                                                            (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                                                            (rule "eqSymm" (formula "44"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                                                            (rule "eqSymm" (formula "44"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0,1"))
                                                            (rule "applyEq" (formula "4") (term "0") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4"))
                                                            (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "0"))
                                                            (rule "qeq_literals" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "16"))
                                                            (rule "inEqSimp_homoInEq1" (formula "17"))
                                                            (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                                            (rule "add_literals" (formula "17") (term "1,0"))
                                                            (rule "times_zero_1" (formula "17") (term "0"))
                                                            (rule "leq_literals" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "applyEq" (formula "15") (term "1") (ifseqformula "16"))
                                                            (rule "applyEq" (formula "33") (term "0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "crossInst" (formula "17") (inst "sk=j_15") (ifseqformula "40"))
                                                            (rule "orRight" (formula "41"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "andLeft" (formula "16"))
                                                            (rule "orRight" (formula "42"))
                                                            (rule "eqSymm" (formula "33"))
                                                            (rule "inEqSimp_geqRight" (formula "43"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "43"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "1")))
                                                            (rule "inEqSimp_homoInEq0" (formula "44") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                                                            (rule "applyEq" (formula "3") (term "0") (ifseqformula "16"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3"))
                                                            (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "0"))
                                                            (rule "qeq_literals" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "15"))
                                                            (rule "inEqSimp_homoInEq1" (formula "16"))
                                                            (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                                            (rule "add_literals" (formula "16") (term "1,0"))
                                                            (rule "times_zero_1" (formula "16") (term "0"))
                                                            (rule "leq_literals" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "applyEq" (formula "14") (term "1") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "42") (term "0,2,0,1,0,0,0") (ifseqformula "15"))
                                                            (rule "applyEq" (formula "17") (term "0,2,0,0,1") (ifseqformula "16"))
                                                            (rule "applyEqRigid" (formula "17") (term "0,1,0,0") (ifseqformula "16"))
                                                            (rule "applyEqRigid" (formula "17") (term "0,2,0,0,1,0") (ifseqformula "16"))
                                                            (rule "applyEq" (formula "42") (term "0,2,1,1,0") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "17") (term "0,0,0,0") (ifseqformula "16"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,1"))
                                                            (rule "replace_known_left" (formula "42") (term "0,1") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                            (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "2"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "33") (term "0,0"))
                                                            (rule "leq_literals" (formula "33") (term "0"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "false_right" (formula "33"))
                                                            (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "17") (term "0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "pullOutSelect" (formula "41") (term "1") (inst "selectSK=arr_34"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                            (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "40"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "36")))
                                                            (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                            (rule "replaceKnownSelect_taclet00011000010101_13" (formula "1") (term "0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00011000010101_18" (formula "1") (term "0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "35"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "41") (term "1") (ifseqformula "24") (ifseqformula "36"))
                                                            (rule "pullOutSelect" (formula "41") (term "1,0") (inst "selectSK=arr_35"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                            (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "40"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                                            (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                            (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "25") (ifseqformula "34"))
                                                            (rule "pullOutSelect" (formula "18") (term "0,0,1") (inst "selectSK=arr_36"))
                                                            (rule "simplifySelectOfAnon" (formula "18"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "applyEqReverse" (formula "19") (term "0,0,1") (ifseqformula "18"))
                                                            (rule "hideAuxiliaryEq" (formula "18"))
                                                            (rule "pullOutSelect" (formula "18") (term "0,0,1,0") (inst "selectSK=arr_37"))
                                                            (rule "simplifySelectOfAnon" (formula "18"))
                                                            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "42")))
                                                            (rule "eqSymm" (formula "18") (term "0,0,0"))
                                                            (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "39"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "dismissNonSelectedField" (formula "18") (term "2,0"))
                                                            (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0"))
                                                            (rule "replaceKnownSelect_taclet10000011000010101_25" (formula "18") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_26" (formula "18") (term "0,0,0,0"))
                                                            (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "9"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "simplifySelectOfMemset" (formula "18"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "dismissNonSelectedField" (formula "18") (term "2,0"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "18") (term "0,0"))
                                                            (rule "eqSymm" (formula "18") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "18") (term "0,0,0,0") (ifseqformula "39"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "simplifySelectOfStore" (formula "18"))
                                                            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "39")))
                                                            (rule "simplifySelectOfStore" (formula "18"))
                                                            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "39")))
                                                            (rule "simplifySelectOfCreate" (formula "18"))
                                                            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "39")) (ifInst ""  (formula "41")))
                                                            (rule "applyEqReverse" (formula "19") (term "0,0,1,0") (ifseqformula "18"))
                                                            (rule "hideAuxiliaryEq" (formula "18"))
                                                            (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_38"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                                            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                                            (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                            (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "13") (ifseqformula "35"))
                                                            (rule "pullOutSelect" (formula "2") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__13"))
                                                            (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                                            (rule "simplifySelectOfMemset" (formula "2"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "simplifySelectOfStore" (formula "2"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "simplifySelectOfStore" (formula "2"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "simplifySelectOfStore" (formula "2"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "simplifySelectOfCreate" (formula "2"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                                            (rule "castDel" (formula "2") (term "1,0"))
                                                            (rule "eqSymm" (formula "2") (term "0,0"))
                                                            (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "36"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                                            (rule "applyEqReverse" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_39"))
                                                            (rule "simplifySelectOfMemset" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfCreate" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                            (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "9") (ifseqformula "35"))
                                                            (rule "ifthenelse_split" (formula "31") (term "0"))
                                                            (branch "arr_0[i_0].length ≥ 1 TRUE"
                                                               (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                                               (rule "applyEq" (formula "43") (term "0,0,0") (ifseqformula "31"))
                                                               (rule "replace_known_left" (formula "43") (term "0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "34"))
                                                               (rule "leq_literals" (formula "30") (term "0"))
                                                               (builtin "One Step Simplification" (formula "30"))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "inEqSimp_or_tautInEq3" (formula "32") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "32") (term "0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "1,0,1,0"))
                                                               (rule "times_zero_1" (formula "32") (term "0,1,0"))
                                                               (rule "leq_literals" (formula "32") (term "1,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "true_left" (formula "32"))
                                                               (rule "cut_direct" (formula "19") (term "0,0"))
                                                               (branch "CUT: iv_5 ≥ i_0 TRUE"
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch "arr_0[i_0].<created> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "eqSymm" (formula "40"))
                                                                     (rule "allLeft" (formula "30") (inst "t=iv_5"))
                                                                     (rule "replaceKnownSelect_taclet10010000011000010101_47" (formula "30") (term "0,0,0"))
                                                                     (rule "replaceKnownSelect_taclet10010000011000010101_44" (formula "30") (term "1,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00010010000011000010101_68" (formula "30") (term "0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10010000011000010101_45" (formula "30") (term "1,0,0"))
                                                                     (rule "eqSymm" (formula "30") (term "0,0"))
                                                                     (rule "narrowSelectArrayType" (formula "30") (term "0,0,0") (ifseqformula "25") (ifseqformula "36"))
                                                                     (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "41"))
                                                                     (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "3"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "30") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "30") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "30") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "closeFalse" (formula "30"))
                                                                  )
                                                                  (branch "arr_0[i_0].<created> = TRUE FALSE"
                                                                     (rule "referencedObjectIsCreatedRight" (formula "33") (ifseqformula "34"))
                                                                     (rule "close" (formula "33") (ifseqformula "9"))
                                                                  )
                                                               )
                                                               (branch "CUT: iv_5 ≥ i_0 FALSE"
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_geqRight" (formula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                                                  (rule "times_zero_1" (formula "4") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                  (rule "mul_literals" (formula "4") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "4"))
                                                                  (rule "leq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                  (branch "arr_0[i_0].<created> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "41"))
                                                                     (rule "allLeft" (formula "31") (inst "t=iv_5"))
                                                                     (rule "replaceKnownSelect_taclet10010000011000010101_47" (formula "31") (term "0,0,0"))
                                                                     (rule "replaceKnownSelect_taclet10010000011000010101_44" (formula "31") (term "1,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet01010010000011000010101_68" (formula "31") (term "0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10010000011000010101_45" (formula "31") (term "1,0,0"))
                                                                     (rule "eqSymm" (formula "31") (term "0,0"))
                                                                     (rule "narrowSelectArrayType" (formula "31") (term "0,0,0") (ifseqformula "26") (ifseqformula "37"))
                                                                     (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "42"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "4"))
                                                                     (rule "qeq_literals" (formula "31") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "5"))
                                                                     (rule "andLeft" (formula "31"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "31"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                                     (rule "add_literals" (formula "31") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "31") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "31") (term "0"))
                                                                     (rule "leq_literals" (formula "31"))
                                                                     (rule "closeFalse" (formula "31"))
                                                                  )
                                                                  (branch "arr_0[i_0].<created> = TRUE FALSE"
                                                                     (rule "referencedObjectIsCreatedRight" (formula "34") (ifseqformula "35"))
                                                                     (rule "close" (formula "34") (ifseqformula "11"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "arr_0[i_0].length ≥ 1 FALSE"
                                                               (rule "eqSymm" (formula "31"))
                                                               (rule "inEqSimp_geqRight" (formula "35"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "applyEq" (formula "35") (term "0") (ifseqformula "32"))
                                                               (rule "qeq_literals" (formula "35"))
                                                               (rule "closeFalse" (formula "35"))
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: j_3 ≥ i_0 FALSE"
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_geqRight" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradEq3" (formula "2") (term "0,0") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "applyEqReverse" (formula "41") (term "0,0,0,1,1,0,0,1") (ifseqformula "2"))
                                                         (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,0,1") (ifseqformula "2"))
                                                         (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0") (ifseqformula "2"))
                                                         (rule "applyEqReverse" (formula "41") (term "1,1,1,1,0,1") (ifseqformula "2"))
                                                         (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "2"))
                                                         (rule "applyEqReverse" (formula "41") (term "0,1,1,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "eqSymm" (formula "40") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "40") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                         (rule "times_zero_1" (formula "2") (term "0,0"))
                                                         (rule "add_zero_left" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                                                         (rule "leq_literals" (formula "13") (term "0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "ifthenelse_split" (formula "27") (term "0"))
                                                         (branch "arr_0[i_0].length ≥ 1 TRUE"
                                                            (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "28"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "applyEq" (formula "30") (term "1,1,1,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                                            (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "30"))
                                                            (rule "leq_literals" (formula "26") (term "0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "inEqSimp_or_tautInEq3" (formula "28") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "1,0,1,0"))
                                                            (rule "times_zero_1" (formula "28") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "28") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "28"))
                                                            (rule "true_left" (formula "28"))
                                                            (rule "ifthenelse_split" (formula "37") (term "0,0"))
                                                            (branch " x_arr_arr_2[j_3]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 TRUE"
                                                               (rule "eqSymm" (formula "38") (term "0"))
                                                               (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "true_left" (formula "16"))
                                                               (rule "replace_known_left" (formula "37") (term "0,1,1,0,0,1") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "allLeft" (formula "21") (inst "t=j_3"))
                                                               (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "21") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "21") (term "0,0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "21"))
                                                               (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                               (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "21") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "21"))
                                                               (rule "notLeft" (formula "21"))
                                                               (rule "ifthenelse_split" (formula "38") (term "0,0"))
                                                               (branch "arr_0[j_3].length ≥ 1 TRUE"
                                                                  (rule "eqSymm" (formula "39") (term "0"))
                                                                  (rule "allLeft" (formula "13") (inst "t=j_3"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "13") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "allLeft" (formula "19") (inst "t=j_3"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "19") (term "0,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "19") (term "0,0,1"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "19") (term "0,0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "19") (term "0,0,1,0"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "19") (term "0,0,1,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "19") (term "0,0,1,0,0"))
                                                                  (rule "replace_known_left" (formula "19") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "allLeft" (formula "21") (inst "t=j_3"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "21") (term "0,1,0,1,0"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "21") (term "0,0,1,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "21") (term "0,1,0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "21") (term "0,0,1,0,0"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "21") (term "0,0,0,0,1,0"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "21") (term "0,0,1,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "21") (term "0,0,0,0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "21") (term "0,0,1,0,0,0"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "21") (term "1,0,0,0,0,0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "21") (term "1,0,0,0,0,0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "21") (term "0,0,1,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,1,0,0,0,0"))
                                                                  (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "inEqSimp_or_tautInEq1" (formula "21") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "21") (term "1,0,1,0"))
                                                                  (rule "times_zero_1" (formula "21") (term "0,1,0"))
                                                                  (rule "leq_literals" (formula "21") (term "1,0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0") (ifseqformula "10"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                                                  (rule "leq_literals" (formula "3") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "arrayLengthNotNegative" (formula "41") (term "1,1,1,0,1,1,0,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                                                                  (rule "leq_literals" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "arrayLengthIsAShort" (formula "41") (term "1,1,1,0,1,1,0,1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "allLeft" (formula "19") (inst "t=j_3"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "19") (term "0,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "19") (term "0,0,1"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "19") (term "0,0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "19") (term "0,0,1,0"))
                                                                  (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "allLeft" (formula "17") (inst "t=j_3"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "17") (term "0,1,1"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "17") (term "0,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "17") (term "0,1,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "17") (term "0,0,1"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "17") (term "0,0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "17") (term "0,0,1,0"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "17") (term "0,0,1,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "17") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0,0") (ifseqformula "6"))
                                                                  (rule "qeq_literals" (formula "17") (term "0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "17") (term "0,0,0") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                                                  (rule "leq_literals" (formula "17") (term "0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "3"))
                                                                  (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "17") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "17"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "allRight" (formula "42") (inst "sk=iv_4"))
                                                                  (rule "cutUpperBound" (formula "42") (ifseqformula "20"))
                                                                  (branch "Case 1"
                                                                     (rule "crossInst" (formula "21") (inst "sk=j_14") (ifseqformula "43"))
                                                                     (rule "orRight" (formula "44"))
                                                                     (rule "andLeft" (formula "21"))
                                                                     (rule "orRight" (formula "45"))
                                                                     (rule "eqSymm" (formula "1"))
                                                                     (rule "inEqSimp_leqRight" (formula "45"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "replace_known_left" (formula "47") (term "0,0,1") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "1")))
                                                                     (rule "inEqSimp_geqRight" (formula "46"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                                     (rule "eqSymm" (formula "47"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                                     (rule "eqSymm" (formula "47"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "0,0,1"))
                                                                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "20"))
                                                                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "19"))
                                                                     (rule "applyEq" (formula "23") (term "0,0,0,0") (ifseqformula "22"))
                                                                     (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "22"))
                                                                     (rule "applyEqRigid" (formula "23") (term "0,2,0,0,1,0") (ifseqformula "22"))
                                                                     (rule "applyEqRigid" (formula "23") (term "0,2,0,0,1") (ifseqformula "22"))
                                                                     (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "19"))
                                                                     (rule "applyEq" (formula "46") (term "1,0,0,0") (ifseqformula "19"))
                                                                     (rule "applyEq" (formula "46") (term "1,0,0,0") (ifseqformula "3"))
                                                                     (rule "eqSymm" (formula "46"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "46") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "46") (term "0,0,1"))
                                                                     (rule "qeq_literals" (formula "46") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "orRight" (formula "46"))
                                                                     (rule "notRight" (formula "46"))
                                                                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                     (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "2") (term "0"))
                                                                     (rule "leq_literals" (formula "2"))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "crossInst" (formula "21") (inst "sk=j_13") (ifseqformula "43"))
                                                                     (rule "orRight" (formula "44"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "andLeft" (formula "20"))
                                                                     (rule "orRight" (formula "45"))
                                                                     (rule "eqSymm" (formula "35"))
                                                                     (rule "inEqSimp_geqRight" (formula "46"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_leqRight" (formula "46"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "1")))
                                                                     (rule "inEqSimp_homoInEq0" (formula "47") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
                                                                     (rule "applyEq" (formula "37") (term "0") (ifseqformula "19"))
                                                                     (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "19"))
                                                                     (rule "applyEqRigid" (formula "23") (term "0,0,0,0") (ifseqformula "22"))
                                                                     (rule "applyEqRigid" (formula "23") (term "0,1,0,0") (ifseqformula "22"))
                                                                     (rule "applyEqRigid" (formula "23") (term "0,2,0,0,1") (ifseqformula "22"))
                                                                     (rule "applyEq" (formula "23") (term "0,2,0,0,1,0") (ifseqformula "22"))
                                                                     (rule "applyEq" (formula "47") (term "1,0,0,0") (ifseqformula "19"))
                                                                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "19"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "46") (term "1,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1"))
                                                                     (rule "mul_literals" (formula "46") (term "0,1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "46") (term "1,1,0,1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "replace_known_left" (formula "46") (term "0,1") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                                                                     (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                                     (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "36") (term "0,0"))
                                                                     (rule "leq_literals" (formula "36") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "false_right" (formula "36"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "22") (term "0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                     (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=arr_17"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "eqSymm" (formula "46"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                     (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "30") (ifseqformula "37"))
                                                                     (rule "pullOutSelect" (formula "23") (term "0,0,1") (inst "selectSK=arr_18"))
                                                                     (rule "simplifySelectOfAnon" (formula "23"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "applyEqReverse" (formula "24") (term "0,0,1") (ifseqformula "23"))
                                                                     (rule "hideAuxiliaryEq" (formula "23"))
                                                                     (rule "pullOutSelect" (formula "23") (term "0,0,1,0") (inst "selectSK=arr_19"))
                                                                     (rule "simplifySelectOfAnon" (formula "23"))
                                                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "46")))
                                                                     (rule "eqSymm" (formula "23") (term "0,0,0"))
                                                                     (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "ifthenelse_negated" (formula "23") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "23") (term "1,0"))
                                                                     (rule "dismissNonSelectedField" (formula "23") (term "0,0,0"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_25" (formula "23") (term "0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_26" (formula "23") (term "0,0,0"))
                                                                     (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "14"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "simplifySelectOfMemset" (formula "23"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                                                     (rule "eqSymm" (formula "23") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "23") (term "0,0,0,0") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "simplifySelectOfStore" (formula "23"))
                                                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "43")))
                                                                     (rule "simplifySelectOfStore" (formula "23"))
                                                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "43")))
                                                                     (rule "simplifySelectOfStore" (formula "23"))
                                                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "43")))
                                                                     (rule "simplifySelectOfCreate" (formula "23"))
                                                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "43")) (ifInst ""  (formula "45")))
                                                                     (rule "applyEqReverse" (formula "24") (term "0,0,1,0") (ifseqformula "23"))
                                                                     (rule "hideAuxiliaryEq" (formula "23"))
                                                                     (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_20"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "45"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                                                     (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=arr_21"))
                                                                     (rule "simplifySelectOfAnon" (formula "2"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                                                     (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                                     (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "39"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                                                                     (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "2") (term "0,0,0"))
                                                                     (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "20") (ifseqformula "39"))
                                                                     (rule "pullOutSelect" (formula "3") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__10"))
                                                                     (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                                                     (rule "simplifySelectOfMemset" (formula "3"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "simplifySelectOfStore" (formula "3"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "simplifySelectOfStore" (formula "3"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "simplifySelectOfStore" (formula "3"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "simplifySelectOfCreate" (formula "3"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")))
                                                                     (rule "castDel" (formula "3") (term "1,0"))
                                                                     (rule "eqSymm" (formula "3") (term "0,0"))
                                                                     (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "40"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")))
                                                                     (rule "applyEqReverse" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_22"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "47"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                                     (rule "pullOutSelect" (formula "2") (term "0,0,0,1,0,0") (inst "selectSK=java_lang_Object_created__11"))
                                                                     (rule "applyEq" (formula "1") (term "0,0,1,0,0") (ifseqformula "2"))
                                                                     (rule "simplifySelectOfMemset" (formula "2"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "simplifySelectOfStore" (formula "2"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "simplifySelectOfStore" (formula "2"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "simplifySelectOfStore" (formula "2"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "simplifySelectOfCreate" (formula "2"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                                                     (rule "castDel" (formula "2") (term "1,0"))
                                                                     (rule "eqSymm" (formula "2") (term "0,0"))
                                                                     (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "48"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0") (ifseqformula "2"))
                                                                     (rule "applyEqReverse" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_23"))
                                                                     (rule "simplifySelectOfMemset" (formula "3"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                                     (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                                     (rule "sortsDisjointModuloNull" (formula "3") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "3") (term "1,0,0,0,0") (ifseqformula "48"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                                                     (rule "simplifySelectOfStore" (formula "3"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "simplifySelectOfCreate" (formula "3"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                                                     (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "16") (ifseqformula "40"))
                                                                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_24"))
                                                                     (rule "simplifySelectOfMemset" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "48"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfCreate" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "allLeft" (formula "31") (inst "t=j_3"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "31") (term "0,1,0,1,0"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "31") (term "0,0,1,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "31") (term "0,1,0,1,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "31") (term "0,0,1,0,0"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "31") (term "0,0,0,0,1,0"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "31") (term "0,0,1,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "31") (term "0,0,0,0,1,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "31") (term "0,0,1,0,0,0"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "31") (term "1,0,0,0,0,0,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "31") (term "1,0,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0"))
                                                                     (rule "applyEq" (formula "31") (term "0,0,1,1,0") (ifseqformula "22"))
                                                                     (rule "replace_known_left" (formula "31") (term "0,1,1,0") (ifseqformula "8"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "22"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0,0") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "31") (term "0,1,0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0,0,0") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0"))
                                                                     (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
                                                                     (rule "leq_literals" (formula "31") (term "0,1,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "31") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "31") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "31") (term "1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "31") (term "0,1,0"))
                                                                     (rule "leq_literals" (formula "31") (term "1,0"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "true_left" (formula "31"))
                                                                     (rule "allLeft" (formula "29") (inst "t=j_3"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "29") (term "0,0,1,0,0"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "29") (term "0,1,0,1,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "29") (term "0,0,1,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "29") (term "0,1,0,1,0"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "29") (term "0,0,1,0,0,0"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "29") (term "0,0,0,0,1,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "29") (term "0,0,1,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "29") (term "0,0,0,0,1,0"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "29") (term "1,0,0,0,0,0,0,0,0"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "29") (term "1,1,0,0,0,0,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "29") (term "1,0,0,0,0,0,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "29") (term "1,1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                                                                     (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "22"))
                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                     (rule "applyEq" (formula "29") (term "0,0,1,1,0") (ifseqformula "22"))
                                                                     (rule "replace_known_left" (formula "29") (term "0,1,1,0") (ifseqformula "8"))
                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                     (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "22"))
                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0") (ifseqformula "11"))
                                                                     (rule "qeq_literals" (formula "29") (term "0,1,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0,0") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
                                                                     (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "29") (term "0,0,1,0,0"))
                                                                     (rule "leq_literals" (formula "29") (term "0,1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                     (rule "cut_direct" (formula "19") (term "1"))
                                                                     (branch "CUT: arr_0.length ≤ j_3 TRUE"
                                                                        (builtin "One Step Simplification" (formula "20"))
                                                                        (rule "true_left" (formula "20"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "19"))
                                                                        (rule "times_zero_1" (formula "15") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "15") (term "0"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "19"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "9"))
                                                                        (rule "andLeft" (formula "12"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                                        (rule "add_literals" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                                        (rule "add_literals" (formula "12") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "12") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "12") (term "0"))
                                                                        (rule "leq_literals" (formula "12"))
                                                                        (rule "closeFalse" (formula "12"))
                                                                     )
                                                                     (branch "CUT: arr_0.length ≤ j_3 FALSE"
                                                                        (builtin "One Step Simplification" (formula "19"))
                                                                        (rule "notLeft" (formula "19"))
                                                                        (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "40"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "40"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                        (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "33") (ifseqformula "40"))
                                                                        (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "20") (ifseqformula "40"))
                                                                        (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "16") (ifseqformula "40"))
                                                                        (rule "inEqSimp_leqRight" (formula "41"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "allLeft" (formula "39") (inst "t=j_3"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "12"))
                                                                        (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "39"))
                                                                        (rule "pullOutSelect" (formula "39") (term "1,0") (inst "selectSK=arr_25"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "35"))
                                                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "48")) (ifInst ""  (formula "47")))
                                                                        (rule "dismissNonSelectedField" (formula "39") (term "0,0,0,0"))
                                                                        (rule "replaceKnownSelect_taclet00011000010101_13" (formula "39") (term "0,0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet00011000010101_18" (formula "39") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "39") (term "0,0,0") (ifseqformula "46"))
                                                                        (builtin "One Step Simplification" (formula "39"))
                                                                        (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                                                        (rule "hideAuxiliaryEq" (formula "39"))
                                                                        (rule "narrowSelectArrayType" (formula "39") (term "1,0") (ifseqformula "34") (ifseqformula "47"))
                                                                        (rule "pullOutSelect" (formula "39") (term "0,0") (inst "selectSK=arr_26"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "35"))
                                                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "45")))
                                                                        (rule "ifthenelse_negated" (formula "39") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "39") (term "0,0,0,0"))
                                                                        (rule "narrowSelectArrayType" (formula "39") (term "2,0") (ifseqformula "34") (ifseqformula "45"))
                                                                        (rule "pullOutSelect" (formula "39") (term "1,0") (inst "selectSK=arr_27"))
                                                                        (rule "simplifySelectOfAnon" (formula "39"))
                                                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "46")))
                                                                        (rule "dismissNonSelectedField" (formula "39") (term "2,0"))
                                                                        (rule "dismissNonSelectedField" (formula "39") (term "0,0,1,0,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "39") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "39") (term "0,0,0,0") (ifseqformula "46"))
                                                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "52")))
                                                                        (rule "ifthenelse_negated" (formula "39") (term "0"))
                                                                        (rule "narrowSelectArrayType" (formula "39") (term "2,0") (ifseqformula "21") (ifseqformula "46"))
                                                                        (rule "pullOutSelect" (formula "40") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__12"))
                                                                        (rule "applyEq" (formula "39") (term "0,0,0") (ifseqformula "40"))
                                                                        (rule "simplifySelectOfMemset" (formula "40"))
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (rule "simplifySelectOfStore" (formula "40"))
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (rule "simplifySelectOfStore" (formula "40"))
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (rule "simplifySelectOfStore" (formula "40"))
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (rule "simplifySelectOfCreate" (formula "40"))
                                                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "53")))
                                                                        (rule "castDel" (formula "40") (term "1,0"))
                                                                        (rule "eqSymm" (formula "40") (term "0,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "40") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "40") (term "1,0,0") (ifseqformula "53"))
                                                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "47")))
                                                                        (rule "applyEqReverse" (formula "41") (term "0,0,0,0") (ifseqformula "40"))
                                                                        (rule "applyEqReverse" (formula "39") (term "0,0,0") (ifseqformula "40"))
                                                                        (rule "hideAuxiliaryEq" (formula "40"))
                                                                        (rule "replace_known_left" (formula "39") (term "0,0") (ifseqformula "8"))
                                                                        (builtin "One Step Simplification" (formula "39"))
                                                                        (rule "simplifySelectOfMemset" (formula "39"))
                                                                        (builtin "One Step Simplification" (formula "39"))
                                                                        (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "8"))
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "40"))
                                                                        (rule "hideAuxiliaryEq" (formula "40"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "39") (term "0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "39") (term "2,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "39") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "39") (term "1,0,0,0,0") (ifseqformula "51"))
                                                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "45")))
                                                                        (rule "simplifySelectOfStore" (formula "39"))
                                                                        (builtin "One Step Simplification" (formula "39"))
                                                                        (rule "simplifySelectOfStore" (formula "39"))
                                                                        (builtin "One Step Simplification" (formula "39"))
                                                                        (rule "simplifySelectOfCreate" (formula "39"))
                                                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "51")))
                                                                        (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "39"))
                                                                        (rule "hideAuxiliaryEq" (formula "39"))
                                                                        (rule "narrowSelectArrayType" (formula "39") (term "0,0") (ifseqformula "17") (ifseqformula "44"))
                                                                        (rule "eqSymm" (formula "39") (term "0"))
                                                                        (rule "allLeft" (formula "40") (inst "t=i_0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "11"))
                                                                        (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (rule "pullOutSelect" (formula "40") (term "0,0") (inst "selectSK=arr_28"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "35"))
                                                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "46")))
                                                                        (rule "eqSymm" (formula "41") (term "0"))
                                                                        (rule "ifthenelse_negated" (formula "40") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "40") (term "0,0,0,0"))
                                                                        (rule "replaceKnownSelect_taclet110001010000011000010101_82" (formula "40") (term "0,0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet110001010000011000010101_87" (formula "40") (term "0,0,0,0"))
                                                                        (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "8"))
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (rule "simplifySelectOfAnon" (formula "40"))
                                                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "46")))
                                                                        (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0"))
                                                                        (rule "replaceKnownSelect_taclet110001010000011000010101_82" (formula "40") (term "0,0,1,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet110001010000011000010101_87" (formula "40") (term "0,0,1,0,0"))
                                                                        (rule "replace_known_left" (formula "40") (term "0,1,0,0") (ifseqformula "8"))
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (rule "dismissNonSelectedField" (formula "40") (term "2,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "40") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "40") (term "1,0,0") (ifseqformula "52"))
                                                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "46")))
                                                                        (rule "simplifySelectOfMemset" (formula "40"))
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (rule "dismissNonSelectedField" (formula "40") (term "2,0"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "40") (term "0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "40") (term "2,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "40") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "40") (term "0,0,0,0,0") (ifseqformula "46"))
                                                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "52")))
                                                                        (rule "simplifySelectOfStore" (formula "40"))
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (rule "simplifySelectOfCreate" (formula "40"))
                                                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "52")))
                                                                        (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "40"))
                                                                        (rule "hideAuxiliaryEq" (formula "40"))
                                                                        (rule "narrowSelectArrayType" (formula "40") (term "1,0") (ifseqformula "17") (ifseqformula "45"))
                                                                        (rule "pullOutSelect" (formula "40") (term "0,0") (inst "selectSK=arr_29"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "35"))
                                                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "49")) (ifInst ""  (formula "48")))
                                                                        (rule "ifthenelse_negated" (formula "40") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "40") (term "0,0,0"))
                                                                        (rule "replaceKnownSelect_taclet00011000010101_13" (formula "40") (term "0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet00011000010101_18" (formula "40") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "47"))
                                                                        (builtin "One Step Simplification" (formula "40"))
                                                                        (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "40"))
                                                                        (rule "hideAuxiliaryEq" (formula "40"))
                                                                        (rule "narrowSelectArrayType" (formula "40") (term "0,0") (ifseqformula "34") (ifseqformula "48"))
                                                                        (rule "commute_or" (formula "39"))
                                                                        (rule "cut_direct" (formula "26") (term "0,0"))
                                                                        (branch "CUT: iv_4 ≥ i_0 TRUE"
                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "true_left" (formula "27"))
                                                                           (rule "commute_or" (formula "40"))
                                                                           (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                           (branch " (x_arr_arr_2[j_3]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                                                                              (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                                                              (rule "hideAuxiliaryEq" (formula "5"))
                                                                              (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                                              (builtin "One Step Simplification" (formula "5"))
                                                                              (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "5"))
                                                                              (rule "hideAuxiliaryEq" (formula "5"))
                                                                              (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                              (branch "arr_0[j_3].<created> = TRUE TRUE"
                                                                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                                                 (rule "hideAuxiliaryEq" (formula "3"))
                                                                                 (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                                                                 (builtin "One Step Simplification" (formula "3"))
                                                                                 (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "3"))
                                                                                 (rule "hideAuxiliaryEq" (formula "3"))
                                                                                 (rule "eqSymm" (formula "51"))
                                                                                 (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0,0") (ifseqformula "15"))
                                                                                 (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "2"))
                                                                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "42")))
                                                                                 (rule "true_left" (formula "7"))
                                                                                 (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "19"))
                                                                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "allLeft" (formula "28") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_63" (formula "28") (term "1,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_56" (formula "28") (term "0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet000110001010000011000010101_104" (formula "28") (term "1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet00110001010000011000010101_102" (formula "28") (term "0,0,0"))
                                                                                 (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "53"))
                                                                                 (builtin "One Step Simplification" (formula "28"))
                                                                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "5"))
                                                                                 (rule "qeq_literals" (formula "28") (term "0,0"))
                                                                                 (builtin "One Step Simplification" (formula "28"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "6"))
                                                                                 (rule "andLeft" (formula "28"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                                                 (rule "add_literals" (formula "28") (term "1,1,0"))
                                                                                 (rule "times_zero_1" (formula "28") (term "1,0"))
                                                                                 (rule "add_literals" (formula "28") (term "0"))
                                                                                 (rule "leq_literals" (formula "28"))
                                                                                 (rule "closeFalse" (formula "28"))
                                                                              )
                                                                              (branch "arr_0[j_3].<created> = TRUE FALSE"
                                                                                 (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "43"))
                                                                                 (rule "close" (formula "42") (ifseqformula "16"))
                                                                              )
                                                                           )
                                                                           (branch " (x_arr_arr_2[j_3]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                                                                              (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                                              (rule "hideAuxiliaryEq" (formula "4"))
                                                                              (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "42"))
                                                                              (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                              (branch "arr_0[j_3].<created> = TRUE TRUE"
                                                                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                                                 (rule "hideAuxiliaryEq" (formula "3"))
                                                                                 (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                                                                 (builtin "One Step Simplification" (formula "3"))
                                                                                 (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "3"))
                                                                                 (rule "hideAuxiliaryEq" (formula "3"))
                                                                                 (rule "eqSymm" (formula "52"))
                                                                                 (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0,0") (ifseqformula "15"))
                                                                                 (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "2"))
                                                                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "43")))
                                                                                 (rule "true_left" (formula "7"))
                                                                                 (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "19"))
                                                                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                                 (builtin "One Step Simplification" (formula "4"))
                                                                                 (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "4"))
                                                                                 (rule "hideAuxiliaryEq" (formula "4"))
                                                                                 (rule "allLeft" (formula "27") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_56" (formula "27") (term "0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_63" (formula "27") (term "1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10110001010000011000010101_102" (formula "27") (term "0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet010110001010000011000010101_103" (formula "27") (term "1,0,0"))
                                                                                 (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "53"))
                                                                                 (builtin "One Step Simplification" (formula "27"))
                                                                                 (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "4"))
                                                                                 (rule "qeq_literals" (formula "27") (term "0,0"))
                                                                                 (builtin "One Step Simplification" (formula "27"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "27"))
                                                                                 (rule "andLeft" (formula "5"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                                                 (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                                 (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                                 (rule "add_zero_right" (formula "5") (term "0"))
                                                                                 (rule "leq_literals" (formula "5"))
                                                                                 (rule "closeFalse" (formula "5"))
                                                                              )
                                                                              (branch "arr_0[j_3].<created> = TRUE FALSE"
                                                                                 (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "44"))
                                                                                 (rule "close" (formula "42") (ifseqformula "16"))
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch "CUT: iv_4 ≥ i_0 FALSE"
                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                           (rule "inEqSimp_geqRight" (formula "43"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                                                           (rule "times_zero_1" (formula "7") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "7") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                           (rule "mul_literals" (formula "7") (term "1"))
                                                                           (rule "commute_or" (formula "41"))
                                                                           (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                           (branch " (x_arr_arr_2[j_3]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                                                                              (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                              (rule "hideAuxiliaryEq" (formula "6"))
                                                                              (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                                                              (builtin "One Step Simplification" (formula "6"))
                                                                              (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "6"))
                                                                              (rule "hideAuxiliaryEq" (formula "6"))
                                                                              (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                              (branch "arr_0[j_3].<created> = TRUE TRUE"
                                                                                 (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                                                 (rule "hideAuxiliaryEq" (formula "4"))
                                                                                 (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                                                 (builtin "One Step Simplification" (formula "4"))
                                                                                 (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "4"))
                                                                                 (rule "hideAuxiliaryEq" (formula "4"))
                                                                                 (rule "eqSymm" (formula "52"))
                                                                                 (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "20"))
                                                                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "17"))
                                                                                 (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "44"))
                                                                                 (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "4")))
                                                                                 (rule "true_left" (formula "9"))
                                                                                 (rule "allLeft" (formula "33") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "33") (term "0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "33") (term "0,0,0,0"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                                                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                                                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                                                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                                                                 (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                                                 (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                                                 (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                                                 (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                                                 (rule "leq_literals" (formula "33") (term "0,1"))
                                                                                 (builtin "One Step Simplification" (formula "33"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "6"))
                                                                                 (rule "qeq_literals" (formula "33") (term "0,1"))
                                                                                 (builtin "One Step Simplification" (formula "33"))
                                                                                 (rule "notLeft" (formula "33"))
                                                                                 (rule "allLeft" (formula "28") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "28") (term "0,0,1"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "28") (term "0,0,1"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "28") (term "0,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "28") (term "0,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "28") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "28") (term "0,0,1,0,0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "6"))
                                                                                 (rule "qeq_literals" (formula "28") (term "0,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "28"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0,0") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "28") (term "0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "28"))
                                                                                 (rule "allLeft" (formula "23") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "23") (term "0,0,1"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "23") (term "0,1,1"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "23") (term "0,0,1"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "23") (term "0,1,1"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "23") (term "0,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "23") (term "0,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "23") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "23") (term "0,0,1,0,0"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0,0,0") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0"))
                                                                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0"))
                                                                                 (rule "add_literals" (formula "23") (term "0,0,1,0,0,0"))
                                                                                 (rule "leq_literals" (formula "23") (term "0,1,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "23"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0") (ifseqformula "6"))
                                                                                 (rule "qeq_literals" (formula "23") (term "0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "23"))
                                                                                 (rule "allLeft" (formula "33") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "33") (term "0,1,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "33") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "33") (term "0,1,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "33") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "33") (term "0,0,1,0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "33") (term "0,0,0,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "33") (term "0,0,1,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "33") (term "0,0,0,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "33") (term "1,0,0,0,0,0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "33") (term "1,0,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                                                 (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                                                 (rule "qeq_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "33"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0,0,0,0") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "33"))
                                                                                 (rule "allLeft" (formula "35") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "35") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "35") (term "0,1,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "35") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "35") (term "0,1,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "35") (term "0,0,0,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "35") (term "0,0,1,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "35") (term "0,0,0,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "35") (term "0,0,1,0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "35") (term "1,0,0,0,0,0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "35") (term "1,0,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0,0,0,0") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "35"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0,0,0") (ifseqformula "6"))
                                                                                 (rule "qeq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "35"))
                                                                                 (rule "allLeft" (formula "20") (inst "t=iv_4"))
                                                                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "6"))
                                                                                 (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                                                 (builtin "One Step Simplification" (formula "20"))
                                                                                 (rule "allLeft" (formula "46") (inst "t=iv_4"))
                                                                                 (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "6"))
                                                                                 (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                                                 (builtin "One Step Simplification" (formula "46"))
                                                                                 (rule "pullOutSelect" (formula "46") (term "1,0") (inst "selectSK=arr_32"))
                                                                                 (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "40"))
                                                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "56")) (ifInst ""  (formula "55")))
                                                                                 (rule "ifthenelse_negated" (formula "46") (term "0"))
                                                                                 (rule "dismissNonSelectedField" (formula "46") (term "0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet00011000010101_13" (formula "46") (term "0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet00011000010101_18" (formula "46") (term "0,0,0"))
                                                                                 (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "54"))
                                                                                 (builtin "One Step Simplification" (formula "46"))
                                                                                 (rule "applyEqReverse" (formula "47") (term "1,0") (ifseqformula "46"))
                                                                                 (rule "hideAuxiliaryEq" (formula "46"))
                                                                                 (rule "narrowSelectArrayType" (formula "46") (term "1,0") (ifseqformula "39") (ifseqformula "55"))
                                                                                 (rule "pullOutSelect" (formula "46") (term "0,0") (inst "selectSK=arr_33"))
                                                                                 (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "40"))
                                                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "53")))
                                                                                 (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet110001010000011000010101_82" (formula "46") (term "0,0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet110001010000011000010101_87" (formula "46") (term "0,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "46") (term "0,0,0,0") (ifseqformula "8"))
                                                                                 (builtin "One Step Simplification" (formula "46"))
                                                                                 (rule "simplifySelectOfAnon" (formula "46"))
                                                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "53")))
                                                                                 (rule "dismissNonSelectedField" (formula "46") (term "2,0"))
                                                                                 (rule "sortsDisjointModuloNull" (formula "46") (term "0,0,0"))
                                                                                 (rule "replace_known_right" (formula "46") (term "1,0,0,0") (ifseqformula "59"))
                                                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "53")))
                                                                                 (rule "ifthenelse_negated" (formula "46") (term "0"))
                                                                                 (rule "dismissNonSelectedField" (formula "46") (term "0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet110001010000011000010101_82" (formula "46") (term "0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet110001010000011000010101_87" (formula "46") (term "0,0,0"))
                                                                                 (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "8"))
                                                                                 (builtin "One Step Simplification" (formula "46"))
                                                                                 (rule "simplifySelectOfMemset" (formula "46"))
                                                                                 (builtin "One Step Simplification" (formula "46"))
                                                                                 (rule "elementOfArrayRangeConcrete" (formula "46") (term "0,0"))
                                                                                 (rule "dismissNonSelectedField" (formula "46") (term "2,0"))
                                                                                 (rule "sortsDisjointModuloNull" (formula "46") (term "0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "46") (term "1,0,0,0,0") (ifseqformula "59"))
                                                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "53")))
                                                                                 (rule "simplifySelectOfStore" (formula "46"))
                                                                                 (builtin "One Step Simplification" (formula "46"))
                                                                                 (rule "simplifySelectOfStore" (formula "46"))
                                                                                 (builtin "One Step Simplification" (formula "46"))
                                                                                 (rule "simplifySelectOfCreate" (formula "46"))
                                                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "59")))
                                                                                 (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "46"))
                                                                                 (rule "hideAuxiliaryEq" (formula "46"))
                                                                                 (rule "narrowSelectArrayType" (formula "46") (term "0,0") (ifseqformula "17") (ifseqformula "52"))
                                                                                 (rule "eqSymm" (formula "46") (term "0"))
                                                                                 (rule "commute_or" (formula "46"))
                                                                                 (rule "allLeft" (formula "29") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "29") (term "0,0,1"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "29") (term "0,0,1"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "29") (term "0,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "29") (term "0,0,1,0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0") (ifseqformula "6"))
                                                                                 (rule "qeq_literals" (formula "29") (term "0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "29"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "29") (term "0,0") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                                                                 (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "29") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "28")))
                                                                                 (rule "true_left" (formula "29"))
                                                                                 (rule "allLeft" (formula "33") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "33") (term "0,1,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "33") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "33") (term "0,1,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "33") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "33") (term "0,0,0,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "33") (term "0,0,1,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "33") (term "0,0,0,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "33") (term "0,0,1,0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "33") (term "1,0,0,0,0,0,0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "33") (term "1,1,0,0,0,0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "33") (term "1,0,0,0,0,0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "33") (term "1,1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0,0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                                                 (rule "qeq_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "33"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0,0,0,0") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "33"))
                                                                                 (rule "allLeft" (formula "32") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_63" (formula "32") (term "1,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_56" (formula "32") (term "0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet001110001010000011000010101_104" (formula "32") (term "1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet01110001010000011000010101_102" (formula "32") (term "0,0,0"))
                                                                                 (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "62"))
                                                                                 (builtin "One Step Simplification" (formula "32"))
                                                                                 (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "6"))
                                                                                 (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                                 (builtin "One Step Simplification" (formula "32"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "7"))
                                                                                 (rule "andLeft" (formula "32"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "32"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                                                 (rule "add_literals" (formula "32") (term "1,1,0"))
                                                                                 (rule "times_zero_1" (formula "32") (term "1,0"))
                                                                                 (rule "add_zero_right" (formula "32") (term "0"))
                                                                                 (rule "leq_literals" (formula "32"))
                                                                                 (rule "closeFalse" (formula "32"))
                                                                              )
                                                                              (branch "arr_0[j_3].<created> = TRUE FALSE"
                                                                                 (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "44"))
                                                                                 (rule "close" (formula "43") (ifseqformula "17"))
                                                                              )
                                                                           )
                                                                           (branch " (x_arr_arr_2[j_3]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                                                                              (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                                                              (rule "hideAuxiliaryEq" (formula "5"))
                                                                              (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "43"))
                                                                              (builtin "One Step Simplification" (formula "5"))
                                                                              (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                              (branch "arr_0[j_3].<created> = TRUE TRUE"
                                                                                 (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                                                 (rule "hideAuxiliaryEq" (formula "4"))
                                                                                 (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                                                 (builtin "One Step Simplification" (formula "4"))
                                                                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "4"))
                                                                                 (rule "hideAuxiliaryEq" (formula "4"))
                                                                                 (rule "eqSymm" (formula "53"))
                                                                                 (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "20"))
                                                                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "1"))
                                                                                 (builtin "One Step Simplification" (formula "5"))
                                                                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "5"))
                                                                                 (rule "hideAuxiliaryEq" (formula "5"))
                                                                                 (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,0") (ifseqformula "16"))
                                                                                 (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "44"))
                                                                                 (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                                                 (rule "true_left" (formula "8"))
                                                                                 (rule "allLeft" (formula "32") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "32") (term "0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "32") (term "0,0,0,0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "5"))
                                                                                 (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                                 (builtin "One Step Simplification" (formula "32"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "32") (term "1") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                                                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                                                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                                                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                                                                 (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                                                 (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                                                 (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                                                 (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                                                 (rule "leq_literals" (formula "32") (term "0,1"))
                                                                                 (builtin "One Step Simplification" (formula "32"))
                                                                                 (rule "notLeft" (formula "32"))
                                                                                 (rule "allLeft" (formula "27") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "27") (term "0,0,1"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "27") (term "0,0,1"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "27") (term "0,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "27") (term "0,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "27") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "27") (term "0,0,1,0,0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0") (ifseqformula "5"))
                                                                                 (rule "qeq_literals" (formula "27") (term "0,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "27"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "27") (term "0,0,0") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "27") (term "0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "27"))
                                                                                 (rule "allLeft" (formula "22") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "22") (term "0,0,1"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "22") (term "0,1,1"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "22") (term "0,0,1"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "22") (term "0,1,1"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "22") (term "0,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "22") (term "0,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "22") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "22") (term "0,0,1,0,0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0") (ifseqformula "5"))
                                                                                 (rule "qeq_literals" (formula "22") (term "0,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "22"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0,0") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "22") (term "0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "22"))
                                                                                 (rule "allLeft" (formula "32") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "32") (term "0,1,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "32") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "32") (term "0,1,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "32") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "32") (term "0,0,0,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "32") (term "0,0,1,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "32") (term "0,0,0,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "32") (term "0,0,1,0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "32") (term "1,0,0,0,0,0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "32") (term "1,0,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0,0"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                                                                 (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                                                 (rule "qeq_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "32"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0,0,0,0") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "32"))
                                                                                 (rule "allLeft" (formula "34") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "34") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "34") (term "0,1,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "34") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "34") (term "0,1,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "34") (term "0,0,1,0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "34") (term "0,0,0,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "34") (term "0,0,1,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "34") (term "0,0,0,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "34") (term "1,0,0,0,0,0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "34") (term "1,0,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                                                 (rule "qeq_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "34"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0,0,0,0") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "34"))
                                                                                 (rule "allLeft" (formula "44") (inst "t=iv_4"))
                                                                                 (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "5"))
                                                                                 (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                                 (builtin "One Step Simplification" (formula "44"))
                                                                                 (rule "pullOutSelect" (formula "44") (term "0,0") (inst "selectSK=arr_30"))
                                                                                 (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "38"))
                                                                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "52")))
                                                                                 (rule "eqSymm" (formula "45") (term "0"))
                                                                                 (rule "dismissNonSelectedField" (formula "44") (term "0,0,0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet110001010000011000010101_82" (formula "44") (term "0,0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet110001010000011000010101_87" (formula "44") (term "0,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "44") (term "0,0,0,0") (ifseqformula "7"))
                                                                                 (builtin "One Step Simplification" (formula "44"))
                                                                                 (rule "simplifySelectOfAnon" (formula "44"))
                                                                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "52")))
                                                                                 (rule "dismissNonSelectedField" (formula "44") (term "2,0"))
                                                                                 (rule "sortsDisjointModuloNull" (formula "44") (term "0,0,0"))
                                                                                 (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "52"))
                                                                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "58")))
                                                                                 (rule "ifthenelse_negated" (formula "44") (term "0"))
                                                                                 (rule "dismissNonSelectedField" (formula "44") (term "0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet110001010000011000010101_82" (formula "44") (term "0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet110001010000011000010101_87" (formula "44") (term "0,0,0"))
                                                                                 (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "7"))
                                                                                 (builtin "One Step Simplification" (formula "44"))
                                                                                 (rule "simplifySelectOfMemset" (formula "44"))
                                                                                 (builtin "One Step Simplification" (formula "44"))
                                                                                 (rule "elementOfArrayRangeConcrete" (formula "44") (term "0,0"))
                                                                                 (rule "dismissNonSelectedField" (formula "44") (term "2,0"))
                                                                                 (rule "sortsDisjointModuloNull" (formula "44") (term "0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "44") (term "1,0,0,0,0") (ifseqformula "58"))
                                                                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "52")))
                                                                                 (rule "simplifySelectOfStore" (formula "44"))
                                                                                 (builtin "One Step Simplification" (formula "44"))
                                                                                 (rule "simplifySelectOfStore" (formula "44"))
                                                                                 (builtin "One Step Simplification" (formula "44"))
                                                                                 (rule "simplifySelectOfCreate" (formula "44"))
                                                                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "58")))
                                                                                 (rule "applyEqReverse" (formula "45") (term "1,0") (ifseqformula "44"))
                                                                                 (rule "hideAuxiliaryEq" (formula "44"))
                                                                                 (rule "narrowSelectArrayType" (formula "44") (term "1,0") (ifseqformula "16") (ifseqformula "51"))
                                                                                 (rule "pullOutSelect" (formula "44") (term "0,0") (inst "selectSK=arr_31"))
                                                                                 (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "38"))
                                                                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "55")) (ifInst ""  (formula "54")))
                                                                                 (rule "ifthenelse_negated" (formula "44") (term "0"))
                                                                                 (rule "dismissNonSelectedField" (formula "44") (term "0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet00011000010101_13" (formula "44") (term "0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet00011000010101_18" (formula "44") (term "0,0,0"))
                                                                                 (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "53"))
                                                                                 (builtin "One Step Simplification" (formula "44"))
                                                                                 (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "44"))
                                                                                 (rule "hideAuxiliaryEq" (formula "44"))
                                                                                 (rule "narrowSelectArrayType" (formula "44") (term "0,0") (ifseqformula "37") (ifseqformula "54"))
                                                                                 (rule "commute_or" (formula "44"))
                                                                                 (rule "allLeft" (formula "19") (inst "t=iv_4"))
                                                                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "5"))
                                                                                 (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                                                 (builtin "One Step Simplification" (formula "19"))
                                                                                 (rule "allLeft" (formula "28") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "28") (term "0,0,1"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "28") (term "0,0,1"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "28") (term "0,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "28") (term "0,0,1,0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0") (ifseqformula "5"))
                                                                                 (rule "qeq_literals" (formula "28") (term "0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "28"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                                                                 (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "28") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                                                                                 (rule "true_left" (formula "28"))
                                                                                 (rule "allLeft" (formula "32") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "32") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "32") (term "0,1,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "32") (term "0,0,1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "32") (term "0,1,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "32") (term "0,0,1,0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "32") (term "0,0,0,0,1,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "32") (term "0,0,1,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "32") (term "0,0,0,0,1,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_45" (formula "32") (term "1,0,0,0,0,0,0,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_47" (formula "32") (term "1,1,0,0,0,0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_46" (formula "32") (term "1,0,0,0,0,0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet10001010000011000010101_53" (formula "32") (term "1,1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0,0,0,0") (ifseqformula "2"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "32"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0,0,0") (ifseqformula "5"))
                                                                                 (rule "qeq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "32"))
                                                                                 (rule "allLeft" (formula "31") (inst "t=iv_4"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_63" (formula "31") (term "1,0,0"))
                                                                                 (rule "replaceKnownSelect_taclet10001010000011000010101_56" (formula "31") (term "0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet011110001010000011000010101_103" (formula "31") (term "1,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet11110001010000011000010101_102" (formula "31") (term "0,0,0"))
                                                                                 (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "62"))
                                                                                 (builtin "One Step Simplification" (formula "31"))
                                                                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "5"))
                                                                                 (rule "qeq_literals" (formula "31") (term "0,0"))
                                                                                 (builtin "One Step Simplification" (formula "31"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "31"))
                                                                                 (rule "andLeft" (formula "6"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                                 (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                                 (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                                 (rule "add_zero_right" (formula "6") (term "0"))
                                                                                 (rule "leq_literals" (formula "6"))
                                                                                 (rule "closeFalse" (formula "6"))
                                                                              )
                                                                              (branch "arr_0[j_3].<created> = TRUE FALSE"
                                                                                 (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "45"))
                                                                                 (rule "close" (formula "43") (ifseqformula "17"))
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch "arr_0[j_3].length ≥ 1 FALSE"
                                                                  (rule "eqSymm" (formula "39") (term "0"))
                                                                  (rule "inEqSimp_geqRight" (formula "38"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_contradEq7" (formula "39") (term "0") (ifseqformula "2"))
                                                                  (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "39") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "false_right" (formula "39"))
                                                                  (rule "allLeft" (formula "13") (inst "t=j_3"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "13") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "allLeft" (formula "19") (inst "t=j_3"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "19") (term "0,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "19") (term "0,0,1"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "19") (term "0,0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "19") (term "0,0,1,0"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "19") (term "0,0,1,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "19") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_contradEq7" (formula "19") (term "1") (ifseqformula "2"))
                                                                  (rule "mul_literals" (formula "19") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "19") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0,0") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                                                  (rule "leq_literals" (formula "19") (term "0,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "19") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "closeFalse" (formula "19"))
                                                               )
                                                            )
                                                            (branch " x_arr_arr_2[j_3]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 FALSE"
                                                               (rule "eqSymm" (formula "38") (term "0"))
                                                               (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "37")))
                                                               (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "37"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "inEqSimp_geqRight" (formula "37"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "38") (term "0,0,0") (ifseqformula "16"))
                                                               (rule "qeq_literals" (formula "38") (term "0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "allRight" (formula "38") (inst "sk=iv_3"))
                                                               (rule "cutUpperBound" (formula "38") (ifseqformula "17"))
                                                               (branch "Case 1"
                                                                  (rule "crossInst" (formula "18") (inst "sk=j_12") (ifseqformula "39"))
                                                                  (rule "orRight" (formula "40"))
                                                                  (rule "andLeft" (formula "18"))
                                                                  (rule "orRight" (formula "41"))
                                                                  (rule "replace_known_right" (formula "43") (term "0,0,0") (ifseqformula "42"))
                                                                  (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "42")))
                                                                  (rule "closeTrue" (formula "43"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "crossInst" (formula "18") (inst "sk=j_11") (ifseqformula "39"))
                                                                  (rule "orRight" (formula "40"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "orRight" (formula "41"))
                                                                  (rule "replace_known_right" (formula "43") (term "0,0,1") (ifseqformula "42"))
                                                                  (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "42")))
                                                                  (rule "closeTrue" (formula "43"))
                                                               )
                                                            )
                                                         )
                                                         (branch "arr_0[i_0].length ≥ 1 FALSE"
                                                            (rule "eqSymm" (formula "27"))
                                                            (rule "inEqSimp_geqRight" (formula "31"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "30") (term "1,1,0,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "31") (term "0") (ifseqformula "28"))
                                                            (rule "qeq_literals" (formula "31"))
                                                            (rule "closeFalse" (formula "31"))
                                                         )
                                                      )
                                                   )
                                                   (branch "result_0.length ≥ 1 FALSE"
                                                      (rule "replace_known_right" (formula "30") (term "0,1,1,0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "replace_known_right" (formula "29") (term "0,1") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_geqRight" (formula "32"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_antiSymm" (formula "29") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "1,1,1,0,0,0") (ifseqformula "29"))
                                                      (rule "add_zero_right" (formula "33") (term "1,1,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "29"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "applyEq" (formula "29") (term "0") (ifseqformula "28"))
                                                      (rule "qeq_literals" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "inEqSimp_notGeq" (formula "29") (term "0"))
                                                      (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "30") (term "0"))
                                                      (rule "add_zero_right" (formula "30") (term "1,1,0"))
                                                      (rule "qeq_literals" (formula "30") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "commute_or_2" (formula "30") (term "0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "30") (term "0,0"))
                                                      (rule "add_zero_right" (formula "30") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "30") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "cut_direct" (formula "16") (term "0,0"))
                                                      (branch "CUT: j_3 ≥ i_0 TRUE"
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "2"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "16"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "39") (term "1,1,1,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,0,0,1,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "applyEq" (formula "38") (term "0,2,0,0,0,0,0") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "38") (term "0,0,1,1,0,0,1") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "38") (term "0,1,1,0,0,1"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq1" (formula "16"))
                                                         (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                                         (rule "add_literals" (formula "16") (term "1,0"))
                                                         (rule "times_zero_1" (formula "16") (term "0"))
                                                         (rule "leq_literals" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "0"))
                                                         (rule "qeq_literals" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                                                         (rule "applyEqRigid" (formula "35") (term "0,2,0,1,0,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "35") (term "0,2,1,1,0,1,0,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "35") (term "0,2,0,1,1,1,0,0,1,0,1") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "35") (term "1,1,1,0,1,1,0,1") (ifseqformula "25"))
                                                         (rule "add_zero_right" (formula "35") (term "1,1,0,1,1,0,1"))
                                                         (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "25"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "inEqSimp_notGeq" (formula "35") (term "0,0"))
                                                         (rule "mul_literals" (formula "35") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "35") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "26"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "allRight" (formula "35") (inst "sk=iv_2"))
                                                         (rule "cutUpperBound" (formula "35") (ifseqformula "14"))
                                                         (branch "Case 1"
                                                            (rule "crossInst" (formula "15") (inst "sk=j_10") (ifseqformula "36"))
                                                            (rule "orRight" (formula "37"))
                                                            (rule "andLeft" (formula "15"))
                                                            (rule "orRight" (formula "38"))
                                                            (rule "replace_known_right" (formula "40") (term "0,0,0") (ifseqformula "39"))
                                                            (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "39")) (ifInst ""  (formula "38")))
                                                            (rule "closeTrue" (formula "40"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "crossInst" (formula "15") (inst "sk=j_9") (ifseqformula "36"))
                                                            (rule "orRight" (formula "37"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "andLeft" (formula "14"))
                                                            (rule "orRight" (formula "38"))
                                                            (rule "replace_known_right" (formula "40") (term "1,0,1") (ifseqformula "38"))
                                                            (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                                            (rule "closeTrue" (formula "40"))
                                                         )
                                                      )
                                                      (branch "CUT: j_3 ≥ i_0 FALSE"
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_geqRight" (formula "30"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradEq3" (formula "2") (term "0,0") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "2"))
                                                         (rule "applyEqReverse" (formula "39") (term "1,1,1,1,0,1") (ifseqformula "2"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,0,0,1,1,0,0,1") (ifseqformula "2"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0,1") (ifseqformula "2"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,0,0,1,0") (ifseqformula "2"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,1,1,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "eqSymm" (formula "38") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "38") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                         (rule "times_zero_1" (formula "2") (term "0,0"))
                                                         (rule "add_zero_left" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                                                         (rule "leq_literals" (formula "13") (term "0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "ifthenelse_split" (formula "37") (term "0,0"))
                                                         (branch " x_arr_arr_2[j_3]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 TRUE"
                                                            (rule "eqSymm" (formula "38") (term "0"))
                                                            (rule "replace_known_left" (formula "38") (term "0,1,1,0,0,1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "allLeft" (formula "21") (inst "t=j_3"))
                                                            (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "21") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "21") (term "0,0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "21") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "notLeft" (formula "21"))
                                                            (rule "ifthenelse_split" (formula "38") (term "0,0"))
                                                            (branch "arr_0[j_3].length ≥ 1 TRUE"
                                                               (rule "eqSymm" (formula "39") (term "0"))
                                                               (rule "cut_direct" (formula "29") (term "0"))
                                                               (branch "CUT: arr_0[i_0].length ≤ 0 TRUE"
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "true_left" (formula "30"))
                                                                  (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "29"))
                                                                  (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                                                  (rule "qeq_literals" (formula "28"))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "applyEq" (formula "29") (term "0") (ifseqformula "27"))
                                                                  (rule "leq_literals" (formula "29"))
                                                                  (rule "true_left" (formula "29"))
                                                                  (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                                                                  (rule "leq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "arrayLengthIsAShort" (formula "38") (term "1,1,1,0,1,1,0,1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "arrayLengthNotNegative" (formula "38") (term "1,1,1,0,1,1,0,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                                                  (rule "leq_literals" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "10"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "allLeft" (formula "14") (inst "t=j_3"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "6"))
                                                                  (rule "qeq_literals" (formula "14") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "allLeft" (formula "20") (inst "t=j_3"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "20") (term "0,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "20") (term "0,0,1"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "20") (term "0,0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "20") (term "0,0,1,0"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "20") (term "0,0,1,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "20") (term "0,0,1,0,0"))
                                                                  (rule "replace_known_left" (formula "20") (term "1,0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "allLeft" (formula "22") (inst "t=j_3"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "22") (term "0,0,1,0,0"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "22") (term "0,1,0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "22") (term "0,0,1,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "22") (term "0,1,0,1,0"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "22") (term "0,0,0,0,1,0"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "22") (term "0,0,1,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "22") (term "0,0,0,0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "22") (term "0,0,1,0,0,0"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "22") (term "1,0,0,0,0,0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "22") (term "1,0,0,0,0,0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "22") (term "0,0,1,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                                  (rule "qeq_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "22") (term "1,0,0,0,0") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0,0"))
                                                                  (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "inEqSimp_or_tautInEq1" (formula "22") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "22") (term "1,0,1,0"))
                                                                  (rule "times_zero_1" (formula "22") (term "0,1,0"))
                                                                  (rule "leq_literals" (formula "22") (term "1,0"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "true_left" (formula "22"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0,0") (ifseqformula "16"))
                                                                  (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "32"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "1,1,1,1,0,1") (ifseqformula "12"))
                                                                  (rule "cut_direct" (formula "16") (term "1"))
                                                                  (branch "CUT: arr_0.length ≤ j_3 TRUE"
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "16"))
                                                                     (rule "times_zero_1" (formula "12") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "12") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "16"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                     (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                     (rule "mul_literals" (formula "9") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "6"))
                                                                     (rule "andLeft" (formula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                     (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                     (rule "add_literals" (formula "9") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                                     (rule "add_literals" (formula "9") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "9") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "9") (term "0"))
                                                                     (rule "leq_literals" (formula "9"))
                                                                     (rule "closeFalse" (formula "9"))
                                                                  )
                                                                  (branch "CUT: arr_0.length ≤ j_3 FALSE"
                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "notLeft" (formula "16"))
                                                                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_leqRight" (formula "33"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "allLeft" (formula "21") (inst "t=j_3"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "21") (term "0,0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "21") (term "0,0,1"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "21") (term "0,0,1,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "21") (term "0,0,1,0"))
                                                                     (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "6"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "true_left" (formula "21"))
                                                                     (rule "allLeft" (formula "19") (inst "t=j_3"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "19") (term "0,1,1"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "19") (term "0,0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "19") (term "0,1,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "19") (term "0,0,1"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "19") (term "0,0,1,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "19") (term "0,0,1,0"))
                                                                     (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "19") (term "0,0,1,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "19") (term "0,0,1,0,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "6"))
                                                                     (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "4"))
                                                                     (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "7"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                                                     (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "19") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "19") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "19"))
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "allRight" (formula "44") (inst "sk=iv_1"))
                                                                     (rule "cutUpperBound" (formula "44") (ifseqformula "22"))
                                                                     (branch "Case 1"
                                                                        (rule "crossInst" (formula "23") (inst "sk=j_8") (ifseqformula "45"))
                                                                        (rule "orRight" (formula "46"))
                                                                        (rule "andLeft" (formula "23"))
                                                                        (rule "orRight" (formula "47"))
                                                                        (rule "eqSymm" (formula "1"))
                                                                        (rule "inEqSimp_leqRight" (formula "47"))
                                                                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                        (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                                        (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "1")))
                                                                        (rule "inEqSimp_geqRight" (formula "48"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "49") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "49") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "49") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                                                                        (rule "applyEqRigid" (formula "26") (term "0,2,0,0,1") (ifseqformula "25"))
                                                                        (rule "applyEq" (formula "26") (term "0,0,0,0") (ifseqformula "25"))
                                                                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "49") (term "1,0,0,0") (ifseqformula "3"))
                                                                        (rule "eqSymm" (formula "49"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "49") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                                                        (rule "add_literals" (formula "49") (term "0,0,1"))
                                                                        (rule "qeq_literals" (formula "49") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "49"))
                                                                        (rule "orRight" (formula "49"))
                                                                        (rule "notRight" (formula "49"))
                                                                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "4"))
                                                                        (rule "eqSymm" (formula "23"))
                                                                        (rule "applyEq" (formula "27") (term "0,2,0,0,1,0") (ifseqformula "26"))
                                                                        (rule "applyEq" (formula "27") (term "0,1,0,0") (ifseqformula "26"))
                                                                        (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                        (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "2") (term "0"))
                                                                        (rule "leq_literals" (formula "2"))
                                                                        (rule "closeFalse" (formula "2"))
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "crossInst" (formula "23") (inst "sk=j_7") (ifseqformula "45"))
                                                                        (rule "orRight" (formula "46"))
                                                                        (rule "notLeft" (formula "1"))
                                                                        (rule "andLeft" (formula "22"))
                                                                        (rule "orRight" (formula "47"))
                                                                        (rule "eqSymm" (formula "36"))
                                                                        (rule "inEqSimp_leqRight" (formula "47"))
                                                                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                        (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                                        (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "1")))
                                                                        (rule "inEqSimp_geqRight" (formula "48"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "49") (term "0,0"))
                                                                        (rule "eqSymm" (formula "49"))
                                                                        (rule "polySimp_addComm1" (formula "49") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "49") (term "0,0"))
                                                                        (rule "eqSymm" (formula "49"))
                                                                        (rule "polySimp_addComm1" (formula "49") (term "0,0,1"))
                                                                        (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "21"))
                                                                        (rule "applyEqRigid" (formula "25") (term "0,2,0,0,1,0") (ifseqformula "24"))
                                                                        (rule "applyEqRigid" (formula "25") (term "0,1,0,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "38") (term "0") (ifseqformula "21"))
                                                                        (rule "applyEq" (formula "25") (term "0,0,0,0") (ifseqformula "24"))
                                                                        (rule "applyEqRigid" (formula "25") (term "0,2,0,0,1") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "49") (term "1,0,0,0") (ifseqformula "21"))
                                                                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "21"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "48") (term "1,0,1"))
                                                                        (rule "mul_literals" (formula "48") (term "0,1,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                        (rule "replace_known_left" (formula "48") (term "0,1") (ifseqformula "1"))
                                                                        (builtin "One Step Simplification" (formula "48"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                                        (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "1"))
                                                                        (builtin "One Step Simplification" (formula "48"))
                                                                        (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                                        (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "37") (term "0,0"))
                                                                        (rule "leq_literals" (formula "37") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "37"))
                                                                        (rule "false_right" (formula "37"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0") (ifseqformula "2"))
                                                                        (rule "qeq_literals" (formula "24") (term "0,0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "pullOutSelect" (formula "47") (term "1") (inst "selectSK=arr_12"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                                                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                                                        (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "32") (ifseqformula "38"))
                                                                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                        (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_13"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "40"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "9")))
                                                                        (rule "simplifySelectOfAnon" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "47"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                                        (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "21") (ifseqformula "40"))
                                                                        (rule "pullOutSelect" (formula "26") (term "0,0,1,0") (inst "selectSK=arr_14"))
                                                                        (rule "simplifySelectOfAnon" (formula "26"))
                                                                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "49")))
                                                                        (rule "eqSymm" (formula "26") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "46"))
                                                                        (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "ifthenelse_negated" (formula "26") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                                                                        (rule "replaceKnownSelect_taclet10000011000010101_25" (formula "26") (term "0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_26" (formula "26") (term "0,0,0"))
                                                                        (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "18"))
                                                                        (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "simplifySelectOfStore" (formula "26"))
                                                                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "46")))
                                                                        (rule "simplifySelectOfMemset" (formula "26"))
                                                                        (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "26") (term "0,0"))
                                                                        (rule "eqSymm" (formula "26") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "26") (term "0,0,0,0") (ifseqformula "46"))
                                                                        (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "simplifySelectOfStore" (formula "26"))
                                                                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "46")))
                                                                        (rule "simplifySelectOfStore" (formula "26"))
                                                                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "46")))
                                                                        (rule "simplifySelectOfStore" (formula "26"))
                                                                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "46")))
                                                                        (rule "simplifySelectOfCreate" (formula "26"))
                                                                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "46")) (ifInst ""  (formula "48")))
                                                                        (rule "applyEqReverse" (formula "27") (term "0,0,1,0") (ifseqformula "26"))
                                                                        (rule "hideAuxiliaryEq" (formula "26"))
                                                                        (rule "pullOutSelect" (formula "26") (term "0,0,1") (inst "selectSK=arr_15"))
                                                                        (rule "simplifySelectOfAnon" (formula "26"))
                                                                        (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "applyEqReverse" (formula "27") (term "0,0,1") (ifseqformula "26"))
                                                                        (rule "hideAuxiliaryEq" (formula "26"))
                                                                        (rule "pullOutSelect" (formula "2") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                        (rule "simplifySelectOfMemset" (formula "2"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "simplifySelectOfStore" (formula "2"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "simplifySelectOfStore" (formula "2"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "simplifySelectOfStore" (formula "2"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "simplifySelectOfCreate" (formula "2"))
                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                                                        (rule "castDel" (formula "2") (term "1,0"))
                                                                        (rule "eqSymm" (formula "2") (term "0,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "48"))
                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                                                        (rule "applyEqReverse" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "6"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "simplifySelectOfAnon" (formula "2"))
                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                                                        (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "39"))
                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                                                                        (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                                        (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                                                        (rule "replaceKnownSelect_taclet110001110000011000010101_58" (formula "2") (term "0,0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet110001110000011000010101_63" (formula "2") (term "0,0,0,0"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "6"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "simplifySelectOfMemset" (formula "2"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "2") (term "0,0,0,0,0") (ifseqformula "39"))
                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                                                                        (rule "simplifySelectOfStore" (formula "2"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "simplifySelectOfStore" (formula "2"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "simplifySelectOfCreate" (formula "2"))
                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                                                                        (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "eqSymm" (formula "48"))
                                                                        (rule "narrowSelectArrayType" (formula "48") (term "0") (ifseqformula "16") (ifseqformula "38"))
                                                                        (rule "eqSymm" (formula "48"))
                                                                        (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__9"))
                                                                        (rule "simplifySelectOfMemset" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfCreate" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "eqSymm" (formula "1") (term "0,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                                        (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_16"))
                                                                        (rule "simplifySelectOfMemset" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "47"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfCreate" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "16") (ifseqformula "39"))
                                                                        (rule "allLeft" (formula "28") (inst "t=j_3"))
                                                                        (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "28") (term "0,0,1,0,0"))
                                                                        (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "28") (term "0,1,0,1,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "28") (term "0,0,1,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "28") (term "0,1,0,1,0"))
                                                                        (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "28") (term "0,0,1,0,0,0"))
                                                                        (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "28") (term "0,0,0,0,1,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "28") (term "0,0,1,0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "28") (term "0,0,0,0,1,0"))
                                                                        (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "28") (term "1,1,0,0,0,0,0,0,0"))
                                                                        (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "28") (term "1,0,0,0,0,0,0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "28") (term "1,1,0,0,0,0,0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "28") (term "1,0,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                                                                        (rule "applyEq" (formula "28") (term "1,1,0,0") (ifseqformula "21"))
                                                                        (builtin "One Step Simplification" (formula "28"))
                                                                        (rule "applyEq" (formula "28") (term "1,1,1,0") (ifseqformula "21"))
                                                                        (rule "applyEq" (formula "28") (term "0,0,1,1,0") (ifseqformula "21"))
                                                                        (rule "replace_known_left" (formula "28") (term "0,1,1,0") (ifseqformula "7"))
                                                                        (builtin "One Step Simplification" (formula "28"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0") (ifseqformula "11"))
                                                                        (rule "qeq_literals" (formula "28") (term "0,1,0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "28"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "28") (term "1,0,0") (ifseqformula "9"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0"))
                                                                        (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                                                                        (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                                                        (rule "add_literals" (formula "28") (term "0,0,1,0,0"))
                                                                        (rule "leq_literals" (formula "28") (term "0,1,0,0"))
                                                                        (builtin "One Step Simplification" (formula "28"))
                                                                        (rule "allLeft" (formula "31") (inst "t=j_3"))
                                                                        (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "31") (term "0,1,0,1,0"))
                                                                        (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "31") (term "0,0,1,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "31") (term "0,1,0,1,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "31") (term "0,0,1,0,0"))
                                                                        (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "31") (term "0,0,1,0,0,0"))
                                                                        (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "31") (term "0,0,0,0,1,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "31") (term "0,0,1,0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "31") (term "0,0,0,0,1,0"))
                                                                        (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "31") (term "1,0,0,0,0,0,0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "31") (term "1,0,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0"))
                                                                        (rule "applyEq" (formula "31") (term "0,0,1,1,0") (ifseqformula "21"))
                                                                        (rule "replace_known_left" (formula "31") (term "0,1,1,0") (ifseqformula "7"))
                                                                        (builtin "One Step Simplification" (formula "31"))
                                                                        (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "21"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0,0") (ifseqformula "11"))
                                                                        (rule "qeq_literals" (formula "31") (term "0,1,0,0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "31"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0,0,0") (ifseqformula "9"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0"))
                                                                        (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
                                                                        (rule "leq_literals" (formula "31") (term "0,1,0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "31"))
                                                                        (rule "inEqSimp_or_tautInEq1" (formula "31") (term "0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "31") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "31") (term "1,0,1,0"))
                                                                        (rule "times_zero_1" (formula "31") (term "0,1,0"))
                                                                        (rule "leq_literals" (formula "31") (term "1,0"))
                                                                        (builtin "One Step Simplification" (formula "31"))
                                                                        (rule "true_left" (formula "31"))
                                                                        (rule "cut_direct" (formula "25") (term "0,0"))
                                                                        (branch "CUT: iv_1 ≥ i_0 TRUE"
                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                           (rule "true_left" (formula "26"))
                                                                           (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                           (branch " (x_arr_arr_2[j_3]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                                                                              (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "2"))
                                                                              (rule "hideAuxiliaryEq" (formula "2"))
                                                                              (rule "allLeft" (formula "28") (inst "t=iv_1"))
                                                                              (rule "replaceKnownSelect_taclet110001110000011000010101_64" (formula "28") (term "1,0,0"))
                                                                              (rule "replaceKnownSelect_taclet110001110000011000010101_47" (formula "28") (term "0,0,0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet110001110000011000010101_69" (formula "28") (term "1,0,0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet00110001110000011000010101_81" (formula "28") (term "0,0,0"))
                                                                              (rule "eqSymm" (formula "28") (term "0,0"))
                                                                              (rule "narrowSelectArrayType" (formula "28") (term "0,0,0") (ifseqformula "16") (ifseqformula "40"))
                                                                              (rule "eqSymm" (formula "28") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "50"))
                                                                              (builtin "One Step Simplification" (formula "28"))
                                                                              (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                                                              (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                                              (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                                              (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                                              (rule "leq_literals" (formula "28") (term "0,1"))
                                                                              (builtin "One Step Simplification" (formula "28"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "28"))
                                                                              (rule "qeq_literals" (formula "3") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "closeFalse" (formula "3"))
                                                                           )
                                                                           (branch " (x_arr_arr_2[j_3]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                                                                              (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                                                              (rule "hideAuxiliaryEq" (formula "1"))
                                                                              (rule "allLeft" (formula "27") (inst "t=iv_1"))
                                                                              (rule "replaceKnownSelect_taclet110001110000011000010101_64" (formula "27") (term "1,0,0"))
                                                                              (rule "replaceKnownSelect_taclet110001110000011000010101_47" (formula "27") (term "0,0,0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet110001110000011000010101_69" (formula "27") (term "1,0,0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet10110001110000011000010101_81" (formula "27") (term "0,0,0"))
                                                                              (rule "eqSymm" (formula "27") (term "0,0"))
                                                                              (rule "narrowSelectArrayType" (formula "27") (term "0,0,0") (ifseqformula "15") (ifseqformula "40"))
                                                                              (rule "eqSymm" (formula "27") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "50"))
                                                                              (builtin "One Step Simplification" (formula "27"))
                                                                              (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                                                              (rule "qeq_literals" (formula "27") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "27"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "27"))
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                              (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "1") (term "0"))
                                                                              (rule "leq_literals" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                        )
                                                                        (branch "CUT: iv_1 ≥ i_0 FALSE"
                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "inEqSimp_geqRight" (formula "39"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                                                           (rule "times_zero_1" (formula "4") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                           (rule "mul_literals" (formula "4") (term "1"))
                                                                           (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                           (branch " (x_arr_arr_2[j_3]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                                                                              (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "3"))
                                                                              (rule "hideAuxiliaryEq" (formula "3"))
                                                                              (rule "allLeft" (formula "33") (inst "t=iv_1"))
                                                                              (rule "replaceKnownSelect_taclet110001110000011000010101_56" (formula "33") (term "0,0,0,0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet110001110000011000010101_57" (formula "33") (term "0,0,0,0"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                              (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "1"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                                                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                                                              (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                                                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                                                              (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                                              (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                                              (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                                              (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                                              (rule "leq_literals" (formula "33") (term "0,1"))
                                                                              (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "notLeft" (formula "33"))
                                                                              (rule "allLeft" (formula "29") (inst "t=iv_1"))
                                                                              (rule "replaceKnownSelect_taclet110001110000011000010101_47" (formula "29") (term "0,0,0"))
                                                                              (rule "replaceKnownSelect_taclet110001110000011000010101_64" (formula "29") (term "1,0,0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet01110001110000011000010101_81" (formula "29") (term "0,0,0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet110001110000011000010101_69" (formula "29") (term "1,0,0"))
                                                                              (rule "eqSymm" (formula "29") (term "0,0"))
                                                                              (rule "narrowSelectArrayType" (formula "29") (term "0,0,0") (ifseqformula "17") (ifseqformula "42"))
                                                                              (rule "eqSymm" (formula "29") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "52"))
                                                                              (builtin "One Step Simplification" (formula "29"))
                                                                              (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "29") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "29"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "3"))
                                                                              (rule "andLeft" (formula "29"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "29"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                                              (rule "add_literals" (formula "29") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "29") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "29") (term "0"))
                                                                              (rule "leq_literals" (formula "29"))
                                                                              (rule "closeFalse" (formula "29"))
                                                                           )
                                                                           (branch " (x_arr_arr_2[j_3]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                                                                              (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "2"))
                                                                              (rule "hideAuxiliaryEq" (formula "2"))
                                                                              (rule "allLeft" (formula "32") (inst "t=iv_1"))
                                                                              (rule "replaceKnownSelect_taclet110001110000011000010101_56" (formula "32") (term "0,0,0,0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet110001110000011000010101_57" (formula "32") (term "0,0,0,0"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "32") (term "1") (ifseqformula "1"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                                                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                                                              (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                                                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                                                              (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                                              (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                                              (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                                              (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                                              (rule "leq_literals" (formula "32") (term "0,1"))
                                                                              (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "3"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,1"))
                                                                              (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "notLeft" (formula "32"))
                                                                              (rule "allLeft" (formula "28") (inst "t=iv_1"))
                                                                              (rule "replaceKnownSelect_taclet110001110000011000010101_64" (formula "28") (term "1,0,0"))
                                                                              (rule "replaceKnownSelect_taclet110001110000011000010101_47" (formula "28") (term "0,0,0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet110001110000011000010101_69" (formula "28") (term "1,0,0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet11110001110000011000010101_81" (formula "28") (term "0,0,0"))
                                                                              (rule "eqSymm" (formula "28") (term "0,0"))
                                                                              (rule "narrowSelectArrayType" (formula "28") (term "0,0,0") (ifseqformula "16") (ifseqformula "42"))
                                                                              (rule "eqSymm" (formula "28") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "52"))
                                                                              (builtin "One Step Simplification" (formula "28"))
                                                                              (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                                                              (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                                              (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                                              (rule "add_literals" (formula "28") (term "0,0,1"))
                                                                              (rule "leq_literals" (formula "28") (term "0,1"))
                                                                              (builtin "One Step Simplification" (formula "28"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "3"))
                                                                              (rule "qeq_literals" (formula "28") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "28"))
                                                                              (rule "closeFalse" (formula "28"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch "CUT: arr_0[i_0].length ≤ 0 FALSE"
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "inEqSimp_leqRight" (formula "30"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "30"))
                                                                  (rule "add_literals" (formula "1") (term "0"))
                                                                  (rule "qeq_literals" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                            (branch "arr_0[j_3].length ≥ 1 FALSE"
                                                               (rule "eqSymm" (formula "39") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "38"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_contradEq7" (formula "39") (term "0") (ifseqformula "2"))
                                                               (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "39") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "false_right" (formula "39"))
                                                               (rule "cut_direct" (formula "29") (term "0"))
                                                               (branch "CUT: arr_0[i_0].length ≤ 0 TRUE"
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "true_left" (formula "30"))
                                                                  (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "29"))
                                                                  (rule "applyEq" (formula "30") (term "0") (ifseqformula "27"))
                                                                  (rule "leq_literals" (formula "30"))
                                                                  (rule "true_left" (formula "30"))
                                                                  (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                                                  (rule "qeq_literals" (formula "28"))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                                                                  (rule "leq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "10"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "allLeft" (formula "14") (inst "t=j_3"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "6"))
                                                                  (rule "qeq_literals" (formula "14") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "allLeft" (formula "20") (inst "t=j_3"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "20") (term "0,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "20") (term "0,0,1"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_22" (formula "20") (term "0,0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_23" (formula "20") (term "0,0,1,0"))
                                                                  (rule "replaceKnownSelect_taclet10000011000010101_24" (formula "20") (term "0,0,1,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10000011000010101_33" (formula "20") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_contradEq7" (formula "20") (term "1") (ifseqformula "3"))
                                                                  (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "20") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "20") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0,0") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                                                                  (rule "leq_literals" (formula "20") (term "0,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                                                  (rule "qeq_literals" (formula "20") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "6"))
                                                                  (rule "qeq_literals" (formula "20") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "closeFalse" (formula "20"))
                                                               )
                                                               (branch "CUT: arr_0[i_0].length ≤ 0 FALSE"
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "inEqSimp_leqRight" (formula "30"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "30"))
                                                                  (rule "add_zero_right" (formula "1") (term "0"))
                                                                  (rule "qeq_literals" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                         )
                                                         (branch " x_arr_arr_2[j_3]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 FALSE"
                                                            (rule "eqSymm" (formula "38") (term "0"))
                                                            (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "37")))
                                                            (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "inEqSimp_geqRight" (formula "37"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "38") (term "0,0,0") (ifseqformula "16"))
                                                            (rule "qeq_literals" (formula "38") (term "0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "allRight" (formula "38") (inst "sk=iv_0"))
                                                            (rule "cutUpperBound" (formula "38") (ifseqformula "17"))
                                                            (branch "Case 1"
                                                               (rule "crossInst" (formula "18") (inst "sk=j_6") (ifseqformula "39"))
                                                               (rule "orRight" (formula "40"))
                                                               (rule "andLeft" (formula "18"))
                                                               (rule "orRight" (formula "41"))
                                                               (rule "replace_known_right" (formula "43") (term "0,0,1") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "42")))
                                                               (rule "closeTrue" (formula "43"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "crossInst" (formula "18") (inst "sk=j_5") (ifseqformula "39"))
                                                               (rule "orRight" (formula "40"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "andLeft" (formula "17"))
                                                               (rule "orRight" (formula "41"))
                                                               (rule "replace_known_right" (formula "43") (term "0,0,0") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "42")))
                                                               (rule "closeTrue" (formula "43"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "32") (inst "sk=j_0"))
                                                (rule "cutUpperBound" (formula "32") (ifseqformula "12"))
                                                (branch "Case 1"
                                                   (rule "crossInst" (formula "13") (inst "sk=j_2") (ifseqformula "33"))
                                                   (rule "orRight" (formula "34"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "notRight" (formula "36"))
                                                   (rule "orRight" (formula "36"))
                                                   (rule "inEqSimp_geqRight" (formula "37"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "37"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "applyEqRigid" (formula "3") (term "0,2,0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_literals" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch "Case 2"
                                                   (rule "crossInst" (formula "13") (inst "sk=j_1") (ifseqformula "33"))
                                                   (rule "orRight" (formula "34"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "notRight" (formula "37"))
                                                   (rule "inEqSimp_leqRight" (formula "36"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "37"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "applyEqRigid" (formula "16") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "16") (term "0,2,0,0,1,0") (ifseqformula "15"))
                                                   (rule "applyEqRigid" (formula "16") (term "0,0,0,0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "16") (term "0,2,0,0,1") (ifseqformula "15"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0"))
                                                   (rule "qeq_literals" (formula "30") (term "0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "false_right" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "16") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                                                   (rule "simplifySelectOfStore" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "castDel" (formula "3") (term "1,0"))
                                                   (rule "eqSymm" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                                   (rule "ifEqualsNull" (formula "3"))
                                                   (rule "replace_known_right" (formula "3") (term "1,0") (ifseqformula "33"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "31"))
                                                   (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0"))
                                                   (rule "qeq_literals" (formula "31") (term "0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "false_right" (formula "31"))
                                                   (rule "inEqSimp_contradInEq0" (formula "17") (term "0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "17") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                                                   (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0,0"))
                                                   (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                   (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                   (rule "ifEqualsNull" (formula "3"))
                                                   (rule "pullOutSelect" (formula "18") (term "0,0,1") (inst "selectSK=arr_4"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "18"))
                                                   (rule "simplifySelectOfAnon" (formula "18"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "applyEqReverse" (formula "19") (term "0,0,1") (ifseqformula "18"))
                                                   (rule "applyEqReverse" (formula "3") (term "0,1,0") (ifseqformula "18"))
                                                   (rule "hideAuxiliaryEq" (formula "18"))
                                                   (rule "pullOutSelect" (formula "18") (term "0,0,0") (inst "selectSK=arr_5"))
                                                   (rule "simplifySelectOfAnon" (formula "18"))
                                                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "39")))
                                                   (rule "eqSymm" (formula "18") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "18") (term "2,0"))
                                                   (rule "ifthenelse_negated" (formula "18") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "2") (term "0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "pullOutSelect" (formula "4") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__4"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0,0,1") (ifseqformula "4"))
                                                   (rule "simplifySelectOfMemset" (formula "4"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "simplifySelectOfStore" (formula "4"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "simplifySelectOfStore" (formula "4"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "simplifySelectOfStore" (formula "4"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "simplifySelectOfCreate" (formula "4"))
                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                                                   (rule "castDel" (formula "4") (term "0"))
                                                   (rule "applyEqReverse" (formula "5") (term "0,0,0,0,1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "19") (term "0,0,1") (ifseqformula "4"))
                                                   (rule "pullOutSelect" (formula "18") (term "1,0") (inst "selectSK=arr_6"))
                                                   (rule "simplifySelectOfMemset" (formula "18"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "18") (term "0,0"))
                                                   (rule "eqSymm" (formula "18") (term "0,0,0,0"))
                                                   (rule "replace_known_right" (formula "18") (term "0,0,0,0") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "simplifySelectOfStore" (formula "18"))
                                                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "37")))
                                                   (rule "simplifySelectOfStore" (formula "18"))
                                                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "37")))
                                                   (rule "simplifySelectOfStore" (formula "18"))
                                                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "37")))
                                                   (rule "simplifySelectOfCreate" (formula "18"))
                                                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "37")) (ifInst ""  (formula "39")))
                                                   (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                                   (rule "hideAuxiliaryEq" (formula "18"))
                                                   (rule "pullOutSelect" (formula "18") (term "0,0,0") (inst "selectSK=java_lang_Object_created__5"))
                                                   (rule "simplifySelectOfMemset" (formula "18"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "replaceKnownSelect_taclet011000010101_2" (formula "18") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet011000010101_6" (formula "18") (term "0"))
                                                   (rule "applyEqReverse" (formula "19") (term "0,0,0") (ifseqformula "18"))
                                                   (rule "hideAuxiliaryEq" (formula "18"))
                                                   (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "applyEqReverse" (formula "19") (term "0,0,0") (ifseqformula "18"))
                                                   (rule "hideAuxiliaryEq" (formula "18"))
                                                   (rule "allLeft" (formula "14") (inst "t=i_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "7"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "14") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "14") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "14") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "notLeft" (formula "14"))
                                                   (rule "ifthenelse_to_or_left" (formula "30") (term "0,0,0,0"))
                                                   (rule "eqSymm" (formula "30") (term "1,1,0,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "30") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "commute_or" (formula "18"))
                                                   (rule "arrayLengthIsAShort" (formula "29") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "arrayLengthNotNegative" (formula "29") (term "1,1"))
                                                   (rule "arrayLengthNotNegative" (formula "30") (term "1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "31") (term "1,1"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "ifthenelse_split" (formula "33") (term "1,1,0"))
                                                   (branch "result_0.length ≥ 1 TRUE"
                                                      (rule "replace_known_left" (formula "32") (term "0,1,1,0") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "replace_known_left" (formula "31") (term "0,1") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "33"))
                                                      (rule "leq_literals" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "commute_or_2" (formula "33") (term "0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "33") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "33") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "33") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "33") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "33") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "commute_or" (formula "31") (term "0,0"))
                                                      (rule "commute_or_2" (formula "31") (term "0"))
                                                      (rule "commute_or_2" (formula "31") (term "0,1,0"))
                                                      (rule "commute_or" (formula "31") (term "1,1,0"))
                                                      (rule "commute_or" (formula "31") (term "0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "31") (term "1,1,0"))
                                                      (rule "cnf_rightDist" (formula "31") (term "0"))
                                                      (rule "distr_forallAnd" (formula "31"))
                                                      (rule "andLeft" (formula "31"))
                                                      (rule "commute_or" (formula "32") (term "0"))
                                                      (rule "shift_paren_or" (formula "31") (term "0"))
                                                      (rule "commute_or_2" (formula "31") (term "0,0"))
                                                      (rule "commute_or" (formula "32") (term "1,1,0"))
                                                      (rule "cnf_rightDist" (formula "32") (term "0"))
                                                      (rule "distr_forallAnd" (formula "32"))
                                                      (rule "andLeft" (formula "32"))
                                                      (rule "commute_or_2" (formula "33") (term "0"))
                                                      (rule "commute_or_2" (formula "32") (term "0"))
                                                      (rule "shift_paren_or" (formula "33") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "32") (term "0,0"))
                                                      (rule "commute_or" (formula "32") (term "0,0,0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "32") (term "0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "32") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "shift_paren_or" (formula "31") (term "0,0,0"))
                                                      (rule "commute_or" (formula "31") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "allLeft" (formula "24") (inst "t=j_0"))
                                                      (rule "replaceKnownSelect_taclet11000011000010101_21" (formula "24") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet11000011000010101_22" (formula "24") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "24") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "24"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "result_0.length ≥ 1 FALSE"
                                                      (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "replace_known_right" (formula "32") (term "0,1,1,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_geqRight" (formula "34"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_antiSymm" (formula "30") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
                                                      (rule "qeq_literals" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "applyEq" (formula "34") (term "1,1,1,0,0,0") (ifseqformula "30"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "30"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "inEqSimp_notGeq" (formula "31") (term "0"))
                                                      (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "31") (term "0,0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0"))
                                                      (rule "qeq_literals" (formula "32") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "commute_or_2" (formula "32") (term "0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "32") (term "0,0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "32") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "allLeft" (formula "24") (inst "t=j_0"))
                                                      (rule "replaceKnownSelect_taclet11000011000010101_21" (formula "24") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet11000011000010101_22" (formula "24") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "24") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "24"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "32") (inst "sk=f_0"))
                                             (rule "allRight" (formula "32") (inst "sk=o_0"))
                                             (rule "orRight" (formula "32"))
                                             (rule "orRight" (formula "32"))
                                             (rule "pullOutSelect" (formula "34") (term "1") (inst "selectSK=f_0_0"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_0_1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                             (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                             (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "34") (term "0,0,1") (inst "selectSK=java_lang_Object_created__3"))
                                             (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "35") (term "0,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                             (rule "replaceKnownSelect_taclet100011000010101_21" (formula "1") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100011000010101_27" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet100011000010101_28" (formula "1") (term "0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100011000010101_33" (formula "1") (term "0,0,1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "allLeft" (formula "9") (inst "t=i_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "9") (term "0,0,1"))
                                             (rule "leq_literals" (formula "9") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "9") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "notLeft" (formula "9"))
                                             (rule "ifthenelse_to_or_left" (formula "24") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,0,0"))
                                             (rule "arrayLengthNotNegative" (formula "23") (term "1,0"))
                                             (rule "arrayLengthIsAShort" (formula "24") (term "1,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "arrayLengthIsAShort" (formula "24") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "arrayLengthNotNegative" (formula "24") (term "1,1"))
                                             (rule "commute_or" (formula "26") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "26") (term "0,0"))
                                             (rule "commute_or_2" (formula "26") (term "0"))
                                             (rule "commute_or_2" (formula "26") (term "0,1,0"))
                                             (rule "commute_or" (formula "26") (term "1,1,0"))
                                             (rule "ifthenelse_split" (formula "27") (term "1,1,0"))
                                             (branch "result_0.length ≥ 1 TRUE"
                                                (rule "replace_known_left" (formula "26") (term "0,1,1,0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "27"))
                                                (rule "leq_literals" (formula "24") (term "0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "commute_or_2" (formula "27") (term "0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "0,1,0,0"))
                                                (rule "leq_literals" (formula "27") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "commute_or" (formula "25") (term "0,0,1,0"))
                                                (rule "cnf_rightDist" (formula "25") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or" (formula "26") (term "0"))
                                                (rule "shift_paren_or" (formula "25") (term "0"))
                                                (rule "commute_or_2" (formula "25") (term "0,0"))
                                                (rule "commute_or" (formula "26") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "26") (term "0"))
                                                (rule "distr_forallAnd" (formula "26"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "commute_or_2" (formula "26") (term "0"))
                                                (rule "commute_or_2" (formula "27") (term "0"))
                                                (rule "shift_paren_or" (formula "26") (term "0,0"))
                                                (rule "shift_paren_or" (formula "27") (term "0,0"))
                                                (rule "commute_or" (formula "26") (term "0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "26") (term "0,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                (rule "qeq_literals" (formula "26") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                (rule "commute_or" (formula "25") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "cut_direct" (formula "37") (term "0,0"))
                                                (branch "CUT: o_0 = null TRUE"
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "false_right" (formula "38"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch "CUT: o_0 = null FALSE"
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "notRight" (formula "38"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "result_0.length ≥ 1 FALSE"
                                                (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "replace_known_right" (formula "26") (term "0,1,1,0,0") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_geqRight" (formula "28"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_antiSymm" (formula "25") (ifseqformula "1"))
                                                (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                                                (rule "qeq_literals" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "25"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "26") (term "1,1,0,0,0") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "applyEq" (formula "27") (term "1,1,1,0,0,0") (ifseqformula "24"))
                                                (rule "add_zero_right" (formula "27") (term "1,1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_notGeq" (formula "25") (term "0"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "25") (term "0,0"))
                                                (rule "inEqSimp_or_tautInEq0" (formula "26") (term "0,0"))
                                                (rule "add_zero_right" (formula "26") (term "1,1,0,0"))
                                                (rule "qeq_literals" (formula "26") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "commute_or_2" (formula "26") (term "0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "26") (term "0,0"))
                                                (rule "add_zero_right" (formula "26") (term "1,1,0,0"))
                                                (rule "qeq_literals" (formula "26") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "cut_direct" (formula "35") (term "0,0"))
                                                (branch "CUT: o_0 = null TRUE"
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "false_right" (formula "36"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch "CUT: o_0 = null FALSE"
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "notRight" (formula "36"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "Null Reference (x_arr_arr_3 = null)"
                                          (builtin "One Step Simplification" (formula "33"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Index Out of Bounds (x_arr_arr_3 != null, but x_9 Out of Bounds!)"
                                          (builtin "One Step Simplification" (formula "33"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,1,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,1,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "eqSymm" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,1,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "19") (term "1,2,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "26") (term "1,2,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "31") (term "1,2,1,0,0,0,1,0,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "12") (term "1,0"))
                                          (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "15") (term "0,0,0,0,0,0,0,0"))
                                          (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "11") (term "0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "closeFalse" (formula "11"))
                                       )
                                       (branch "Array Store Exception (incompatible dynamic element type of x_arr_arr_3 and x_arr)"
                                          (builtin "One Step Simplification" (formula "33"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "13")))
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "array_store_known_dynamic_array_type" (formula "26") (ifseqformula "6"))
                                          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "29")))
                                          (rule "closeTrue" (formula "26"))
                                       )
                                    )
                                    (branch "Exceptional Post (copyOf)"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "close" (formula "25") (ifseqformula "24"))
                                    )
                                    (branch "Pre (copyOf)"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "wellFormedAnon" (formula "24") (term "0,1"))
                                       (rule "wellFormedStorePrimitive" (formula "24") (term "0,0,1"))
                                       (rule "replace_known_left" (formula "24") (term "1,0,1") (ifseqformula "11"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,1,1"))
                                       (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,1,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "24") (term "1,2,1,0,0,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,1,0,1,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "eqSymm" (formula "13") (term "1,0"))
                                       (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
                                       (rule "eqSymm" (formula "16") (term "0,0,0,0,0,0,0,0"))
                                       (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,0,1,0,1,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "14") (term "0,0,0,0,0,0,0,0"))
                                       (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "11") (term "1,0"))
                                       (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "14") (term "0,0,0,0,0,0,0,0"))
                                       (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "14") (term "0,0,0,0,0,0,0,0"))
                                       (rule "wellFormedMemsetArrayObject" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "0,0,1"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "0,0,1"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "0,0,1"))
                                       (rule "wellFormedCreate" (formula "22") (term "0,0,1"))
                                       (rule "replace_known_left" (formula "22") (term "0,0,1") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "pullOutSelect" (formula "22") (term "0,0,1,1") (inst "selectSK=java_lang_Object_created__16"))
                                       (rule "simplifySelectOfMemset" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "23") (term "0,0,1,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "shift_paren_or" (formula "22") (term "1"))
                                       (rule "allLeft" (formula "8") (inst "t=i_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,1"))
                                       (rule "leq_literals" (formula "8") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "11"))
                                       (rule "qeq_literals" (formula "8") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "notLeft" (formula "8"))
                                       (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "18")))
                                       (rule "orRight" (formula "23"))
                                       (rule "referencedObjectIsCreatedRight" (formula "23") (ifseqformula "18"))
                                       (rule "close" (formula "23") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "Null Reference (_arr_0 = null)"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (_arr_0 != null, but i Out of Bounds!)"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,1"))
                                    (rule "blockThrow" (formula "25") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                    (rule "leq_literals" (formula "1") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                        (branch "Null Reference (x_arr_arr_4 = null)"
                           (builtin "One Step Simplification" (formula "24"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "if x_6 false"
                        (builtin "One Step Simplification" (formula "24"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (_arr_0 = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (_arr_0 = null)"
                  (builtin "One Step Simplification" (formula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Use Case"
               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "2")) (ifInst ""  (formula "12")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")))
               (builtin "One Step Simplification" (formula "14"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "notLeft" (formula "11"))
               (rule "andLeft" (formula "10"))
               (rule "eqSymm" (formula "14"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "11"))
               (rule "inEqSimp_commuteLeq" (formula "10"))
               (rule "variableDeclarationAssign" (formula "18") (term "1"))
               (rule "variableDeclaration" (formula "18") (term "1") (newnames "b_1"))
               (rule "blockEmpty" (formula "18") (term "1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
               (rule "array2seqDef" (formula "12") (term "0,1,0") (inst "u=u"))
               (rule "array2seqDef" (formula "12") (term "1,1,0") (inst "u=u"))
               (rule "eqSeqDef" (formula "12") (term "1,0") (inst "iv=iv"))
               (rule "getOfSeqDef" (formula "12") (term "0,1,0,1,1,0"))
               (rule "castDel" (formula "12") (term "2,0,1,0,1,1,0"))
               (rule "castDel" (formula "12") (term "1,0,1,0,1,1,0"))
               (rule "add_zero_right" (formula "12") (term "0,2,1,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
               (rule "times_zero_2" (formula "12") (term "1,1,1,0,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
               (rule "lenOfSeqDef" (formula "12") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "12") (term "1,1,1,0,0,1,1,0"))
               (rule "times_zero_2" (formula "12") (term "1,1,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "12") (term "1,1,1,0,0,1,1,0"))
               (rule "lenOfSeqDef" (formula "12") (term "0,0,1,0"))
               (rule "eqSymm" (formula "12") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,0"))
               (rule "times_zero_2" (formula "12") (term "1,1,1,0,1,0"))
               (rule "add_zero_right" (formula "12") (term "1,1,0,1,0"))
               (rule "getOfSeqDef" (formula "12") (term "0,1,0,1,1,0"))
               (rule "castDel" (formula "12") (term "1,0,1,0,1,1,0"))
               (rule "castDel" (formula "12") (term "2,0,1,0,1,1,0"))
               (rule "add_zero_right" (formula "12") (term "0,2,1,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
               (rule "times_zero_2" (formula "12") (term "1,1,1,0,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
               (rule "lenOfSeqDef" (formula "12") (term "0,0,1,0"))
               (rule "eqSymm" (formula "12") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,0"))
               (rule "times_zero_2" (formula "12") (term "1,1,1,0,1,0"))
               (rule "add_zero_right" (formula "12") (term "1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0"))
               (rule "eqSymm" (formula "12") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0"))
               (rule "eqSymm" (formula "12") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,1,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,1,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,1,0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "12") (term "0,0,0,1,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0"))
               (rule "eqSymm" (formula "12") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "12") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,1,0,1,1,0"))
               (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0"))
               (rule "eqSymm" (formula "12") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "12") (term "0,0,1,0,1,0"))
               (rule "nnf_imp2or" (formula "13") (term "0"))
               (rule "nnf_imp2or" (formula "12") (term "0"))
               (rule "nnf_notAnd" (formula "13") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
               (rule "mul_literals" (formula "13") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "12") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "12") (term "0,1,1,0"))
               (rule "nnf_notAnd" (formula "12") (term "0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,0"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "compound_less_than_comparison_2" (formula "18") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
               (rule "variableDeclarationAssign" (formula "18") (term "1"))
               (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_2"))
               (rule "assignment" (formula "18") (term "1"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "variableDeclarationAssign" (formula "18") (term "1"))
               (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_3"))
               (rule "assignment_read_length" (formula "18") (term "1"))
               (branch "Normal Execution (_arr_0 != null)"
                  (builtin "One Step Simplification" (formula "19"))
                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
                  (rule "false_right" (formula "18"))
                  (rule "commute_or" (formula "13") (term "0,0"))
                  (rule "commute_or_2" (formula "12") (term "0,1,1,0"))
                  (rule "ifthenelse_to_or_right" (formula "12") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,1,1,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,0,1,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,1,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,1,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,0"))
                  (rule "commute_or" (formula "12") (term "0,0,1,1,0"))
                  (rule "shift_paren_or" (formula "12") (term "1,0,1,0"))
                  (rule "less_than_comparison_simple" (formula "18") (term "1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0"))
                  (rule "methodCallEmpty" (formula "18") (term "1"))
                  (rule "emptyModality" (formula "18") (term "1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "impRight" (formula "18"))
                  (rule "notLeft" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "14"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "5") (term "0,0"))
                  (rule "add_zero_left" (formula "5") (term "0"))
                  (rule "methodCallReturn" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallEmpty" (formula "20") (term "1"))
                  (rule "tryEmpty" (formula "20") (term "1"))
                  (rule "emptyModality" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
                  (rule "andRight" (formula "20") (userinteraction))
                  (branch "Case 1"
                     (rule "andRight" (formula "20") (userinteraction))
                     (branch "Case 1"
                        (rule "array2seq2dDef" (formula "20") (term "0") (inst "u=u") (userinteraction))
                        (rule "array2seq2dDef" (formula "20") (term "1") (inst "u=u") (userinteraction))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "12"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                        (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "times_zero_1" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "18") (term "1,2,1,0,0,0,2,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "18"))
                        (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq1" (formula "11"))
                        (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "1,0"))
                        (rule "times_zero_1" (formula "11") (term "0"))
                        (rule "leq_literals" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "11") (term "0,0,0,1,1,0"))
                        (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,1,0,1,0,1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,1,1,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,1,1,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,1,0,1,0,1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "11") (term "0,0,0,1,1,0"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,2,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "17"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,1,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "2") (term "1") (ifseqformula "10"))
                        (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,2,0") (ifseqformula "10"))
                        (rule "eqSymm" (formula "17"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0") (ifseqformula "10"))
                        (rule "eqSymm" (formula "11") (term "0,0,0,1,1,0"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0") (ifseqformula "10"))
                        (rule "eqSymm" (formula "11") (term "0,0,0,1,1,0"))
                        (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,1,2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,2,0") (ifseqformula "10"))
                        (rule "eqSymm" (formula "17"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,1,1,0,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "10"))
                        (rule "eqSymm" (formula "17"))
                        (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "10"))
                        (rule "eqSymm" (formula "17"))
                        (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,1,2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,1,1,0,0,0,1,1,0") (ifseqformula "2"))
                        (rule "array2seqDef" (formula "17") (term "2,1") (inst "u=u_1"))
                        (rule "eqSymm" (formula "17"))
                        (rule "eqSeqDef" (formula "17") (inst "iv=iv"))
                        (rule "lenOfSeqDef" (formula "17") (term "1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "17") (term "1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "17") (term "1,1,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "17") (term "1,1,1,0,0,1"))
                        (rule "lenOfSeqDef" (formula "17") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "17") (term "1,1,0"))
                        (rule "times_zero_2" (formula "17") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "17") (term "1,1,0"))
                        (rule "getOfSeqDef" (formula "17") (term "1,1,0,1"))
                        (rule "castDel" (formula "17") (term "2,1,1,0,1"))
                        (rule "castDel" (formula "17") (term "1,1,1,0,1"))
                        (rule "add_zero_right" (formula "17") (term "0,2,1,1,1,1,0,1"))
                        (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0,1"))
                        (rule "times_zero_2" (formula "17") (term "1,1,1,0,1,1,0,1"))
                        (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0,1"))
                        (rule "getOfSeqDef" (formula "17") (term "0,1,0,1"))
                        (rule "castDel" (formula "17") (term "1,0,1,0,1"))
                        (rule "castDel" (formula "17") (term "2,0,1,0,1"))
                        (rule "add_zero_right" (formula "17") (term "0,2,1,2,1,0,1,0,1"))
                        (rule "add_zero_right" (formula "17") (term "0,2,0,1,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "17") (term "1,1,1,0,0,1,0,1"))
                        (rule "add_zero_right" (formula "17") (term "1,1,0,0,1,0,1"))
                        (rule "lenOfSeqDef" (formula "17") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "allRight" (formula "17") (inst "sk=iv_7"))
                        (rule "impRight" (formula "17"))
                        (rule "andLeft" (formula "1"))
                        (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                        (rule "array2seqDef" (formula "19") (term "1,1") (inst "u=u"))
                        (rule "pullOutSelect" (formula "19") (term "1,2,1,0") (inst "selectSK=arr_52"))
                        (rule "applyEq" (formula "20") (term "0,1,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "20") (term "1,2,1,1") (inst "selectSK=arr_53"))
                        (rule "applyEq" (formula "21") (term "0,1,1,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "21") (term "1,2,1,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "21") (term "0,1,1,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_54"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "19")))
                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__23"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "19")))
                        (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "20") (term "0,1,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "20") (term "1,2,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_to_or_left" (formula "13") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "13") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "0,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,0,1,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,0,1,0,0,1,0"))
                        (rule "ifthenelse_to_or_left" (formula "13") (term "0,0,0,1,1,0"))
                        (rule "eqSymm" (formula "13") (term "1,0,0,0,0,1,1,0"))
                        (rule "eqSymm" (formula "13") (term "1,1,0,0,0,1,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,1,1,0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0"))
                        (rule "commute_or" (formula "13") (term "1,1,0,0,1,0"))
                        (rule "commute_or" (formula "13") (term "0,0,1,1,0"))
                        (rule "commute_or_2" (formula "13") (term "0,1,1,0"))
                        (rule "commute_or_2" (formula "13") (term "0,1,0,1,1,0"))
                        (rule "commute_or" (formula "13") (term "1,1,0,1,1,0"))
                        (rule "cnf_rightDist" (formula "13") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "13") (term "1,0,0,1,0"))
                        (rule "inEqSimp_or_subsumption4" (formula "13") (term "0,1,0,0,1,0"))
                        (rule "greater_literals" (formula "13") (term "0,0,0,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "shift_paren_or" (formula "13") (term "0,0,0,1,0"))
                        (rule "commute_or" (formula "13") (term "0,0,1,0,1,1,0"))
                        (rule "commute_or_2" (formula "13") (term "0,1,1,0,1,1,0"))
                        (rule "commute_or" (formula "13") (term "0,0,1,1,0,1,1,0"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "i_0 ≥ 1 TRUE"
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "replace_known_left" (formula "20") (term "0,1") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "3")))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "2"))
                           (rule "leq_literals" (formula "12") (term "0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "equalityToSeqGetAndSeqLenRight" (formula "19") (inst "iv=iv"))
                           (rule "getOfSeqDef" (formula "19") (term "0,1,0,1"))
                           (rule "castDel" (formula "19") (term "1,0,1,0,1"))
                           (rule "castDel" (formula "19") (term "2,0,1,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,2,1,0,1,0,1"))
                           (rule "eqSymm" (formula "19") (term "1,0,1"))
                           (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0,1"))
                           (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0,1"))
                           (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0,1"))
                           (rule "lenOfSeqDef" (formula "19") (term "1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "19") (term "1,1,1,0,0,1"))
                           (rule "times_zero_2" (formula "19") (term "1,1,1,1,0,0,1"))
                           (rule "add_zero_right" (formula "19") (term "1,1,1,0,0,1"))
                           (rule "lenOfSeqDef" (formula "19") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "19") (term "1,1,0"))
                           (rule "times_zero_2" (formula "19") (term "1,1,1,0"))
                           (rule "add_zero_right" (formula "19") (term "1,1,0"))
                           (rule "lenOfSeqDef" (formula "19") (term "0,0"))
                           (rule "eqSymm" (formula "19") (term "0"))
                           (rule "polySimp_elimSub" (formula "19") (term "1,1,0"))
                           (rule "times_zero_2" (formula "19") (term "1,1,1,0"))
                           (rule "add_zero_right" (formula "19") (term "1,1,0"))
                           (rule "getOfSeqDef" (formula "19") (term "0,1,0,1"))
                           (rule "castDel" (formula "19") (term "2,0,1,0,1"))
                           (rule "castDel" (formula "19") (term "1,0,1,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,2,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0,1,0,1"))
                           (rule "times_zero_2" (formula "19") (term "1,1,1,0,0,1,0,1"))
                           (rule "add_zero_right" (formula "19") (term "1,1,0,0,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                           (rule "eqSymm" (formula "19") (term "0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                           (rule "eqSymm" (formula "19") (term "0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0,1"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0,1"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                           (rule "eqSymm" (formula "19") (term "0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1,1,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                           (rule "eqSymm" (formula "19") (term "0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,0,1,0"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "nnf_imp2or" (formula "19") (term "0,1"))
                           (rule "nnf_notAnd" (formula "19") (term "0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1"))
                           (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1"))
                           (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1"))
                           (rule "mul_literals" (formula "19") (term "1,0,0,0,1"))
                           (rule "cnf_rightDist" (formula "13") (term "1,1,0,1,1,0"))
                           (rule "commute_or_2" (formula "13") (term "0,1,1,0,1,1,0"))
                           (rule "inEqSimp_or_tautInEq1" (formula "13") (term "0,0,1,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "1,1,0,0,1,1,0,1,1,0"))
                           (rule "qeq_literals" (formula "13") (term "1,0,0,1,1,0,1,1,0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "commute_or" (formula "13") (term "1,1,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "13") (term "0,1,1,0"))
                           (rule "commute_or_2" (formula "13") (term "0,0,1,1,0"))
                           (rule "shift_paren_or" (formula "13") (term "1,0,1,1,0"))
                           (rule "commute_or_2" (formula "13") (term "0,1,0,1,1,0"))
                           (rule "shift_paren_or" (formula "13") (term "0,0,0,1,1,0"))
                           (rule "commute_or_2" (formula "13") (term "0,0,1,0,1,1,0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "shift_paren_or" (formula "13") (term "0,0,0,0,1,1,0"))
                           (rule "commute_or" (formula "13") (term "0,0,0,0,0,1,1,0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "ifthenelse_split" (formula "19") (term "1,0"))
                           (branch "arr_0[iv_7].length ≥ 1 TRUE"
                              (rule "replace_known_left" (formula "20") (term "0,1,1,0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "all_pull_out1" (formula "14") (term "1,0"))
                              (rule "shift_paren_and" (formula "14") (term "0,1,0"))
                              (rule "all_pull_out3" (formula "14") (term "0"))
                              (rule "cnf_rightDist" (formula "14") (term "0,0"))
                              (rule "distr_forallAnd" (formula "14") (term "0"))
                              (rule "distr_forallAnd" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "commute_or_2" (formula "15") (term "0,0"))
                              (rule "commute_or_2" (formula "15") (term "0,0,0"))
                              (rule "commute_or_2" (formula "15") (term "0,0,0,0"))
                              (rule "cnf_rightDist" (formula "14") (term "0,0"))
                              (rule "distr_forallAnd" (formula "14") (term "0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "distr_forallAnd" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "commute_or_2" (formula "15") (term "0,0"))
                              (rule "commute_or_2" (formula "15") (term "0,0,0"))
                              (rule "cnf_rightDist" (formula "14") (term "0"))
                              (rule "distr_forallAnd" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "commute_or_2" (formula "15") (term "0,0"))
                              (rule "commute_or" (formula "15") (term "0,0,0"))
                              (rule "cnf_rightDist" (formula "14") (term "0"))
                              (rule "distr_forallAnd" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "shift_paren_or" (formula "14") (term "0"))
                              (rule "commute_or" (formula "15") (term "0,0"))
                              (rule "shift_paren_or" (formula "14") (term "0,0"))
                              (rule "shift_paren_or" (formula "17") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                              (rule "allLeft" (formula "19") (inst "t=iv_7"))
                              (rule "replaceKnownSelect_taclet00020101_1" (formula "19") (term "0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "19") (term "0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "19") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "19") (term "0,0,1"))
                              (rule "leq_literals" (formula "19") (term "0,1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "notLeft" (formula "19"))
                              (rule "allLeft" (formula "11") (inst "t=iv_7"))
                              (rule "inEqSimp_contradInEq0" (formula "11") (term "1") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "11") (term "0,0,1"))
                              (rule "leq_literals" (formula "11") (term "0,1"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "11") (term "0,1"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "notLeft" (formula "11"))
                              (rule "ifthenelse_to_or_left" (formula "17") (term "0,0,0,0,0,0,0"))
                              (rule "eqSymm" (formula "17") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "eqSymm" (formula "17") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "commute_or" (formula "17") (term "0,0,0,0,0,0"))
                              (rule "commute_or_2" (formula "17") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "17") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "17") (term "0,0,0"))
                              (rule "commute_or_2" (formula "17") (term "0,0"))
                              (rule "commute_or_2" (formula "17") (term "0,1,0,0"))
                              (rule "commute_or" (formula "17") (term "1,1,0,0"))
                              (rule "commute_or" (formula "17") (term "0,0,1,0,0"))
                              (rule "cnf_rightDist" (formula "17") (term "1,1,0,0"))
                              (rule "cnf_rightDist" (formula "17") (term "0,0"))
                              (rule "distr_forallAnd" (formula "17") (term "0"))
                              (rule "distr_forallAnd" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "commute_or" (formula "18") (term "0,0"))
                              (rule "commute_or_2" (formula "17") (term "0,0"))
                              (rule "commute_or_2" (formula "17") (term "0,0,0"))
                              (rule "commute_or" (formula "18") (term "1,1,0,0"))
                              (rule "cnf_rightDist" (formula "18") (term "0,0"))
                              (rule "distr_forallAnd" (formula "18") (term "0"))
                              (rule "distr_forallAnd" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "commute_or_2" (formula "18") (term "0,0"))
                              (rule "shift_paren_or" (formula "19") (term "0,0"))
                              (rule "commute_or_2" (formula "18") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                              (rule "commute_or_2" (formula "18") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "17") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "18") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "17") (term "0,0,0,0,0"))
                              (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "17") (term "0,0,0,0,0,0"))
                              (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0,0"))
                              (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0,0"))
                              (rule "commute_or" (formula "18") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_or_tautInEq1" (formula "18") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "18") (term "1,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "ifthenelse_split" (formula "27") (term "0,0"))
                              (branch " x_arr_arr_2[iv_7]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 TRUE"
                                 (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0,0,0"))
                                 (rule "commute_or" (formula "18") (term "0,0,0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "arrayLengthNotNegative" (formula "28") (term "1,1,1,0,0,1,0,1"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "arrayLengthIsAShort" (formula "28") (term "1,1,1,0,0,1,0,1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0,0") (ifseqformula "9"))
                                 (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "14"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "allLeft" (formula "19") (inst "t=iv_7"))
                                 (rule "replaceKnownSelect_taclet00020101_1" (formula "19") (term "0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "19") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet00020101_1" (formula "19") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "19") (term "0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00020101_0" (formula "19") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_15" (formula "19") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "19") (term "1,0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "allLeft" (formula "18") (inst "t=iv_7"))
                                 (rule "replaceKnownSelect_taclet00020101_1" (formula "18") (term "0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "18") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet00020101_0" (formula "18") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_15" (formula "18") (term "0,0,1,0"))
                                 (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "allLeft" (formula "17") (inst "t=iv_7"))
                                 (rule "replaceKnownSelect_taclet00020101_1" (formula "17") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet00020101_0" (formula "17") (term "0,1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "17") (term "0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_15" (formula "17") (term "0,1,1"))
                                 (rule "replaceKnownSelect_taclet00020101_1" (formula "17") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "17") (term "0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00020101_0" (formula "17") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_15" (formula "17") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "17") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "17") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0"))
                                 (rule "leq_literals" (formula "17") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "allRight" (formula "31") (inst "sk=iv_8"))
                                 (rule "cutUpperBound" (formula "31") (ifseqformula "19"))
                                 (branch "Case 1"
                                    (rule "crossInst" (formula "20") (inst "sk=j_23") (ifseqformula "32"))
                                    (rule "orRight" (formula "33"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "orRight" (formula "34"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "inEqSimp_geqRight" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "35"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "replace_known_left" (formula "36") (term "0,0,1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "1")))
                                    (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0,1"))
                                    (rule "applyEqRigid" (formula "23") (term "0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "1,0,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "23") (term "0,2,0,0,1,0") (ifseqformula "22"))
                                    (rule "applyEqRigid" (formula "23") (term "0,2,0,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "Case 2"
                                    (rule "crossInst" (formula "20") (inst "sk=j_22") (ifseqformula "32"))
                                    (rule "orRight" (formula "33"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "orRight" (formula "34"))
                                    (rule "eqSymm" (formula "27"))
                                    (rule "inEqSimp_geqRight" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "35"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "replace_known_left" (formula "36") (term "0,0,1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "1")))
                                    (rule "inEqSimp_homoInEq0" (formula "36") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "22") (term "0,2,0,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "22") (term "0,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "36") (term "1,0,0,0") (ifseqformula "19"))
                                    (rule "applyEqRigid" (formula "22") (term "0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "22") (term "0,2,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "19"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,0,1"))
                                    (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                    (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0"))
                                    (rule "leq_literals" (formula "28") (term "0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "false_right" (formula "28"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "21") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_55"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                    (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "17") (ifseqformula "30"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "22") (term "0,0,1,0") (inst "selectSK=arr_56"))
                                    (rule "simplifySelectOfAnon" (formula "22"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "35")))
                                    (rule "eqSymm" (formula "22") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet00020101_9" (formula "22") (term "0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_14" (formula "22") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "simplifySelectOfMemset" (formula "22"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "dismissNonSelectedField" (formula "22") (term "2,0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "22") (term "0,0"))
                                    (rule "eqSymm" (formula "22") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "22") (term "0,0,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "simplifySelectOfStore" (formula "22"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "32")))
                                    (rule "simplifySelectOfStore" (formula "22"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "32")))
                                    (rule "simplifySelectOfCreate" (formula "22"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "32")) (ifInst ""  (formula "34")))
                                    (rule "applyEqReverse" (formula "23") (term "0,0,1,0") (ifseqformula "22"))
                                    (rule "hideAuxiliaryEq" (formula "22"))
                                    (rule "pullOutSelect" (formula "22") (term "0,0,1") (inst "selectSK=arr_57"))
                                    (rule "simplifySelectOfAnon" (formula "22"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "applyEqReverse" (formula "23") (term "0,0,1") (ifseqformula "22"))
                                    (rule "hideAuxiliaryEq" (formula "22"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_58"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "18") (ifseqformula "30"))
                                    (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=arr_59"))
                                    (rule "simplifySelectOfMemset" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")))
                                    (rule "simplifySelectOfStore" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfStore" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                    (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "narrowSelectArrayType" (formula "2") (term "1,0") (ifseqformula "14") (ifseqformula "31"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__24"))
                                    (rule "simplifySelectOfMemset" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfStore" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfStore" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfStore" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                    (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__25"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "35") (term "0") (ifseqformula "13") (ifseqformula "29"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "allLeft" (formula "27") (inst "t=iv_7"))
                                    (rule "replaceKnownSelect_taclet00020101_1" (formula "27") (term "0,0,1,0,0"))
                                    (rule "replaceKnownSelect_taclet00020101_1" (formula "27") (term "0,1,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "27") (term "0,0,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "27") (term "0,1,0,1,0"))
                                    (rule "replaceKnownSelect_taclet00020101_0" (formula "27") (term "0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet00020101_1" (formula "27") (term "0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_15" (formula "27") (term "0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "27") (term "0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet00020101_0" (formula "27") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_15" (formula "27") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0"))
                                    (rule "applyEq" (formula "27") (term "1,1,1,0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "27") (term "0,0,1,1,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "27") (term "0,1,1,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0") (ifseqformula "19"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_contradInEq0" (formula "27") (term "1,0,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,0"))
                                    (rule "add_literals" (formula "27") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "27") (term "0,1,0"))
                                    (rule "leq_literals" (formula "27") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "allLeft" (formula "25") (inst "t=iv_7"))
                                    (rule "replaceKnownSelect_taclet00020101_1" (formula "25") (term "0,0,1,0,0"))
                                    (rule "replaceKnownSelect_taclet00020101_1" (formula "25") (term "0,1,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "25") (term "0,0,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "25") (term "0,1,0,1,0"))
                                    (rule "replaceKnownSelect_taclet00020101_0" (formula "25") (term "0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet00020101_1" (formula "25") (term "0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_15" (formula "25") (term "0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "25") (term "0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet00020101_1" (formula "25") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet00020101_0" (formula "25") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "25") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_15" (formula "25") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                    (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEq" (formula "25") (term "1,1,1,0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "25") (term "0,0,1,1,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "25") (term "0,1,1,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "25") (term "0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "25") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "allLeft" (formula "27") (inst "t=iv_7"))
                                    (rule "replaceKnownSelect_taclet00020101_1" (formula "27") (term "0,1,0,1,0"))
                                    (rule "replaceKnownSelect_taclet00020101_1" (formula "27") (term "0,0,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "27") (term "0,1,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "27") (term "0,0,1,0,0"))
                                    (rule "replaceKnownSelect_taclet00020101_0" (formula "27") (term "0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet00020101_1" (formula "27") (term "0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_15" (formula "27") (term "0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "27") (term "0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet00020101_1" (formula "27") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "27") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0"))
                                    (rule "applyEq" (formula "27") (term "1,1,1,0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "27") (term "0,0,1,1,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "27") (term "0,1,1,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "27") (term "1,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,1,0,0,0"))
                                    (rule "leq_literals" (formula "27") (term "0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "27") (term "0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,0"))
                                    (rule "add_literals" (formula "27") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "27") (term "0,1,0"))
                                    (rule "leq_literals" (formula "27") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "cut_direct" (formula "22") (term "0,0"))
                                    (branch "CUT: iv_8 ≥ i_0 TRUE"
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " (x_arr_arr_2[iv_7]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "allLeft" (formula "25") (inst "t=iv_8"))
                                          (rule "replaceKnownSelect_taclet100000020101_25" (formula "25") (term "1,0,0"))
                                          (rule "replaceKnownSelect_taclet100000020101_16" (formula "25") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100000020101_47" (formula "25") (term "1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00100000020101_48" (formula "25") (term "0,0,0"))
                                          (rule "eqSymm" (formula "25") (term "0,0"))
                                          (rule "narrowSelectArrayType" (formula "25") (term "0,0,0") (ifseqformula "13") (ifseqformula "31"))
                                          (rule "eqSymm" (formula "25") (term "0,0"))
                                          (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "25") (term "0,0,1"))
                                          (rule "leq_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "25") (term "0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                       (branch " (x_arr_arr_2[iv_7]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "allLeft" (formula "24") (inst "t=iv_8"))
                                          (rule "replaceKnownSelect_taclet100000020101_25" (formula "24") (term "1,0,0"))
                                          (rule "replaceKnownSelect_taclet100000020101_16" (formula "24") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100000020101_47" (formula "24") (term "1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10100000020101_48" (formula "24") (term "0,0,0"))
                                          (rule "eqSymm" (formula "24") (term "0,0"))
                                          (rule "narrowSelectArrayType" (formula "24") (term "0,0,0") (ifseqformula "12") (ifseqformula "31"))
                                          (rule "eqSymm" (formula "24") (term "0,0"))
                                          (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "24") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_literals" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "CUT: iv_8 ≥ i_0 FALSE"
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_geqRight" (formula "30"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " (x_arr_arr_2[iv_7]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "allLeft" (formula "17") (inst "t=iv_8"))
                                          (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,1"))
                                          (rule "leq_literals" (formula "17") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "17") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "allLeft" (formula "30") (inst "t=iv_8"))
                                          (rule "replaceKnownSelect_taclet100000020101_23" (formula "30") (term "0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100000020101_24" (formula "30") (term "0,0,0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                          (rule "leq_literals" (formula "30") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "30") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "notLeft" (formula "30"))
                                          (rule "allLeft" (formula "26") (inst "t=iv_8"))
                                          (rule "replaceKnownSelect_taclet100000020101_16" (formula "26") (term "0,0,0"))
                                          (rule "replaceKnownSelect_taclet100000020101_25" (formula "26") (term "1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01100000020101_48" (formula "26") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100000020101_47" (formula "26") (term "1,0,0"))
                                          (rule "eqSymm" (formula "26") (term "0,0"))
                                          (rule "narrowSelectArrayType" (formula "26") (term "0,0,0") (ifseqformula "14") (ifseqformula "34"))
                                          (rule "eqSymm" (formula "26") (term "0,0"))
                                          (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "26") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "26"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_literals" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                       (branch " (x_arr_arr_2[iv_7]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "allLeft" (formula "16") (inst "t=iv_8"))
                                          (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "16") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_contradInEq0" (formula "16") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                          (rule "leq_literals" (formula "16") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "notLeft" (formula "16"))
                                          (rule "allLeft" (formula "29") (inst "t=iv_8"))
                                          (rule "replaceKnownSelect_taclet100000020101_23" (formula "29") (term "0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100000020101_24" (formula "29") (term "0,0,0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "29") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                          (rule "leq_literals" (formula "29") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "29") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "notLeft" (formula "29"))
                                          (rule "allLeft" (formula "25") (inst "t=iv_8"))
                                          (rule "replaceKnownSelect_taclet100000020101_25" (formula "25") (term "1,0,0"))
                                          (rule "replaceKnownSelect_taclet100000020101_16" (formula "25") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100000020101_47" (formula "25") (term "1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11100000020101_48" (formula "25") (term "0,0,0"))
                                          (rule "eqSymm" (formula "25") (term "0,0"))
                                          (rule "narrowSelectArrayType" (formula "25") (term "0,0,0") (ifseqformula "13") (ifseqformula "34"))
                                          (rule "eqSymm" (formula "25") (term "0,0"))
                                          (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                          (rule "leq_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "25") (term "0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                    )
                                 )
                              )
                              (branch " x_arr_arr_2[iv_7]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 FALSE"
                                 (rule "eqSymm" (formula "28") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "27"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradEq7" (formula "28") (term "0") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                 (rule "leq_literals" (formula "28") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "false_right" (formula "28"))
                                 (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0,0,0"))
                                 (rule "commute_or" (formula "18") (term "0,0,0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                 (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0,0") (ifseqformula "9"))
                                 (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "14"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "allLeft" (formula "19") (inst "t=iv_7"))
                                 (rule "replaceKnownSelect_taclet00020101_1" (formula "19") (term "0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "19") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet00020101_1" (formula "19") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "19") (term "0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00020101_0" (formula "19") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_15" (formula "19") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "4")))
                                 (rule "true_left" (formula "19"))
                                 (rule "allLeft" (formula "18") (inst "t=iv_7"))
                                 (rule "replaceKnownSelect_taclet00020101_1" (formula "18") (term "0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "18") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet00020101_0" (formula "18") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00020101_15" (formula "18") (term "0,0,1,0"))
                                 (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "18") (term "1"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                 (rule "leq_literals" (formula "18") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "closeFalse" (formula "18"))
                              )
                           )
                           (branch "arr_0[iv_7].length ≥ 1 FALSE"
                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
                              (rule "inEqSimp_geqRight" (formula "19"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_notGeq" (formula "20") (term "0,0"))
                              (rule "mul_literals" (formula "20") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_or_tautInEq0" (formula "20") (term "0,0,1"))
                              (rule "add_zero_right" (formula "20") (term "1,1,0,0,1"))
                              (rule "qeq_literals" (formula "20") (term "1,0,0,1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "orRight" (formula "20"))
                              (rule "inEqSimp_leqRight" (formula "20"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0"))
                              (rule "leq_literals" (formula "21") (term "0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "false_right" (formula "21"))
                              (rule "all_pull_out1" (formula "15") (term "1,0"))
                              (rule "shift_paren_and" (formula "15") (term "0,1,0"))
                              (rule "allLeft" (formula "16") (inst "t=iv_7"))
                              (rule "replaceKnownSelect_taclet00020101_1" (formula "16") (term "0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "16") (term "0,0,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "16") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "16") (term "0,0,1"))
                              (rule "leq_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "notLeft" (formula "16"))
                              (rule "allLeft" (formula "12") (inst "t=iv_7"))
                              (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "12") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "12") (term "0,0,1"))
                              (rule "leq_literals" (formula "12") (term "0,1"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "notLeft" (formula "12"))
                              (rule "all_pull_out3" (formula "15") (term "0"))
                              (rule "cnf_rightDist" (formula "15") (term "0,0"))
                              (rule "distr_forallAnd" (formula "15") (term "0"))
                              (rule "distr_forallAnd" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "commute_or_2" (formula "16") (term "0,0"))
                              (rule "commute_or_2" (formula "16") (term "0,0,0"))
                              (rule "commute_or_2" (formula "16") (term "0,0,0,0"))
                              (rule "cnf_rightDist" (formula "15") (term "0,0"))
                              (rule "distr_forallAnd" (formula "15") (term "0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "distr_forallAnd" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "commute_or_2" (formula "16") (term "0,0"))
                              (rule "commute_or_2" (formula "16") (term "0,0,0"))
                              (rule "cnf_rightDist" (formula "15") (term "0"))
                              (rule "distr_forallAnd" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "commute_or_2" (formula "16") (term "0"))
                              (rule "commute_or_2" (formula "16") (term "0,0"))
                              (rule "commute_or" (formula "16") (term "0,0,0"))
                              (rule "cnf_rightDist" (formula "15") (term "0"))
                              (rule "distr_forallAnd" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "commute_or_2" (formula "16") (term "0"))
                              (rule "shift_paren_or" (formula "15") (term "0"))
                              (rule "commute_or" (formula "16") (term "0,0"))
                              (rule "shift_paren_or" (formula "15") (term "0,0"))
                              (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                              (rule "ifthenelse_to_or_left" (formula "18") (term "0,0,0,0,0,0,0"))
                              (rule "eqSymm" (formula "18") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "eqSymm" (formula "18") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "18") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "commute_or" (formula "18") (term "0,0,0,0,0,0"))
                              (rule "commute_or_2" (formula "18") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "18") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "18") (term "0,0,0"))
                              (rule "commute_or_2" (formula "18") (term "0,0"))
                              (rule "commute_or" (formula "18") (term "1,1,0,0"))
                              (rule "commute_or_2" (formula "18") (term "0,1,0,0"))
                              (rule "commute_or" (formula "18") (term "0,0,1,0,0"))
                              (rule "cnf_rightDist" (formula "18") (term "1,1,0,0"))
                              (rule "cnf_rightDist" (formula "18") (term "0,0"))
                              (rule "distr_forallAnd" (formula "18") (term "0"))
                              (rule "distr_forallAnd" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "commute_or_2" (formula "18") (term "0,0"))
                              (rule "commute_or" (formula "19") (term "0,0"))
                              (rule "commute_or_2" (formula "18") (term "0,0,0"))
                              (rule "commute_or" (formula "19") (term "1,1,0,0"))
                              (rule "cnf_rightDist" (formula "19") (term "0,0"))
                              (rule "distr_forallAnd" (formula "19") (term "0"))
                              (rule "distr_forallAnd" (formula "19"))
                              (rule "andLeft" (formula "19"))
                              (rule "commute_or_2" (formula "19") (term "0,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0"))
                              (rule "commute_or_2" (formula "19") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                              (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "19") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "18") (term "0,0,0,0,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "18") (term "0,0,0,0,0,0"))
                              (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0,0"))
                              (rule "commute_or" (formula "19") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_or_tautInEq1" (formula "19") (term "0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "19") (term "1,1,0,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "19") (term "1,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0,0,0"))
                              (rule "commute_or" (formula "18") (term "0,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                              (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "3"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "leq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                              (rule "leq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0,0") (ifseqformula "13"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "10"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "allLeft" (formula "18") (inst "t=iv_7"))
                              (rule "replaceKnownSelect_taclet00020101_1" (formula "18") (term "0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "18") (term "0,0,1"))
                              (rule "replaceKnownSelect_taclet00020101_0" (formula "18") (term "0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00020101_15" (formula "18") (term "0,0,1,0"))
                              (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "allLeft" (formula "19") (inst "t=iv_7"))
                              (rule "replaceKnownSelect_taclet00020101_1" (formula "19") (term "0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "19") (term "0,0,1"))
                              (rule "replaceKnownSelect_taclet00020101_1" (formula "19") (term "0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00020101_2" (formula "19") (term "0,0,1,0"))
                              (rule "replaceKnownSelect_taclet00020101_0" (formula "19") (term "0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00020101_15" (formula "19") (term "0,0,1,0,0"))
                              (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "19") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_contradEq7" (formula "19") (term "1") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "19") (term "0,0,1"))
                              (rule "leq_literals" (formula "19") (term "0,1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "19") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "19") (term "0,1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "7"))
                              (rule "andLeft" (formula "19"))
                              (rule "inEqSimp_homoInEq1" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "1,1,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0"))
                              (rule "add_zero_right" (formula "19") (term "0"))
                              (rule "leq_literals" (formula "19"))
                              (rule "closeFalse" (formula "19"))
                           )
                        )
                        (branch "i_0 ≥ 1 FALSE"
                           (rule "inEqSimp_geqRight" (formula "15"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "times_zero_2" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "20") (inst "sk=i_2"))
                        (rule "orRight" (formula "20"))
                        (rule "notRight" (formula "21"))
                        (rule "orRight" (formula "21"))
                        (rule "inEqSimp_geqRight" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "22"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_homoInEq1" (formula "16"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                        (rule "leq_literals" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "16") (term "1,2,1,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                        (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,1,0,1,0,1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "14"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,0"))
                        (rule "times_zero_1" (formula "4") (term "0"))
                        (rule "qeq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0") (ifseqformula "4"))
                        (rule "eqSymm" (formula "13") (term "0,0,0,1,1,0"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,1,1,0,1,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "4") (term "1") (ifseqformula "12"))
                        (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "12"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,1,0,1,0,1,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,1,1,0,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0") (ifseqformula "4"))
                        (rule "eqSymm" (formula "13") (term "0,0,0,1,1,0"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,1,1,0,0,1,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,1,1,1,0,0,0,1,1,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,1,1,0,0,0,1,1,0") (ifseqformula "4"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_50"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "10") (ifseqformula "17"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "1"))
                        (rule "leq_literals" (formula "12") (term "0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "ifthenelse_to_or_left" (formula "13") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "13") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "0,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,0,1,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,0,1,0,0,1,0"))
                        (rule "commute_or" (formula "13") (term "1,1,0,0,1,0"))
                        (rule "cnf_rightDist" (formula "13") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "13") (term "1,0,0,1,0"))
                        (rule "inEqSimp_or_subsumption4" (formula "13") (term "0,1,0,0,1,0"))
                        (rule "greater_literals" (formula "13") (term "0,0,0,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "shift_paren_or" (formula "13") (term "0,0,0,1,0"))
                        (rule "ifthenelse_to_or_right" (formula "13") (term "0,0,0,1,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,1,1,0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,1,1,0,0,0,1,1,0"))
                        (rule "commute_or" (formula "13") (term "0,0,1,1,0"))
                        (rule "commute_or_2" (formula "13") (term "0,1,1,0"))
                        (rule "commute_or_2" (formula "13") (term "0,1,0,1,1,0"))
                        (rule "commute_or" (formula "13") (term "1,1,0,1,1,0"))
                        (rule "commute_or" (formula "13") (term "0,0,1,0,1,1,0"))
                        (rule "commute_or_2" (formula "13") (term "0,1,1,0,1,1,0"))
                        (rule "commute_or" (formula "13") (term "0,0,1,1,0,1,1,0"))
                        (rule "cnf_rightDist" (formula "13") (term "1,1,0,1,1,0"))
                        (rule "commute_or_2" (formula "13") (term "0,1,1,0,1,1,0"))
                        (rule "inEqSimp_or_tautInEq1" (formula "13") (term "0,0,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "13") (term "1,1,0,0,1,1,0,1,1,0"))
                        (rule "qeq_literals" (formula "13") (term "1,0,0,1,1,0,1,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "shift_paren_or" (formula "13") (term "1,1,0,1,1,0"))
                        (rule "commute_or" (formula "13") (term "0,1,1,0,1,1,0"))
                        (rule "cnf_rightDist" (formula "13") (term "0,1,1,0"))
                        (rule "commute_or_2" (formula "13") (term "0,0,1,1,0"))
                        (rule "shift_paren_or" (formula "13") (term "1,0,1,1,0"))
                        (rule "commute_or_2" (formula "13") (term "0,1,0,1,1,0"))
                        (rule "shift_paren_or" (formula "13") (term "0,0,0,1,1,0"))
                        (rule "commute_or_2" (formula "13") (term "0,0,1,0,1,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "shift_paren_or" (formula "13") (term "0,0,0,0,1,1,0"))
                        (rule "commute_or" (formula "13") (term "0,0,0,0,0,1,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "allLeft" (formula "10") (inst "t=i_2"))
                        (rule "inEqSimp_contradInEq0" (formula "10") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1"))
                        (rule "leq_literals" (formula "10") (term "0,1"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "10") (term "0,1"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "allLeft" (formula "14") (inst "t=i_2"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "14") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_contradInEq0" (formula "14") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1"))
                        (rule "leq_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_51"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
                        (rule "close" (formula "16") (ifseqformula "5"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "20") (inst "sk=f_2"))
                     (rule "allRight" (formula "20") (inst "sk=o_2"))
                     (rule "orRight" (formula "20"))
                     (rule "eqSymm" (formula "21"))
                     (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0") (ifseqformula "3"))
                     (rule "eqSymm" (formula "14") (term "0,0,0,1,1,0"))
                     (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,0,0,1,1,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,0"))
                     (rule "times_zero_1" (formula "1") (term "0"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq1" (formula "11"))
                     (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "1,0"))
                     (rule "times_zero_1" (formula "11") (term "0"))
                     (rule "leq_literals" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "10"))
                     (rule "applyEq" (formula "1") (term "1") (ifseqformula "9"))
                     (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0,0,1,1,0,1,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0,1,0,1,0,1,1,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "10") (term "0,0,0,1,1,0"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0,1,1,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,1,1,0,0,0,1,1,0") (ifseqformula "1"))
                     (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=f_2_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "18"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__22"))
                     (rule "simplifySelectOfMemset" (formula "2"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfCreate" (formula "2"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "17")))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_2"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_3"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_4"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_5"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_6"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "commute_and" (formula "8") (term "0,0,0"))
                     (rule "commute_and" (formula "8") (term "1,0,0"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "cnf_rightDist" (formula "8") (term "0,0"))
                     (rule "commute_or" (formula "8") (term "0,0,0"))
                     (rule "cnf_rightDist" (formula "8") (term "1,0,0"))
                     (rule "commute_or" (formula "8") (term "0,1,0,0"))
                     (rule "commute_or" (formula "8") (term "1,1,0,0"))
                     (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                     (rule "commute_or" (formula "8") (term "1,0,0,0"))
                     (rule "shift_paren_and" (formula "8") (term "0,0"))
                     (rule "ifthenelse_to_or_left" (formula "18") (term "1,0,0,1,0"))
                     (rule "eqSymm" (formula "18") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,0,1,0,0,1,0"))
                     (rule "commute_or" (formula "18") (term "1,1,0,0,1,0"))
                     (rule "cnf_rightDist" (formula "18") (term "0,0,1,0"))
                     (rule "commute_or_2" (formula "18") (term "1,0,0,1,0"))
                     (rule "inEqSimp_or_subsumption4" (formula "18") (term "0,1,0,0,1,0"))
                     (rule "greater_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "shift_paren_or" (formula "18") (term "0,0,0,1,0"))
                     (rule "ifthenelse_split" (formula "7") (term "0"))
                     (branch "o_2 = x_arr_arr_2 TRUE"
                        (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0,0,0") (ifseqformula "8"))
                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")) (ifInst ""  (formula "7")))
                        (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0") (ifseqformula "8"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "24") (term "1,0,0,1") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "24") (term "0,1") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "notRight" (formula "24"))
                        (rule "replace_known_left" (formula "9") (term "0,1,1,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "ifthenelse_negated" (formula "9") (term "0"))
                        (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "8"))
                        (rule "applyEqRigid" (formula "9") (term "1,2,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                        (rule "close" (formula "23") (ifseqformula "1"))
                     )
                     (branch "o_2 = x_arr_arr_2 FALSE"
                        (rule "applyEqReverse" (formula "8") (term "0,0,0,1,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0,0,0,0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_right" (formula "6") (term "1,1,0,0,0,0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "18")))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "commute_and_2" (formula "1") (term "0,0"))
                        (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Null Reference (_arr_0 = null)"
                  (builtin "One Step Simplification" (formula "19"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (newObject = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (_arr_0 = null)"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
