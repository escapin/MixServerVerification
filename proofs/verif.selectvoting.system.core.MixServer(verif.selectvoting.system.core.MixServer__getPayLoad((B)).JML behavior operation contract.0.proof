\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jul 12 09:56:08 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Jul 12 09:56:08 CEST 2017
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:getPayLoad([B)].JML behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:getPayLoad([B)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "7990")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "data,self,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "9"))
(builtin "One Step Simplification" (formula "4"))
(rule "assignment" (formula "10") (term "1"))
(builtin "One Step Simplification" (formula "10"))
(rule "array2seqDef" (formula "10") (term "0,1,0,1,0,0,0,1") (inst "u=u"))
(rule "eqSymm" (formula "10") (term "0,1,0,0,0,1"))
(rule "array2seqDef" (formula "10") (term "1,0,1,0,0,0,1") (inst "u=u"))
(rule "eqSymm" (formula "10") (term "0,1,0,0,0,1"))
(rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "7") (ifseqformula "3"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "nonNull" (formula "9") (inst "i=i"))
(rule "greater_literals" (formula "9") (term "0,1"))
(builtin "One Step Simplification" (formula "9"))
(rule "sub_literals" (formula "9") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
(rule "nonNull" (formula "8") (inst "i=i"))
(rule "greater_literals" (formula "8") (term "0,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "sub_literals" (formula "8") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
(rule "nonNull" (formula "7") (inst "i=i"))
(rule "greater_literals" (formula "7") (term "0,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "sub_literals" (formula "7") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "9") (term "0"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_notAnd" (formula "9") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
(rule "commute_or_2" (formula "9") (term "0"))
(rule "commute_or_2" (formula "8") (term "0"))
(rule "commute_or_2" (formula "7") (term "0"))
(rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_getPayLoad,savedHeapBefore_getPayLoad"))
(builtin "One Step Simplification" (formula "21"))
(rule "variableDeclarationAssign" (formula "21") (term "1"))
(rule "variableDeclaration" (formula "21") (term "1") (newnames "tagged_payload"))
(rule "commute_or" (formula "9") (term "0,0"))
(rule "commute_or" (formula "8") (term "0,0"))
(rule "commute_or" (formula "7") (term "0,0"))
(rule "arrayLengthNotNegative" (formula "6") (term "0"))
(rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
(rule "leq_literals" (formula "6") (term "0"))
(builtin "One Step Simplification" (formula "6"))
(rule "true_left" (formula "6"))
(rule "arrayLengthIsAShort" (formula "6") (term "0"))
(builtin "One Step Simplification" (formula "6"))
(rule "true_left" (formula "6"))
(builtin "Use Operation Contract" (formula "21") (newnames "heapBefore_first,result_0,exc_0,heapAfter_first,anon_heap_first") (contract "verif.utils.MessageTools[verif.utils.MessageTools::first([B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::first([B)].JML normal_behavior operation contract.1"))
(branch "Post (first)"
   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "22")) (ifInst ""  (formula "6")) (ifInst ""  (formula "22")))
   (builtin "One Step Simplification" (formula "23"))
   (rule "translateJavaAddInt" (formula "11") (term "1,0,0,1,1,1"))
   (rule "translateJavaAddInt" (formula "11") (term "1,0,0,0,1,1"))
   (rule "andLeft" (formula "11"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,1,0") (ifseqformula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "12"))
   (rule "replace_known_left" (formula "15") (term "1,1") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "replace_known_left" (formula "14") (term "1,1") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "eqSeqEmpty" (formula "15") (term "0,1"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
   (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
   (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
   (rule "assignment" (formula "27") (term "1"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0"))
   (rule "mul_literals" (formula "15") (term "1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
   (rule "array2seqDef" (formula "14") (term "0,1,0,1") (inst "u=u"))
   (rule "eqSymm" (formula "14") (term "0,1"))
   (rule "array2seqDef" (formula "15") (term "0,0,0,1") (inst "u=u"))
   (rule "lenOfSeqDef" (formula "15") (term "0,0,1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "polySimp_elimSub" (formula "15") (term "0,1,0,1"))
   (rule "times_zero_2" (formula "15") (term "1,0,1,0,1"))
   (rule "add_zero_right" (formula "15") (term "0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1"))
   (rule "add_zero_right" (formula "15") (term "0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0,1"))
   (rule "array2seqDef" (formula "14") (term "1,0,1") (inst "u=u"))
   (rule "eqSymm" (formula "14") (term "0,1"))
   (rule "inEqSimp_notGeq" (formula "15") (term "0,0,1"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0,0,1"))
   (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
   (rule "add_zero_left" (formula "15") (term "0,0,0,1"))
   (rule "shift_paren_or" (formula "13"))
   (rule "commute_or" (formula "15") (term "0"))
   (rule "commute_and" (formula "14") (term "1,1"))
   (rule "commute_and" (formula "14") (term "0"))
   (rule "commute_and" (formula "15") (term "1"))
   (rule "commute_and" (formula "14") (term "1"))
   (rule "commute_and" (formula "15") (term "0,1"))
   (rule "ifUnfold" (formula "27") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "27") (term "1") (newnames "x"))
   (rule "compound_equality_comparison_1" (formula "27") (term "1") (inst "#v0=x_1"))
   (rule "variableDeclarationAssign" (formula "27") (term "1"))
   (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_1"))
   (rule "assignment_read_length" (formula "27") (term "1"))
   (branch "Normal Execution (tagged_payload != null)"
      (builtin "One Step Simplification" (formula "28"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "replace_known_right" (formula "15") (term "0,0,0,1") (ifseqformula "27"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "replace_known_right" (formula "14") (term "0,0,0,1") (ifseqformula "27"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "27"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "equality_comparison_simple" (formula "28") (term "1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "8") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "arrayLengthNotNegative" (formula "7") (term "1,1,0"))
      (rule "ifSplit" (formula "31"))
      (branch "if x true"
         (builtin "One Step Simplification" (formula "32"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_left" (formula "19") (term "1,1,1") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "blockThrow" (formula "32") (term "1"))
         (rule "throwUnfold" (formula "32") (term "1") (inst "#v0=m"))
         (rule "variableDeclarationAssign" (formula "32") (term "1"))
         (rule "variableDeclaration" (formula "32") (term "1") (newnames "m"))
         (rule "instanceCreationAssignmentUnfoldArguments" (formula "32") (term "1"))
         (rule "variableDeclarationAssign" (formula "32") (term "1"))
         (rule "variableDeclaration" (formula "32") (term "1") (newnames "var"))
         (rule "assignment" (formula "32") (term "1"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "variableDeclarationAssign" (formula "32") (term "1"))
         (rule "variableDeclaration" (formula "32") (term "1") (newnames "var_1"))
         (rule "stringAssignment" (formula "32") (term "1"))
         (builtin "One Step Simplification" (formula "33"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "eqSymm" (formula "32"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "5"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "6"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "7"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "8"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "9"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "10"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "arrayLengthIsAShort" (formula "27") (term "1,0,1,1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "arrayLengthNotNegative" (formula "27") (term "1,0,1,1"))
         (rule "instanceCreationAssignment" (formula "43") (term "1") (inst "#v0=m_1"))
         (rule "variableDeclarationAssign" (formula "43") (term "1"))
         (rule "variableDeclaration" (formula "43") (term "1") (newnames "m_1"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "43") (term "1") (inst "#v0=m_2"))
         (rule "variableDeclaration" (formula "43") (term "1") (newnames "m_2"))
         (rule "methodBodyExpand" (formula "43") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "variableDeclaration" (formula "43") (term "1") (newnames "__NEW__"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "43") (term "1") (inst "#v0=m_3"))
         (rule "variableDeclaration" (formula "43") (term "1") (newnames "m_3"))
         (rule "allocateInstance" (formula "43"))
         (builtin "One Step Simplification" (formula "44"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "wellFormedCreate" (formula "1") (term "0,1,0"))
         (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "25"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "25"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
         (rule "notLeft" (formula "1"))
         (rule "blockEmpty" (formula "46") (term "1"))
         (rule "assignment" (formula "46") (term "1"))
         (builtin "One Step Simplification" (formula "46"))
         (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=java_lang_Object_created__0"))
         (rule "simplifySelectOfCreate" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "46"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
         (rule "ifthenelse_negated" (formula "1") (term "0"))
         (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "ifEqualsTRUE" (formula "31"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "orRight" (formula "31"))
         (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "hideAuxiliaryEqConcrete2" (formula "33"))
         (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "assignment_write_attribute_this" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodCallWithinClass" (formula "47") (term "1"))
         (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodCallSuper" (formula "47") (term "1"))
         (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodCallSuper" (formula "47") (term "1"))
         (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodCallSuper" (formula "47") (term "1"))
         (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodCallEmpty" (formula "47") (term "1"))
         (rule "blockEmpty" (formula "47") (term "1"))
         (rule "assignment_write_attribute_this" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "castDel" (formula "47") (term "1,0,1,0"))
         (rule "assignment_write_attribute_this" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "castDel" (formula "47") (term "1,0,1,0"))
         (rule "methodCallEmpty" (formula "47") (term "1"))
         (rule "methodCallEmpty" (formula "47") (term "1"))
         (rule "blockEmpty" (formula "47") (term "1"))
         (rule "assignment_write_attribute_this" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "assignment_write_attribute_this" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodCallEmpty" (formula "47") (term "1"))
         (rule "blockEmpty" (formula "47") (term "1"))
         (rule "methodCallReturnIgnoreResult" (formula "47") (term "1"))
         (rule "methodCallReturn" (formula "47") (term "1"))
         (rule "assignment" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodCallEmpty" (formula "47") (term "1"))
         (rule "blockEmpty" (formula "47") (term "1"))
         (rule "assignment" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "variableDeclarationAssign" (formula "47") (term "1"))
         (rule "variableDeclaration" (formula "47") (term "1") (newnames "var_2"))
         (rule "assignment" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "variableDeclarationAssign" (formula "47") (term "1"))
         (rule "variableDeclaration" (formula "47") (term "1") (newnames "var_3"))
         (rule "assignment" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodCallSuper" (formula "47") (term "1"))
         (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodCallSuper" (formula "47") (term "1"))
         (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodCallSuper" (formula "47") (term "1"))
         (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodCallEmpty" (formula "47") (term "1"))
         (rule "blockEmpty" (formula "47") (term "1"))
         (rule "assignment_write_attribute_this" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "castDel" (formula "47") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "assignment_write_attribute_this" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "castDel" (formula "47") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodCallEmpty" (formula "47") (term "1"))
         (rule "methodCallEmpty" (formula "47") (term "1"))
         (rule "blockEmpty" (formula "47") (term "1"))
         (rule "assignment_write_attribute_this" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "assignment_write_attribute_this" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "methodCallEmpty" (formula "47") (term "1"))
         (rule "blockEmpty" (formula "47") (term "1"))
         (rule "assignment_write_attribute" (formula "47") (term "1"))
         (branch "Normal Execution (m_1 != null)"
            (builtin "One Step Simplification" (formula "48"))
            (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "33")))
            (rule "false_right" (formula "47"))
            (rule "assignment" (formula "47") (term "1"))
            (builtin "One Step Simplification" (formula "47"))
            (rule "blockEmpty" (formula "47") (term "1"))
            (rule "methodCallParamThrow" (formula "47") (term "1"))
            (builtin "One Step Simplification" (formula "47"))
            (rule "tryCatchThrow" (formula "47") (term "1"))
            (rule "ifElseUnfold" (formula "47") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_2"))
            (rule "equality_comparison_simple" (formula "47") (term "1"))
            (builtin "One Step Simplification" (formula "47"))
            (rule "replace_known_right" (formula "47") (term "0,0,1,0") (ifseqformula "33"))
            (builtin "One Step Simplification" (formula "47"))
            (rule "ifElseSplit" (formula "47"))
            (branch "if x_2 true"
               (builtin "One Step Simplification" (formula "48"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_2 false"
               (builtin "One Step Simplification" (formula "48"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "47"))
               (branch "if m instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "47") (term "1") (newnames "e"))
                  (rule "reference_type_cast" (formula "47") (term "1"))
                  (branch "Normal Execution (m instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "48"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "47") (term "1"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "emptyModality" (formula "47") (term "1"))
                     (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")) (ifInst ""  (formula "33")) (ifInst ""  (formula "33")))
                     (rule "eqSymm" (formula "47") (term "1,0,0,1"))
                     (rule "applyEq" (formula "29") (term "1,0,1,1") (ifseqformula "11"))
                     (rule "seqDef_lower_equals_upper" (formula "29") (term "0,1,1"))
                     (rule "eqSymm" (formula "29") (term "1,1"))
                     (rule "eqSeqEmpty" (formula "29") (term "1,1"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "11"))
                     (rule "qeq_literals" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "46") (term "0") (ifseqformula "14"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "nonNull" (formula "46") (term "1,0,0,0,0,0") (inst "i=i"))
                     (rule "greater_literals" (formula "46") (term "0,1,1,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "sub_literals" (formula "46") (term "2,1,0,1,1,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,1,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,1,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,1,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,1,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                     (rule "nonNull" (formula "46") (term "1,0,0,0,0,0,0") (inst "i=i"))
                     (rule "greater_literals" (formula "46") (term "0,1,1,0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "sub_literals" (formula "46") (term "2,1,0,1,1,0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,1,1,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,1,1,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,1,1,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                     (rule "nonNull" (formula "46") (term "1,0,0,0,0,0,0,0") (inst "i=i"))
                     (rule "greater_literals" (formula "46") (term "0,1,1,0,0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "sub_literals" (formula "46") (term "2,1,0,1,1,0,0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                     (rule "pullOutSelect" (formula "46") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_0"))
                     (rule "applyEq" (formula "47") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "47") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "14")))
                     (rule "applyEqReverse" (formula "47") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "47") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "47") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "46") (term "0,0,1,0,0,0,0,0") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "pullOutSelect" (formula "46") (term "0,0,1,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "14")))
                     (rule "applyEqReverse" (formula "47") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "46") (term "0,1,0,0,0,0,0,0,0,0") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "pullOutSelect" (formula "46") (term "0,0,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "14")))
                     (rule "applyEqReverse" (formula "47") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "46") (term "0,1,0,0,0,0") (ifseqformula "38"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "pullOutSelect" (formula "46") (term "0,0,0,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_0"))
                     (rule "applyEq" (formula "47") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "47") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "14")))
                     (rule "applyEqReverse" (formula "47") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "47") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "47") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "46") (term "0,0,1,0,0,0,0,0") (ifseqformula "34"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "pullOutSelect" (formula "46") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_0"))
                     (rule "applyEq" (formula "47") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "47") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "14")))
                     (rule "applyEqReverse" (formula "47") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "47") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "47") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "46") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "pullOutSelect" (formula "46") (term "0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "14")))
                     (rule "applyEqReverse" (formula "47") (term "0,0,1,0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "46") (term "0,1,0,0,0") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "pullOutSelect" (formula "46") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "14")))
                     (rule "applyEqReverse" (formula "47") (term "0,0,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "46") (term "0,1,0,0") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "pullOutSelect" (formula "46") (term "0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "14")))
                     (rule "applyEqReverse" (formula "47") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "46") (term "0,0,0,0,0,0") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "pullOutSelect" (formula "46") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "14")))
                     (rule "applyEqReverse" (formula "47") (term "0,0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "46") (term "0,1,0") (ifseqformula "41"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "nnf_imp2or" (formula "46") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "46") (term "0,1,0,0"))
                     (rule "nnf_imp2or" (formula "46") (term "0,0,0,0"))
                     (rule "nnf_notAnd" (formula "46") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,1,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "46") (term "0,0,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,0,1,0,0"))
                     (rule "nnf_notAnd" (formula "46") (term "0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0"))
                     (rule "cut_direct" (formula "27") (term "0"))
                     (branch "CUT: result_0.<created> = TRUE TRUE"
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "notLeft" (formula "29"))
                        (rule "orRight" (formula "29"))
                        (rule "replace_known_left" (formula "28") (term "0,0,1") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "notLeft" (formula "28"))
                        (rule "inEqSimp_geqRight" (formula "30"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_leqRight" (formula "30"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_leqRight" (formula "30"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "3"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "CUT: result_0.<created> = TRUE FALSE"
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "replace_known_right" (formula "29") (term "0,1") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "replace_known_right" (formula "28") (term "0,0,1") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "andRight" (formula "46"))
                        (branch "Case 1"
                           (rule "andRight" (formula "46"))
                           (branch "Case 1"
                              (rule "andRight" (formula "46"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "46") (inst "sk=i_2"))
                                 (rule "orRight" (formula "46"))
                                 (rule "orRight" (formula "46"))
                                 (rule "notRight" (formula "48"))
                                 (rule "inEqSimp_leqRight" (formula "47"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "48"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")) (ifInst ""  (formula "14")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "15") (ifseqformula "36"))
                                 (rule "allLeft" (formula "22") (inst "t=i_2"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "22") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "1"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0"))
                                 (rule "leq_literals" (formula "22"))
                                 (rule "closeFalse" (formula "22"))
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "46") (inst "sk=i_1"))
                                 (rule "orRight" (formula "46"))
                                 (rule "orRight" (formula "46"))
                                 (rule "notRight" (formula "48"))
                                 (rule "inEqSimp_leqRight" (formula "47"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "48"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")) (ifInst ""  (formula "13")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "15") (ifseqformula "37"))
                                 (rule "allLeft" (formula "24") (inst "t=i_1"))
                                 (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "24") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0"))
                                 (rule "add_zero_right" (formula "24") (term "0"))
                                 (rule "leq_literals" (formula "24"))
                                 (rule "closeFalse" (formula "24"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "46") (inst "sk=i_0"))
                              (rule "orRight" (formula "46"))
                              (rule "notRight" (formula "47"))
                              (rule "orRight" (formula "47"))
                              (rule "inEqSimp_geqRight" (formula "48"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "48"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                              (rule "simplifySelectOfCreate" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                              (rule "simplifySelectOfCreate" (formula "3"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "15") (ifseqformula "38"))
                              (rule "allLeft" (formula "26") (inst "t=i_0"))
                              (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "26") (term "0,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "26"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "46") (inst "sk=f_0"))
                           (rule "allRight" (formula "46") (inst "sk=o_0"))
                           (rule "orRight" (formula "46"))
                           (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "48"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "38"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "52"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_7"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "commute_and" (formula "7") (term "0,0"))
                           (rule "commute_and" (formula "6") (term "0,0"))
                           (rule "commute_and" (formula "5") (term "0,0"))
                           (rule "commute_and" (formula "4") (term "0,0"))
                           (rule "commute_and" (formula "3") (term "0,0"))
                           (rule "commute_and" (formula "2") (term "0,0"))
                           (rule "commute_and" (formula "1") (term "0,0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " f_0 = java.lang.Object::<created> ∧ o_0 = strPool(\"Message too short\") TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "4") (term "1,0,0"))
                              (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                              (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                              (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "52")))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "applyEqRigid" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "3") (term "1,0,0"))
                              (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                              (rule "eqSymm" (formula "3") (term "1,1,0,0"))
                              (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "48"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")))
                              (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "applyEqRigid" (formula "49") (term "1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "48") (term "0,0"))
                              (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "47"))
                              (builtin "One Step Simplification" (formula "48"))
                              (rule "notRight" (formula "48"))
                              (rule "applyEq" (formula "49") (term "2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "49") (term "0") (ifseqformula "15"))
                              (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                              (rule "close" (formula "49") (ifseqformula "1"))
                           )
                           (branch " f_0 = java.lang.Object::<created> ∧ o_0 = strPool(\"Message too short\") FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_0 = java.lang.Object::<created> ∧ o_0 = m_3 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "34") (term "0") (ifseqformula "2"))
                                 (rule "sortsDisjointModuloNull" (formula "34"))
                                 (rule "eqSymm" (formula "34") (term "1"))
                                 (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "38"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "51")))
                                 (rule "false_right" (formula "34"))
                                 (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "49") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "49") (term "0") (ifseqformula "14"))
                                 (rule "replace_known_right" (formula "48") (term "0,1") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "notRight" (formula "48"))
                                 (rule "applyEqRigid" (formula "49") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                 (rule "close" (formula "35") (ifseqformula "1"))
                              )
                              (branch "f_0 = java.lang.Object::<created> ∧ o_0 = m_3 FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_0 = Throwable::$cause ∧ o_0 = m_3 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "false_right" (formula "35"))
                                    (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEqRigid" (formula "50") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "50") (term "0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "2"))
                                    (rule "replace_known_right" (formula "49") (term "0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "notRight" (formula "49"))
                                    (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "false_right" (formula "32"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "close" (formula "33") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = Throwable::$cause ∧ o_0 = m_3 FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_0 = Throwable::$message ∧ o_0 = m_3 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "50") (term "1,0,0,1") (ifseqformula "2"))
                                       (rule "replace_known_right" (formula "50") (term "0,1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "notRight" (formula "50"))
                                       (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "49") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "49") (term "0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                       (rule "close" (formula "35") (ifseqformula "1"))
                                    )
                                    (branch "f_0 = Throwable::$message ∧ o_0 = m_3 FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "f_0 = MalformedData::$errCode ∧ o_0 = m_3 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "false_right" (formula "33"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "49") (term "2,0") (ifseqformula "1"))
                                          (rule "narrowSelectType" (formula "49") (term "0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "2"))
                                          (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "notRight" (formula "48"))
                                          (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "33") (ifseqformula "1"))
                                       )
                                       (branch "f_0 = MalformedData::$errCode ∧ o_0 = m_3 FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "cut_direct" (formula "53") (term "0,0"))
                                          (branch "CUT: o_0 = null TRUE"
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "false_right" (formula "54"))
                                             (rule "applyEqRigid" (formula "36") (term "0,1") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "false_right" (formula "36"))
                                             (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "33") (term "1"))
                                             (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "false_right" (formula "33"))
                                             (rule "applyEqRigid" (formula "52") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "3") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "33") (term "0,1") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "33") (term "1"))
                                             (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "false_right" (formula "33"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "2") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "49"))
                                             (rule "applyEq" (formula "30") (term "0,1") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "30") (term "1"))
                                             (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "false_right" (formula "30"))
                                             (rule "applyEqRigid" (formula "30") (term "0,1") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "30") (term "1"))
                                             (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "false_right" (formula "30"))
                                             (rule "applyEqRigid" (formula "47") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "closeTrue" (formula "47"))
                                          )
                                          (branch "CUT: o_0 = null FALSE"
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "notRight" (formula "54"))
                                             (rule "cut_direct" (formula "31") (term "0,0"))
                                             (branch "CUT: verif.utils.MessageTools.byteArrayToInt(data) ≥ 0 TRUE"
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_0 = MalformedData::$description ∧ o_0 = m_3 TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "false_right" (formula "38"))
                                                   (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "false_right" (formula "36"))
                                                   (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "false_right" (formula "34"))
                                                   (rule "applyEq" (formula "35") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "false_right" (formula "35"))
                                                   (rule "applyEq" (formula "34") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "false_right" (formula "34"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "51") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "51") (term "0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "34") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = MalformedData::$description ∧ o_0 = m_3 FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = m_3 TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "false_right" (formula "38"))
                                                      (rule "applyEq" (formula "34") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "false_right" (formula "34"))
                                                      (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "false_right" (formula "36"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                      (rule "close" (formula "37") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = m_3 FALSE"
                                                      (rule "close" (formula "57") (ifseqformula "2"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: verif.utils.MessageTools.byteArrayToInt(data) ≥ 0 FALSE"
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "inEqSimp_geqRight" (formula "31"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = MalformedData::$description ∧ o_0 = m_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "false_right" (formula "37"))
                                                   (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "false_right" (formula "33"))
                                                   (rule "applyEq" (formula "34") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "false_right" (formula "34"))
                                                   (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "false_right" (formula "34"))
                                                   (rule "applyEqRigid" (formula "52") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "52") (term "0") (ifseqformula "17"))
                                                   (rule "eqSymm" (formula "52"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "51"))
                                                   (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "false_right" (formula "32"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "33") (ifseqformula "2"))
                                                )
                                                (branch "f_0 = MalformedData::$description ∧ o_0 = m_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "35") (term "1"))
                                                   (branch "CUT: o_0 = m_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "false_right" (formula "37"))
                                                      (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "38") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_0 = m_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "false_right" (formula "36"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "35"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "ClassCastException (!(m instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "48"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "closeTrue" (formula "47"))
                  )
               )
               (branch "if m instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (m_1 = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "if x false"
         (builtin "One Step Simplification" (formula "32"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "replace_known_right" (formula "18") (term "1,1,1") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallReturn" (formula "32") (term "1"))
         (rule "assignment" (formula "32") (term "1"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "methodCallEmpty" (formula "32") (term "1"))
         (rule "tryEmpty" (formula "32") (term "1"))
         (rule "emptyModality" (formula "32") (term "1"))
         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "31")))
         (rule "eqSymm" (formula "32") (term "1,0,0,1"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "32") (term "1,0") (ifseqformula "3"))
         (rule "nonNull" (formula "32") (term "1,0,0,0,0,1,0") (inst "i=i"))
         (rule "greater_literals" (formula "32") (term "0,1,1,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "sub_literals" (formula "32") (term "2,1,0,1,1,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,1,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,1,0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,1,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,1,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,1,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,1,0,0,0,0,1,0"))
         (rule "nonNull" (formula "32") (term "1,0,0,0,0,0,1,0") (inst "i=i"))
         (rule "greater_literals" (formula "32") (term "0,1,1,0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "sub_literals" (formula "32") (term "2,1,0,1,1,0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,1,0,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,1,0,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,1,0,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,1,0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,1,0,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,1,0,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,1,0,0,0,0,0,1,0"))
         (rule "nonNull" (formula "32") (term "1,0,0,0,0,0,0,1,0") (inst "i=i"))
         (rule "sub_literals" (formula "32") (term "2,1,0,1,1,1,0,0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "greater_literals" (formula "32") (term "0,1,1,0,0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,1,0,0,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,1,0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,1,0,0,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,1,0,0,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,1,0,0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,1,0"))
         (rule "pullOutSelect" (formula "32") (term "0,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "33") (term "0,0,1,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "32") (term "0,1,1,0") (ifseqformula "28"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "pullOutSelect" (formula "32") (term "0,0,0,1,0,0,0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_1"))
         (rule "applyEq" (formula "33") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "33") (term "1,0,0,1,0,1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "33") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0,1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "32") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "pullOutSelect" (formula "32") (term "0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "33") (term "0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "32") (term "0,0,0,0,0,0,0,0,1,0") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "pullOutSelect" (formula "32") (term "0,0,0,1,0,0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_1"))
         (rule "applyEq" (formula "33") (term "0,1,1,1,0,0,1,1,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "33") (term "1,0,0,1,0,1,1,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "33") (term "0,0,0,1,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0,1,1,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0,1,1,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "32") (term "0,0,1,0,0,0,0,1,0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "pullOutSelect" (formula "32") (term "0,0,1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "33") (term "0,0,1,0,0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "32") (term "0,1,0,0,1,0") (ifseqformula "25"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "pullOutSelect" (formula "32") (term "0,0,0,0,0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "33") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "32") (term "0,0,0,0,0,0,1,0") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "pullOutSelect" (formula "32") (term "0,1,1,1,0,0,1,1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_1"))
         (rule "applyEq" (formula "33") (term "1,0,0,1,0,1,1,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "33") (term "0,0,0,1,0,0,1,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0,1,1,0,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0,1,1,0,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "33") (term "0,0,0,1,0,0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "32") (term "0,0,1,0,0,1,0") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "pullOutSelect" (formula "32") (term "0,0,1,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "33") (term "0,0,1,0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "32") (term "0,1,0,1,0") (ifseqformula "26"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "pullOutSelect" (formula "32") (term "0,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "33") (term "0,0,1,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "32") (term "0,1,1,0") (ifseqformula "27"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "nnf_imp2or" (formula "32") (term "0,1,1,0"))
         (rule "nnf_imp2or" (formula "32") (term "0,1,0,1,0"))
         (rule "nnf_imp2or" (formula "32") (term "0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "32") (term "0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "32") (term "0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1,1,0"))
         (rule "mul_literals" (formula "32") (term "1,0,0,0,1,1,0"))
         (rule "nnf_notAnd" (formula "32") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,1,0,1,0"))
         (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,1,0,1,0"))
         (rule "add_literals" (formula "32") (term "0,0,0,0,0,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1,0,1,0"))
         (rule "mul_literals" (formula "32") (term "1,0,0,0,1,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1,0,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1,0,1,0"))
         (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1,0,1,0"))
         (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1,0,1,0"))
         (rule "nnf_notAnd" (formula "32") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0,1,0"))
         (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,0,1,0"))
         (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,0,0,1,0"))
         (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,0,0,1,0"))
         (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,1,0"))
         (rule "impLeft" (formula "18"))
         (branch "Case 1"
            (rule "orRight" (formula "18"))
            (rule "inEqSimp_geqRight" (formula "19"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_leqRight" (formula "19"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "notLeft" (formula "19"))
            (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "eqSeqDef2" (formula "19") (inst "iv=iv") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "andRight" (formula "33"))
            (branch "Case 1"
               (rule "andRight" (formula "33"))
               (branch "Case 1"
                  (rule "andRight" (formula "33"))
                  (branch "Case 1"
                     (rule "allRight" (formula "33") (inst "sk=i_8"))
                     (rule "orRight" (formula "33"))
                     (rule "notRight" (formula "34"))
                     (rule "orRight" (formula "34"))
                     (rule "inEqSimp_geqRight" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "35"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_8"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                     (rule "ifthenelse_negated" (formula "3") (term "0"))
                     (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "25"))
                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "25"))
                     (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                     (rule "ifEqualsNull" (formula "3"))
                     (rule "cnf_rightDist" (formula "3"))
                     (rule "andLeft" (formula "3"))
                     (rule "commute_or" (formula "3"))
                     (rule "cnf_rightDist" (formula "4"))
                     (rule "andLeft" (formula "4"))
                     (rule "commute_or" (formula "4"))
                     (rule "cnf_rightDist" (formula "3"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "commute_or" (formula "3"))
                     (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                     (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "27"))
                     (rule "add_zero_right" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0"))
                     (rule "add_literals" (formula "27") (term "0,0"))
                     (rule "leq_literals" (formula "27") (term "0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "false_right" (formula "27"))
                     (rule "allLeft" (formula "17") (inst "t=i_8"))
                     (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "17") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "17") (term "0,0,1"))
                     (rule "leq_literals" (formula "17") (term "0,1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "notLeft" (formula "17"))
                     (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "notLeft" (formula "4"))
                     (rule "referencedObjectIsCreatedRight" (formula "25") (ifseqformula "28"))
                     (rule "close" (formula "25") (ifseqformula "9"))
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "33") (inst "sk=i_7"))
                     (rule "orRight" (formula "33"))
                     (rule "notRight" (formula "34"))
                     (rule "orRight" (formula "34"))
                     (rule "inEqSimp_geqRight" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "35"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_7"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")))
                     (rule "ifthenelse_negated" (formula "3") (term "0"))
                     (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "26"))
                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "26"))
                     (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                     (rule "ifEqualsNull" (formula "3"))
                     (rule "cnf_rightDist" (formula "3"))
                     (rule "andLeft" (formula "3"))
                     (rule "commute_or" (formula "3"))
                     (rule "cnf_rightDist" (formula "4"))
                     (rule "andLeft" (formula "4"))
                     (rule "commute_or" (formula "4"))
                     (rule "cnf_rightDist" (formula "3"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "commute_or" (formula "3"))
                     (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                     (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "27"))
                     (rule "add_zero_right" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0"))
                     (rule "add_literals" (formula "27") (term "0,0"))
                     (rule "leq_literals" (formula "27") (term "0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "false_right" (formula "27"))
                     (rule "allLeft" (formula "19") (inst "t=i_7"))
                     (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "19") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "19") (term "0,0,1"))
                     (rule "leq_literals" (formula "19") (term "0,1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "notLeft" (formula "19"))
                     (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "notLeft" (formula "4"))
                     (rule "referencedObjectIsCreatedRight" (formula "25") (ifseqformula "29"))
                     (rule "close" (formula "25") (ifseqformula "9"))
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "33") (inst "sk=i_6"))
                  (rule "orRight" (formula "33"))
                  (rule "notRight" (formula "34"))
                  (rule "orRight" (formula "34"))
                  (rule "inEqSimp_geqRight" (formula "35"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "35"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                  (rule "ifthenelse_negated" (formula "3") (term "0"))
                  (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "27"))
                  (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "7") (ifseqformula "27"))
                  (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                  (rule "ifEqualsNull" (formula "3"))
                  (rule "cnf_rightDist" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "commute_or" (formula "3"))
                  (rule "cnf_rightDist" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "commute_or" (formula "4"))
                  (rule "cnf_rightDist" (formula "3"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "commute_or" (formula "3"))
                  (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                  (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "27"))
                  (rule "add_zero_right" (formula "1") (term "1"))
                  (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "27") (term "1,0,0"))
                  (rule "add_literals" (formula "27") (term "0,0"))
                  (rule "leq_literals" (formula "27") (term "0"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "false_right" (formula "27"))
                  (rule "allLeft" (formula "21") (inst "t=i_6"))
                  (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "21") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "21") (term "0,0,1"))
                  (rule "leq_literals" (formula "21") (term "0,1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "notLeft" (formula "21"))
                  (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "notLeft" (formula "4"))
                  (rule "referencedObjectIsCreatedRight" (formula "25") (ifseqformula "30"))
                  (rule "close" (formula "25") (ifseqformula "9"))
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "33") (inst "sk=f_2"))
               (rule "allRight" (formula "33") (inst "sk=o_2"))
               (rule "orRight" (formula "33"))
               (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_2_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
               (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "35"))
               (rule "closeTrue" (formula "35"))
            )
         )
         (branch "Case 2"
            (rule "andLeft" (formula "18"))
            (rule "notLeft" (formula "18"))
            (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "replace_known_right" (formula "17") (term "0,0,1") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "inEqSimp_strengthen0" (formula "18") (ifseqformula "20"))
            (rule "add_zero_right" (formula "18") (term "1"))
            (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "18"))
            (rule "times_zero_1" (formula "20") (term "1,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0"))
            (rule "qeq_literals" (formula "20") (term "0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "false_right" (formula "20"))
            (rule "cut_direct" (formula "32") (term "0,0"))
            (branch "CUT: seqDef{int u;}(0, result_0.length, result_0.arr(u)@heapAfter_first) = mFirst(seqDef{int u;}(0, data.length, data.arr(u)@heapAfter_first)) TRUE"
               (builtin "One Step Simplification" (formula "33"))
               (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "eqSeqDef2" (formula "1") (inst "iv=iv") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "andRight" (formula "31"))
               (branch "Case 1"
                  (rule "andRight" (formula "31"))
                  (branch "Case 1"
                     (rule "andRight" (formula "31"))
                     (branch "Case 1"
                        (rule "allRight" (formula "31") (inst "sk=i_5"))
                        (rule "orRight" (formula "31"))
                        (rule "orRight" (formula "31"))
                        (rule "notRight" (formula "33"))
                        (rule "inEqSimp_geqRight" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "33"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_5"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "23")))
                        (rule "ifthenelse_negated" (formula "3") (term "0"))
                        (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "17") (ifseqformula "23"))
                        (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "5") (ifseqformula "23"))
                        (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                        (rule "ifEqualsNull" (formula "3"))
                        (rule "cnf_rightDist" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "commute_or" (formula "3"))
                        (rule "cnf_rightDist" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "commute_or" (formula "4"))
                        (rule "cnf_rightDist" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "commute_or" (formula "3"))
                        (rule "allLeft" (formula "14") (inst "t=i_5"))
                        (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "14") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1"))
                        (rule "leq_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "notLeft" (formula "3"))
                        (rule "referencedObjectIsCreatedRight" (formula "23") (ifseqformula "26"))
                        (rule "close" (formula "23") (ifseqformula "6"))
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "31") (inst "sk=i_4"))
                        (rule "orRight" (formula "31"))
                        (rule "orRight" (formula "31"))
                        (rule "notRight" (formula "33"))
                        (rule "inEqSimp_geqRight" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "33"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                        (rule "ifthenelse_negated" (formula "3") (term "0"))
                        (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "17") (ifseqformula "24"))
                        (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "5") (ifseqformula "24"))
                        (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                        (rule "ifEqualsNull" (formula "3"))
                        (rule "cnf_rightDist" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "commute_or" (formula "3"))
                        (rule "cnf_rightDist" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "commute_or" (formula "4"))
                        (rule "cnf_rightDist" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "commute_or" (formula "3"))
                        (rule "allLeft" (formula "16") (inst "t=i_4"))
                        (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "16") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "16") (term "0,0,1"))
                        (rule "leq_literals" (formula "16") (term "0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "notLeft" (formula "16"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "notLeft" (formula "3"))
                        (rule "referencedObjectIsCreatedRight" (formula "23") (ifseqformula "27"))
                        (rule "close" (formula "23") (ifseqformula "6"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "31") (inst "sk=i_3"))
                     (rule "orRight" (formula "31"))
                     (rule "orRight" (formula "31"))
                     (rule "notRight" (formula "33"))
                     (rule "inEqSimp_leqRight" (formula "32"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                     (rule "ifthenelse_negated" (formula "3") (term "0"))
                     (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "17") (ifseqformula "25"))
                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "5") (ifseqformula "25"))
                     (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                     (rule "ifEqualsNull" (formula "3"))
                     (rule "cnf_rightDist" (formula "3"))
                     (rule "andLeft" (formula "3"))
                     (rule "commute_or" (formula "3"))
                     (rule "cnf_rightDist" (formula "4"))
                     (rule "andLeft" (formula "4"))
                     (rule "commute_or" (formula "4"))
                     (rule "cnf_rightDist" (formula "3"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "commute_or" (formula "3"))
                     (rule "allLeft" (formula "18") (inst "t=i_3"))
                     (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "18") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                     (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "18") (term "0,0,1"))
                     (rule "leq_literals" (formula "18") (term "0,1"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "notLeft" (formula "18"))
                     (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "notLeft" (formula "3"))
                     (rule "referencedObjectIsCreatedRight" (formula "23") (ifseqformula "28"))
                     (rule "close" (formula "23") (ifseqformula "6"))
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "31") (inst "sk=f_1"))
                  (rule "allRight" (formula "31") (inst "sk=o_1"))
                  (rule "orRight" (formula "31"))
                  (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=f_1_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                  (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "closeTrue" (formula "33"))
               )
            )
            (branch "CUT: seqDef{int u;}(0, result_0.length, result_0.arr(u)@heapAfter_first) = mFirst(seqDef{int u;}(0, data.length, data.arr(u)@heapAfter_first)) FALSE"
               (builtin "One Step Simplification" (formula "33"))
               (rule "false_right" (formula "33"))
               (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "32"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "notLeft" (formula "17"))
               (rule "equalityToSeqGetAndSeqLenRight" (formula "32") (inst "iv=iv"))
               (rule "lenOfSeqDef" (formula "32") (term "1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "32") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "32") (term "1,1,1,1,0,0,1"))
               (rule "add_zero_right" (formula "32") (term "1,1,1,0,0,1"))
               (rule "lenOfSeqDef" (formula "32") (term "0,0"))
               (rule "eqSymm" (formula "32") (term "0"))
               (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
               (rule "times_zero_2" (formula "32") (term "1,1,1,0"))
               (rule "add_zero_right" (formula "32") (term "1,1,0"))
               (rule "getOfSeqDef" (formula "32") (term "0,1,0,1"))
               (rule "castDel" (formula "32") (term "2,0,1,0,1"))
               (rule "castDel" (formula "32") (term "1,0,1,0,1"))
               (rule "add_zero_right" (formula "32") (term "0,2,1,0,1,0,1"))
               (rule "eqSymm" (formula "32") (term "1,0,1"))
               (rule "polySimp_elimSub" (formula "32") (term "1,1,0,1,1,0,1"))
               (rule "mul_literals" (formula "32") (term "1,1,1,0,1,1,0,1"))
               (rule "add_zero_right" (formula "32") (term "1,1,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,1,0,0,1"))
               (rule "add_zero_right" (formula "32") (term "0,0,1,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0"))
               (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,1,1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,0"))
               (rule "polySimp_elimOne" (formula "32") (term "0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "32") (term "1,1,0,1,1,0,1"))
               (rule "mul_literals" (formula "32") (term "0,1,1,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1"))
               (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,1,1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "32") (term "0,0,1,1,1,0,0,1"))
               (rule "inEqSimp_contradInEq0" (formula "32") (term "0,1,0") (ifseqformula "17"))
               (rule "qeq_literals" (formula "32") (term "0,0,1,0"))
               (builtin "One Step Simplification" (formula "32"))
               (rule "inEqSimp_contradInEq0" (formula "32") (term "0,1,1,1,0,0,1") (ifseqformula "17"))
               (rule "qeq_literals" (formula "32") (term "0,0,1,1,1,0,0,1"))
               (builtin "One Step Simplification" (formula "32"))
               (rule "add_zero_right" (formula "32") (term "1,1,0,0,1"))
               (rule "nnf_imp2or" (formula "32") (term "0,1"))
               (rule "nnf_notAnd" (formula "32") (term "0,0,1"))
               (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1"))
               (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0,1"))
               (rule "add_literals" (formula "32") (term "0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "32") (term "0,1,0,0,1"))
               (builtin "One Step Simplification" (formula "32"))
               (rule "arrayLengthIsAShort" (formula "17") (term "0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "arrayLengthNotNegative" (formula "17") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "18"))
               (rule "qeq_literals" (formula "17") (term "0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "closeFalse" (formula "17"))
            )
         )
      )
   )
   (branch "Null Reference (tagged_payload = null)"
      (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "15") (term "0,0,0,1") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "notLeft" (formula "15"))
      (rule "replace_known_left" (formula "15") (term "0,0,0,1") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "notLeft" (formula "15"))
      (rule "orRight" (formula "15"))
      (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "inEqSimp_leqRight" (formula "14"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "inEqSimp_geqRight" (formula "15"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_leqRight" (formula "16"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "mul_literals" (formula "2") (term "0,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "leq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Exceptional Post (first)"
   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "22")) (ifInst ""  (formula "6")) (ifInst ""  (formula "22")))
   (builtin "One Step Simplification" (formula "23"))
   (rule "translateJavaAddInt" (formula "11") (term "1,0,0,1,1,1"))
   (rule "translateJavaAddInt" (formula "11") (term "1,0,0,0,1,1"))
   (rule "andLeft" (formula "11"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "12"))
   (rule "replace_known_right" (formula "14") (term "1,1") (ifseqformula "15"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "notLeft" (formula "14"))
   (rule "orRight" (formula "14"))
   (rule "replace_known_right" (formula "13") (term "1,1") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "notLeft" (formula "13"))
   (rule "inEqSimp_ltRight" (formula "14"))
   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
   (rule "mul_literals" (formula "1") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_ltRight" (formula "15"))
   (rule "mul_literals" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "inEqSimp_geqRight" (formula "15"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
   (rule "polySimp_elimOne" (formula "3") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
   (rule "andLeft" (formula "3"))
   (rule "inEqSimp_homoInEq1" (formula "3"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
   (rule "mul_literals" (formula "3") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "3") (term "0"))
   (rule "polySimp_addComm1" (formula "3") (term "0,0"))
   (rule "add_literals" (formula "3") (term "0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
   (rule "add_literals" (formula "3") (term "1,1,0"))
   (rule "times_zero_1" (formula "3") (term "1,0"))
   (rule "add_zero_right" (formula "3") (term "0"))
   (rule "leq_literals" (formula "3"))
   (rule "closeFalse" (formula "3"))
)
(branch "Pre (first)"
   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "20")) (ifInst ""  (formula "6")) (ifInst ""  (formula "20")) (ifInst ""  (formula "1")) (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
   (rule "translateJavaAddInt" (formula "21") (term "1,0,1"))
   (rule "translateJavaAddInt" (formula "21") (term "1,0,0"))
   (rule "orRight" (formula "21"))
   (rule "orRight" (formula "22"))
   (rule "inEqSimp_ltRight" (formula "23"))
   (rule "times_zero_1" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "inEqSimp_ltRight" (formula "23"))
   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
   (rule "mul_literals" (formula "1") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_geqRight" (formula "23"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
   (rule "polySimp_elimOne" (formula "2") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
   (rule "andLeft" (formula "1"))
   (rule "inEqSimp_homoInEq1" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "1,1,0"))
   (rule "times_zero_1" (formula "1") (term "1,0"))
   (rule "add_zero_right" (formula "1") (term "0"))
   (rule "leq_literals" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
)

}
