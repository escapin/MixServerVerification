\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jun 06 16:03:03 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue Jun 06 16:03:03 CEST 2017
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:checkAndRemoveSignature([B)].JML behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:checkAndRemoveSignature([B)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))

(autoModeTime "166253")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "data,self,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "8"))
(builtin "One Step Simplification" (formula "4"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "array2seqDef" (formula "9") (term "0,1,0,1,1,0,0,0,1") (inst "u=u"))
(rule "eqSymm" (formula "9") (term "0,1,1,0,0,0,1"))
(rule "array2seqDef" (formula "9") (term "0,0,0,1,0,0,0,1") (inst "u=u"))
(rule "array2seqDef" (formula "9") (term "0,1,0,1,0,0,0,1") (inst "u=u"))
(rule "array2seqDef" (formula "9") (term "1,0,1,1,0,0,0,1") (inst "u=u"))
(rule "eqSymm" (formula "9") (term "0,1,1,0,0,0,1"))
(rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "6") (ifseqformula "3"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "nonNull" (formula "11") (inst "i=i"))
(rule "greater_literals" (formula "11") (term "0,1"))
(builtin "One Step Simplification" (formula "11"))
(rule "sub_literals" (formula "11") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
(rule "nonNull" (formula "10") (inst "i=i"))
(rule "greater_literals" (formula "10") (term "0,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "sub_literals" (formula "10") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
(rule "nonNull" (formula "9") (inst "i=i"))
(rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "9"))
(rule "greater_literals" (formula "9") (term "0,1"))
(builtin "One Step Simplification" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
(rule "nonNull" (formula "8") (inst "i=i"))
(rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "greater_literals" (formula "8") (term "0,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
(rule "nonNull" (formula "7") (inst "i=i"))
(rule "greater_literals" (formula "7") (term "0,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "sub_literals" (formula "7") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
(rule "nonNull" (formula "6") (inst "i=i"))
(rule "greater_literals" (formula "6") (term "0,1"))
(builtin "One Step Simplification" (formula "6"))
(rule "sub_literals" (formula "6") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "11") (term "0"))
(rule "nnf_imp2or" (formula "10") (term "0"))
(rule "nnf_imp2or" (formula "9") (term "0"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_imp2or" (formula "6") (term "0"))
(rule "nnf_notAnd" (formula "11") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "10") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
(rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
(rule "mul_literals" (formula "10") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "9") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "6") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
(rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
(rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
(rule "mul_literals" (formula "6") (term "1,0,0,0"))
(rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_checkAndRemoveSignature,savedHeapBefore_checkAndRemoveSignature"))
(builtin "One Step Simplification" (formula "26"))
(rule "commute_or_2" (formula "11") (term "0"))
(rule "commute_or_2" (formula "10") (term "0"))
(rule "commute_or_2" (formula "9") (term "0"))
(rule "commute_or_2" (formula "8") (term "0"))
(rule "commute_or_2" (formula "7") (term "0"))
(rule "commute_or_2" (formula "6") (term "0"))
(rule "commute_or" (formula "11") (term "0,0"))
(rule "commute_or" (formula "10") (term "0,0"))
(rule "commute_or" (formula "9") (term "0,0"))
(rule "commute_or" (formula "8") (term "0,0"))
(rule "commute_or" (formula "7") (term "0,0"))
(rule "commute_or" (formula "6") (term "0,0"))
(rule "ifUnfold" (formula "26") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "26") (term "1") (newnames "x"))
(rule "compound_less_than_comparison_1" (formula "26") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "26") (term "1"))
(rule "variableDeclaration" (formula "26") (term "1") (newnames "x_1"))
(rule "assignment_read_length" (formula "26") (term "1"))
(branch "Normal Execution (_data != null)"
   (builtin "One Step Simplification" (formula "27"))
   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")))
   (rule "false_right" (formula "26"))
   (rule "less_than_comparison_simple" (formula "26") (term "1"))
   (builtin "One Step Simplification" (formula "26"))
   (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,0"))
   (rule "mul_literals" (formula "26") (term "1,0,0,0,0,1,0"))
   (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,1,0"))
   (rule "mul_literals" (formula "26") (term "1,0,0,1,0"))
   (rule "ifSplit" (formula "26"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "27"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "blockThrow" (formula "27") (term "1"))
      (rule "throwUnfold" (formula "27") (term "1") (inst "#v0=m"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "m_4"))
      (rule "instanceCreationAssignmentUnfoldArguments" (formula "27") (term "1"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "var_4"))
      (rule "assignment" (formula "27") (term "1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "var_5"))
      (rule "stringAssignment" (formula "27") (term "1"))
      (builtin "One Step Simplification" (formula "28"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "eqSymm" (formula "27"))
      (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
      (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "8") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "arrayLengthNotNegative" (formula "7") (term "1,1,0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "3"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "5"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "6"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "7"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "8"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "9"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "10"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "34"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "11"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "12"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "13"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "39"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "arrayLengthIsAShort" (formula "13") (term "0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "arrayLengthNotNegative" (formula "13") (term "0"))
      (rule "instanceCreationAssignment" (formula "47") (term "1") (inst "#v0=m_5"))
      (rule "variableDeclarationAssign" (formula "47") (term "1"))
      (rule "variableDeclaration" (formula "47") (term "1") (newnames "m_5"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "47") (term "1") (inst "#v0=m_6"))
      (rule "variableDeclaration" (formula "47") (term "1") (newnames "m_6"))
      (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_<createObject>_0,savedHeapBefore_<createObject>_0"))
      (builtin "One Step Simplification" (formula "47"))
      (rule "variableDeclaration" (formula "47") (term "1") (newnames "__NEW___1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "47") (term "1") (inst "#v0=m_7"))
      (rule "variableDeclaration" (formula "47") (term "1") (newnames "m_7"))
      (rule "allocateInstance" (formula "47"))
      (builtin "One Step Simplification" (formula "48"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "wellFormedCreate" (formula "1") (term "0,1,0"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=java_lang_Object_created__1"))
      (rule "simplifySelectOfCreate" (formula "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "castDel" (formula "1") (term "1,0"))
      (rule "eqSymm" (formula "1") (term "0,1,0,0"))
      (rule "eqSymm" (formula "1") (term "0,0,0"))
      (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "50"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
      (rule "eqSymm" (formula "1") (term "1,0,0"))
      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "35"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "33") (term "0"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<create>_0,savedHeapBefore_<create>_0"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallWithinClass" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<prepareEnter>_0,savedHeapBefore_<prepareEnter>_0"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallSuper" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallSuper" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallSuper" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "castDel" (formula "50") (term "1,0,1,0"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "castDel" (formula "50") (term "1,0,1,0"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "methodCallReturnIgnoreResult" (formula "50") (term "1"))
      (rule "methodCallReturn" (formula "50") (term "1"))
      (rule "assignment" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "variableDeclarationAssign" (formula "50") (term "1"))
      (rule "variableDeclaration" (formula "50") (term "1") (newnames "var_6"))
      (rule "assignment" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "variableDeclarationAssign" (formula "50") (term "1"))
      (rule "variableDeclaration" (formula "50") (term "1") (newnames "var_7"))
      (rule "assignment" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallSuper" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallSuper" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<init>_5,savedHeapBefore_<init>_5"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallSuper" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<init>_6,savedHeapBefore_<init>_6"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "castDel" (formula "50") (term "1,0,1,0"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "castDel" (formula "50") (term "1,0,1,0"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment_write_attribute" (formula "50") (term "1"))
      (branch "Normal Execution (m_5 != null)"
         (builtin "One Step Simplification" (formula "51"))
         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "34")))
         (rule "false_right" (formula "50"))
         (rule "assignment" (formula "50") (term "1"))
         (builtin "One Step Simplification" (formula "50"))
         (rule "blockEmpty" (formula "50") (term "1"))
         (rule "methodCallParamThrow" (formula "50") (term "1"))
         (builtin "One Step Simplification" (formula "50"))
         (rule "tryCatchThrow" (formula "50") (term "1"))
         (rule "ifElseUnfold" (formula "50") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_7"))
         (rule "equality_comparison_simple" (formula "50") (term "1"))
         (builtin "One Step Simplification" (formula "50"))
         (rule "replace_known_right" (formula "50") (term "0,0,1,0") (ifseqformula "34"))
         (builtin "One Step Simplification" (formula "50"))
         (rule "ifElseSplit" (formula "50"))
         (branch "if x_7 true"
            (builtin "One Step Simplification" (formula "51"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_7 false"
            (builtin "One Step Simplification" (formula "51"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "50"))
            (branch "if m_4 instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "50") (term "1") (newnames "e_3"))
               (rule "reference_type_cast" (formula "50") (term "1"))
               (branch "Normal Execution (m_4 instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "51"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "50") (term "1"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "emptyModality" (formula "50") (term "1"))
                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "34")) (ifInst ""  (formula "34")) (ifInst ""  (formula "34")) (ifInst ""  (formula "34")))
                  (rule "eqSymm" (formula "50") (term "1,0,0,1"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "50") (term "0") (ifseqformula "18"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "nonNull" (formula "50") (term "1,0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "50") (term "2,1,0,1,1,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "greater_literals" (formula "50") (term "0,1,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "50") (term "1,0,0,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "50") (term "2,1,0,1,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "greater_literals" (formula "50") (term "0,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "50") (term "1,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "50") (term "0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "sub_literals" (formula "50") (term "2,1,0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "nonNull" (formula "50") (term "1,0,0,0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "50") (term "2,1,0,1,1,1,0,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "greater_literals" (formula "50") (term "0,1,1,0,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "50") (term "1,0,0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "50") (term "0,1,1,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "sub_literals" (formula "50") (term "2,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "50") (term "1,0,0,0,0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "50") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "sub_literals" (formula "50") (term "2,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_4"))
                  (rule "applyEq" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_4"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,1,0,0,0,0") (ifseqformula "43"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_4"))
                  (rule "applyEq" (formula "51") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "35"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,0,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_4"))
                  (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,1,0,0,0,0,0") (ifseqformula "39"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_4"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,0,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_4"))
                  (rule "applyEq" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "37"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_4"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,1,0,0") (ifseqformula "45"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_4"))
                  (rule "applyEq" (formula "51") (term "1,0,0,1,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,1,0,0,0") (ifseqformula "40"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_4"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,1,0,0") (ifseqformula "44"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_4"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "42"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_4"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "46"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_4"))
                  (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "51") (term "1,0,0,1,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,1,0,0,0") (ifseqformula "38"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "nnf_imp2or" (formula "50") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "50") (term "0,1,0,0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0"))
                  (rule "nnf_imp2or" (formula "50") (term "0,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0"))
                  (rule "nnf_imp2or" (formula "50") (term "0,1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "50") (term "0,1,0,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "50") (term "0,0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0,0,0,0"))
                  (rule "andRight" (formula "50"))
                  (branch "Case 1"
                     (rule "andRight" (formula "50"))
                     (branch "Case 1"
                        (rule "andRight" (formula "50"))
                        (branch "Case 1"
                           (rule "andRight" (formula "50"))
                           (branch "Case 1"
                              (rule "andRight" (formula "50"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "50"))
                                 (branch "Case 1"
                                    (rule "allRight" (formula "50") (inst "sk=i_5"))
                                    (rule "orRight" (formula "50"))
                                    (rule "orRight" (formula "50"))
                                    (rule "notRight" (formula "52"))
                                    (rule "inEqSimp_geqRight" (formula "52"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "52"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_5"))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "38"))
                                    (rule "allLeft" (formula "25") (inst "t=i_5"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "25") (term "0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "closeFalse" (formula "25"))
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "50") (inst "sk=i_4"))
                                    (rule "orRight" (formula "50"))
                                    (rule "orRight" (formula "50"))
                                    (rule "notRight" (formula "52"))
                                    (rule "inEqSimp_geqRight" (formula "52"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "52"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "39"))
                                    (rule "allLeft" (formula "27") (inst "t=i_4"))
                                    (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "27") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "27"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0"))
                                    (rule "add_literals" (formula "27") (term "0"))
                                    (rule "leq_literals" (formula "27"))
                                    (rule "closeFalse" (formula "27"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "50") (inst "sk=i_3"))
                                 (rule "orRight" (formula "50"))
                                 (rule "orRight" (formula "50"))
                                 (rule "notRight" (formula "52"))
                                 (rule "inEqSimp_leqRight" (formula "51"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "52"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "40"))
                                 (rule "allLeft" (formula "29") (inst "t=i_3"))
                                 (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "29") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "1"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "inEqSimp_homoInEq1" (formula "29"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0"))
                                 (rule "add_literals" (formula "29") (term "0"))
                                 (rule "leq_literals" (formula "29"))
                                 (rule "closeFalse" (formula "29"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "50") (inst "sk=i_2"))
                              (rule "orRight" (formula "50"))
                              (rule "orRight" (formula "50"))
                              (rule "notRight" (formula "52"))
                              (rule "inEqSimp_leqRight" (formula "51"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "52"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfCreate" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                              (rule "simplifySelectOfCreate" (formula "3"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "41"))
                              (rule "allLeft" (formula "31") (inst "t=i_2"))
                              (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "31"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "50") (inst "sk=i_1"))
                           (rule "orRight" (formula "50"))
                           (rule "orRight" (formula "50"))
                           (rule "notRight" (formula "52"))
                           (rule "inEqSimp_leqRight" (formula "51"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "52"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                           (rule "simplifySelectOfCreate" (formula "3"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                           (rule "simplifySelectOfCreate" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "42"))
                           (rule "allLeft" (formula "33") (inst "t=i_1"))
                           (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "33") (term "0,0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "1"))
                           (rule "andLeft" (formula "33"))
                           (rule "inEqSimp_homoInEq1" (formula "33"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                           (rule "add_literals" (formula "33") (term "1,1,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0"))
                           (rule "add_literals" (formula "33") (term "0"))
                           (rule "leq_literals" (formula "33"))
                           (rule "closeFalse" (formula "33"))
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "50") (inst "sk=i_0"))
                        (rule "orRight" (formula "50"))
                        (rule "orRight" (formula "50"))
                        (rule "notRight" (formula "52"))
                        (rule "inEqSimp_leqRight" (formula "51"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "52"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfCreate" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                        (rule "simplifySelectOfCreate" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "43"))
                        (rule "allLeft" (formula "35") (inst "t=i_0"))
                        (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "35") (term "0,0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "35"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_literals" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "50") (inst "sk=f_0"))
                     (rule "allRight" (formula "50") (inst "sk=o_0"))
                     (rule "orRight" (formula "50"))
                     (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "52"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "56"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_and" (formula "7") (term "0,0"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "commute_and" (formula "5") (term "0,0"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch " f_0 = java.lang.Object::<created> ∧ o_0 = strPool(\"Message too short\") TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEqRigid" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "4") (term "1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                        (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                        (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "55")))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "4") (term "1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                        (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                        (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "53")))
                        (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "53") (term "1,0,0,1") (ifseqformula "2"))
                        (rule "applyEqRigid" (formula "54") (term "1,0") (ifseqformula "2"))
                        (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "3") (term "1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                        (rule "eqSymm" (formula "3") (term "1,1,0,0"))
                        (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "52"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                        (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEqRigid" (formula "53") (term "2,0") (ifseqformula "1"))
                        (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "18"))
                        (rule "replace_known_right" (formula "52") (term "0,1") (ifseqformula "53"))
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "notRight" (formula "52"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                        (rule "close" (formula "52") (ifseqformula "3"))
                     )
                     (branch " f_0 = java.lang.Object::<created> ∧ o_0 = strPool(\"Message too short\") FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = m_7 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "1"))
                           (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "23"))
                           (rule "eqSymm" (formula "59"))
                           (rule "applyEq" (formula "58") (term "1,0,0,1") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "58") (term "0,1") (ifseqformula "41"))
                           (builtin "One Step Simplification" (formula "58"))
                           (rule "notRight" (formula "58"))
                           (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "8"))
                           (rule "hideAuxiliaryEq" (formula "8"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                           (rule "sortsDisjointModuloNull" (formula "37"))
                           (rule "eqSymm" (formula "37") (term "1"))
                           (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "54"))
                           (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "39")))
                           (rule "false_right" (formula "37"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "eqSymm" (formula "53"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3"))
                           (rule "close" (formula "37") (ifseqformula "3"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = m_7 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "f_0 = Throwable::$cause ∧ o_0 = m_7 TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "38"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "false_right" (formula "39"))
                              (rule "applyEq" (formula "56") (term "1,0,0,1") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "56") (term "0,1") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "notRight" (formula "56"))
                              (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "22"))
                              (rule "eqSymm" (formula "57"))
                              (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "eqSymm" (formula "54"))
                              (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "false_right" (formula "36"))
                              (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3"))
                              (rule "close" (formula "37") (ifseqformula "3"))
                           )
                           (branch "f_0 = Throwable::$cause ∧ o_0 = m_7 FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_0 = Throwable::$message ∧ o_0 = m_7 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "false_right" (formula "40"))
                                 (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "false_right" (formula "38"))
                                 (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "2"))
                                 (rule "replace_known_right" (formula "55") (term "0,0") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "notRight" (formula "55"))
                                 (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "false_right" (formula "36"))
                                 (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "2"))
                                 (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "36") (ifseqformula "1"))
                              )
                              (branch "f_0 = Throwable::$message ∧ o_0 = m_7 FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_0 = MalformedData::$errCode ∧ o_0 = m_7 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "false_right" (formula "40"))
                                    (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "false_right" (formula "37"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "false_right" (formula "37"))
                                    (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "false_right" (formula "35"))
                                    (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "52") (term "1,0,0,1") (ifseqformula "2"))
                                    (rule "replace_known_right" (formula "52") (term "0,1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "notRight" (formula "52"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                    (rule "close" (formula "37") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = MalformedData::$errCode ∧ o_0 = m_7 FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_0 = MalformedData::$description ∧ o_0 = m_7 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "false_right" (formula "40"))
                                       (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "false_right" (formula "39"))
                                       (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "applyEq" (formula "54") (term "1,0,0,1") (ifseqformula "2"))
                                       (rule "replace_known_right" (formula "54") (term "0,1") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "notRight" (formula "54"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "54") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "19"))
                                       (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "close" (formula "37") (ifseqformula "3"))
                                    )
                                    (branch "f_0 = MalformedData::$description ∧ o_0 = m_7 FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = m_7 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "1"))
                                          (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "18"))
                                          (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "2"))
                                          (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "notRight" (formula "53"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "36") (ifseqformula "1"))
                                       )
                                       (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = m_7 FALSE"
                                          (rule "close" (formula "59") (ifseqformula "1"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "ClassCastException (!(m_4 instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "51"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "closeTrue" (formula "50"))
               )
            )
            (branch "if m_4 instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (m_5 = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "27"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_leqRight" (formula "12"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "tagged_payload"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (builtin "Use Operation Contract" (formula "27") (newnames "heapBefore_getPayLoad,result_0,exc_0,heapAfter_getPayLoad,anon_heap_getPayLoad") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::getPayLoad([B)].JML behavior operation contract.0"))
      (branch
         (rule "assignment" (formula "29") (term "1,1") (userinteraction))
         (builtin "One Step Simplification" (formula "29"))
         (rule "variableDeclarationAssign" (formula "29") (term "1") (userinteraction))
         (rule "variableDeclaration" (formula "29") (term "1") (newnames "signature_1") (userinteraction))
         (builtin "Use Operation Contract" (formula "29") (newnames "heapBefore_getSignature_0,result_3,exc_3,heapAfter_getSignature_0,anon_heap_getSignature_0") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::getSignature([B)].JML behavior operation contract.0"))
         (branch "Post (getSignature)"
            (rule "assignment" (formula "31") (term "1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "21"))
            (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "15") (userinteraction))
            (builtin "One Step Simplification" (formula "17"))
            (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "21") (userinteraction))
            (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "21") (userinteraction))
            (builtin "One Step Simplification" (formula "23"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "true_left" (formula "24") (userinteraction))
            (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "15") (userinteraction))
            (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18") (userinteraction))
            (rule "andLeft" (formula "17") (userinteraction))
            (rule "andLeft" (formula "23") (userinteraction))
            (builtin "One Step Simplification" (formula "39"))
            (rule "ifUnfold" (formula "39") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_9"))
            (rule "compound_assignment_2" (formula "39") (term "1") (inst "#v=x_10"))
            (rule "variableDeclarationAssign" (formula "39") (term "1"))
            (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_10"))
            (rule "methodCallWithAssignmentUnfoldTarget" (formula "39") (term "1") (inst "#v0=v"))
            (rule "variableDeclaration" (formula "39") (term "1") (newnames "v_1"))
            (rule "assignment_read_attribute_this" (formula "39") (term "1"))
            (builtin "One Step Simplification" (formula "39"))
            (rule "pullOutSelect" (formula "39") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_9"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "4")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0010_2" (formula "39") (term "0,1,0"))
            (builtin "Use Operation Contract" (formula "39") (newnames "heapBefore_verify_0,result_4,exc_4,heapAfter_verify_0,anon_heap_verify_0") (contract "verif.functionalities.pkisig.Verifier[verif.functionalities.pkisig.Verifier::verify([B,[B)].JML normal_behavior operation contract.0"))
            (branch "Post (verify)"
               (builtin "One Step Simplification" (formula "41"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "28"))
               (rule "eqSymm" (formula "28"))
               (rule "assignment" (formula "43") (term "1"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "array2seqDef" (formula "28") (term "0,0,0") (inst "u=u"))
               (rule "array2seqDef" (formula "28") (term "1,0,0") (inst "u=u"))
               (rule "compound_assignment_1_new" (formula "43") (term "1"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "ifSplit" (formula "43"))
               (branch "if x_9 true"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "notLeft" (formula "1"))
                  (rule "apply_eq_boolean" (formula "28") (term "1") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "notLeft" (formula "28"))
                  (rule "throwUnfold" (formula "44") (term "1") (inst "#v0=m"))
                  (rule "variableDeclarationAssign" (formula "44") (term "1"))
                  (rule "variableDeclaration" (formula "44") (term "1") (newnames "m_8"))
                  (rule "instanceCreationAssignmentUnfoldArguments" (formula "44") (term "1"))
                  (rule "variableDeclarationAssign" (formula "44") (term "1"))
                  (rule "variableDeclaration" (formula "44") (term "1") (newnames "var_8"))
                  (rule "assignment" (formula "44") (term "1"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "variableDeclarationAssign" (formula "44") (term "1"))
                  (rule "variableDeclaration" (formula "44") (term "1") (newnames "var_9"))
                  (rule "stringAssignment" (formula "44") (term "1"))
                  (builtin "One Step Simplification" (formula "45"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "eqSymm" (formula "44"))
                  (rule "arrayLengthNotNegative" (formula "28") (term "1,0"))
                  (rule "arrayLengthIsAShort" (formula "29") (term "1,1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "arrayLengthIsAShort" (formula "29") (term "1,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "arrayLengthNotNegative" (formula "29") (term "1,1"))
                  (rule "instanceCreationAssignment" (formula "47") (term "1") (inst "#v0=m_9"))
                  (rule "variableDeclarationAssign" (formula "47") (term "1"))
                  (rule "variableDeclaration" (formula "47") (term "1") (newnames "m_9"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "47") (term "1") (inst "#v0=m_10"))
                  (rule "variableDeclaration" (formula "47") (term "1") (newnames "m_10"))
                  (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_<createObject>_1,savedHeapBefore_<createObject>_1"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "variableDeclaration" (formula "47") (term "1") (newnames "__NEW___2"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "47") (term "1") (inst "#v0=m_11"))
                  (rule "variableDeclaration" (formula "47") (term "1") (newnames "m_11"))
                  (rule "allocateInstance" (formula "47"))
                  (builtin "One Step Simplification" (formula "48"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "wellFormedCreate" (formula "1") (term "0,1,0"))
                  (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "29"))
                  (rule "wellFormedAnonEQ" (formula "1") (term "0,0,1,0") (ifseqformula "23"))
                  (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,1,0") (ifseqformula "17"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")) (ifInst ""  (formula "17")) (ifInst ""  (formula "23")))
                  (rule "notLeft" (formula "1"))
                  (rule "blockEmpty" (formula "50") (term "1"))
                  (rule "assignment" (formula "50") (term "1"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "50"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "24"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "ifEqualsTRUE" (formula "31"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0") (ifseqformula "23"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,0") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "orRight" (formula "31"))
                  (rule "orRight" (formula "31"))
                  (rule "orRight" (formula "31"))
                  (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "31"))
                  (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                  (rule "hideAuxiliaryEqConcrete2" (formula "35"))
                  (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<create>_1,savedHeapBefore_<create>_1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodCallWithinClass" (formula "53") (term "1"))
                  (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<prepareEnter>_1,savedHeapBefore_<prepareEnter>_1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodCallSuper" (formula "53") (term "1"))
                  (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<prepare>_5,savedHeapBefore_<prepare>_5"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodCallSuper" (formula "53") (term "1"))
                  (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<prepare>_6,savedHeapBefore_<prepare>_6"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodCallSuper" (formula "53") (term "1"))
                  (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<prepare>_7,savedHeapBefore_<prepare>_7"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodCallEmpty" (formula "53") (term "1"))
                  (rule "blockEmpty" (formula "53") (term "1"))
                  (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "castDel" (formula "53") (term "1,0,1,0"))
                  (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "castDel" (formula "53") (term "1,0,1,0"))
                  (rule "methodCallEmpty" (formula "53") (term "1"))
                  (rule "methodCallEmpty" (formula "53") (term "1"))
                  (rule "blockEmpty" (formula "53") (term "1"))
                  (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodCallEmpty" (formula "53") (term "1"))
                  (rule "blockEmpty" (formula "53") (term "1"))
                  (rule "methodCallReturnIgnoreResult" (formula "53") (term "1"))
                  (rule "methodCallReturn" (formula "53") (term "1"))
                  (rule "assignment" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodCallEmpty" (formula "53") (term "1"))
                  (rule "blockEmpty" (formula "53") (term "1"))
                  (rule "assignment" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "variableDeclarationAssign" (formula "53") (term "1"))
                  (rule "variableDeclaration" (formula "53") (term "1") (newnames "var_10"))
                  (rule "assignment" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "variableDeclarationAssign" (formula "53") (term "1"))
                  (rule "variableDeclaration" (formula "53") (term "1") (newnames "var_11"))
                  (rule "assignment" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<init>_7,savedHeapBefore_<init>_7"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodCallSuper" (formula "53") (term "1"))
                  (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<init>_8,savedHeapBefore_<init>_8"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodCallSuper" (formula "53") (term "1"))
                  (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<init>_9,savedHeapBefore_<init>_9"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodCallSuper" (formula "53") (term "1"))
                  (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<init>_10,savedHeapBefore_<init>_10"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodCallEmpty" (formula "53") (term "1"))
                  (rule "blockEmpty" (formula "53") (term "1"))
                  (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "castDel" (formula "53") (term "1,0,1,0"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "castDel" (formula "53") (term "1,0,1,0"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodCallEmpty" (formula "53") (term "1"))
                  (rule "methodCallEmpty" (formula "53") (term "1"))
                  (rule "blockEmpty" (formula "53") (term "1"))
                  (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "methodCallEmpty" (formula "53") (term "1"))
                  (rule "blockEmpty" (formula "53") (term "1"))
                  (rule "assignment_write_attribute" (formula "53") (term "1"))
                  (branch "Normal Execution (m_9 != null)"
                     (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "35")))
                     (builtin "One Step Simplification" (formula "54"))
                     (rule "false_right" (formula "53"))
                     (rule "assignment" (formula "53") (term "1"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "blockEmpty" (formula "53") (term "1"))
                     (rule "methodCallParamThrow" (formula "53") (term "1"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "tryCatchThrow" (formula "53") (term "1"))
                     (rule "ifElseUnfold" (formula "53") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_11"))
                     (rule "equality_comparison_simple" (formula "53") (term "1"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "replace_known_right" (formula "53") (term "0,0,1,0") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "ifElseSplit" (formula "53"))
                     (branch "if x_11 true"
                        (builtin "One Step Simplification" (formula "54"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_11 false"
                        (builtin "One Step Simplification" (formula "54"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "ifElseSplit" (formula "53"))
                        (branch "if m_8 instanceof java.lang.Throwable true"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                           (rule "true_left" (formula "1"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "e_5"))
                           (rule "reference_type_cast" (formula "53") (term "1"))
                           (branch "Normal Execution (m_8 instanceof java.lang.Throwable)"
                              (builtin "One Step Simplification" (formula "1"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "true_left" (formula "1"))
                              (rule "assignment" (formula "53") (term "1"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "emptyModality" (formula "53") (term "1"))
                              (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "35")) (ifInst ""  (formula "35")) (ifInst ""  (formula "35")) (ifInst ""  (formula "35")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "17"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "17"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "21"))
                              (rule "notLeft" (formula "29"))
                              (rule "notLeft" (formula "22"))
                              (rule "eqSymm" (formula "55") (term "1,0,0,1"))
                              (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "array2seqDef" (formula "26") (term "0,1") (inst "u=u"))
                              (rule "eqSymm" (formula "26"))
                              (rule "array2seqDef" (formula "20") (term "0") (inst "u=u"))
                              (rule "array2seqDef" (formula "20") (term "0,1") (inst "u=u"))
                              (rule "array2seqDef" (formula "26") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "26"))
                              (rule "eqSeqDef2" (formula "26") (inst "iv=iv") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "eqSeqDef2" (formula "20") (inst "iv=iv") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "53") (term "0") (ifseqformula "7"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "nonNull" (formula "53") (term "1,0,0,0,0,0,0,0,0,0,0") (inst "i=i"))
                              (rule "greater_literals" (formula "53") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "sub_literals" (formula "53") (term "2,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "53") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "nonNull" (formula "53") (term "1,0,0,0,0,0,0,0,0") (inst "i=i"))
                              (rule "greater_literals" (formula "53") (term "0,1,1,0,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "sub_literals" (formula "53") (term "2,1,0,1,1,0,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "53") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "nonNull" (formula "53") (term "1,0,0,0,0,0,0,0") (inst "i=i"))
                              (rule "sub_literals" (formula "53") (term "2,1,0,1,1,1,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "greater_literals" (formula "53") (term "0,1,1,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "53") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "nonNull" (formula "53") (term "1,0,0,0,0,0,0,0,0,0") (inst "i=i"))
                              (rule "sub_literals" (formula "53") (term "2,1,0,1,1,1,0,0,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "greater_literals" (formula "53") (term "0,1,1,0,0,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "53") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "nonNull" (formula "53") (term "1,0,0,0,0,0,0") (inst "i=i"))
                              (rule "sub_literals" (formula "53") (term "2,1,0,1,1,1,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "greater_literals" (formula "53") (term "0,1,1,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,1,1,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "53") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                              (rule "nonNull" (formula "53") (term "1,0,0,0,0,0") (inst "i=i"))
                              (rule "sub_literals" (formula "53") (term "2,1,0,1,1,1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "greater_literals" (formula "53") (term "0,1,1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,1,1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "53") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "pullOutSelect" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_9"))
                              (rule "applyEq" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "54") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "54") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "54") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "53") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "41"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "pullOutSelect" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_9"))
                              (rule "applyEq" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "54") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "54") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "54") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "53") (term "0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "pullOutSelect" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_9"))
                              (rule "applyEq" (formula "54") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "54") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "54") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "54") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "54") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "53") (term "0,0,1,0,0,0,0,0") (ifseqformula "43"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "pullOutSelect" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_9"))
                              (rule "applyEq" (formula "54") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "54") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "54") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "54") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "54") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "53") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "pullOutSelect" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_9"))
                              (rule "applyEq" (formula "54") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "54") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "54") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "53") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "40"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "pullOutSelect" (formula "53") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_9"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "54") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "53") (term "0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "pullOutSelect" (formula "53") (term "0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_9"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "54") (term "0,0,1,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "53") (term "0,1,0,0,0") (ifseqformula "47"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "pullOutSelect" (formula "53") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_10"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "replaceKnownSelect_taclet0010_0" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010_2" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "54") (term "0,0,1,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "53") (term "0,1,0,0") (ifseqformula "48"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "pullOutSelect" (formula "53") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_9"))
                              (rule "applyEq" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "54") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "54") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "54") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "53") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "38"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "pullOutSelect" (formula "53") (term "0,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_9"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "54") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "53") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "44"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "pullOutSelect" (formula "53") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_9"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "54") (term "0,0,1,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "53") (term "0,1,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "pullOutSelect" (formula "53") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_9"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "54") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "53") (term "0,1,0") (ifseqformula "49"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "25") (ifseqformula "7"))
                              (rule "replaceKnownSelect_taclet0010000010_73" (formula "25") (term "0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_75" (formula "25") (term "0,0,1"))
                              (rule "replaceKnownSelect_taclet0010_0" (formula "25") (term "0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010_2" (formula "25") (term "0,0,1,0"))
                              (rule "replaceKnownSelect_taclet0010000010_45" (formula "25") (term "0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_47" (formula "25") (term "0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_21" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_67" (formula "25") (term "0,0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_23" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_69" (formula "25") (term "0,0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_27" (formula "25") (term "1,1,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_9" (formula "25") (term "1,1,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_29" (formula "25") (term "1,1,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_33" (formula "25") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_11" (formula "25") (term "1,1,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_15" (formula "25") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_35" (formula "25") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_55" (formula "25") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_17" (formula "25") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_57" (formula "25") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_39" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_61" (formula "25") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_41" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_63" (formula "25") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "andLeft" (formula "25"))
                              (rule "notLeft" (formula "26"))
                              (rule "andLeft" (formula "25"))
                              (rule "notLeft" (formula "26"))
                              (rule "andLeft" (formula "25"))
                              (rule "notLeft" (formula "26"))
                              (rule "andLeft" (formula "25"))
                              (rule "notLeft" (formula "26"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "25"))
                              (rule "notLeft" (formula "26"))
                              (rule "notLeft" (formula "25"))
                              (rule "nonNull" (formula "30") (inst "i=i"))
                              (rule "greater_literals" (formula "30") (term "0,1"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "48")))
                              (rule "sub_literals" (formula "30") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "29") (inst "i=i"))
                              (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "47")))
                              (rule "greater_literals" (formula "29") (term "0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "28") (inst "i=i"))
                              (rule "greater_literals" (formula "28") (term "0,1"))
                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "46")))
                              (rule "sub_literals" (formula "28") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "27") (inst "i=i"))
                              (rule "greater_literals" (formula "27") (term "0,1"))
                              (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "45")))
                              (rule "sub_literals" (formula "27") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "26") (inst "i=i"))
                              (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "44")))
                              (rule "greater_literals" (formula "26") (term "0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "25") (inst "i=i"))
                              (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "43")))
                              (rule "greater_literals" (formula "25") (term "0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "7"))
                              (rule "replaceKnownSelect_taclet0010000010_74" (formula "20") (term "0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_75" (formula "20") (term "0,0,1"))
                              (rule "replaceKnownSelect_taclet0010_1" (formula "20") (term "0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010_2" (formula "20") (term "0,0,1,0"))
                              (rule "replaceKnownSelect_taclet0010000010_46" (formula "20") (term "0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_47" (formula "20") (term "0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_22" (formula "20") (term "1,1,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_68" (formula "20") (term "0,0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_23" (formula "20") (term "1,1,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_69" (formula "20") (term "0,0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_28" (formula "20") (term "1,1,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_10" (formula "20") (term "1,1,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_29" (formula "20") (term "1,1,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_34" (formula "20") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_11" (formula "20") (term "1,1,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_16" (formula "20") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_35" (formula "20") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_56" (formula "20") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_17" (formula "20") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_57" (formula "20") (term "1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_40" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0010000010_62" (formula "20") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_41" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010000010_63" (formula "20") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "21"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "21"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "21"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "21"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "21"))
                              (rule "notLeft" (formula "20"))
                              (rule "nonNull" (formula "25") (inst "i=i"))
                              (rule "greater_literals" (formula "25") (term "0,1"))
                              (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "53")))
                              (rule "sub_literals" (formula "25") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "24") (inst "i=i"))
                              (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "52")))
                              (rule "greater_literals" (formula "24") (term "0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "23") (inst "i=i"))
                              (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "51")))
                              (rule "greater_literals" (formula "23") (term "0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "22") (inst "i=i"))
                              (rule "greater_literals" (formula "22") (term "0,1"))
                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "50")))
                              (rule "sub_literals" (formula "22") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "21") (inst "i=i"))
                              (rule "greater_literals" (formula "21") (term "0,1"))
                              (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "49")))
                              (rule "sub_literals" (formula "21") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "20") (inst "i=i"))
                              (rule "sub_literals" (formula "20") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "48")))
                              (rule "greater_literals" (formula "20") (term "0"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "63") (term "0,1,0"))
                              (rule "nnf_imp2or" (formula "63") (term "0,1,0,0"))
                              (rule "nnf_imp2or" (formula "63") (term "0,1,0,0,0"))
                              (rule "nnf_imp2or" (formula "63") (term "0,1,0,0,0,0"))
                              (rule "nnf_imp2or" (formula "35") (term "0"))
                              (rule "nnf_imp2or" (formula "63") (term "0,0,0,0,0,0,0"))
                              (rule "nnf_imp2or" (formula "63") (term "0,1,0,0,0,0,0"))
                              (rule "nnf_imp2or" (formula "34") (term "0"))
                              (rule "nnf_imp2or" (formula "33") (term "0"))
                              (rule "nnf_imp2or" (formula "32") (term "0"))
                              (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                              (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                              (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                              (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "arrayLengthNotNegative" (formula "4") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                              (rule "leq_literals" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                              (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
                              (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                              (rule "nnf_imp2or" (formula "37") (term "0"))
                              (rule "cut_direct" (formula "25") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "cut_direct" (formula "35") (term "0,0"))
                                 (branch "CUT: result_3.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "nnf_imp2or" (formula "36") (term "0"))
                                    (rule "nnf_imp2or" (formula "31") (term "0"))
                                    (rule "nnf_imp2or" (formula "30") (term "0"))
                                    (rule "nnf_imp2or" (formula "29") (term "0"))
                                    (rule "nnf_imp2or" (formula "28") (term "0"))
                                    (rule "nnf_imp2or" (formula "27") (term "0"))
                                    (rule "nnf_imp2or" (formula "26") (term "0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "69") (term "1,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "69") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "69") (term "1,0,0,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,0,0,0,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,1,0,0"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "69") (term "1,0,0,0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "69") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,0,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "69") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "69") (term "0,0,0,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,0,0,0,1,0,0,0,0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or_2" (formula "31") (term "0"))
                                    (rule "commute_or_2" (formula "30") (term "0"))
                                    (rule "commute_or_2" (formula "29") (term "0"))
                                    (rule "commute_or_2" (formula "28") (term "0"))
                                    (rule "commute_or_2" (formula "27") (term "0"))
                                    (rule "commute_or_2" (formula "26") (term "0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "5"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "6"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "66"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "75") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "76"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "0") (ifseqformula "15"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "73"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_or" (formula "53") (term "0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0"))
                                    (rule "commute_or" (formula "51") (term "0,0"))
                                    (rule "commute_or" (formula "50") (term "0,0"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or" (formula "48") (term "0,0"))
                                    (rule "commute_or" (formula "43") (term "0,0"))
                                    (rule "commute_or" (formula "42") (term "0,0"))
                                    (rule "commute_or" (formula "41") (term "0,0"))
                                    (rule "commute_or" (formula "40") (term "0,0"))
                                    (rule "commute_or" (formula "39") (term "0,0"))
                                    (rule "commute_or" (formula "38") (term "0,0"))
                                    (rule "andRight" (formula "81"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "81"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "81"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "81"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "81"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "81"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "81") (inst "sk=i_126"))
                                                      (rule "orRight" (formula "81"))
                                                      (rule "orRight" (formula "81"))
                                                      (rule "notRight" (formula "83"))
                                                      (rule "inEqSimp_leqRight" (formula "82"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "83"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_372"))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "13")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "69"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_126"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "25") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "25"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "81") (inst "sk=i_125"))
                                                      (rule "orRight" (formula "81"))
                                                      (rule "orRight" (formula "81"))
                                                      (rule "notRight" (formula "83"))
                                                      (rule "inEqSimp_leqRight" (formula "82"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "83"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_371"))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "15"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "15"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")) (ifInst ""  (formula "15")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "70"))
                                                      (rule "allLeft" (formula "27") (inst "t=i_125"))
                                                      (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "27") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "27"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "81") (inst "sk=i_124"))
                                                   (rule "orRight" (formula "81"))
                                                   (rule "notRight" (formula "82"))
                                                   (rule "orRight" (formula "82"))
                                                   (rule "inEqSimp_geqRight" (formula "83"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "83"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_370"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "71"))
                                                   (rule "allLeft" (formula "29") (inst "t=i_124"))
                                                   (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                   (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "29") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "29") (term "0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "closeFalse" (formula "29"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "81") (inst "sk=i_123"))
                                                (rule "orRight" (formula "81"))
                                                (rule "orRight" (formula "81"))
                                                (rule "notRight" (formula "83"))
                                                (rule "inEqSimp_geqRight" (formula "83"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "83"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_369"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")) (ifInst ""  (formula "9")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "72"))
                                                (rule "allLeft" (formula "31") (inst "t=i_123"))
                                                (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                (rule "leq_literals" (formula "31") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "closeFalse" (formula "31"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "81") (inst "sk=i_122"))
                                             (rule "orRight" (formula "81"))
                                             (rule "orRight" (formula "81"))
                                             (rule "notRight" (formula "83"))
                                             (rule "inEqSimp_leqRight" (formula "82"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "83"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_368"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")) (ifInst ""  (formula "8")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "73"))
                                             (rule "allLeft" (formula "33") (inst "t=i_122"))
                                             (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "33") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "33"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "81") (inst "sk=i_121"))
                                          (rule "orRight" (formula "81"))
                                          (rule "orRight" (formula "81"))
                                          (rule "notRight" (formula "83"))
                                          (rule "inEqSimp_leqRight" (formula "82"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "83"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_367"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")) (ifInst ""  (formula "36")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "74"))
                                          (rule "allLeft" (formula "36") (inst "t=i_121"))
                                          (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "36") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "1"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "inEqSimp_homoInEq1" (formula "36"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                          (rule "add_literals" (formula "36") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0"))
                                          (rule "leq_literals" (formula "36"))
                                          (rule "closeFalse" (formula "36"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "81") (inst "sk=f_16"))
                                       (rule "allRight" (formula "81") (inst "sk=o_16"))
                                       (rule "orRight" (formula "81"))
                                       (rule "pullOutSelect" (formula "82") (term "0") (inst "selectSK=f_16_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_2"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_3"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_4"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_5"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "69"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_6"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "87"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_7"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "53"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "43"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_8"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "44"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_9"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "9") (term "0,0"))
                                       (rule "commute_and" (formula "8") (term "0,0"))
                                       (rule "commute_and" (formula "7") (term "0,0"))
                                       (rule "commute_and" (formula "6") (term "0,0"))
                                       (rule "commute_and" (formula "5") (term "0,0"))
                                       (rule "commute_and" (formula "4") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "67"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "67")))
                                          (rule "replace_known_right" (formula "92") (term "0,1") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "65")))
                                          (rule "closeTrue" (formula "92"))
                                       )
                                       (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_getSignature_0«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "65"))
                                             (rule "orRight" (formula "65"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "93") (term "0,0") (ifseqformula "67"))
                                             (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "64")))
                                             (rule "closeTrue" (formula "93"))
                                          )
                                          (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_getSignature_0«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "cut_direct" (formula "90") (term "0,0"))
                                             (branch "CUT: o_16 = null TRUE"
                                                (builtin "One Step Simplification" (formula "91"))
                                                (rule "false_right" (formula "91"))
                                                (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "66"))
                                                (rule "false_right" (formula "66"))
                                                (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "false_right" (formula "65"))
                                                (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "71"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "88") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "87"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "5") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "69"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "68"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "67"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "66"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "65"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "83")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_16 = null FALSE"
                                                (builtin "One Step Simplification" (formula "91"))
                                                (rule "notRight" (formula "91"))
                                                (rule "replace_known_left" (formula "66") (term "0,0,1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "91")))
                                                (rule "false_right" (formula "66"))
                                                (rule "replace_known_right" (formula "65") (term "0,0") (ifseqformula "90"))
                                                (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "1")))
                                                (rule "false_right" (formula "65"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch " f_16 = java.lang.Object::<created> ∧ o_16 = strPool(\"Wrong signature\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "89") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "89"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "87") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "86") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "86") (term "0") (ifseqformula "21"))
                                                   (rule "eqSymm" (formula "86"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                                                   (rule "replace_known_right" (formula "4") (term "1,1,0,0") (ifseqformula "84"))
                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "67")))
                                                   (rule "applyEqReverse" (formula "85") (term "0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "eqSymm" (formula "84"))
                                                   (rule "applyEqRigid" (formula "84") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "84") (ifseqformula "1"))
                                                )
                                                (branch " f_16 = java.lang.Object::<created> ∧ o_16 = strPool(\"Wrong signature\") FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_16 = java.lang.Object::<created> ∧ o_16 = m_11 TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "65") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "65"))
                                                      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEq" (formula "63") (term "0") (ifseqformula "3"))
                                                      (rule "sortsDisjointModuloNull" (formula "63"))
                                                      (rule "eqSymm" (formula "63") (term "1"))
                                                      (rule "replace_known_right" (formula "63") (term "1") (ifseqformula "87"))
                                                      (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "70")))
                                                      (rule "false_right" (formula "63"))
                                                      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "87") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEq" (formula "85") (term "2,0") (ifseqformula "2"))
                                                      (rule "castTrueImpliesOriginalTrue" (formula "85") (ifseqformula "1"))
                                                      (rule "closeTrue" (formula "85"))
                                                   )
                                                   (branch "f_16 = java.lang.Object::<created> ∧ o_16 = m_11 FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_16 = Throwable::$cause ∧ o_16 = m_11 TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "false_right" (formula "64"))
                                                         (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "false_right" (formula "63"))
                                                         (rule "applyEq" (formula "87") (term "0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "86") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEqRigid" (formula "84") (term "2,0") (ifseqformula "2"))
                                                         (rule "narrowSelectType" (formula "84") (term "0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "62") (ifseqformula "1"))
                                                      )
                                                      (branch "f_16 = Throwable::$cause ∧ o_16 = m_11 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "f_16 = Throwable::$message ∧ o_16 = m_11 TRUE"
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "63"))
                                                            (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "64"))
                                                            (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                            (builtin "One Step Simplification" (formula "65"))
                                                            (rule "false_right" (formula "65"))
                                                            (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "64"))
                                                            (rule "false_right" (formula "64"))
                                                            (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "applyEq" (formula "87") (term "0") (ifseqformula "3"))
                                                            (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "false_right" (formula "62"))
                                                            (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "86") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "applyEq" (formula "85") (term "2,0") (ifseqformula "2"))
                                                            (rule "narrowSelectType" (formula "85") (term "0") (ifseqformula "20"))
                                                            (rule "eqSymm" (formula "85"))
                                                            (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "85") (term "0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "eqSymm" (formula "84"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                            (rule "close" (formula "62") (ifseqformula "1"))
                                                         )
                                                         (branch "f_16 = Throwable::$message ∧ o_16 = m_11 FALSE"
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "f_16 = MalformedData::$errCode ∧ o_16 = m_11 TRUE"
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "63"))
                                                               (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "64"))
                                                               (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "false_right" (formula "65"))
                                                               (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "63"))
                                                               (rule "false_right" (formula "63"))
                                                               (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "false_right" (formula "62"))
                                                               (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "applyEqReverse" (formula "88") (term "1") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "87") (term "1") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "false_right" (formula "60"))
                                                               (rule "applyEq" (formula "85") (term "2,0") (ifseqformula "2"))
                                                               (rule "narrowSelectType" (formula "85") (term "0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "84") (term "0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                               (rule "close" (formula "62") (ifseqformula "1"))
                                                            )
                                                            (branch "f_16 = MalformedData::$errCode ∧ o_16 = m_11 FALSE"
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "ifthenelse_split" (formula "2") (term "0"))
                                                               (branch "f_16 = MalformedData::$description ∧ o_16 = m_11 TRUE"
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "false_right" (formula "65"))
                                                                  (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "false_right" (formula "64"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "false_right" (formula "60"))
                                                                  (rule "applyEq" (formula "87") (term "2,0") (ifseqformula "2"))
                                                                  (rule "narrowSelectType" (formula "87") (term "0") (ifseqformula "19"))
                                                                  (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "false_right" (formula "60"))
                                                                  (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "false_right" (formula "60"))
                                                                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                                  (rule "close" (formula "62") (ifseqformula "1"))
                                                               )
                                                               (branch "f_16 = MalformedData::$description ∧ o_16 = m_11 FALSE"
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                  (branch "f_16 = java.lang.Object::<initialized> ∧ o_16 = m_11 TRUE"
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "92") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "false_right" (formula "65"))
                                                                     (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "false_right" (formula "64"))
                                                                     (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "false_right" (formula "61"))
                                                                     (rule "applyEqRigid" (formula "88") (term "2,0") (ifseqformula "2"))
                                                                     (rule "narrowSelectType" (formula "88") (term "0") (ifseqformula "19"))
                                                                     (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "false_right" (formula "62"))
                                                                     (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "false_right" (formula "60"))
                                                                     (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "false_right" (formula "60"))
                                                                     (rule "applyEq" (formula "84") (term "0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                                     (rule "close" (formula "62") (ifseqformula "1"))
                                                                  )
                                                                  (branch "f_16 = java.lang.Object::<initialized> ∧ o_16 = m_11 FALSE"
                                                                     (rule "close" (formula "91") (ifseqformula "2"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: result_3.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "nnf_imp2or" (formula "36") (term "0"))
                                    (rule "nnf_imp2or" (formula "31") (term "0"))
                                    (rule "nnf_imp2or" (formula "30") (term "0"))
                                    (rule "nnf_imp2or" (formula "29") (term "0"))
                                    (rule "nnf_imp2or" (formula "28") (term "0"))
                                    (rule "nnf_imp2or" (formula "27") (term "0"))
                                    (rule "nnf_imp2or" (formula "26") (term "0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "70") (term "1,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "70") (term "1,0,0,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,1,0,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "70") (term "1,0,0,0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "70") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,0,0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,1,0,0,0,0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or_2" (formula "31") (term "0"))
                                    (rule "commute_or_2" (formula "30") (term "0"))
                                    (rule "commute_or_2" (formula "29") (term "0"))
                                    (rule "commute_or_2" (formula "28") (term "0"))
                                    (rule "commute_or_2" (formula "27") (term "0"))
                                    (rule "commute_or_2" (formula "26") (term "0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "5"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "6"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,1,1,0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0,1,1,0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "65"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,1,1,0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "65"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "66"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "75") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "76"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_or" (formula "53") (term "0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0"))
                                    (rule "commute_or" (formula "51") (term "0,0"))
                                    (rule "commute_or" (formula "50") (term "0,0"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or" (formula "48") (term "0,0"))
                                    (rule "commute_or" (formula "43") (term "0,0"))
                                    (rule "commute_or" (formula "42") (term "0,0"))
                                    (rule "commute_or" (formula "41") (term "0,0"))
                                    (rule "commute_or" (formula "40") (term "0,0"))
                                    (rule "commute_or" (formula "39") (term "0,0"))
                                    (rule "commute_or" (formula "38") (term "0,0"))
                                    (rule "andRight" (formula "82"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "82"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "82"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "82"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "82"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "82"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "82") (inst "sk=i_120"))
                                                      (rule "orRight" (formula "82"))
                                                      (rule "orRight" (formula "82"))
                                                      (rule "notRight" (formula "84"))
                                                      (rule "inEqSimp_geqRight" (formula "84"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "84"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_366"))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "22"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "22"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")) (ifInst ""  (formula "22")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "15") (ifseqformula "70"))
                                                      (rule "allLeft" (formula "22") (inst "t=i_120"))
                                                      (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "22") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "22"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "82") (inst "sk=i_119"))
                                                      (rule "orRight" (formula "82"))
                                                      (rule "orRight" (formula "82"))
                                                      (rule "notRight" (formula "84"))
                                                      (rule "inEqSimp_geqRight" (formula "84"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "84"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_365"))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")) (ifInst ""  (formula "8")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "15") (ifseqformula "71"))
                                                      (rule "allLeft" (formula "24") (inst "t=i_119"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "24") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "24") (term "0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "closeFalse" (formula "24"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "82") (inst "sk=i_118"))
                                                   (rule "orRight" (formula "82"))
                                                   (rule "orRight" (formula "82"))
                                                   (rule "notRight" (formula "84"))
                                                   (rule "inEqSimp_leqRight" (formula "83"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "84"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_364"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")) (ifInst ""  (formula "27")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "15") (ifseqformula "72"))
                                                   (rule "allLeft" (formula "27") (inst "t=i_118"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "27") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "82") (inst "sk=i_117"))
                                                (rule "orRight" (formula "82"))
                                                (rule "orRight" (formula "82"))
                                                (rule "notRight" (formula "84"))
                                                (rule "inEqSimp_geqRight" (formula "84"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "84"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_363"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "30"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "30"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")) (ifInst ""  (formula "30")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "15") (ifseqformula "73"))
                                                (rule "allLeft" (formula "30") (inst "t=i_117"))
                                                (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                (rule "leq_literals" (formula "30") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "30") (term "0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "closeFalse" (formula "30"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "82") (inst "sk=i_116"))
                                             (rule "orRight" (formula "82"))
                                             (rule "orRight" (formula "82"))
                                             (rule "notRight" (formula "84"))
                                             (rule "inEqSimp_geqRight" (formula "84"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "84"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_362"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")) (ifInst ""  (formula "33")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "15") (ifseqformula "74"))
                                             (rule "allLeft" (formula "33") (inst "t=i_116"))
                                             (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "33") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "2"))
                                             (rule "andLeft" (formula "33"))
                                             (rule "inEqSimp_homoInEq1" (formula "33"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                             (rule "add_literals" (formula "33") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0"))
                                             (rule "add_zero_right" (formula "33") (term "0"))
                                             (rule "leq_literals" (formula "33"))
                                             (rule "closeFalse" (formula "33"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "82") (inst "sk=i_115"))
                                          (rule "orRight" (formula "82"))
                                          (rule "orRight" (formula "82"))
                                          (rule "notRight" (formula "84"))
                                          (rule "inEqSimp_leqRight" (formula "83"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "84"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_361"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "76")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "76")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "76")) (ifInst ""  (formula "36")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "15") (ifseqformula "75"))
                                          (rule "allLeft" (formula "36") (inst "t=i_115"))
                                          (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                          (rule "leq_literals" (formula "36") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "36"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "82") (inst "sk=f_15"))
                                       (rule "allRight" (formula "82") (inst "sk=o_15"))
                                       (rule "orRight" (formula "82"))
                                       (rule "pullOutSelect" (formula "83") (term "0") (inst "selectSK=f_15_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_2"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_3"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_4"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_5"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "70"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_6"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "88"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_7"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "53"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "43"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_8"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "44"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_9"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "9") (term "0,0"))
                                       (rule "commute_and" (formula "8") (term "0,0"))
                                       (rule "commute_and" (formula "7") (term "0,0"))
                                       (rule "commute_and" (formula "6") (term "0,0"))
                                       (rule "commute_and" (formula "5") (term "0,0"))
                                       (rule "commute_and" (formula "4") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "67"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "67")))
                                          (rule "replace_known_right" (formula "93") (term "0,0") (ifseqformula "65"))
                                          (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "66")))
                                          (rule "closeTrue" (formula "93"))
                                       )
                                       (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_getSignature_0«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "66"))
                                             (rule "orRight" (formula "66"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "94") (term "0,0") (ifseqformula "64"))
                                             (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "65")))
                                             (rule "closeTrue" (formula "94"))
                                          )
                                          (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_getSignature_0«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "cut_direct" (formula "91") (term "0,0"))
                                             (branch "CUT: o_15 = null TRUE"
                                                (builtin "One Step Simplification" (formula "92"))
                                                (rule "false_right" (formula "92"))
                                                (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "66"))
                                                (rule "false_right" (formula "66"))
                                                (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "false_right" (formula "65"))
                                                (rule "applyEqRigid" (formula "8") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "8") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "72"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "6") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "71"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "70"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "69"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "68"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "86") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "84"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "66"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "83"))
                                                (rule "applyEq" (formula "83") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "83"))
                                                (rule "closeTrue" (formula "83"))
                                             )
                                             (branch "CUT: o_15 = null FALSE"
                                                (builtin "One Step Simplification" (formula "92"))
                                                (rule "notRight" (formula "92"))
                                                (rule "replace_known_right" (formula "66") (term "0,0") (ifseqformula "92"))
                                                (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "1")))
                                                (rule "false_right" (formula "66"))
                                                (rule "replace_known_right" (formula "65") (term "0,0") (ifseqformula "91"))
                                                (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "1")))
                                                (rule "false_right" (formula "65"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch " f_15 = java.lang.Object::<created> ∧ o_15 = strPool(\"Wrong signature\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "90") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                                                   (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "71"))
                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "88")))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "6") (term "1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "6") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "6") (term "1,1,0,0"))
                                                   (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "70"))
                                                   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "87")))
                                                   (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "5") (term "1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "5") (term "1,1,0,0"))
                                                   (rule "replace_known_right" (formula "5") (term "1,1,0,0") (ifseqformula "86"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "69")))
                                                   (rule "applyEqReverse" (formula "88") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "87") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "86") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "86") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "86"))
                                                )
                                                (branch " f_15 = java.lang.Object::<created> ∧ o_15 = strPool(\"Wrong signature\") FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_15 = java.lang.Object::<created> ∧ o_15 = m_11 TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "65") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "65"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEqRigid" (formula "89") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "89") (term "0") (ifseqformula "17"))
                                                      (rule "eqSymm" (formula "89"))
                                                      (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "89") (term "0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "87"))
                                                      (rule "close" (formula "87") (ifseqformula "1"))
                                                   )
                                                   (branch "f_15 = java.lang.Object::<created> ∧ o_15 = m_11 FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_15 = Throwable::$cause ∧ o_15 = m_11 TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "false_right" (formula "64"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "62"))
                                                         (rule "false_right" (formula "62"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "88") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "86") (term "0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "86") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "63") (ifseqformula "1"))
                                                      )
                                                      (branch "f_15 = Throwable::$cause ∧ o_15 = m_11 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "f_15 = Throwable::$message ∧ o_15 = m_11 TRUE"
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "64"))
                                                            (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "63"))
                                                            (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                            (builtin "One Step Simplification" (formula "65"))
                                                            (rule "false_right" (formula "65"))
                                                            (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "64"))
                                                            (rule "false_right" (formula "64"))
                                                            (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "88") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEqRigid" (formula "87") (term "2,0") (ifseqformula "2"))
                                                            (rule "narrowSelectType" (formula "87") (term "0") (ifseqformula "15"))
                                                            (rule "applyEq" (formula "86") (term "0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "60"))
                                                            (rule "false_right" (formula "60"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                            (rule "close" (formula "63") (ifseqformula "1"))
                                                         )
                                                         (branch "f_15 = Throwable::$message ∧ o_15 = m_11 FALSE"
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "f_15 = MalformedData::$errCode ∧ o_15 = m_11 TRUE"
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "63"))
                                                               (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "64"))
                                                               (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "false_right" (formula "65"))
                                                               (rule "applyEq" (formula "91") (term "1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "applyEq" (formula "90") (term "2,0") (ifseqformula "2"))
                                                               (rule "narrowSelectType" (formula "90") (term "0") (ifseqformula "16"))
                                                               (rule "eqSymm" (formula "90"))
                                                               (rule "applyEq" (formula "89") (term "0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                               (rule "close" (formula "67") (ifseqformula "1"))
                                                            )
                                                            (branch "f_15 = MalformedData::$errCode ∧ o_15 = m_11 FALSE"
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "ifthenelse_split" (formula "2") (term "0"))
                                                               (branch "f_15 = MalformedData::$description ∧ o_15 = m_11 TRUE"
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "false_right" (formula "65"))
                                                                  (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "false_right" (formula "64"))
                                                                  (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "false_right" (formula "61"))
                                                                  (rule "applyEq" (formula "88") (term "0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "61") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "false_right" (formula "61"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "87") (term "1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                                  (rule "close" (formula "64") (ifseqformula "1"))
                                                               )
                                                               (branch "f_15 = MalformedData::$description ∧ o_15 = m_11 FALSE"
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                  (branch "f_15 = java.lang.Object::<initialized> ∧ o_15 = m_11 TRUE"
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "93") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "false_right" (formula "65"))
                                                                     (rule "applyEq" (formula "91") (term "1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "false_right" (formula "64"))
                                                                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                                     (rule "close" (formula "67") (ifseqformula "1"))
                                                                  )
                                                                  (branch "f_15 = java.lang.Object::<initialized> ∧ o_15 = m_11 FALSE"
                                                                     (rule "close" (formula "92") (ifseqformula "2"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "cut_direct" (formula "35") (term "0,0"))
                                 (branch "CUT: result_3.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "nnf_imp2or" (formula "36") (term "0"))
                                    (rule "nnf_imp2or" (formula "31") (term "0"))
                                    (rule "nnf_imp2or" (formula "30") (term "0"))
                                    (rule "nnf_imp2or" (formula "29") (term "0"))
                                    (rule "nnf_imp2or" (formula "28") (term "0"))
                                    (rule "nnf_imp2or" (formula "27") (term "0"))
                                    (rule "nnf_imp2or" (formula "26") (term "0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "70") (term "1,0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "70") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "70") (term "1,0,0,0,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "70") (term "0,0,0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,1,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "70") (term "1,0,0,0,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "70") (term "0,0,0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "70") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "70") (term "0,0,0,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "70") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "70") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "70") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "70") (term "0,0,0,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,1,0,0,0,0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or_2" (formula "31") (term "0"))
                                    (rule "commute_or_2" (formula "30") (term "0"))
                                    (rule "commute_or_2" (formula "29") (term "0"))
                                    (rule "commute_or_2" (formula "28") (term "0"))
                                    (rule "commute_or_2" (formula "27") (term "0"))
                                    (rule "commute_or_2" (formula "26") (term "0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "5"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "6"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0,1,1,0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0,1,1,0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "68"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "14"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_or" (formula "53") (term "0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0"))
                                    (rule "commute_or" (formula "51") (term "0,0"))
                                    (rule "commute_or" (formula "50") (term "0,0"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or" (formula "48") (term "0,0"))
                                    (rule "commute_or" (formula "43") (term "0,0"))
                                    (rule "commute_or" (formula "42") (term "0,0"))
                                    (rule "commute_or" (formula "41") (term "0,0"))
                                    (rule "commute_or" (formula "40") (term "0,0"))
                                    (rule "commute_or" (formula "39") (term "0,0"))
                                    (rule "commute_or" (formula "38") (term "0,0"))
                                    (rule "andRight" (formula "82"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "82"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "82"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "82"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "82"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "82"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "82") (inst "sk=i_114"))
                                                      (rule "orRight" (formula "82"))
                                                      (rule "orRight" (formula "82"))
                                                      (rule "notRight" (formula "84"))
                                                      (rule "inEqSimp_geqRight" (formula "84"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "84"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_360"))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")) (ifInst ""  (formula "13")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "70"))
                                                      (rule "allLeft" (formula "24") (inst "t=i_114"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "24") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "82") (inst "sk=i_113"))
                                                      (rule "orRight" (formula "82"))
                                                      (rule "orRight" (formula "82"))
                                                      (rule "notRight" (formula "84"))
                                                      (rule "inEqSimp_geqRight" (formula "84"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "84"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_359"))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")) (ifInst ""  (formula "14")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "71"))
                                                      (rule "allLeft" (formula "26") (inst "t=i_113"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "26") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "26"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "82") (inst "sk=i_112"))
                                                   (rule "orRight" (formula "82"))
                                                   (rule "orRight" (formula "82"))
                                                   (rule "notRight" (formula "84"))
                                                   (rule "inEqSimp_geqRight" (formula "84"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "84"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_358"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")) (ifInst ""  (formula "9")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "72"))
                                                   (rule "allLeft" (formula "28") (inst "t=i_112"))
                                                   (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "28") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "28") (term "0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "closeFalse" (formula "28"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "82") (inst "sk=i_111"))
                                                (rule "orRight" (formula "82"))
                                                (rule "orRight" (formula "82"))
                                                (rule "notRight" (formula "84"))
                                                (rule "inEqSimp_geqRight" (formula "84"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "84"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_357"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "31"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "31"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")) (ifInst ""  (formula "31")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "73"))
                                                (rule "allLeft" (formula "31") (inst "t=i_111"))
                                                (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                (rule "leq_literals" (formula "31") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "31"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "82") (inst "sk=i_110"))
                                             (rule "orRight" (formula "82"))
                                             (rule "orRight" (formula "82"))
                                             (rule "notRight" (formula "84"))
                                             (rule "inEqSimp_geqRight" (formula "84"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "84"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_356"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")) (ifInst ""  (formula "34")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "74"))
                                             (rule "allLeft" (formula "34") (inst "t=i_110"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "34") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "2"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "inEqSimp_homoInEq1" (formula "34"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0"))
                                             (rule "leq_literals" (formula "34"))
                                             (rule "closeFalse" (formula "34"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "82") (inst "sk=i_109"))
                                          (rule "orRight" (formula "82"))
                                          (rule "orRight" (formula "82"))
                                          (rule "notRight" (formula "84"))
                                          (rule "inEqSimp_geqRight" (formula "84"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "84"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_355"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "76")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "76")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "76")) (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "75"))
                                          (rule "allLeft" (formula "36") (inst "t=i_109"))
                                          (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                          (rule "leq_literals" (formula "36") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "36"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "82") (inst "sk=f_14"))
                                       (rule "allRight" (formula "82") (inst "sk=o_14"))
                                       (rule "orRight" (formula "82"))
                                       (rule "pullOutSelect" (formula "83") (term "0") (inst "selectSK=f_14_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_2"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_3"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_4"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_5"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "70"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_6"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "88"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_7"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "53"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "43"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_8"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "44"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_9"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "9") (term "0,0"))
                                       (rule "commute_and" (formula "8") (term "0,0"))
                                       (rule "commute_and" (formula "7") (term "0,0"))
                                       (rule "commute_and" (formula "6") (term "0,0"))
                                       (rule "commute_and" (formula "5") (term "0,0"))
                                       (rule "commute_and" (formula "4") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "67"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "67")))
                                          (rule "replace_known_right" (formula "93") (term "0,0") (ifseqformula "65"))
                                          (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "66")))
                                          (rule "closeTrue" (formula "93"))
                                       )
                                       (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_getSignature_0«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "66"))
                                             (rule "orRight" (formula "66"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "94") (term "0,0") (ifseqformula "64"))
                                             (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "65")))
                                             (rule "closeTrue" (formula "94"))
                                          )
                                          (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_getSignature_0«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "cut_direct" (formula "91") (term "0,0"))
                                             (branch "CUT: o_14 = null TRUE"
                                                (builtin "One Step Simplification" (formula "92"))
                                                (rule "false_right" (formula "92"))
                                                (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "66"))
                                                (rule "false_right" (formula "66"))
                                                (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "false_right" (formula "65"))
                                                (rule "applyEq" (formula "90") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "6") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "72"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "5") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "71"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "70"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "69"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "68"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "84"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "66"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "84")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_14 = null FALSE"
                                                (builtin "One Step Simplification" (formula "92"))
                                                (rule "notRight" (formula "92"))
                                                (rule "replace_known_left" (formula "66") (term "0,0,1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "92")))
                                                (rule "false_right" (formula "66"))
                                                (rule "replace_known_left" (formula "65") (term "0,0,0,1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "91")))
                                                (rule "false_right" (formula "65"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch " f_14 = java.lang.Object::<created> ∧ o_14 = strPool(\"Wrong signature\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                                                   (rule "replace_known_right" (formula "4") (term "1,1,0,0") (ifseqformula "86"))
                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "69")))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "87") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "85") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "85"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "85") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "85") (term "0") (ifseqformula "18"))
                                                   (rule "applyEqRigid" (formula "85") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "85") (ifseqformula "1"))
                                                )
                                                (branch " f_14 = java.lang.Object::<created> ∧ o_14 = strPool(\"Wrong signature\") FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_14 = java.lang.Object::<created> ∧ o_14 = m_11 TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "65") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "65"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                      (rule "close" (formula "66") (ifseqformula "1"))
                                                   )
                                                   (branch "f_14 = java.lang.Object::<created> ∧ o_14 = m_11 FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_14 = Throwable::$cause ∧ o_14 = m_11 TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "false_right" (formula "64"))
                                                         (rule "applyEq" (formula "90") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "90") (term "2,0") (ifseqformula "2"))
                                                         (rule "narrowSelectType" (formula "90") (term "0") (ifseqformula "21"))
                                                         (rule "eqSymm" (formula "90"))
                                                         (rule "applyEq" (formula "89") (term "0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "89") (term "0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "87") (term "0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "eqSymm" (formula "86"))
                                                         (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "60"))
                                                         (rule "false_right" (formula "60"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "63") (ifseqformula "1"))
                                                      )
                                                      (branch "f_14 = Throwable::$cause ∧ o_14 = m_11 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "f_14 = Throwable::$message ∧ o_14 = m_11 TRUE"
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "64"))
                                                            (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "63"))
                                                            (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                            (builtin "One Step Simplification" (formula "65"))
                                                            (rule "false_right" (formula "65"))
                                                            (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "91") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "63"))
                                                            (rule "false_right" (formula "63"))
                                                            (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "applyEqRigid" (formula "88") (term "2,0") (ifseqformula "2"))
                                                            (rule "narrowSelectType" (formula "88") (term "0") (ifseqformula "19"))
                                                            (rule "eqSymm" (formula "88"))
                                                            (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "88") (term "0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "eqSymm" (formula "87"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                            (rule "close" (formula "64") (ifseqformula "1"))
                                                         )
                                                         (branch "f_14 = Throwable::$message ∧ o_14 = m_11 FALSE"
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "f_14 = MalformedData::$errCode ∧ o_14 = m_11 TRUE"
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "64"))
                                                               (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "63"))
                                                               (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "false_right" (formula "65"))
                                                               (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "applyEqReverse" (formula "91") (term "1") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "63"))
                                                               (rule "false_right" (formula "63"))
                                                               (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "false_right" (formula "61"))
                                                               (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "false_right" (formula "61"))
                                                               (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "87") (term "1") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "applyEq" (formula "86") (term "1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "86") (term "2,0") (ifseqformula "2"))
                                                               (rule "narrowSelectType" (formula "86") (term "0") (ifseqformula "18"))
                                                               (rule "applyEq" (formula "85") (term "0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                               (rule "close" (formula "63") (ifseqformula "1"))
                                                            )
                                                            (branch "f_14 = MalformedData::$errCode ∧ o_14 = m_11 FALSE"
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "ifthenelse_split" (formula "2") (term "0"))
                                                               (branch "f_14 = MalformedData::$description ∧ o_14 = m_11 TRUE"
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "false_right" (formula "65"))
                                                                  (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "false_right" (formula "63"))
                                                                  (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "false_right" (formula "63"))
                                                                  (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "false_right" (formula "62"))
                                                                  (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "false_right" (formula "61"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "87") (term "1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "applyEq" (formula "86") (term "2,0") (ifseqformula "2"))
                                                                  (rule "narrowSelectType" (formula "86") (term "0") (ifseqformula "18"))
                                                                  (rule "applyEq" (formula "85") (term "0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                                  (rule "close" (formula "63") (ifseqformula "1"))
                                                               )
                                                               (branch "f_14 = MalformedData::$description ∧ o_14 = m_11 FALSE"
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                  (branch "f_14 = java.lang.Object::<initialized> ∧ o_14 = m_11 TRUE"
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "93") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "false_right" (formula "65"))
                                                                     (rule "applyEq" (formula "91") (term "2,0") (ifseqformula "2"))
                                                                     (rule "narrowSelectType" (formula "91") (term "0") (ifseqformula "18"))
                                                                     (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "false_right" (formula "62"))
                                                                     (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "false_right" (formula "60"))
                                                                     (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "false_right" (formula "62"))
                                                                     (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "false_right" (formula "60"))
                                                                     (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "false_right" (formula "60"))
                                                                     (rule "applyEq" (formula "85") (term "0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                                     (rule "close" (formula "63") (ifseqformula "1"))
                                                                  )
                                                                  (branch "f_14 = java.lang.Object::<initialized> ∧ o_14 = m_11 FALSE"
                                                                     (rule "close" (formula "92") (ifseqformula "2"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: result_3.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "nnf_imp2or" (formula "36") (term "0"))
                                    (rule "nnf_imp2or" (formula "31") (term "0"))
                                    (rule "nnf_imp2or" (formula "30") (term "0"))
                                    (rule "nnf_imp2or" (formula "29") (term "0"))
                                    (rule "nnf_imp2or" (formula "28") (term "0"))
                                    (rule "nnf_imp2or" (formula "27") (term "0"))
                                    (rule "nnf_imp2or" (formula "26") (term "0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "71") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "71") (term "0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "71") (term "1,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "71") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "71") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "71") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "71") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "71") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "71") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "71") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "71") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "71") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "71") (term "0,1,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "71") (term "0,0,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "71") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "71") (term "0,0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "71") (term "0,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "71") (term "1,0,0,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "71") (term "0,0,0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "71") (term "1,0,0,0,1,0,0"))
                                    (rule "nnf_notAnd" (formula "71") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "71") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "71") (term "0,1,0,0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "71") (term "0,0,1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "71") (term "0,0,0,1,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "71") (term "0,0,1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "71") (term "0,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "71") (term "1,0,0,0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "71") (term "0,0,0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "71") (term "1,0,0,0,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "71") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "71") (term "0,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "71") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "71") (term "0,0,0,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "71") (term "1,0,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "71") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "71") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "71") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "71") (term "0,0,0,1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "71") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "71") (term "0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "71") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "71") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "71") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "71") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "71") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "71") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "71") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "71") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "71") (term "1,0,0,0,0,0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "71") (term "0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "71") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "71") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "71") (term "0,0,0,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "71") (term "1,0,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "71") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "71") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "71") (term "0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "71") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "71") (term "0,0,1,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,1,0,0,0,0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or_2" (formula "31") (term "0"))
                                    (rule "commute_or_2" (formula "30") (term "0"))
                                    (rule "commute_or_2" (formula "29") (term "0"))
                                    (rule "commute_or_2" (formula "28") (term "0"))
                                    (rule "commute_or_2" (formula "27") (term "0"))
                                    (rule "commute_or_2" (formula "26") (term "0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "5"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "6"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "64"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,0,0,0,0,0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "67"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_or" (formula "53") (term "0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0"))
                                    (rule "commute_or" (formula "51") (term "0,0"))
                                    (rule "commute_or" (formula "50") (term "0,0"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or" (formula "48") (term "0,0"))
                                    (rule "commute_or" (formula "43") (term "0,0"))
                                    (rule "commute_or" (formula "42") (term "0,0"))
                                    (rule "commute_or" (formula "41") (term "0,0"))
                                    (rule "commute_or" (formula "40") (term "0,0"))
                                    (rule "commute_or" (formula "39") (term "0,0"))
                                    (rule "commute_or" (formula "38") (term "0,0"))
                                    (rule "andRight" (formula "83"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "83"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "83"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "83"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "83"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "83"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "83") (inst "sk=i_108"))
                                                      (rule "orRight" (formula "83"))
                                                      (rule "notRight" (formula "84"))
                                                      (rule "orRight" (formula "84"))
                                                      (rule "inEqSimp_geqRight" (formula "85"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "85"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_354"))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "24"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "24"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")) (ifInst ""  (formula "24")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "71"))
                                                      (rule "allLeft" (formula "24") (inst "t=i_108"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "24") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "83") (inst "sk=i_107"))
                                                      (rule "orRight" (formula "83"))
                                                      (rule "notRight" (formula "84"))
                                                      (rule "orRight" (formula "84"))
                                                      (rule "inEqSimp_geqRight" (formula "85"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "85"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_353"))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                      (rule "simplifySelectOfCreate" (formula "3"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")) (ifInst ""  (formula "13")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "72"))
                                                      (rule "allLeft" (formula "26") (inst "t=i_107"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "26") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "26") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "26") (term "0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "closeFalse" (formula "26"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "83") (inst "sk=i_106"))
                                                   (rule "orRight" (formula "83"))
                                                   (rule "notRight" (formula "84"))
                                                   (rule "orRight" (formula "84"))
                                                   (rule "inEqSimp_geqRight" (formula "85"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "85"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_352"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")) (ifInst ""  (formula "8")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "73"))
                                                   (rule "allLeft" (formula "28") (inst "t=i_106"))
                                                   (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "28") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "28"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "83") (inst "sk=i_105"))
                                                (rule "orRight" (formula "83"))
                                                (rule "notRight" (formula "84"))
                                                (rule "orRight" (formula "84"))
                                                (rule "inEqSimp_geqRight" (formula "85"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "85"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_351"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "31"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "31"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")) (ifInst ""  (formula "31")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "74"))
                                                (rule "allLeft" (formula "31") (inst "t=i_105"))
                                                (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "31") (term "0,0,1"))
                                                (rule "leq_literals" (formula "31") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "31"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "83") (inst "sk=i_104"))
                                             (rule "orRight" (formula "83"))
                                             (rule "notRight" (formula "84"))
                                             (rule "orRight" (formula "84"))
                                             (rule "inEqSimp_geqRight" (formula "85"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "85"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_350"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "76")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "76")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "76")) (ifInst ""  (formula "34")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "75"))
                                             (rule "allLeft" (formula "34") (inst "t=i_104"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "34") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "2"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "inEqSimp_homoInEq1" (formula "34"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0"))
                                             (rule "leq_literals" (formula "34"))
                                             (rule "closeFalse" (formula "34"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "83") (inst "sk=i_103"))
                                          (rule "orRight" (formula "83"))
                                          (rule "notRight" (formula "84"))
                                          (rule "orRight" (formula "84"))
                                          (rule "inEqSimp_geqRight" (formula "85"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "85"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_349"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "39"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")) (ifInst ""  (formula "7")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "76"))
                                          (rule "allLeft" (formula "36") (inst "t=i_103"))
                                          (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "36") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "2"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "inEqSimp_homoInEq1" (formula "36"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                          (rule "add_literals" (formula "36") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0"))
                                          (rule "leq_literals" (formula "36"))
                                          (rule "closeFalse" (formula "36"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "83") (inst "sk=f_13"))
                                       (rule "allRight" (formula "83") (inst "sk=o_13"))
                                       (rule "orRight" (formula "83"))
                                       (rule "pullOutSelect" (formula "84") (term "0") (inst "selectSK=f_13_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "85"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_2"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_3"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_4"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_5"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "71"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_6"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "89"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_7"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "53"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "43"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_8"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "44"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_9"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "93")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "9") (term "0,0"))
                                       (rule "commute_and" (formula "8") (term "0,0"))
                                       (rule "commute_and" (formula "7") (term "0,0"))
                                       (rule "commute_and" (formula "6") (term "0,0"))
                                       (rule "commute_and" (formula "5") (term "0,0"))
                                       (rule "commute_and" (formula "4") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "67"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "67"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "66")))
                                          (rule "replace_known_right" (formula "94") (term "0,0") (ifseqformula "65"))
                                          (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "66")))
                                          (rule "closeTrue" (formula "94"))
                                       )
                                       (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_getSignature_0«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "66"))
                                             (rule "orRight" (formula "66"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "95") (term "0,0") (ifseqformula "64"))
                                             (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "65")))
                                             (rule "closeTrue" (formula "95"))
                                          )
                                          (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_getSignature_0«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "cut_direct" (formula "92") (term "0,0"))
                                             (branch "CUT: o_13 = null TRUE"
                                                (builtin "One Step Simplification" (formula "93"))
                                                (rule "false_right" (formula "93"))
                                                (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "66"))
                                                (rule "false_right" (formula "66"))
                                                (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "false_right" (formula "65"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "90"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "90") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "72"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "71"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "70"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "69"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "68"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "86") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "67"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "84"))
                                                (rule "applyEqRigid" (formula "84") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "84"))
                                                (rule "closeTrue" (formula "84"))
                                             )
                                             (branch "CUT: o_13 = null FALSE"
                                                (builtin "One Step Simplification" (formula "93"))
                                                (rule "notRight" (formula "93"))
                                                (rule "replace_known_left" (formula "66") (term "0,0,1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "93")))
                                                (rule "false_right" (formula "66"))
                                                (rule "replace_known_left" (formula "65") (term "0,0,0,1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "92")))
                                                (rule "false_right" (formula "65"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch " f_13 = java.lang.Object::<created> ∧ o_13 = strPool(\"Wrong signature\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "88") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "88"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "88") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                                                   (rule "replace_known_right" (formula "4") (term "1,1,0,0") (ifseqformula "86"))
                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "69")))
                                                   (rule "applyEqReverse" (formula "87") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "86") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "86") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "86"))
                                                )
                                                (branch " f_13 = java.lang.Object::<created> ∧ o_13 = strPool(\"Wrong signature\") FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_13 = java.lang.Object::<created> ∧ o_13 = m_11 TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "65") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "65"))
                                                      (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEqRigid" (formula "91") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "91") (term "0") (ifseqformula "20"))
                                                      (rule "eqSymm" (formula "91"))
                                                      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEq" (formula "62") (term "0") (ifseqformula "3"))
                                                      (rule "sortsDisjointModuloNull" (formula "62"))
                                                      (rule "eqSymm" (formula "62") (term "1"))
                                                      (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "88")))
                                                      (rule "false_right" (formula "62"))
                                                      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "89") (term "0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "88") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "87"))
                                                      (rule "close" (formula "87") (ifseqformula "1"))
                                                   )
                                                   (branch "f_13 = java.lang.Object::<created> ∧ o_13 = m_11 FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_13 = Throwable::$cause ∧ o_13 = m_11 TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "false_right" (formula "64"))
                                                         (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "false_right" (formula "63"))
                                                         (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "88") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEqRigid" (formula "87") (term "2,0") (ifseqformula "2"))
                                                         (rule "narrowSelectType" (formula "87") (term "0") (ifseqformula "17"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "64") (ifseqformula "1"))
                                                      )
                                                      (branch "f_13 = Throwable::$cause ∧ o_13 = m_11 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "f_13 = Throwable::$message ∧ o_13 = m_11 TRUE"
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "64"))
                                                            (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "63"))
                                                            (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                            (builtin "One Step Simplification" (formula "65"))
                                                            (rule "false_right" (formula "65"))
                                                            (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "91") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "false_right" (formula "61"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                            (rule "close" (formula "65") (ifseqformula "1"))
                                                         )
                                                         (branch "f_13 = Throwable::$message ∧ o_13 = m_11 FALSE"
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "f_13 = MalformedData::$errCode ∧ o_13 = m_11 TRUE"
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "63"))
                                                               (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "64"))
                                                               (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "false_right" (formula "65"))
                                                               (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "applyEqReverse" (formula "92") (term "1") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                               (rule "close" (formula "68") (ifseqformula "1"))
                                                            )
                                                            (branch "f_13 = MalformedData::$errCode ∧ o_13 = m_11 FALSE"
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "ifthenelse_split" (formula "2") (term "0"))
                                                               (branch "f_13 = MalformedData::$description ∧ o_13 = m_11 TRUE"
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "false_right" (formula "65"))
                                                                  (rule "applyEqRigid" (formula "61") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "false_right" (formula "61"))
                                                                  (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "false_right" (formula "62"))
                                                                  (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "false_right" (formula "62"))
                                                                  (rule "applyEqRigid" (formula "89") (term "2,0") (ifseqformula "2"))
                                                                  (rule "narrowSelectType" (formula "89") (term "0") (ifseqformula "18"))
                                                                  (rule "eqSymm" (formula "89"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "89") (term "0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "eqSymm" (formula "88"))
                                                                  (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "false_right" (formula "60"))
                                                                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                                  (rule "close" (formula "64") (ifseqformula "1"))
                                                               )
                                                               (branch "f_13 = MalformedData::$description ∧ o_13 = m_11 FALSE"
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                  (branch "f_13 = java.lang.Object::<initialized> ∧ o_13 = m_11 TRUE"
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "94") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "64"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "false_right" (formula "65"))
                                                                     (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "false_right" (formula "63"))
                                                                     (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "false_right" (formula "61"))
                                                                     (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "false_right" (formula "61"))
                                                                     (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "false_right" (formula "60"))
                                                                     (rule "applyEq" (formula "87") (term "0") (ifseqformula "3"))
                                                                     (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "false_right" (formula "60"))
                                                                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                                     (rule "close" (formula "64") (ifseqformula "1"))
                                                                  )
                                                                  (branch "f_13 = java.lang.Object::<initialized> ∧ o_13 = m_11 FALSE"
                                                                     (rule "close" (formula "93") (ifseqformula "2"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "ClassCastException (!(m_8 instanceof java.lang.Throwable))"
                              (builtin "One Step Simplification" (formula "54"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "closeTrue" (formula "53"))
                           )
                        )
                        (branch "if m_8 instanceof java.lang.Throwable false"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Null Reference (m_9 = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "if x_9 false"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "methodCallReturn" (formula "44") (term "1"))
                  (rule "assignment" (formula "44") (term "1"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "methodCallEmpty" (formula "44") (term "1"))
                  (rule "tryEmpty" (formula "44") (term "1"))
                  (rule "emptyModality" (formula "44") (term "1"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "andRight" (formula "44") (userinteraction))
                  (branch "Case 1"
                     (rule "andRight" (formula "44") (userinteraction))
                     (branch "Case 1"
                        (rule "applyEq" (formula "29") (term "1") (ifseqformula "1") (userinteraction))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "pullOut" (formula "29") (term "0") (inst "sk=seqDef_2") (userinteraction))
                        (rule "pullOut" (formula "30") (term "1") (inst "sk=seqDef_3") (userinteraction))
                        (rule "cut" (inst "cutFormula=  seqDef_2
= array2seq(heapAfter_getSignature_0, result_3)") (userinteraction))
                        (branch "CUT: seqDef_2 = array2seq(heapAfter_getSignature_0, result_3) TRUE"
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "1") (userinteraction))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "25") (userinteraction))
                           (rule "cut" (inst "cutFormula=seqDef_3 = array2seq(heapAfter_getPayLoad, result_0)") (userinteraction))
                           (branch "CUT: seqDef_3 = array2seq(heapAfter_getPayLoad, result_0) TRUE"
                              (rule "applyEq" (formula "33") (term "1") (ifseqformula "1") (userinteraction))
                              (rule "applyEq" (formula "33") (term "1") (ifseqformula "20") (userinteraction))
                              (rule "pullOut" (formula "48") (term "0,0") (inst "sk=seqDef_4") (userinteraction))
                              (rule "pullOut" (formula "49") (term "0,1") (inst "sk=seqDef_5") (userinteraction))
                              (rule "cut" (inst "cutFormula=array2seq(heapAfter_getSignature_0, data) = seqDef_4") (userinteraction))
                              (branch "CUT: array2seq(heapAfter_getSignature_0, data) = seqDef_4 TRUE"
                                 (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "1") (userinteraction))
                                 (rule "cut" (inst "cutFormula=array2seq(heapAfter_getPayLoad, data) = seqDef_5") (userinteraction))
                                 (branch "CUT: array2seq(heapAfter_getPayLoad, data) = seqDef_5 TRUE"
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1") (ifseqformula "27"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1") (ifseqformula "21"))
                                    (rule "andLeft" (formula "31"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "notLeft" (formula "33"))
                                    (rule "notLeft" (formula "26"))
                                    (rule "eqSymm" (formula "5"))
                                    (rule "eqSymm" (formula "6"))
                                    (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "1"))
                                    (rule "close" (formula "54") (ifseqformula "37"))
                                 )
                                 (branch "CUT: array2seq(heapAfter_getPayLoad, data) = seqDef_5 FALSE"
                                    (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "2") (userinteraction))
                                    (rule "array2seqDef" (formula "37") (term "0") (inst "u=u") (userinteraction))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "37") (inst "iv=iv") (userinteraction))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1") (ifseqformula "26"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1") (ifseqformula "20"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "notLeft" (formula "32"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "eqSymm" (formula "39") (term "0"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "eqSymm" (formula "5"))
                                    (rule "eqSymm" (formula "39") (term "1,0,1"))
                                    (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "lenOfSeqDef" (formula "39") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,0,1"))
                                    (rule "times_zero_2" (formula "39") (term "1,1,1,1,0,0,1"))
                                    (rule "add_zero_right" (formula "39") (term "1,1,1,0,0,1"))
                                    (rule "lenOfSeqDef" (formula "39") (term "0,0"))
                                    (rule "eqSymm" (formula "39") (term "0"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,0"))
                                    (rule "times_zero_2" (formula "39") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,1,0"))
                                    (rule "getOfSeqDef" (formula "39") (term "0,1,0,1"))
                                    (rule "castDel" (formula "39") (term "2,0,1,0,1"))
                                    (rule "castDel" (formula "39") (term "1,0,1,0,1"))
                                    (rule "add_zero_right" (formula "39") (term "0,2,1,0,1,0,1"))
                                    (rule "eqSymm" (formula "39") (term "1,0,1"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,0,1,1,0,1"))
                                    (rule "mul_literals" (formula "39") (term "1,1,1,0,1,1,0,1"))
                                    (rule "add_zero_right" (formula "39") (term "1,1,0,1,1,0,1"))
                                    (rule "lenOfSeqDef" (formula "39") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,0,0"))
                                    (rule "times_zero_2" (formula "39") (term "1,1,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "allRight" (formula "39") (inst "sk=iv_17"))
                                    (rule "impRight" (formula "39"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "replace_known_left" (formula "41") (term "0,0,1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "getOfSeqDef" (formula "41") (term "0"))
                                    (rule "castDel" (formula "41") (term "2,0"))
                                    (rule "castDel" (formula "41") (term "1,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,2,1,0"))
                                    (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_elimSub" (formula "41") (term "1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                    (rule "add_zero_right" (formula "41") (term "1,0,0"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "31") (term "0") (ifseqformula "7"))
                                    (rule "eqSymm" (formula "31"))
                                    (rule "applyEq" (formula "38") (term "0") (ifseqformula "31"))
                                    (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "25") (term "1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "38") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0,0,0"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "2") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "41") (term "0,1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "2")))
                                    (rule "array2seqDef" (formula "25") (term "0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "3") (term "0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "7") (term "0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "6") (term "0,0") (inst "u=u"))
                                    (rule "eqSeqDef2" (formula "37") (inst "iv=iv") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "eqSeqDef2" (formula "36") (inst "iv=iv") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "eqSeqDef2" (formula "5") (inst "iv=iv") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "eqSeqDef2" (formula "4") (inst "iv=iv") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "eqSeqDef2" (formula "23") (inst "iv=iv") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "eqSeqDef2" (formula "28") (inst "iv=iv") (ifseqformula "5"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "eqSymm" (formula "29") (term "1,0"))
                                    (rule "eqSymm" (formula "28"))
                                    (rule "getOfSeqDef" (formula "29") (term "0,1,0"))
                                    (rule "castDel" (formula "29") (term "2,0,1,0"))
                                    (rule "castDel" (formula "29") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,2,1,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "1,1,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "29") (term "1,1,0,0,1,0"))
                                    (rule "lenOfSeqDef" (formula "28") (term "0"))
                                    (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                    (rule "times_zero_2" (formula "28") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "28") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
                                    (rule "eqSeqDef2" (formula "5") (inst "iv=iv") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "eqSeqDef2" (formula "3") (inst "iv=iv") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_941"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "19"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "CUT: array2seq(heapAfter_getSignature_0, data) = seqDef_4 FALSE"
                                 (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "2") (userinteraction))
                                 (rule "array2seqDef" (formula "36") (term "0") (inst "u=u") (userinteraction))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "36") (inst "iv=iv") (userinteraction))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1") (ifseqformula "25"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1") (ifseqformula "19"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "23"))
                                 (rule "notLeft" (formula "31"))
                                 (rule "notLeft" (formula "24"))
                                 (rule "eqSymm" (formula "38") (term "0"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "eqSymm" (formula "38") (term "1,0,1"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "lenOfSeqDef" (formula "38") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "38") (term "1,1,1,0,0,1"))
                                 (rule "times_zero_2" (formula "38") (term "1,1,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "1,1,1,0,0,1"))
                                 (rule "lenOfSeqDef" (formula "38") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "38") (term "1,1,0"))
                                 (rule "times_zero_2" (formula "38") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "1,1,0"))
                                 (rule "lenOfSeqDef" (formula "38") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "38") (term "1,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "allRight" (formula "38") (inst "sk=iv_16"))
                                 (rule "impRight" (formula "38"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "getOfSeqDef" (formula "40") (term "1"))
                                 (rule "castDel" (formula "40") (term "2,1"))
                                 (rule "castDel" (formula "40") (term "1,1"))
                                 (rule "add_zero_right" (formula "40") (term "0,2,1,1"))
                                 (rule "replace_known_left" (formula "40") (term "0,0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "polySimp_elimSub" (formula "40") (term "1,0,1"))
                                 (rule "times_zero_2" (formula "40") (term "1,1,0,1"))
                                 (rule "add_zero_right" (formula "40") (term "1,0,1"))
                                 (rule "getOfSeqDef" (formula "40") (term "0"))
                                 (rule "castDel" (formula "40") (term "2,0"))
                                 (rule "castDel" (formula "40") (term "1,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,2,1,0"))
                                 (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "polySimp_elimSub" (formula "40") (term "1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "40") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0"))
                                 (rule "eqSymm" (formula "40"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1"))
                                 (rule "eqSymm" (formula "40"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "6"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "5"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "applyEq" (formula "37") (term "0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "37") (term "1") (ifseqformula "24"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "2") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "replace_known_left" (formula "40") (term "0,1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "2")))
                                 (rule "array2seqDef" (formula "5") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "6") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "30") (term "0,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "24") (term "0,0") (inst "u=u"))
                                 (rule "eqSeqDef2" (formula "36") (inst "iv=iv") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "eqSeqDef2" (formula "3") (inst "iv=iv") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "eqSeqDef2" (formula "34") (inst "iv=iv") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "eqSeqDef2" (formula "3") (inst "iv=iv") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "eqSeqDef2" (formula "3") (inst "iv=iv") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "eqSeqDef2" (formula "3") (inst "iv=iv") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_940"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                                 (rule "eqSymm" (formula "35"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "9"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "CUT: seqDef_3 = array2seq(heapAfter_getPayLoad, result_0) FALSE"
                              (rule "hide_right" (formula "48") (userinteraction))
                              (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "31") (userinteraction))
                              (rule "array2seqDef" (formula "33") (term "1") (inst "u=u") (userinteraction))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "33") (inst "iv=iv") (userinteraction))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "22"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "16"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1") (ifseqformula "16"))
                              (rule "andLeft" (formula "26"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "28"))
                              (rule "notLeft" (formula "21"))
                              (rule "eqSymm" (formula "1"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "lenOfSeqDef" (formula "35") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "35") (term "1,1,0"))
                              (rule "times_zero_2" (formula "35") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "35") (term "1,1,0"))
                              (rule "getOfSeqDef" (formula "35") (term "0,1,0,1"))
                              (rule "castDel" (formula "35") (term "1,0,1,0,1"))
                              (rule "castDel" (formula "35") (term "2,0,1,0,1"))
                              (rule "add_zero_right" (formula "35") (term "0,2,1,0,1,0,1"))
                              (rule "eqSymm" (formula "35") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1,1,0,1"))
                              (rule "times_zero_2" (formula "35") (term "1,1,1,0,1,1,0,1"))
                              (rule "add_zero_right" (formula "35") (term "1,1,0,1,1,0,1"))
                              (rule "lenOfSeqDef" (formula "35") (term "1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "35") (term "1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "35") (term "1,1,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "35") (term "1,1,1,0,0,1"))
                              (rule "lenOfSeqDef" (formula "35") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "35") (term "1,0,0"))
                              (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "35") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "allRight" (formula "35") (inst "sk=iv_15"))
                              (rule "impRight" (formula "35"))
                              (rule "andLeft" (formula "1"))
                              (rule "replace_known_left" (formula "37") (term "0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "getOfSeqDef" (formula "37") (term "0"))
                              (rule "castDel" (formula "37") (term "2,0"))
                              (rule "castDel" (formula "37") (term "1,0"))
                              (rule "add_zero_right" (formula "37") (term "0,2,1,0"))
                              (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "polySimp_elimSub" (formula "37") (term "1,0,0"))
                              (rule "times_zero_2" (formula "37") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "37") (term "1,0,0"))
                              (rule "eqSymm" (formula "37"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                              (rule "eqSymm" (formula "37"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "37") (term "0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                              (rule "eqSymm" (formula "37"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1"))
                              (rule "eqSymm" (formula "37"))
                              (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                              (rule "eqSymm" (formula "37"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "27"))
                              (rule "applyEq" (formula "34") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                              (rule "eqSymm" (formula "37"))
                              (rule "polySimp_elimOne" (formula "37") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                              (rule "eqSymm" (formula "37"))
                              (rule "array2seqDef" (formula "21") (term "0") (inst "u=u"))
                              (rule "array2seqDef" (formula "21") (term "0,1") (inst "u=u"))
                              (rule "array2seqDef" (formula "3") (term "0") (inst "u=u"))
                              (rule "array2seqDef" (formula "27") (term "0,0") (inst "u=u"))
                              (rule "eqSeqDef2" (formula "33") (inst "iv=iv") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "eqSeqDef2" (formula "32") (inst "iv=iv") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "true_left" (formula "32"))
                              (rule "eqSeqDef2" (formula "21") (inst "iv=iv") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "eqSeqDef2" (formula "3") (inst "iv=iv") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "pullOutSelect" (formula "33") (term "1,1") (inst "selectSK=arr_938"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "6") (ifseqformula "32"))
                              (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "17") (ifseqformula "32"))
                              (rule "pullOutSelect" (formula "34") (term "1,0") (inst "selectSK=arr_939"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "24"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                              (rule "replaceKnownSelect_taclet1000100010_4" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "closeTrue" (formula "35"))
                           )
                        )
                        (branch "CUT: seqDef_2 = array2seq(heapAfter_getSignature_0, result_3) FALSE"
                           (rule "hide_right" (formula "47") (userinteraction))
                           (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "29") (userinteraction))
                           (rule "array2seqDef" (formula "32") (term "1") (inst "u=u") (userinteraction))
                           (rule "equalityToSeqGetAndSeqLenRight" (formula "32") (inst "iv=iv") (userinteraction))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1") (ifseqformula "15"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "15"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "19"))
                           (rule "notLeft" (formula "27"))
                           (rule "notLeft" (formula "20"))
                           (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "getOfSeqDef" (formula "34") (term "1,1,0,1"))
                           (rule "castDel" (formula "34") (term "2,1,1,0,1"))
                           (rule "castDel" (formula "34") (term "1,1,1,0,1"))
                           (rule "add_zero_right" (formula "34") (term "0,2,1,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "34") (term "1,1,0,1,1,0,1"))
                           (rule "times_zero_2" (formula "34") (term "1,1,1,0,1,1,0,1"))
                           (rule "add_zero_right" (formula "34") (term "1,1,0,1,1,0,1"))
                           (rule "lenOfSeqDef" (formula "34") (term "0,0"))
                           (rule "eqSymm" (formula "34") (term "0"))
                           (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                           (rule "mul_literals" (formula "34") (term "1,1,1,0"))
                           (rule "add_zero_right" (formula "34") (term "1,1,0"))
                           (rule "getOfSeqDef" (formula "34") (term "0,1,0,1"))
                           (rule "castDel" (formula "34") (term "2,0,1,0,1"))
                           (rule "castDel" (formula "34") (term "1,0,1,0,1"))
                           (rule "add_zero_right" (formula "34") (term "0,2,1,0,1,0,1"))
                           (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0,1,0,1"))
                           (rule "mul_literals" (formula "34") (term "1,1,1,0,0,1,0,1"))
                           (rule "add_zero_right" (formula "34") (term "1,1,0,0,1,0,1"))
                           (rule "lenOfSeqDef" (formula "34") (term "1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "34") (term "1,1,1,0,0,1"))
                           (rule "times_zero_2" (formula "34") (term "1,1,1,1,0,0,1"))
                           (rule "add_zero_right" (formula "34") (term "1,1,1,0,0,1"))
                           (rule "lenOfSeqDef" (formula "34") (term "0,0"))
                           (rule "polySimp_elimSub" (formula "34") (term "1,0,0"))
                           (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                           (rule "add_zero_right" (formula "34") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "allRight" (formula "34") (inst "sk=iv_14"))
                           (rule "impRight" (formula "34"))
                           (rule "andLeft" (formula "1"))
                           (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "1")))
                           (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "36") (term "0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0"))
                           (rule "eqSymm" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1"))
                           (rule "eqSymm" (formula "36"))
                           (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "36") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                           (rule "array2seqDef" (formula "20") (term "0,1") (inst "u=u"))
                           (rule "eqSymm" (formula "20"))
                           (rule "array2seqDef" (formula "26") (term "0,1") (inst "u=u"))
                           (rule "eqSymm" (formula "26"))
                           (rule "eqSeqDef2" (formula "32") (inst "iv=iv") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "eqSeqDef2" (formula "31") (inst "iv=iv") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "array2seqDef" (formula "20") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "20"))
                           (rule "array2seqDef" (formula "26") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "26"))
                           (rule "eqSeqDef2" (formula "26") (inst "iv=iv") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "eqSeqDef2" (formula "20") (inst "iv=iv") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_937"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                           (rule "eqSymm" (formula "33"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "closeTrue" (formula "33"))
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "44") (userinteraction))
                        (branch
                           (rule "cut" (inst "cutFormula=  array2seq(heapAfter_getPayLoad, result_0)
= seqDef{int u;}(Z(0(#)),
                 length(result_0),
                 any::select(heapAfter_verify_0,
                             result_0,
                             arr(u)))") (userinteraction))
                           (branch "CUT: array2seq(heapAfter_getPayLoad, result_0) = seqDef{int u;}(0, result_0.length, result_0.arr(u)@heapAfter_verify_0) TRUE"
                              (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1") (userinteraction))
                              (rule "applyEq" (formula "45") (term "0") (ifseqformula "19") (userinteraction))
                              (rule "array2seqDef" (formula "45") (term "0,0") (inst "u=u") (userinteraction))
                              (rule "pullOut" (formula "45") (term "0,0") (inst "sk=seqDef_0") (userinteraction))
                              (rule "pullOut" (formula "46") (term "0,1") (inst "sk=seqDef_1") (userinteraction))
                              (rule "cut" (inst "cutFormula=seqDef_0 = seqDef_1") (userinteraction))
                              (branch "CUT: seqDef_0 = seqDef_1 TRUE"
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1") (ifseqformula "25"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1") (ifseqformula "19"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "23"))
                                 (rule "notLeft" (formula "31"))
                                 (rule "notLeft" (formula "24"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "eqSymm" (formula "50"))
                                 (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "applyEq" (formula "4") (term "1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "closeTrue" (formula "50"))
                              )
                              (branch "CUT: seqDef_0 = seqDef_1 FALSE"
                                 (rule "hide_right" (formula "48") (userinteraction))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "2") (userinteraction))
                                 (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "1") (userinteraction))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "33") (inst "iv=iv") (userinteraction))
                                 (rule "andRight" (formula "33") (userinteraction))
                                 (branch "Case 1"
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1") (ifseqformula "24"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1") (ifseqformula "18"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "notLeft" (formula "30"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "lenOfSeqDef" (formula "35") (term "0"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "polySimp_elimSub" (formula "35") (term "1,1"))
                                    (rule "times_zero_2" (formula "35") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "35") (term "1,1"))
                                    (rule "lenOfSeqDef" (formula "35") (term "0"))
                                    (rule "polySimp_elimSub" (formula "35") (term "1,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "35") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "closeTrue" (formula "35"))
                                 )
                                 (branch "Case 2"
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1") (ifseqformula "24"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1") (ifseqformula "18"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "notLeft" (formula "30"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "allRight" (formula "35") (inst "sk=iv_13"))
                                    (rule "impRight" (formula "35"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "5"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "lenOfSeqDef" (formula "2") (term "1"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                    (rule "times_zero_2" (formula "2") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "2") (term "1,1"))
                                    (rule "getOfSeqDef" (formula "37") (term "1"))
                                    (rule "castDel" (formula "37") (term "1,1"))
                                    (rule "castDel" (formula "37") (term "2,1"))
                                    (rule "add_zero_right" (formula "37") (term "0,2,1,1"))
                                    (rule "replace_known_left" (formula "37") (term "0,0,1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "polySimp_elimSub" (formula "37") (term "1,0,1"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,1"))
                                    (rule "add_zero_right" (formula "37") (term "1,0,1"))
                                    (rule "getOfSeqDef" (formula "37") (term "0"))
                                    (rule "castDel" (formula "37") (term "1,0"))
                                    (rule "castDel" (formula "37") (term "2,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,2,1,0"))
                                    (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "polySimp_elimSub" (formula "37") (term "1,0,0"))
                                    (rule "times_zero_2" (formula "37") (term "1,1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "applyEq" (formula "5") (term "1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "34") (term "1") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "2") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "2")))
                                    (rule "array2seqDef" (formula "23") (term "0,1") (inst "u=u"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "array2seqDef" (formula "29") (term "0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "29") (term "0,1") (inst "u=u"))
                                    (rule "array2seqDef" (formula "5") (term "0,1") (inst "u=u"))
                                    (rule "eqSeqDef2" (formula "3") (inst "iv=iv") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "eqSeqDef2" (formula "3") (inst "iv=iv") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "array2seqDef" (formula "21") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "21"))
                                    (rule "eqSeqDef2" (formula "21") (inst "iv=iv") (ifseqformula "3"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "eqSymm" (formula "21"))
                                    (rule "eqSymm" (formula "22") (term "1,0"))
                                    (rule "lenOfSeqDef" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "22") (term "1,1,1,0,0"))
                                    (rule "times_zero_2" (formula "22") (term "1,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "1,1,1,0,0"))
                                    (rule "lenOfSeqDef" (formula "21") (term "0"))
                                    (rule "eqSymm" (formula "21"))
                                    (rule "polySimp_elimSub" (formula "21") (term "1,1"))
                                    (rule "times_zero_2" (formula "21") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "21") (term "1,1"))
                                    (rule "getOfSeqDef" (formula "22") (term "0,1,0"))
                                    (rule "castDel" (formula "22") (term "2,0,1,0"))
                                    (rule "castDel" (formula "22") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0"))
                                    (rule "eqSymm" (formula "22") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0"))
                                    (rule "lenOfSeqDef" (formula "21") (term "0"))
                                    (rule "polySimp_elimSub" (formula "21") (term "1,0"))
                                    (rule "times_zero_2" (formula "21") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "21") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "getOfSeqDef" (formula "21") (term "0,1,0"))
                                    (rule "castDel" (formula "21") (term "2,0,1,0"))
                                    (rule "castDel" (formula "21") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,2,1,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,1,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,0"))
                                    (rule "eqSeqDef2" (formula "27") (inst "iv=iv") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "eqSeqDef2" (formula "3") (inst "iv=iv") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "pullOutSelect" (formula "33") (term "1") (inst "selectSK=arr_935"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "9")))
                                    (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "33") (term "1") (ifseqformula "5") (ifseqformula "47"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_936"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                    (rule "replaceKnownSelect_taclet110010100010_4" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet110010100010_5" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "33") (term "0") (ifseqformula "5") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "closeTrue" (formula "33"))
                                 )
                              )
                           )
                           (branch
                              (rule "hide_right" (formula "45") (userinteraction))
                              (rule "array2seqDef" (formula "30") (term "0") (inst "u=u") (userinteraction))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "30") (inst "iv=iv") (userinteraction))
                              (rule "andRight" (formula "30") (userinteraction))
                              (branch "Case 1"
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1") (ifseqformula "15"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "15"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "notLeft" (formula "26"))
                                 (rule "eqSymm" (formula "32"))
                                 (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "lenOfSeqDef" (formula "32") (term "1"))
                                 (rule "polySimp_elimSub" (formula "32") (term "1,1"))
                                 (rule "times_zero_2" (formula "32") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "32") (term "1,1"))
                                 (rule "lenOfSeqDef" (formula "32") (term "0"))
                                 (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                 (rule "mul_literals" (formula "32") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "32") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "closeTrue" (formula "32"))
                              )
                              (branch "Case 2"
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1") (ifseqformula "15"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "15"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "notLeft" (formula "27"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "allRight" (formula "32") (inst "sk=iv_12"))
                                 (rule "impRight" (formula "32"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "lenOfSeqDef" (formula "2") (term "1"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                 (rule "times_zero_2" (formula "2") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "2") (term "1,1"))
                                 (rule "getOfSeqDef" (formula "34") (term "0"))
                                 (rule "castDel" (formula "34") (term "1,0"))
                                 (rule "castDel" (formula "34") (term "2,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,2,1,0"))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "replace_known_left" (formula "34") (term "0,0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,1,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "1,0,1"))
                                 (rule "getOfSeqDef" (formula "34") (term "0"))
                                 (rule "castDel" (formula "34") (term "1,0"))
                                 (rule "castDel" (formula "34") (term "2,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,2,1,0"))
                                 (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "1,0,0"))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0"))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1"))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "applyEq" (formula "31") (term "1") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "array2seqDef" (formula "26") (term "0,1") (inst "u=u"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "array2seqDef" (formula "20") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "20") (term "0,1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "26") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "eqSeqDef2" (formula "26") (inst "iv=iv") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "eqSeqDef2" (formula "20") (inst "iv=iv") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_934"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "closeTrue" (formula "33"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1") (ifseqformula "15"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "15"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "19"))
                           (rule "notLeft" (formula "27"))
                           (rule "notLeft" (formula "20"))
                           (rule "replace_known_right" (formula "46") (term "0,1") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "applyEq" (formula "29") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "array2seqDef" (formula "18") (term "0") (inst "u=u"))
                           (rule "array2seqDef" (formula "24") (term "0,1") (inst "u=u"))
                           (rule "eqSymm" (formula "24"))
                           (rule "array2seqDef" (formula "18") (term "0,1") (inst "u=u"))
                           (rule "array2seqDef" (formula "24") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "24"))
                           (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "eqSeqDef2" (formula "23") (inst "iv=iv") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "23") (ifseqformula "5"))
                           (rule "replaceKnownSelect_taclet0010_0" (formula "23") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010_2" (formula "23") (term "0,0,1,0"))
                           (rule "andLeft" (formula "23"))
                           (rule "notLeft" (formula "24"))
                           (rule "andLeft" (formula "23"))
                           (rule "notLeft" (formula "24"))
                           (rule "andLeft" (formula "23"))
                           (rule "andLeft" (formula "23"))
                           (rule "notLeft" (formula "25"))
                           (rule "andLeft" (formula "23"))
                           (rule "notLeft" (formula "25"))
                           (rule "andLeft" (formula "23"))
                           (rule "andLeft" (formula "23"))
                           (rule "andLeft" (formula "23"))
                           (rule "andLeft" (formula "23"))
                           (rule "andLeft" (formula "23"))
                           (rule "andLeft" (formula "23"))
                           (rule "notLeft" (formula "23"))
                           (rule "notLeft" (formula "23"))
                           (rule "nonNull" (formula "28") (inst "i=i"))
                           (rule "greater_literals" (formula "28") (term "0,1"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "sub_literals" (formula "28") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "notLeft" (formula "28"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "27") (inst "i=i"))
                           (rule "greater_literals" (formula "27") (term "0,1"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "sub_literals" (formula "27") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "andLeft" (formula "27"))
                           (rule "notLeft" (formula "27"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "26") (inst "i=i"))
                           (rule "greater_literals" (formula "26") (term "0,1"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "sub_literals" (formula "26") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "andLeft" (formula "26"))
                           (rule "notLeft" (formula "26"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "25") (inst "i=i"))
                           (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "greater_literals" (formula "25") (term "0,1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "notLeft" (formula "25"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "24") (inst "i=i"))
                           (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "greater_literals" (formula "24") (term "0,1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "andLeft" (formula "24"))
                           (rule "notLeft" (formula "24"))
                           (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "23") (inst "i=i"))
                           (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "greater_literals" (formula "23") (term "0,1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "andLeft" (formula "23"))
                           (rule "notLeft" (formula "23"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                           (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_13"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "5")))
                           (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_13"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "5")))
                           (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_13"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "5")))
                           (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_13"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "5")))
                           (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_13"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "5")))
                           (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_13"))
                           (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "28"))
                           (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "54")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "15"))
                           (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "54")) (ifInst ""  (formula "4")))
                           (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_13"))
                           (rule "applyEq" (formula "38") (term "0") (ifseqformula "27"))
                           (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                           (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "53")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "15"))
                           (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "53")) (ifInst ""  (formula "4")))
                           (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "27"))
                           (rule "hideAuxiliaryEq" (formula "27"))
                           (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_13"))
                           (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "37") (term "0") (ifseqformula "26"))
                           (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "52")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0") (ifseqformula "15"))
                           (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "52")) (ifInst ""  (formula "4")))
                           (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "26"))
                           (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "26"))
                           (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                           (rule "hideAuxiliaryEq" (formula "26"))
                           (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_13"))
                           (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
                           (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                           (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0") (ifseqformula "15"))
                           (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")) (ifInst ""  (formula "4")))
                           (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                           (rule "hideAuxiliaryEq" (formula "25"))
                           (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_13"))
                           (rule "applyEq" (formula "35") (term "0") (ifseqformula "24"))
                           (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                           (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "50")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0") (ifseqformula "15"))
                           (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "50")) (ifInst ""  (formula "4")))
                           (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                           (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "24"))
                           (rule "hideAuxiliaryEq" (formula "24"))
                           (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_13"))
                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "23"))
                           (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                           (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "49")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0") (ifseqformula "15"))
                           (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "49")) (ifInst ""  (formula "4")))
                           (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
                           (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_imp2or" (formula "27") (term "0"))
                           (rule "nnf_imp2or" (formula "26") (term "0"))
                           (rule "nnf_imp2or" (formula "25") (term "0"))
                           (rule "nnf_imp2or" (formula "24") (term "0"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "18") (ifseqformula "5"))
                           (rule "replaceKnownSelect_taclet110100010_4" (formula "18") (term "0,0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_5" (formula "18") (term "0,0,1"))
                           (rule "replaceKnownSelect_taclet0010_1" (formula "18") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010_2" (formula "18") (term "0,0,1,0"))
                           (rule "replaceKnownSelect_taclet110100010_7" (formula "18") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_8" (formula "18") (term "0,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet110100010_19" (formula "18") (term "1,1,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110100010_10" (formula "18") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_20" (formula "18") (term "1,1,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_11" (formula "18") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownSelect_taclet110100010_22" (formula "18") (term "1,1,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110100010_25" (formula "18") (term "1,1,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_23" (formula "18") (term "1,1,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110100010_28" (formula "18") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_26" (formula "18") (term "1,1,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110100010_31" (formula "18") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_29" (formula "18") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110100010_34" (formula "18") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_32" (formula "18") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_35" (formula "18") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110100010_13" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110100010_16" (formula "18") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_14" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_17" (formula "18") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "19"))
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "19"))
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "19"))
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "19"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "19"))
                           (rule "notLeft" (formula "18"))
                           (rule "nonNull" (formula "23") (inst "i=i"))
                           (rule "greater_literals" (formula "23") (term "0,1"))
                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "45")))
                           (rule "sub_literals" (formula "23") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "22") (inst "i=i"))
                           (rule "sub_literals" (formula "22") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "44")))
                           (rule "greater_literals" (formula "22") (term "0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "21") (inst "i=i"))
                           (rule "greater_literals" (formula "21") (term "0,1"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "43")))
                           (rule "sub_literals" (formula "21") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "20") (inst "i=i"))
                           (rule "greater_literals" (formula "20") (term "0,1"))
                           (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "42")))
                           (rule "sub_literals" (formula "20") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "19") (inst "i=i"))
                           (rule "sub_literals" (formula "19") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "41")))
                           (rule "greater_literals" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "18") (inst "i=i"))
                           (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "40")))
                           (rule "greater_literals" (formula "18") (term "0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "54") (ifseqformula "5"))
                           (rule "nonNull" (formula "54") (term "1,0,0,0,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "54") (term "0,1,1,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "sub_literals" (formula "54") (term "2,1,0,1,1,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "nonNull" (formula "54") (term "1,0,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "54") (term "0,1,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "sub_literals" (formula "54") (term "2,1,0,1,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "nonNull" (formula "54") (term "1,0,0,0,0") (inst "i=i"))
                           (rule "sub_literals" (formula "54") (term "2,1,0,1,1,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "greater_literals" (formula "54") (term "0,1,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1,1,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0"))
                           (rule "nonNull" (formula "54") (term "1,0,0,0,0,0,0,0,0,0") (inst "i=i"))
                           (rule "sub_literals" (formula "54") (term "2,1,0,1,1,1,0,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "greater_literals" (formula "54") (term "0,1,1,0,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "nonNull" (formula "54") (term "1,0,0,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "54") (term "0,1,1,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "sub_literals" (formula "54") (term "2,1,0,1,1,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,1,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "nonNull" (formula "54") (term "1,0,0,0,0,0,0,0,0") (inst "i=i"))
                           (rule "sub_literals" (formula "54") (term "2,1,0,1,1,1,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "greater_literals" (formula "54") (term "0,1,1,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "pullOutSelect" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_14"))
                           (rule "applyEq" (formula "55") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "replaceKnownSelect_taclet110100010_30" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_32" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "55") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "54") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "41"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "pullOutSelect" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_14"))
                           (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "55") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "replaceKnownSelect_taclet110100010_27" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_29" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "55") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "54") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "pullOutSelect" (formula "54") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_14"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "replaceKnownSelect_taclet110100010_15" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_17" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "54") (term "0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "46"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "pullOutSelect" (formula "54") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_14"))
                           (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "55") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "replaceKnownSelect_taclet110100010_33" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_35" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "55") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "54") (term "0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "pullOutSelect" (formula "54") (term "0,0,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_14"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "replaceKnownSelect_taclet110100010_3" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_5" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "54") (term "0,1") (ifseqformula "51"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "pullOutSelect" (formula "54") (term "0,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_14"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "replaceKnownSelect_taclet110100010_12" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_14" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "54") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "47"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "pullOutSelect" (formula "54") (term "0,1,1,1,0,0,1,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_14"))
                           (rule "applyEq" (formula "55") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "55") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "replaceKnownSelect_taclet110100010_21" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_23" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "55") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "54") (term "0,0,1,0,0,0,0") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "pullOutSelect" (formula "54") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_14"))
                           (rule "applyEq" (formula "55") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "55") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "replaceKnownSelect_taclet110100010_24" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_26" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "55") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "54") (term "0,0,1,0,0,0,0,0") (ifseqformula "43"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "pullOutSelect" (formula "54") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_14"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "replaceKnownSelect_taclet110100010_9" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_11" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,1,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "54") (term "0,1,0,0") (ifseqformula "48"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "pullOutSelect" (formula "54") (term "0,0,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_12"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "replaceKnownSelect_taclet0010_0" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010_2" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "54") (term "0,1") (ifseqformula "50"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "pullOutSelect" (formula "54") (term "1,0,0,1,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_14"))
                           (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "55") (term "0,0,0,1,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "replaceKnownSelect_taclet110100010_18" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_20" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,0,1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "55") (term "1,0,0,1,0,1,1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,1,1,1,0,0,1,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "54") (term "0,0,1,0") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "pullOutSelect" (formula "54") (term "0,0,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_14"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "replaceKnownSelect_taclet110100010_6" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110100010_8" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "54") (term "0,1") (ifseqformula "49"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_notAnd" (formula "33") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                           (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                           (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "32") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                           (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "31") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                           (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                           (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                           (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                           (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "23") (term "0"))
                           (rule "nnf_imp2or" (formula "22") (term "0"))
                           (rule "nnf_imp2or" (formula "21") (term "0"))
                           (rule "nnf_imp2or" (formula "20") (term "0"))
                           (rule "nnf_imp2or" (formula "19") (term "0"))
                           (rule "nnf_imp2or" (formula "18") (term "0"))
                           (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
                           (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                           (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "cut_direct" (formula "23") (term "0"))
                           (branch "CUT: result_0.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "cut_direct" (formula "33") (term "0,0"))
                              (branch "CUT: result_3.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "arrayLengthIsAShort" (formula "43") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "true_left" (formula "43"))
                                 (rule "arrayLengthNotNegative" (formula "43") (term "1,0"))
                                 (rule "arrayLengthNotNegative" (formula "44") (term "1,1"))
                                 (rule "arrayLengthIsAShort" (formula "45") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "nnf_imp2or" (formula "62") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "62") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "62") (term "0,1,0,0"))
                                 (rule "nnf_imp2or" (formula "62") (term "0,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "62") (term "0,0,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "62") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "62") (term "0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,1"))
                                 (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "62") (term "1,0,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,1"))
                                 (rule "add_zero_left" (formula "62") (term "0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,1"))
                                 (rule "nnf_notAnd" (formula "62") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "62") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "62") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "62") (term "0,0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "62") (term "0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "62") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "62") (term "0,0,1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,1,0,0,0"))
                                 (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "62") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "62") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "62") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "62") (term "0,0,1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or_2" (formula "35") (term "0"))
                                 (rule "commute_or_2" (formula "34") (term "0"))
                                 (rule "commute_or_2" (formula "29") (term "0"))
                                 (rule "commute_or_2" (formula "28") (term "0"))
                                 (rule "commute_or_2" (formula "27") (term "0"))
                                 (rule "commute_or_2" (formula "26") (term "0"))
                                 (rule "commute_or_2" (formula "25") (term "0"))
                                 (rule "commute_or_2" (formula "24") (term "0"))
                                 (rule "commute_or" (formula "39") (term "0,0"))
                                 (rule "commute_or" (formula "38") (term "0,0"))
                                 (rule "commute_or" (formula "37") (term "0,0"))
                                 (rule "commute_or" (formula "36") (term "0,0"))
                                 (rule "commute_or" (formula "35") (term "0,0"))
                                 (rule "commute_or" (formula "34") (term "0,0"))
                                 (rule "commute_or" (formula "29") (term "0,0"))
                                 (rule "commute_or" (formula "28") (term "0,0"))
                                 (rule "commute_or" (formula "27") (term "0,0"))
                                 (rule "commute_or" (formula "26") (term "0,0"))
                                 (rule "commute_or" (formula "25") (term "0,0"))
                                 (rule "commute_or" (formula "24") (term "0,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "4"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "5"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "6"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0,1,1,0") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "59"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "8"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "9"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "10"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "andRight" (formula "74"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "74"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "74"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "74"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "74"))
                                             (branch "Case 1"
                                                (rule "allRight" (formula "74") (inst "sk=i_174"))
                                                (rule "orRight" (formula "74"))
                                                (rule "notRight" (formula "75"))
                                                (rule "orRight" (formula "75"))
                                                (rule "inEqSimp_leqRight" (formula "75"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "76"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_690"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "21")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "63"))
                                                (rule "allLeft" (formula "21") (inst "t=i_174"))
                                                (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                (rule "leq_literals" (formula "21") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "21") (term "0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "closeFalse" (formula "21"))
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "74") (inst "sk=i_173"))
                                                (rule "orRight" (formula "74"))
                                                (rule "notRight" (formula "75"))
                                                (rule "orRight" (formula "75"))
                                                (rule "inEqSimp_leqRight" (formula "75"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "76"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_689"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "24")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "64"))
                                                (rule "allLeft" (formula "24") (inst "t=i_173"))
                                                (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                (rule "leq_literals" (formula "24") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "24") (term "0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "closeFalse" (formula "24"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "74") (inst "sk=i_172"))
                                             (rule "orRight" (formula "74"))
                                             (rule "notRight" (formula "75"))
                                             (rule "orRight" (formula "75"))
                                             (rule "inEqSimp_geqRight" (formula "76"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "76"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_688"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "65"))
                                             (rule "allLeft" (formula "26") (inst "t=i_172"))
                                             (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                             (rule "leq_literals" (formula "26") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "74") (inst "sk=i_171"))
                                          (rule "orRight" (formula "74"))
                                          (rule "notRight" (formula "75"))
                                          (rule "orRight" (formula "75"))
                                          (rule "inEqSimp_geqRight" (formula "76"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "76"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_687"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "29")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "66"))
                                          (rule "allLeft" (formula "29") (inst "t=i_171"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                          (rule "leq_literals" (formula "29") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "29"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "74") (inst "sk=i_170"))
                                       (rule "orRight" (formula "74"))
                                       (rule "notRight" (formula "75"))
                                       (rule "orRight" (formula "75"))
                                       (rule "inEqSimp_leqRight" (formula "75"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "76"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_686"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "11"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "11"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "11")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "67"))
                                       (rule "allLeft" (formula "31") (inst "t=i_170"))
                                       (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                       (rule "leq_literals" (formula "31") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "31"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "74") (inst "sk=i_169"))
                                    (rule "orRight" (formula "74"))
                                    (rule "notRight" (formula "75"))
                                    (rule "orRight" (formula "75"))
                                    (rule "inEqSimp_leqRight" (formula "75"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "76"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_685"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "34")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "68"))
                                    (rule "allLeft" (formula "34") (inst "t=i_169"))
                                    (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                    (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                    (rule "leq_literals" (formula "34") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "34"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "CUT: result_3.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "arrayLengthNotNegative" (formula "43") (term "1,1"))
                                 (rule "arrayLengthIsAShort" (formula "44") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "arrayLengthIsAShort" (formula "44") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "arrayLengthNotNegative" (formula "44") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "63") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "63") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "63") (term "0,1,0,0"))
                                 (rule "nnf_imp2or" (formula "63") (term "0,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "63") (term "0,0,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "63") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0,1"))
                                 (rule "times_zero_1" (formula "63") (term "1,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,0,0,1"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,1"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "63") (term "1,0,0,0,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "63") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "63") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or_2" (formula "35") (term "0"))
                                 (rule "commute_or_2" (formula "34") (term "0"))
                                 (rule "commute_or_2" (formula "29") (term "0"))
                                 (rule "commute_or_2" (formula "28") (term "0"))
                                 (rule "commute_or_2" (formula "27") (term "0"))
                                 (rule "commute_or_2" (formula "26") (term "0"))
                                 (rule "commute_or_2" (formula "25") (term "0"))
                                 (rule "commute_or_2" (formula "24") (term "0"))
                                 (rule "commute_or" (formula "39") (term "0,0"))
                                 (rule "commute_or" (formula "38") (term "0,0"))
                                 (rule "commute_or" (formula "37") (term "0,0"))
                                 (rule "commute_or" (formula "36") (term "0,0"))
                                 (rule "commute_or" (formula "35") (term "0,0"))
                                 (rule "commute_or" (formula "34") (term "0,0"))
                                 (rule "commute_or" (formula "29") (term "0,0"))
                                 (rule "commute_or" (formula "28") (term "0,0"))
                                 (rule "commute_or" (formula "27") (term "0,0"))
                                 (rule "commute_or" (formula "26") (term "0,0"))
                                 (rule "commute_or" (formula "25") (term "0,0"))
                                 (rule "commute_or" (formula "24") (term "0,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "4"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "5"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0,1,1,0") (ifseqformula "6"))
                                 (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "6"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "8"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "9"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "10"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "andRight" (formula "75"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "75"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "75"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "75"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "75"))
                                             (branch "Case 1"
                                                (rule "allRight" (formula "75") (inst "sk=i_168"))
                                                (rule "orRight" (formula "75"))
                                                (rule "notRight" (formula "76"))
                                                (rule "orRight" (formula "76"))
                                                (rule "inEqSimp_leqRight" (formula "76"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "77"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_684"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "21")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "64"))
                                                (rule "allLeft" (formula "21") (inst "t=i_168"))
                                                (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "21") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "1"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,0"))
                                                (rule "add_zero_right" (formula "21") (term "0"))
                                                (rule "leq_literals" (formula "21"))
                                                (rule "closeFalse" (formula "21"))
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "75") (inst "sk=i_167"))
                                                (rule "orRight" (formula "75"))
                                                (rule "notRight" (formula "76"))
                                                (rule "orRight" (formula "76"))
                                                (rule "inEqSimp_leqRight" (formula "76"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "77"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_683"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "24")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "65"))
                                                (rule "allLeft" (formula "24") (inst "t=i_167"))
                                                (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "24") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "inEqSimp_homoInEq1" (formula "24"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0"))
                                                (rule "leq_literals" (formula "24"))
                                                (rule "closeFalse" (formula "24"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "75") (inst "sk=i_166"))
                                             (rule "orRight" (formula "75"))
                                             (rule "notRight" (formula "76"))
                                             (rule "orRight" (formula "76"))
                                             (rule "inEqSimp_geqRight" (formula "77"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "77"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_682"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "11"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "11"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "11")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "66"))
                                             (rule "allLeft" (formula "26") (inst "t=i_166"))
                                             (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "26") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0"))
                                             (rule "add_zero_right" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "closeFalse" (formula "26"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "75") (inst "sk=i_165"))
                                          (rule "orRight" (formula "75"))
                                          (rule "notRight" (formula "76"))
                                          (rule "orRight" (formula "76"))
                                          (rule "inEqSimp_leqRight" (formula "76"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "77"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_681"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "29")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "67"))
                                          (rule "allLeft" (formula "29") (inst "t=i_165"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "29") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "1"))
                                          (rule "andLeft" (formula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "29"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0"))
                                          (rule "leq_literals" (formula "29"))
                                          (rule "closeFalse" (formula "29"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "75") (inst "sk=i_164"))
                                       (rule "orRight" (formula "75"))
                                       (rule "notRight" (formula "76"))
                                       (rule "orRight" (formula "76"))
                                       (rule "inEqSimp_leqRight" (formula "76"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "77"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_680"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "9")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "68"))
                                       (rule "allLeft" (formula "31") (inst "t=i_164"))
                                       (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "31") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "1"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "inEqSimp_homoInEq1" (formula "31"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0"))
                                       (rule "add_zero_right" (formula "31") (term "0"))
                                       (rule "leq_literals" (formula "31"))
                                       (rule "closeFalse" (formula "31"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "75") (inst "sk=i_163"))
                                    (rule "orRight" (formula "75"))
                                    (rule "notRight" (formula "76"))
                                    (rule "orRight" (formula "76"))
                                    (rule "inEqSimp_leqRight" (formula "76"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "77"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_679"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "34")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "69"))
                                    (rule "allLeft" (formula "34") (inst "t=i_163"))
                                    (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "34") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "34"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "CUT: result_0.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "cut_direct" (formula "33") (term "0,0"))
                              (branch "CUT: result_3.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "arrayLengthIsAShort" (formula "43") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "true_left" (formula "43"))
                                 (rule "arrayLengthNotNegative" (formula "43") (term "1,0"))
                                 (rule "arrayLengthNotNegative" (formula "44") (term "1,1"))
                                 (rule "arrayLengthIsAShort" (formula "45") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "nnf_imp2or" (formula "63") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "63") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "63") (term "0,1,0,0"))
                                 (rule "nnf_imp2or" (formula "63") (term "0,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "63") (term "0,0,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "63") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,0,0,1"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0,1"))
                                 (rule "times_zero_1" (formula "63") (term "1,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,1"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "63") (term "1,0,0,0,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or_2" (formula "35") (term "0"))
                                 (rule "commute_or_2" (formula "34") (term "0"))
                                 (rule "commute_or_2" (formula "29") (term "0"))
                                 (rule "commute_or_2" (formula "28") (term "0"))
                                 (rule "commute_or_2" (formula "27") (term "0"))
                                 (rule "commute_or_2" (formula "26") (term "0"))
                                 (rule "commute_or_2" (formula "25") (term "0"))
                                 (rule "commute_or_2" (formula "24") (term "0"))
                                 (rule "commute_or" (formula "39") (term "0,0"))
                                 (rule "commute_or" (formula "38") (term "0,0"))
                                 (rule "commute_or" (formula "37") (term "0,0"))
                                 (rule "commute_or" (formula "36") (term "0,0"))
                                 (rule "commute_or" (formula "35") (term "0,0"))
                                 (rule "commute_or" (formula "34") (term "0,0"))
                                 (rule "commute_or" (formula "29") (term "0,0"))
                                 (rule "commute_or" (formula "28") (term "0,0"))
                                 (rule "commute_or" (formula "27") (term "0,0"))
                                 (rule "commute_or" (formula "26") (term "0,0"))
                                 (rule "commute_or" (formula "25") (term "0,0"))
                                 (rule "commute_or" (formula "24") (term "0,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "4"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "5"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0,1,1,0") (ifseqformula "6"))
                                 (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "6"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "8"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "9"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "10"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0,1,1,0") (ifseqformula "11"))
                                 (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "64"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "andRight" (formula "75"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "75"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "75"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "75"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "75"))
                                             (branch "Case 1"
                                                (rule "allRight" (formula "75") (inst "sk=i_162"))
                                                (rule "orRight" (formula "75"))
                                                (rule "notRight" (formula "76"))
                                                (rule "orRight" (formula "76"))
                                                (rule "inEqSimp_leqRight" (formula "76"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "77"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_678"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "21")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "64"))
                                                (rule "allLeft" (formula "21") (inst "t=i_162"))
                                                (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "21") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "21"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "75") (inst "sk=i_161"))
                                                (rule "orRight" (formula "75"))
                                                (rule "notRight" (formula "76"))
                                                (rule "orRight" (formula "76"))
                                                (rule "inEqSimp_leqRight" (formula "76"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "77"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_677"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "11")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "65"))
                                                (rule "allLeft" (formula "23") (inst "t=i_161"))
                                                (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "23") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "23"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "75") (inst "sk=i_160"))
                                             (rule "orRight" (formula "75"))
                                             (rule "notRight" (formula "76"))
                                             (rule "orRight" (formula "76"))
                                             (rule "inEqSimp_leqRight" (formula "76"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "77"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_676"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "26")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "66"))
                                             (rule "allLeft" (formula "26") (inst "t=i_160"))
                                             (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "26") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0"))
                                             (rule "add_zero_right" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "closeFalse" (formula "26"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "75") (inst "sk=i_159"))
                                          (rule "orRight" (formula "75"))
                                          (rule "notRight" (formula "76"))
                                          (rule "orRight" (formula "76"))
                                          (rule "inEqSimp_geqRight" (formula "77"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "77"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_675"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "29")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "67"))
                                          (rule "allLeft" (formula "29") (inst "t=i_159"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "29") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "2"))
                                          (rule "andLeft" (formula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "29"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0"))
                                          (rule "leq_literals" (formula "29"))
                                          (rule "closeFalse" (formula "29"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "75") (inst "sk=i_158"))
                                       (rule "orRight" (formula "75"))
                                       (rule "notRight" (formula "76"))
                                       (rule "orRight" (formula "76"))
                                       (rule "inEqSimp_geqRight" (formula "77"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "77"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_674"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "12")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "68"))
                                       (rule "allLeft" (formula "31") (inst "t=i_158"))
                                       (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "31") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "2"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "inEqSimp_homoInEq1" (formula "31"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0"))
                                       (rule "add_zero_right" (formula "31") (term "0"))
                                       (rule "leq_literals" (formula "31"))
                                       (rule "closeFalse" (formula "31"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "75") (inst "sk=i_157"))
                                    (rule "orRight" (formula "75"))
                                    (rule "notRight" (formula "76"))
                                    (rule "orRight" (formula "76"))
                                    (rule "inEqSimp_leqRight" (formula "76"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "77"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_673"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "34")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "69"))
                                    (rule "allLeft" (formula "34") (inst "t=i_157"))
                                    (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "34") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "34"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "CUT: result_3.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "arrayLengthIsAShort" (formula "43") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "true_left" (formula "43"))
                                 (rule "arrayLengthIsAShort" (formula "43") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "true_left" (formula "43"))
                                 (rule "arrayLengthNotNegative" (formula "43") (term "1,1"))
                                 (rule "arrayLengthNotNegative" (formula "44") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "64") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "64") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "64") (term "0,1,0,0"))
                                 (rule "nnf_imp2or" (formula "64") (term "0,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "64") (term "0,0,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "64") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,1,0,0,1"))
                                 (rule "add_zero_left" (formula "64") (term "0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "64") (term "0,0,0,1"))
                                 (rule "times_zero_1" (formula "64") (term "1,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "64") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,0,1"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "64") (term "0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "64") (term "1,0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "64") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "64") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "64") (term "0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "64") (term "0,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "64") (term "1,0,0,0,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "64") (term "0,0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "64") (term "0,0,0,1,0,0,0"))
                                 (rule "times_zero_1" (formula "64") (term "1,0,0,0,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "64") (term "0,0,0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,1,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "64") (term "0,0,1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "64") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "64") (term "0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "64") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "64") (term "0,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "64") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "64") (term "0,0,0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "64") (term "0,0,1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or_2" (formula "35") (term "0"))
                                 (rule "commute_or_2" (formula "34") (term "0"))
                                 (rule "commute_or_2" (formula "29") (term "0"))
                                 (rule "commute_or_2" (formula "28") (term "0"))
                                 (rule "commute_or_2" (formula "27") (term "0"))
                                 (rule "commute_or_2" (formula "26") (term "0"))
                                 (rule "commute_or_2" (formula "25") (term "0"))
                                 (rule "commute_or_2" (formula "24") (term "0"))
                                 (rule "commute_or" (formula "39") (term "0,0"))
                                 (rule "commute_or" (formula "38") (term "0,0"))
                                 (rule "commute_or" (formula "37") (term "0,0"))
                                 (rule "commute_or" (formula "36") (term "0,0"))
                                 (rule "commute_or" (formula "35") (term "0,0"))
                                 (rule "commute_or" (formula "34") (term "0,0"))
                                 (rule "commute_or" (formula "29") (term "0,0"))
                                 (rule "commute_or" (formula "28") (term "0,0"))
                                 (rule "commute_or" (formula "27") (term "0,0"))
                                 (rule "commute_or" (formula "26") (term "0,0"))
                                 (rule "commute_or" (formula "25") (term "0,0"))
                                 (rule "commute_or" (formula "24") (term "0,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "4"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0,1,1,0") (ifseqformula "5"))
                                 (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "59"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "5"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "6"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "8"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "9"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "10"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0,1,1,0") (ifseqformula "11"))
                                 (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "65"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "andRight" (formula "76"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "76"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "76"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "76"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "76"))
                                             (branch "Case 1"
                                                (rule "allRight" (formula "76") (inst "sk=i_156"))
                                                (rule "orRight" (formula "76"))
                                                (rule "orRight" (formula "76"))
                                                (rule "notRight" (formula "78"))
                                                (rule "inEqSimp_geqRight" (formula "78"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "78"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_672"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "21")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "65"))
                                                (rule "allLeft" (formula "21") (inst "t=i_156"))
                                                (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "21") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "21"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_literals" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "76") (inst "sk=i_155"))
                                                (rule "orRight" (formula "76"))
                                                (rule "orRight" (formula "76"))
                                                (rule "notRight" (formula "78"))
                                                (rule "inEqSimp_geqRight" (formula "78"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "78"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_671"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "11"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "11")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "66"))
                                                (rule "allLeft" (formula "23") (inst "t=i_155"))
                                                (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "23") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "23"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_literals" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "76") (inst "sk=i_154"))
                                             (rule "orRight" (formula "76"))
                                             (rule "orRight" (formula "76"))
                                             (rule "notRight" (formula "78"))
                                             (rule "inEqSimp_leqRight" (formula "77"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "78"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_670"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "26")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "67"))
                                             (rule "allLeft" (formula "26") (inst "t=i_154"))
                                             (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "26") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0"))
                                             (rule "add_literals" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "closeFalse" (formula "26"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "76") (inst "sk=i_153"))
                                          (rule "orRight" (formula "76"))
                                          (rule "orRight" (formula "76"))
                                          (rule "notRight" (formula "78"))
                                          (rule "inEqSimp_geqRight" (formula "78"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "78"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_669"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "29")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "68"))
                                          (rule "allLeft" (formula "29") (inst "t=i_153"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "29") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "29"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_literals" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "76") (inst "sk=i_152"))
                                       (rule "orRight" (formula "76"))
                                       (rule "orRight" (formula "76"))
                                       (rule "notRight" (formula "78"))
                                       (rule "inEqSimp_leqRight" (formula "77"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "78"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_668"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "12")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "69"))
                                       (rule "allLeft" (formula "31") (inst "t=i_152"))
                                       (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                       (rule "leq_literals" (formula "31") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "31") (term "0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "closeFalse" (formula "31"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "76") (inst "sk=i_151"))
                                    (rule "orRight" (formula "76"))
                                    (rule "orRight" (formula "76"))
                                    (rule "notRight" (formula "78"))
                                    (rule "inEqSimp_leqRight" (formula "77"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "78"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_667"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")) (ifInst ""  (formula "34")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "70"))
                                    (rule "allLeft" (formula "34") (inst "t=i_151"))
                                    (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "34") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "1"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "inEqSimp_homoInEq1" (formula "34"))
                                    (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                    (rule "add_literals" (formula "34") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "34") (term "1,0"))
                                    (rule "add_literals" (formula "34") (term "0"))
                                    (rule "leq_literals" (formula "34"))
                                    (rule "closeFalse" (formula "34"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1") (ifseqformula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "15"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "26"))
                     (rule "notLeft" (formula "20"))
                     (rule "notLeft" (formula "26"))
                     (rule "allRight" (formula "46") (inst "sk=f_21"))
                     (rule "allRight" (formula "46") (inst "sk=o_21"))
                     (rule "orRight" (formula "46"))
                     (rule "eqSymm" (formula "47"))
                     (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "array2seqDef" (formula "18") (term "0,1") (inst "u=u"))
                     (rule "eqSymm" (formula "18"))
                     (rule "array2seqDef" (formula "24") (term "0,1") (inst "u=u"))
                     (rule "eqSymm" (formula "24"))
                     (rule "array2seqDef" (formula "18") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "18"))
                     (rule "array2seqDef" (formula "24") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "24"))
                     (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "eqSeqDef2" (formula "23") (inst "iv=iv") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=f_21_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                     (rule "eqSymm" (formula "46"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_21_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_21_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "25") (ifseqformula "7"))
                     (rule "replaceKnownSelect_taclet0010_0" (formula "25") (term "0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0010_2" (formula "25") (term "0,0,1,0"))
                     (rule "andLeft" (formula "25"))
                     (rule "notLeft" (formula "26"))
                     (rule "andLeft" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "notLeft" (formula "27"))
                     (rule "andLeft" (formula "25"))
                     (rule "notLeft" (formula "27"))
                     (rule "notLeft" (formula "26"))
                     (rule "andLeft" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "notLeft" (formula "26"))
                     (rule "notLeft" (formula "25"))
                     (rule "nonNull" (formula "30") (inst "i=i"))
                     (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "greater_literals" (formula "30") (term "0,1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "notLeft" (formula "30"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "29") (inst "i=i"))
                     (rule "greater_literals" (formula "29") (term "0,1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "sub_literals" (formula "29") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "andLeft" (formula "29"))
                     (rule "notLeft" (formula "29"))
                     (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "28") (inst "i=i"))
                     (rule "greater_literals" (formula "28") (term "0,1"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "sub_literals" (formula "28") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "notLeft" (formula "28"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "27") (inst "i=i"))
                     (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "greater_literals" (formula "27") (term "0,1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "notLeft" (formula "27"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "26") (inst "i=i"))
                     (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "greater_literals" (formula "26") (term "0,1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "andLeft" (formula "26"))
                     (rule "notLeft" (formula "26"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "25") (inst "i=i"))
                     (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "greater_literals" (formula "25") (term "0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "notLeft" (formula "25"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_12"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "7")))
                     (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_12"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "7")))
                     (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_12"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "7")))
                     (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_12"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "7")))
                     (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_12"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "7")))
                     (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "30") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_12"))
                     (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                     (rule "applyEq" (formula "41") (term "0") (ifseqformula "30"))
                     (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "56")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "17"))
                     (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "56")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                     (rule "hideAuxiliaryEq" (formula "30"))
                     (rule "pullOutSelect" (formula "29") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_12"))
                     (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "40") (term "0") (ifseqformula "29"))
                     (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "55")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0") (ifseqformula "17"))
                     (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "55")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "29"))
                     (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "29"))
                     (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                     (rule "hideAuxiliaryEq" (formula "29"))
                     (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_12"))
                     (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "39") (term "0") (ifseqformula "28"))
                     (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "54")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "17"))
                     (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "54")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "28"))
                     (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                     (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                     (rule "hideAuxiliaryEq" (formula "28"))
                     (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_12"))
                     (rule "applyEq" (formula "38") (term "0") (ifseqformula "27"))
                     (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                     (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "53")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "17"))
                     (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "27"))
                     (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                     (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "27"))
                     (rule "hideAuxiliaryEq" (formula "27"))
                     (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_12"))
                     (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "37") (term "0") (ifseqformula "26"))
                     (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "52")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0") (ifseqformula "17"))
                     (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "52")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "26"))
                     (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "26"))
                     (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_12"))
                     (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
                     (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                     (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0") (ifseqformula "17"))
                     (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                     (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                     (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "25"))
                     (rule "hideAuxiliaryEq" (formula "25"))
                     (rule "nnf_imp2or" (formula "30") (term "0"))
                     (rule "nnf_imp2or" (formula "29") (term "0"))
                     (rule "nnf_imp2or" (formula "28") (term "0"))
                     (rule "nnf_imp2or" (formula "27") (term "0"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "7"))
                     (rule "replaceKnownSelect_taclet1100010_8" (formula "20") (term "0,0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1100010_9" (formula "20") (term "0,0,1"))
                     (rule "replaceKnownSelect_taclet0010_1" (formula "20") (term "0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0010_2" (formula "20") (term "0,0,1,0"))
                     (rule "replaceKnownSelect_taclet1100010_11" (formula "20") (term "0,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1100010_12" (formula "20") (term "0,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1100010_23" (formula "20") (term "1,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1100010_14" (formula "20") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1100010_24" (formula "20") (term "1,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1100010_15" (formula "20") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1100010_26" (formula "20") (term "1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1100010_29" (formula "20") (term "1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1100010_27" (formula "20") (term "1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1100010_32" (formula "20") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1100010_30" (formula "20") (term "1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1100010_35" (formula "20") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1100010_33" (formula "20") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1100010_38" (formula "20") (term "1,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1100010_36" (formula "20") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1100010_39" (formula "20") (term "1,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1100010_17" (formula "20") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1100010_20" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1100010_18" (formula "20") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1100010_21" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "21"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "22"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "22"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "22"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "21"))
                     (rule "notLeft" (formula "20"))
                     (rule "nonNull" (formula "25") (inst "i=i"))
                     (rule "greater_literals" (formula "25") (term "0,1"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "47")))
                     (rule "sub_literals" (formula "25") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "24") (inst "i=i"))
                     (rule "greater_literals" (formula "24") (term "0,1"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "46")))
                     (rule "sub_literals" (formula "24") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "23") (inst "i=i"))
                     (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "45")))
                     (rule "greater_literals" (formula "23") (term "0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "22") (inst "i=i"))
                     (rule "greater_literals" (formula "22") (term "0,1"))
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "44")))
                     (rule "sub_literals" (formula "22") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "21") (inst "i=i"))
                     (rule "greater_literals" (formula "21") (term "0,1"))
                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "43")))
                     (rule "sub_literals" (formula "21") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "20") (inst "i=i"))
                     (rule "sub_literals" (formula "20") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "42")))
                     (rule "greater_literals" (formula "20") (term "0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                     (rule "nnf_imp2or" (formula "30") (term "0"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "34") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                     (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                     (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "33") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                     (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "32") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                     (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "31") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                     (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "24") (term "0"))
                     (rule "nnf_imp2or" (formula "23") (term "0"))
                     (rule "nnf_imp2or" (formula "22") (term "0"))
                     (rule "nnf_imp2or" (formula "21") (term "0"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_notAnd" (formula "30") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                     (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "24") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "23") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch " ¬o_21 = null ∧ ¬( o_21.<created> = TRUE ∨ o_21.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "2"))
                        (rule "notLeft" (formula "1"))
                        (rule "orRight" (formula "41"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "39"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                        (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "39"))
                        (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "40")))
                        (rule "closeTrue" (formula "58"))
                     )
                     (branch " ¬o_21 = null ∧ ¬( o_21.<created> = TRUE ∨ o_21.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
                        (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                        (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                        (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "cut_direct" (formula "62") (term "0,0"))
                        (branch "CUT: o_21 = null TRUE"
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "false_right" (formula "63"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "63")))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: o_21 = null FALSE"
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "notRight" (formula "63"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "63"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "64")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
            )
            (branch "Exceptional Post (verify)"
               (builtin "One Step Simplification" (formula "41"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,0") (ifseqformula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,0") (ifseqformula "20"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,1,0") (ifseqformula "14"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "27"))
               (rule "close" (formula "30") (ifseqformula "29"))
            )
            (branch "Pre (verify)"
               (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "22")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1") (ifseqformula "14"))
               (rule "wellFormedAnonEQ" (formula "39") (term "0,1") (ifseqformula "20"))
               (rule "wellFormedAnonEQ" (formula "39") (term "0,0,1") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1,1,1") (ifseqformula "20"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,1,1") (ifseqformula "14"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "18"))
               (rule "notLeft" (formula "26"))
               (rule "notLeft" (formula "19"))
               (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "replace_known_right" (formula "41") (term "0,1,1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "26")) (ifInst ""  (formula "25")) (ifInst ""  (formula "2")) (ifInst ""  (formula "13")) (ifInst ""  (formula "19")) (ifInst ""  (formula "16")))
               (rule "closeTrue" (formula "41"))
            )
            (branch "Null reference (v_1 = null)"
               (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "35")))
               (rule "closeTrue" (formula "39"))
            )
         )
         (branch "Exceptional Post (getSignature)"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "andLeft" (formula "16"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "16"))
            (rule "andLeft" (formula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,1,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1,0") (ifseqformula "14"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "15"))
            (rule "typeEqDerived" (formula "17") (term "0,1,1,1,1") (ifseqformula "15"))
            (rule "typeEqDerived" (formula "17") (term "0,0,0,1,1,1") (ifseqformula "15"))
            (rule "typeEqDerived" (formula "17") (term "0,1,0,1,1,1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "21"))
            (rule "andLeft" (formula "18"))
            (rule "notLeft" (formula "19"))
            (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "array2seqDef" (formula "17") (term "0,1") (inst "u=u"))
            (rule "eqSymm" (formula "17"))
            (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
            (rule "eqSymm" (formula "17"))
            (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "21") (ifseqformula "4"))
            (rule "andLeft" (formula "21"))
            (rule "notLeft" (formula "22"))
            (rule "andLeft" (formula "21"))
            (rule "notLeft" (formula "22"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "notLeft" (formula "23"))
            (rule "notLeft" (formula "22"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "notLeft" (formula "21"))
            (rule "notLeft" (formula "21"))
            (rule "nonNull" (formula "26") (inst "i=i"))
            (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "greater_literals" (formula "26") (term "0,1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "andLeft" (formula "26"))
            (rule "notLeft" (formula "26"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "25") (inst "i=i"))
            (rule "greater_literals" (formula "25") (term "0,1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "sub_literals" (formula "25") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "25"))
            (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
            (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "24") (inst "i=i"))
            (rule "greater_literals" (formula "24") (term "0,1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "sub_literals" (formula "24") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "24"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "23") (inst "i=i"))
            (rule "greater_literals" (formula "23") (term "0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "sub_literals" (formula "23") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "23"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "22") (inst "i=i"))
            (rule "sub_literals" (formula "22") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "greater_literals" (formula "22") (term "0,1"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "notLeft" (formula "22"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "21") (inst "i=i"))
            (rule "greater_literals" (formula "21") (term "0,1"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "sub_literals" (formula "21") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "notLeft" (formula "21"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_8"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "4")))
            (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_8"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "4")))
            (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_8"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "4")))
            (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_8"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "4")))
            (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_8"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "4")))
            (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_8"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "4")))
            (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_8"))
            (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "34") (term "0") (ifseqformula "26"))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "49")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0") (ifseqformula "14"))
            (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "49")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "26"))
            (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "26"))
            (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
            (rule "hideAuxiliaryEq" (formula "26"))
            (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_8"))
            (rule "applyEq" (formula "33") (term "0") (ifseqformula "25"))
            (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
            (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "48")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0") (ifseqformula "14"))
            (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "48")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
            (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "25"))
            (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
            (rule "hideAuxiliaryEq" (formula "25"))
            (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_8"))
            (rule "applyEq" (formula "32") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
            (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "47")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0") (ifseqformula "14"))
            (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "47")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
            (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
            (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "24"))
            (rule "hideAuxiliaryEq" (formula "24"))
            (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_8"))
            (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "31") (term "0") (ifseqformula "23"))
            (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "46")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0") (ifseqformula "14"))
            (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "46")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "23"))
            (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
            (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
            (rule "hideAuxiliaryEq" (formula "23"))
            (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_8"))
            (rule "applyEq" (formula "30") (term "0") (ifseqformula "22"))
            (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
            (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "45")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,0") (ifseqformula "14"))
            (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "45")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
            (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
            (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "22"))
            (rule "hideAuxiliaryEq" (formula "22"))
            (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_8"))
            (rule "applyEq" (formula "29") (term "0") (ifseqformula "21"))
            (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
            (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "44")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0") (ifseqformula "14"))
            (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "44")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
            (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
            (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "21"))
            (rule "hideAuxiliaryEq" (formula "21"))
            (rule "nnf_imp2or" (formula "26") (term "0"))
            (rule "nnf_imp2or" (formula "25") (term "0"))
            (rule "nnf_imp2or" (formula "24") (term "0"))
            (rule "nnf_imp2or" (formula "23") (term "0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "17") (ifseqformula "4"))
            (rule "replaceKnownSelect_taclet1010_1" (formula "17") (term "0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_2" (formula "17") (term "0,0,1"))
            (rule "replaceKnownSelect_taclet1010_4" (formula "17") (term "0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_5" (formula "17") (term "0,0,1,0"))
            (rule "replaceKnownSelect_taclet1010_7" (formula "17") (term "0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_8" (formula "17") (term "0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1010_10" (formula "17") (term "0,0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet1010_19" (formula "17") (term "1,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_11" (formula "17") (term "0,0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_20" (formula "17") (term "1,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1010_22" (formula "17") (term "1,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1010_25" (formula "17") (term "1,1,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_23" (formula "17") (term "1,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1010_28" (formula "17") (term "1,1,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_26" (formula "17") (term "1,1,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1010_31" (formula "17") (term "1,1,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_29" (formula "17") (term "1,1,0,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1010_34" (formula "17") (term "1,1,0,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_32" (formula "17") (term "1,1,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_35" (formula "17") (term "1,1,0,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1010_13" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1010_16" (formula "17") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_14" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_17" (formula "17") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "19"))
            (rule "notLeft" (formula "18"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "18"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "18"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "18"))
            (rule "notLeft" (formula "17"))
            (rule "nonNull" (formula "22") (inst "i=i"))
            (rule "greater_literals" (formula "22") (term "0,1"))
            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "40")))
            (rule "sub_literals" (formula "22") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "21") (inst "i=i"))
            (rule "greater_literals" (formula "21") (term "0,1"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "39")))
            (rule "sub_literals" (formula "21") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "20") (inst "i=i"))
            (rule "greater_literals" (formula "20") (term "0,1"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "38")))
            (rule "sub_literals" (formula "20") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "19") (inst "i=i"))
            (rule "greater_literals" (formula "19") (term "0,1"))
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "37")))
            (rule "sub_literals" (formula "19") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "18") (inst "i=i"))
            (rule "greater_literals" (formula "18") (term "0,1"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "36")))
            (rule "sub_literals" (formula "18") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "17") (inst "i=i"))
            (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "35")))
            (rule "greater_literals" (formula "17") (term "0"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "27") (term "0"))
            (rule "nnf_imp2or" (formula "26") (term "0"))
            (rule "nnf_notAnd" (formula "31") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
            (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
            (rule "mul_literals" (formula "31") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "30") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
            (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "29") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
            (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
            (rule "mul_literals" (formula "29") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "28") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
            (rule "nnf_imp2or" (formula "22") (term "0"))
            (rule "nnf_imp2or" (formula "21") (term "0"))
            (rule "nnf_imp2or" (formula "20") (term "0"))
            (rule "methodCallParamThrow" (formula "49") (term "1"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "nnf_imp2or" (formula "19") (term "0"))
            (rule "nnf_imp2or" (formula "18") (term "0"))
            (rule "nnf_imp2or" (formula "17") (term "0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "26") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
            (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "22") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
            (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
            (rule "mul_literals" (formula "22") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "21") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
            (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
            (rule "mul_literals" (formula "21") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "20") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
            (rule "mul_literals" (formula "20") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "19") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
            (rule "mul_literals" (formula "19") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
            (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
            (rule "arrayLengthNotNegative" (formula "1") (term "0"))
            (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
            (rule "leq_literals" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
            (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
            (rule "arrayLengthNotNegative" (formula "7") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "8") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "commute_or_2" (formula "37") (term "0"))
            (rule "commute_or_2" (formula "36") (term "0"))
            (rule "commute_or_2" (formula "35") (term "0"))
            (rule "commute_or_2" (formula "34") (term "0"))
            (rule "commute_or_2" (formula "33") (term "0"))
            (rule "commute_or_2" (formula "32") (term "0"))
            (rule "commute_or_2" (formula "28") (term "0"))
            (rule "commute_or_2" (formula "27") (term "0"))
            (rule "commute_or_2" (formula "26") (term "0"))
            (rule "commute_or_2" (formula "25") (term "0"))
            (rule "commute_or_2" (formula "24") (term "0"))
            (rule "commute_or_2" (formula "23") (term "0"))
            (rule "tryCatchThrow" (formula "55") (term "1"))
            (rule "commute_or" (formula "37") (term "0,0"))
            (rule "commute_or" (formula "36") (term "0,0"))
            (rule "commute_or" (formula "35") (term "0,0"))
            (rule "commute_or" (formula "34") (term "0,0"))
            (rule "commute_or" (formula "33") (term "0,0"))
            (rule "commute_or" (formula "32") (term "0,0"))
            (rule "commute_or" (formula "28") (term "0,0"))
            (rule "commute_or" (formula "27") (term "0,0"))
            (rule "commute_or" (formula "26") (term "0,0"))
            (rule "commute_or" (formula "25") (term "0,0"))
            (rule "commute_or" (formula "24") (term "0,0"))
            (rule "commute_or" (formula "23") (term "0,0"))
            (rule "ifElseUnfold" (formula "55") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_8"))
            (rule "equality_comparison_simple" (formula "55") (term "1"))
            (builtin "One Step Simplification" (formula "55"))
            (rule "replace_known_right" (formula "55") (term "0,0,1,0") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "55"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "45"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0,1,1,0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "47"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,0,0,0,0,0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "44"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,1,1,0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "46"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0,1,1,0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "51"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "7"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "8"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "ifElseSplit" (formula "67"))
            (branch "if x_8 true"
               (builtin "One Step Simplification" (formula "68"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_8 false"
               (builtin "One Step Simplification" (formula "68"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "67"))
               (branch "if exc_3 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "67") (term "1") (newnames "e_4"))
                  (rule "reference_type_cast" (formula "67") (term "1"))
                  (branch "Normal Execution (exc_3 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "68"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "67") (term "1"))
                     (builtin "One Step Simplification" (formula "67"))
                     (rule "emptyModality" (formula "67") (term "1"))
                     (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "52")) (ifInst ""  (formula "52")) (ifInst ""  (formula "50")))
                     (rule "eqSymm" (formula "67") (term "1,0,0,1"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "67") (term "0") (ifseqformula "11"))
                     (rule "replaceKnownSelect_taclet1010_0" (formula "67") (term "0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_2" (formula "67") (term "0,0,1,0"))
                     (rule "replaceKnownSelect_taclet1010_3" (formula "67") (term "0,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_5" (formula "67") (term "0,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1010_6" (formula "67") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_8" (formula "67") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1010_9" (formula "67") (term "0,0,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1010_18" (formula "67") (term "1,1,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_11" (formula "67") (term "0,0,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_20" (formula "67") (term "1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1010_21" (formula "67") (term "1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1010_24" (formula "67") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_23" (formula "67") (term "1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1010_27" (formula "67") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_26" (formula "67") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1010_30" (formula "67") (term "1,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_29" (formula "67") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1010_33" (formula "67") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_32" (formula "67") (term "1,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_35" (formula "67") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1010_12" (formula "67") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1010_15" (formula "67") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_14" (formula "67") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_17" (formula "67") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replace_known_right" (formula "67") (term "0,1,0") (ifseqformula "64"))
                     (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "60")) (ifInst ""  (formula "59")) (ifInst ""  (formula "61")) (ifInst ""  (formula "62")) (ifInst ""  (formula "63")))
                     (rule "nonNull" (formula "67") (term "1,0,0") (inst "i=i"))
                     (rule "greater_literals" (formula "67") (term "0,1,1,0,0"))
                     (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "57")))
                     (rule "sub_literals" (formula "67") (term "2,1,0,1,0,0"))
                     (builtin "One Step Simplification" (formula "67"))
                     (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,0,0"))
                     (rule "nonNull" (formula "67") (term "1,0,0,0,0,0") (inst "i=i"))
                     (rule "greater_literals" (formula "67") (term "0,1,1,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "54")))
                     (rule "sub_literals" (formula "67") (term "2,1,0,1,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "67"))
                     (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,0,0,0,0,0"))
                     (rule "nonNull" (formula "67") (term "0,0,0,0,0,0") (inst "i=i"))
                     (rule "greater_literals" (formula "67") (term "0,1,0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "53")))
                     (rule "sub_literals" (formula "67") (term "2,1,0,0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "67"))
                     (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,0,0,0,0,0,0"))
                     (rule "nonNull" (formula "67") (term "1,0,0,0") (inst "i=i"))
                     (rule "greater_literals" (formula "67") (term "0,1,1,0,0,0"))
                     (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "56")))
                     (rule "sub_literals" (formula "67") (term "2,1,0,1,0,0,0"))
                     (builtin "One Step Simplification" (formula "67"))
                     (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,0,0,0"))
                     (rule "nonNull" (formula "67") (term "1,0") (inst "i=i"))
                     (rule "sub_literals" (formula "67") (term "2,1,0,1,1,1,0"))
                     (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "58")))
                     (rule "greater_literals" (formula "67") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "67"))
                     (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,0"))
                     (rule "nonNull" (formula "67") (term "1,0,0,0,0") (inst "i=i"))
                     (rule "greater_literals" (formula "67") (term "0,1,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "55")))
                     (rule "sub_literals" (formula "67") (term "2,1,0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "67"))
                     (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,0,0,0,0"))
                     (rule "nnf_imp2or" (formula "67") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "67") (term "0,1,0,0"))
                     (rule "nnf_imp2or" (formula "67") (term "0,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "67") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,1,0"))
                     (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "67") (term "0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,1,0"))
                     (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "67") (term "0,0,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "67") (term "0,0,0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0"))
                     (rule "nnf_imp2or" (formula "67") (term "0,1,0,0,0,0"))
                     (rule "nnf_imp2or" (formula "67") (term "0,1,0,0,0,0,0"))
                     (rule "nnf_imp2or" (formula "67") (term "0,0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "67") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,1,0,0,0"))
                     (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "67") (term "0,0,0,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "67") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,1,0,0,0,0"))
                     (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "67") (term "0,0,0,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "67") (term "0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "67") (term "0,0,0,0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "67") (term "0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "67") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,0,0,0,0"))
                     (rule "andRight" (formula "67"))
                     (branch "Case 1"
                        (rule "andRight" (formula "67"))
                        (branch "Case 1"
                           (rule "andRight" (formula "67"))
                           (branch "Case 1"
                              (rule "andRight" (formula "67"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "67"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "67"))
                                    (branch "Case 1"
                                       (rule "allRight" (formula "67") (inst "sk=i_102"))
                                       (rule "orRight" (formula "67"))
                                       (rule "notRight" (formula "68"))
                                       (rule "orRight" (formula "68"))
                                       (rule "inEqSimp_geqRight" (formula "69"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "69"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_348"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "19")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "12") (ifseqformula "56"))
                                       (rule "cut_direct" (formula "53") (term "1,0"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                                          (rule "instanceof_not_compatible_5" (formula "54") (term "1") (ifseqformula "53"))
                                          (rule "instanceof_not_compatible_5" (formula "54") (term "0,0") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                          (rule "true_left" (formula "54"))
                                          (rule "cut_direct" (formula "37") (term "0"))
                                          (branch "CUT: result_0.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "cut_direct" (formula "46") (term "0,0"))
                                             (branch "CUT: exc_3.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "allLeft" (formula "19") (inst "t=i_102"))
                                                (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "19") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "19"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_literals" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: exc_3.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "allLeft" (formula "19") (inst "t=i_102"))
                                                (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                (rule "leq_literals" (formula "19") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "19") (term "0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "closeFalse" (formula "19"))
                                             )
                                          )
                                          (branch "CUT: result_0.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "cut_direct" (formula "46") (term "0,0"))
                                             (branch "CUT: exc_3.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "allLeft" (formula "19") (inst "t=i_102"))
                                                (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "19") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "2"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "inEqSimp_homoInEq1" (formula "19"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0"))
                                                (rule "add_zero_right" (formula "19") (term "0"))
                                                (rule "leq_literals" (formula "19"))
                                                (rule "closeFalse" (formula "19"))
                                             )
                                             (branch "CUT: exc_3.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "allLeft" (formula "19") (inst "t=i_102"))
                                                (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "19") (term "0,0,1"))
                                                (rule "leq_literals" (formula "19") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "cut_direct" (formula "37") (term "0"))
                                          (branch "CUT: result_0.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "cut_direct" (formula "46") (term "0,0"))
                                             (branch "CUT: exc_3.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "allLeft" (formula "19") (inst "t=i_102"))
                                                (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "19") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "2"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "inEqSimp_homoInEq1" (formula "19"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0"))
                                                (rule "add_zero_right" (formula "19") (term "0"))
                                                (rule "leq_literals" (formula "19"))
                                                (rule "closeFalse" (formula "19"))
                                             )
                                             (branch "CUT: exc_3.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "allLeft" (formula "19") (inst "t=i_102"))
                                                (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "19") (term "0,0,1"))
                                                (rule "leq_literals" (formula "19") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "CUT: result_0.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "cut_direct" (formula "46") (term "0,0"))
                                             (branch "CUT: exc_3.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "allLeft" (formula "19") (inst "t=i_102"))
                                                (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "19") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "19"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: exc_3.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "allLeft" (formula "19") (inst "t=i_102"))
                                                (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                (rule "leq_literals" (formula "19") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "19") (term "0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "closeFalse" (formula "19"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "67") (inst "sk=i_101"))
                                       (rule "orRight" (formula "67"))
                                       (rule "notRight" (formula "68"))
                                       (rule "orRight" (formula "68"))
                                       (rule "inEqSimp_geqRight" (formula "69"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "69"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_347"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "22")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "12") (ifseqformula "57"))
                                       (rule "cut_direct" (formula "53") (term "1,0"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                                          (rule "instanceof_not_compatible_5" (formula "54") (term "1") (ifseqformula "53"))
                                          (rule "instanceof_not_compatible_5" (formula "54") (term "0,0") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                          (rule "true_left" (formula "54"))
                                          (rule "cut_direct" (formula "37") (term "0"))
                                          (branch "CUT: result_0.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "cut_direct" (formula "46") (term "0,0"))
                                             (branch "CUT: exc_3.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "allLeft" (formula "22") (inst "t=i_101"))
                                                (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "22") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "22"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_literals" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: exc_3.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "allLeft" (formula "22") (inst "t=i_101"))
                                                (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                (rule "leq_literals" (formula "22") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "22") (term "0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "closeFalse" (formula "22"))
                                             )
                                          )
                                          (branch "CUT: result_0.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "cut_direct" (formula "46") (term "0,0"))
                                             (branch "CUT: exc_3.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "allLeft" (formula "22") (inst "t=i_101"))
                                                (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "22") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "2"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "22"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0"))
                                                (rule "add_zero_right" (formula "22") (term "0"))
                                                (rule "leq_literals" (formula "22"))
                                                (rule "closeFalse" (formula "22"))
                                             )
                                             (branch "CUT: exc_3.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "allLeft" (formula "22") (inst "t=i_101"))
                                                (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "22") (term "0,0,1"))
                                                (rule "leq_literals" (formula "22") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "22"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "cut_direct" (formula "37") (term "0"))
                                          (branch "CUT: result_0.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "cut_direct" (formula "46") (term "0,0"))
                                             (branch "CUT: exc_3.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "allLeft" (formula "22") (inst "t=i_101"))
                                                (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "22") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "2"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "22"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0"))
                                                (rule "add_zero_right" (formula "22") (term "0"))
                                                (rule "leq_literals" (formula "22"))
                                                (rule "closeFalse" (formula "22"))
                                             )
                                             (branch "CUT: exc_3.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "allLeft" (formula "22") (inst "t=i_101"))
                                                (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "22") (term "0,0,1"))
                                                (rule "leq_literals" (formula "22") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "22"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "CUT: result_0.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "cut_direct" (formula "46") (term "0,0"))
                                             (branch "CUT: exc_3.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "allLeft" (formula "22") (inst "t=i_101"))
                                                (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "22") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "22"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: exc_3.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "allLeft" (formula "22") (inst "t=i_101"))
                                                (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                (rule "leq_literals" (formula "22") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "22") (term "0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "closeFalse" (formula "22"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "67") (inst "sk=i_100"))
                                    (rule "orRight" (formula "67"))
                                    (rule "notRight" (formula "68"))
                                    (rule "orRight" (formula "68"))
                                    (rule "inEqSimp_leqRight" (formula "68"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "69"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_346"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")) (ifInst ""  (formula "9")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "12") (ifseqformula "58"))
                                    (rule "cut_direct" (formula "37") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "cut_direct" (formula "53") (term "1,0"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                                          (rule "instanceof_not_compatible_5" (formula "54") (term "1") (ifseqformula "53"))
                                          (rule "instanceof_not_compatible_5" (formula "54") (term "0,0") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                          (rule "true_left" (formula "54"))
                                          (rule "cut_direct" (formula "46") (term "0,0"))
                                          (branch "CUT: exc_3.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "allLeft" (formula "24") (inst "t=i_100"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "24") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "24"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0"))
                                             (rule "add_literals" (formula "24") (term "0"))
                                             (rule "leq_literals" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                          (branch "CUT: exc_3.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "allLeft" (formula "24") (inst "t=i_100"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "24") (term "0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "cut_direct" (formula "46") (term "0,0"))
                                          (branch "CUT: exc_3.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "allLeft" (formula "24") (inst "t=i_100"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "24") (term "0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                          (branch "CUT: exc_3.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "allLeft" (formula "24") (inst "t=i_100"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "cut_direct" (formula "53") (term "1,0"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                                          (rule "instanceof_not_compatible_5" (formula "54") (term "1") (ifseqformula "53"))
                                          (rule "instanceof_not_compatible_5" (formula "54") (term "0,0") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "57")) (ifInst ""  (formula "57")))
                                          (rule "true_left" (formula "54"))
                                          (rule "cut_direct" (formula "46") (term "0,0"))
                                          (branch "CUT: exc_3.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "allLeft" (formula "24") (inst "t=i_100"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "24") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "24"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0"))
                                             (rule "add_zero_right" (formula "24") (term "0"))
                                             (rule "leq_literals" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                          (branch "CUT: exc_3.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "allLeft" (formula "24") (inst "t=i_100"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "24") (term "0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "cut_direct" (formula "46") (term "0,0"))
                                          (branch "CUT: exc_3.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "allLeft" (formula "24") (inst "t=i_100"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "24") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "24"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0"))
                                             (rule "add_zero_right" (formula "24") (term "0"))
                                             (rule "leq_literals" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                          (branch "CUT: exc_3.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "allLeft" (formula "24") (inst "t=i_100"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "67") (inst "sk=i_99"))
                                 (rule "orRight" (formula "67"))
                                 (rule "notRight" (formula "68"))
                                 (rule "orRight" (formula "68"))
                                 (rule "inEqSimp_geqRight" (formula "69"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "69"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_345"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "27")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "12") (ifseqformula "59"))
                                 (rule "cut_direct" (formula "53") (term "1,0"))
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                                    (rule "instanceof_not_compatible_5" (formula "54") (term "1") (ifseqformula "53"))
                                    (rule "instanceof_not_compatible_5" (formula "54") (term "0,0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                    (rule "true_left" (formula "54"))
                                    (rule "cut_direct" (formula "37") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "cut_direct" (formula "46") (term "0,0"))
                                       (branch "CUT: exc_3.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "allLeft" (formula "27") (inst "t=i_99"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                       (branch "CUT: exc_3.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "allLeft" (formula "27") (inst "t=i_99"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "cut_direct" (formula "46") (term "0,0"))
                                       (branch "CUT: exc_3.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "allLeft" (formula "27") (inst "t=i_99"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "CUT: exc_3.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "allLeft" (formula "27") (inst "t=i_99"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                 )
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "cut_direct" (formula "37") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "cut_direct" (formula "46") (term "0,0"))
                                       (branch "CUT: exc_3.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "allLeft" (formula "27") (inst "t=i_99"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "27") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: exc_3.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "allLeft" (formula "27") (inst "t=i_99"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "cut_direct" (formula "46") (term "0,0"))
                                       (branch "CUT: exc_3.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "allLeft" (formula "27") (inst "t=i_99"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "27") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                       (branch "CUT: exc_3.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "allLeft" (formula "27") (inst "t=i_99"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "67") (inst "sk=i_98"))
                              (rule "orRight" (formula "67"))
                              (rule "notRight" (formula "68"))
                              (rule "orRight" (formula "68"))
                              (rule "inEqSimp_leqRight" (formula "68"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "69"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_344"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "30")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "12") (ifseqformula "60"))
                              (rule "cut_direct" (formula "53") (term "1,0"))
                              (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                                 (rule "instanceof_not_compatible_5" (formula "54") (term "1") (ifseqformula "53"))
                                 (rule "instanceof_not_compatible_5" (formula "54") (term "0,0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                 (rule "true_left" (formula "54"))
                                 (rule "cut_direct" (formula "37") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "cut_direct" (formula "46") (term "0,0"))
                                    (branch "CUT: exc_3.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "true_left" (formula "47"))
                                       (rule "allLeft" (formula "30") (inst "t=i_98"))
                                       (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                       (rule "leq_literals" (formula "30") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "30") (term "0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "closeFalse" (formula "30"))
                                    )
                                    (branch "CUT: exc_3.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "allLeft" (formula "30") (inst "t=i_98"))
                                       (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                       (rule "leq_literals" (formula "30") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "30") (term "0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "closeFalse" (formula "30"))
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "cut_direct" (formula "46") (term "0,0"))
                                    (branch "CUT: exc_3.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "true_left" (formula "47"))
                                       (rule "allLeft" (formula "30") (inst "t=i_98"))
                                       (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "30") (term "0,0,1"))
                                       (rule "leq_literals" (formula "30") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "30"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: exc_3.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "allLeft" (formula "30") (inst "t=i_98"))
                                       (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "30") (term "0,0,1"))
                                       (rule "leq_literals" (formula "30") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "30") (term "0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "closeFalse" (formula "30"))
                                    )
                                 )
                              )
                              (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "cut_direct" (formula "37") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "cut_direct" (formula "46") (term "0,0"))
                                    (branch "CUT: exc_3.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "true_left" (formula "47"))
                                       (rule "allLeft" (formula "30") (inst "t=i_98"))
                                       (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "30") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "30"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "CUT: exc_3.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "allLeft" (formula "30") (inst "t=i_98"))
                                       (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "30") (term "0,0,1"))
                                       (rule "leq_literals" (formula "30") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "30"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "cut_direct" (formula "46") (term "0,0"))
                                    (branch "CUT: exc_3.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "true_left" (formula "47"))
                                       (rule "allLeft" (formula "30") (inst "t=i_98"))
                                       (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "30") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "30"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "CUT: exc_3.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "allLeft" (formula "30") (inst "t=i_98"))
                                       (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                       (rule "leq_literals" (formula "30") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "30"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "67") (inst "sk=i_97"))
                           (rule "orRight" (formula "67"))
                           (rule "notRight" (formula "68"))
                           (rule "orRight" (formula "68"))
                           (rule "inEqSimp_geqRight" (formula "69"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "69"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_343"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "46"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "33")))
                           (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "12") (ifseqformula "61"))
                           (rule "cut_direct" (formula "37") (term "0"))
                           (branch "CUT: result_0.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "true_left" (formula "38"))
                              (rule "cut_direct" (formula "53") (term "1,0"))
                              (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                                 (rule "instanceof_not_compatible_5" (formula "54") (term "1") (ifseqformula "53"))
                                 (rule "instanceof_not_compatible_5" (formula "54") (term "0,0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                 (rule "true_left" (formula "54"))
                                 (rule "cut_direct" (formula "46") (term "0,0"))
                                 (branch "CUT: exc_3.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "allLeft" (formula "33") (inst "t=i_97"))
                                    (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "33") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "33"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_literals" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: exc_3.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "allLeft" (formula "33") (inst "t=i_97"))
                                    (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                    (rule "leq_literals" (formula "33") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "33") (term "0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "closeFalse" (formula "33"))
                                 )
                              )
                              (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "cut_direct" (formula "46") (term "0,0"))
                                 (branch "CUT: exc_3.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "allLeft" (formula "33") (inst "t=i_97"))
                                    (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "33") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "2"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "inEqSimp_homoInEq1" (formula "33"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                    (rule "add_literals" (formula "33") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0"))
                                    (rule "add_zero_right" (formula "33") (term "0"))
                                    (rule "leq_literals" (formula "33"))
                                    (rule "closeFalse" (formula "33"))
                                 )
                                 (branch "CUT: exc_3.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "allLeft" (formula "33") (inst "t=i_97"))
                                    (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,0,1"))
                                    (rule "leq_literals" (formula "33") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "33"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "CUT: result_0.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "cut_direct" (formula "53") (term "1,0"))
                              (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                                 (rule "instanceof_not_compatible_5" (formula "54") (term "1") (ifseqformula "53"))
                                 (rule "instanceof_not_compatible_5" (formula "54") (term "0,0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "57")) (ifInst ""  (formula "57")))
                                 (rule "true_left" (formula "54"))
                                 (rule "cut_direct" (formula "46") (term "0,0"))
                                 (branch "CUT: exc_3.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "allLeft" (formula "33") (inst "t=i_97"))
                                    (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "33") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "33"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: exc_3.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "allLeft" (formula "33") (inst "t=i_97"))
                                    (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,0,1"))
                                    (rule "leq_literals" (formula "33") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "33"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "cut_direct" (formula "46") (term "0,0"))
                                 (branch "CUT: exc_3.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "allLeft" (formula "33") (inst "t=i_97"))
                                    (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                    (rule "leq_literals" (formula "33") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "33") (term "0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "closeFalse" (formula "33"))
                                 )
                                 (branch "CUT: exc_3.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "allLeft" (formula "33") (inst "t=i_97"))
                                    (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                    (rule "leq_literals" (formula "33") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "33") (term "0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "closeFalse" (formula "33"))
                                 )
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "67") (inst "sk=f_12"))
                        (rule "allRight" (formula "67") (inst "sk=o_12"))
                        (rule "orRight" (formula "67"))
                        (rule "pullOutSelect" (formula "68") (term "0") (inst "selectSK=f_12_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                        (rule "eqSymm" (formula "69"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_12_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "cut_direct" (formula "51") (term "1,0"))
                        (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                           (rule "instanceof_not_compatible_5" (formula "52") (term "1") (ifseqformula "51"))
                           (rule "instanceof_not_compatible_5" (formula "52") (term "0,0") (ifseqformula "51"))
                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                           (rule "true_left" (formula "52"))
                           (rule "cut_direct" (formula "35") (term "0"))
                           (branch "CUT: result_0.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "true_left" (formula "36"))
                              (rule "cut_direct" (formula "44") (term "0,0"))
                              (branch "CUT: exc_3.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "52"))
                                    (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "71"))
                                    (rule "replace_known_right" (formula "70") (term "0,1") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "53")))
                                    (rule "closeTrue" (formula "70"))
                                 )
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                    (rule "close" (formula "70") (ifseqformula "1"))
                                 )
                              )
                              (branch "CUT: exc_3.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "53"))
                                    (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "72"))
                                    (rule "replace_known_right" (formula "71") (term "0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "52")))
                                    (rule "closeTrue" (formula "71"))
                                 )
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                    (rule "close" (formula "71") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch "CUT: result_0.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "cut_direct" (formula "44") (term "0,0"))
                              (branch "CUT: exc_3.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "53"))
                                    (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "72"))
                                    (rule "replace_known_right" (formula "71") (term "0,1") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "51")))
                                    (rule "closeTrue" (formula "71"))
                                 )
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                    (rule "close" (formula "71") (ifseqformula "1"))
                                 )
                              )
                              (branch "CUT: exc_3.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "52"))
                                    (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "73"))
                                    (rule "replace_known_right" (formula "72") (term "0,1") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "53")))
                                    (rule "closeTrue" (formula "72"))
                                 )
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                    (rule "close" (formula "72") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "cut_direct" (formula "35") (term "0"))
                           (branch "CUT: result_0.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "true_left" (formula "36"))
                              (rule "cut_direct" (formula "44") (term "0,0"))
                              (branch "CUT: exc_3.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "52"))
                                    (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "72"))
                                    (rule "replace_known_right" (formula "71") (term "0,1") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "53")))
                                    (rule "closeTrue" (formula "71"))
                                 )
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                    (rule "close" (formula "71") (ifseqformula "1"))
                                 )
                              )
                              (branch "CUT: exc_3.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "53"))
                                    (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "73"))
                                    (rule "replace_known_right" (formula "72") (term "0,1") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "51")))
                                    (rule "closeTrue" (formula "72"))
                                 )
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                    (rule "close" (formula "72") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch "CUT: result_0.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "cut_direct" (formula "44") (term "0,0"))
                              (branch "CUT: exc_3.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "53"))
                                    (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "73"))
                                    (rule "replace_known_right" (formula "72") (term "0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "52")))
                                    (rule "closeTrue" (formula "72"))
                                 )
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                    (rule "close" (formula "72") (ifseqformula "1"))
                                 )
                              )
                              (branch "CUT: exc_3.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "52"))
                                    (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "74"))
                                    (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "51")))
                                    (rule "closeTrue" (formula "73"))
                                 )
                                 (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                    (rule "close" (formula "73") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "ClassCastException (!(exc_3 instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "67"))
                     (rule "closeTrue" (formula "67"))
                  )
               )
               (branch "if exc_3 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Pre (getSignature)"
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "1")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
            (rule "andLeft" (formula "14"))
            (rule "wellFormedAnonEQ" (formula "30") (term "0,1") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1,1") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,1,0") (ifseqformula "14"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "typeEqDerived" (formula "17") (term "0,1,1,1,1") (ifseqformula "15"))
            (rule "typeEqDerived" (formula "17") (term "0,0,0,1,1,1") (ifseqformula "15"))
            (rule "typeEqDerived" (formula "17") (term "0,1,0,1,1,1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "18"))
            (rule "notLeft" (formula "19"))
            (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "replace_known_left" (formula "34") (term "0,1,1") (ifseqformula "5"))
            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "18")) (ifInst ""  (formula "2")) (ifInst ""  (formula "13")))
            (rule "closeTrue" (formula "34"))
         )
      )
      (branch "Exceptional Post (getPayLoad)"
         (builtin "One Step Simplification" (formula "29"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "15"))
         (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "16") (ifseqformula "4"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "17"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "18"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "18"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "18"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "16"))
         (rule "notLeft" (formula "16"))
         (rule "nonNull" (formula "21") (inst "i=i"))
         (rule "greater_literals" (formula "21") (term "0,1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "sub_literals" (formula "21") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "notLeft" (formula "21"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "20") (inst "i=i"))
         (rule "greater_literals" (formula "20") (term "0,1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "sub_literals" (formula "20") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "notLeft" (formula "20"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "19") (inst "i=i"))
         (rule "sub_literals" (formula "19") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "greater_literals" (formula "19") (term "0,1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "andLeft" (formula "19"))
         (rule "notLeft" (formula "19"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "18") (inst "i=i"))
         (rule "greater_literals" (formula "18") (term "0,1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "sub_literals" (formula "18") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "notLeft" (formula "18"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "17") (inst "i=i"))
         (rule "greater_literals" (formula "17") (term "0,1"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "sub_literals" (formula "17") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "17"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "16") (inst "i=i"))
         (rule "greater_literals" (formula "16") (term "0,1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "sub_literals" (formula "16") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "16"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
         (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "4")))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_1" (formula "34") (term "0"))
         (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "4")))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_3" (formula "33") (term "0"))
         (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "4")))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_5" (formula "32") (term "0"))
         (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "4")))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_7" (formula "31") (term "0"))
         (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "4")))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_9" (formula "30") (term "0"))
         (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "4")))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_11" (formula "29") (term "0"))
         (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_0"))
         (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
         (rule "replaceKnownSelect_taclet110_12" (formula "29") (term "0"))
         (rule "replaceKnownSelect_taclet110_12" (formula "22") (term "0,1,1,1,0,0"))
         (rule "hideAuxiliaryEq" (formula "21"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_13" (formula "28") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_13" (formula "21") (term "1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_13" (formula "21") (term "0,1,1,1,0,0"))
         (rule "pullOutSelect" (formula "20") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_0"))
         (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "42")) (ifInst ""  (formula "3")))
         (rule "replaceKnownSelect_taclet110_14" (formula "28") (term "0"))
         (rule "replaceKnownSelect_taclet110_14" (formula "21") (term "0,1,1,1,0,0"))
         (rule "hideAuxiliaryEq" (formula "20"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_15" (formula "27") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_15" (formula "20") (term "1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_15" (formula "20") (term "0,1,1,1,0,0"))
         (rule "pullOutSelect" (formula "19") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_0"))
         (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "41")) (ifInst ""  (formula "3")))
         (rule "replaceKnownSelect_taclet110_16" (formula "27") (term "0"))
         (rule "replaceKnownSelect_taclet110_16" (formula "20") (term "0,1,1,1,0,0"))
         (rule "hideAuxiliaryEq" (formula "19"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_17" (formula "26") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_17" (formula "19") (term "1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_17" (formula "19") (term "0,1,1,1,0,0"))
         (rule "pullOutSelect" (formula "18") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_0"))
         (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "40")) (ifInst ""  (formula "3")))
         (rule "replaceKnownSelect_taclet110_18" (formula "26") (term "0"))
         (rule "replaceKnownSelect_taclet110_18" (formula "19") (term "0,1,1,1,0,0"))
         (rule "hideAuxiliaryEq" (formula "18"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_19" (formula "25") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_19" (formula "18") (term "1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_19" (formula "18") (term "0,1,1,1,0,0"))
         (rule "pullOutSelect" (formula "17") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_0"))
         (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
         (rule "replaceKnownSelect_taclet110_20" (formula "25") (term "0"))
         (rule "replaceKnownSelect_taclet110_20" (formula "18") (term "0,1,1,1,0,0"))
         (rule "hideAuxiliaryEq" (formula "17"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_21" (formula "24") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_21" (formula "17") (term "1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_21" (formula "17") (term "0,1,1,1,0,0"))
         (rule "pullOutSelect" (formula "16") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_0"))
         (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "38")) (ifInst ""  (formula "3")))
         (rule "replaceKnownSelect_taclet110_22" (formula "24") (term "0"))
         (rule "replaceKnownSelect_taclet110_22" (formula "17") (term "0,1,1,1,0,0"))
         (rule "hideAuxiliaryEq" (formula "16"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_23" (formula "23") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_23" (formula "16") (term "1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_23" (formula "16") (term "0,1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "21") (term "0"))
         (rule "nnf_imp2or" (formula "20") (term "0"))
         (rule "nnf_imp2or" (formula "19") (term "0"))
         (rule "nnf_imp2or" (formula "18") (term "0"))
         (rule "nnf_imp2or" (formula "17") (term "0"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_notAnd" (formula "21") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
         (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
         (rule "mul_literals" (formula "21") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "20") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
         (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
         (rule "mul_literals" (formula "20") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "19") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0"))
         (rule "methodCallParamThrow" (formula "38") (term "1"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "commute_or_2" (formula "21") (term "0"))
         (rule "commute_or_2" (formula "20") (term "0"))
         (rule "commute_or_2" (formula "19") (term "0"))
         (rule "commute_or_2" (formula "18") (term "0"))
         (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
         (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
         (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
         (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "commute_or_2" (formula "20") (term "0"))
         (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
         (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
         (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "arrayLengthNotNegative" (formula "7") (term "1,1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "36"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "34"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "37"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "5"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "6"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "7"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "8"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "9"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "10"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "11"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "12"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "13"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "commute_or_2" (formula "34") (term "0"))
         (rule "arrayLengthNotNegative" (formula "13") (term "0"))
         (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
         (rule "leq_literals" (formula "13") (term "0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "arrayLengthIsAShort" (formula "13") (term "0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "commute_or" (formula "39") (term "0,0"))
         (rule "commute_or" (formula "38") (term "0,0"))
         (rule "commute_or" (formula "37") (term "0,0"))
         (rule "commute_or" (formula "36") (term "0,0"))
         (rule "commute_or" (formula "35") (term "0,0"))
         (rule "commute_or" (formula "34") (term "0,0"))
         (rule "tryCatchThrow" (formula "56") (term "1"))
         (rule "ifElseUnfold" (formula "56") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_2"))
         (rule "equality_comparison_simple" (formula "56") (term "1"))
         (builtin "One Step Simplification" (formula "56"))
         (rule "replace_known_right" (formula "56") (term "0,0,1,0") (ifseqformula "41"))
         (builtin "One Step Simplification" (formula "56"))
         (rule "ifElseSplit" (formula "56"))
         (branch "if x_2 true"
            (builtin "One Step Simplification" (formula "57"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_2 false"
            (builtin "One Step Simplification" (formula "57"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "56"))
            (branch "if exc_0 instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "56") (term "1") (newnames "e"))
               (rule "reference_type_cast" (formula "56") (term "1"))
               (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "57"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "56") (term "1"))
                  (builtin "One Step Simplification" (formula "56"))
                  (rule "emptyModality" (formula "56") (term "1"))
                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")) (ifInst ""  (formula "40")))
                  (rule "eqSymm" (formula "56") (term "1,0,0,1"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "56") (term "0") (ifseqformula "16"))
                  (rule "replaceKnownSelect_taclet110_0" (formula "56") (term "0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_1" (formula "56") (term "0,0,1,0"))
                  (rule "replaceKnownSelect_taclet110_2" (formula "56") (term "0,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_3" (formula "56") (term "0,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet110_4" (formula "56") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_5" (formula "56") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_6" (formula "56") (term "0,0,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_12" (formula "56") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_7" (formula "56") (term "0,0,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_13" (formula "56") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_14" (formula "56") (term "1,1,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_16" (formula "56") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_15" (formula "56") (term "1,1,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_18" (formula "56") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_17" (formula "56") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_20" (formula "56") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_19" (formula "56") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_22" (formula "56") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_21" (formula "56") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_23" (formula "56") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_8" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_10" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_9" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_11" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "56") (term "0,1,0,0,0") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "50")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                  (rule "nonNull" (formula "56") (term "1,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "56") (term "0,1,1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "44")))
                  (rule "sub_literals" (formula "56") (term "2,1,0,1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "56"))
                  (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,1,0,0,0,0"))
                  (rule "nonNull" (formula "56") (term "1,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "56") (term "2,1,0,1,1,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "45")))
                  (rule "greater_literals" (formula "56") (term "0,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "56"))
                  (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,1,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,1,0,0,0"))
                  (rule "nonNull" (formula "56") (term "0,0,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "56") (term "2,1,0,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "42")))
                  (rule "greater_literals" (formula "56") (term "0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "56"))
                  (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "56") (term "1,0,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "56") (term "2,1,0,1,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "43")))
                  (rule "greater_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "56"))
                  (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,1,0,0,0,0,0"))
                  (rule "nonNull" (formula "56") (term "1,0") (inst "i=i"))
                  (rule "sub_literals" (formula "56") (term "2,1,0,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "47")))
                  (rule "greater_literals" (formula "56") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "56"))
                  (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,1,0"))
                  (rule "nonNull" (formula "56") (term "1,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "56") (term "0,1,1,0,0"))
                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "46")))
                  (rule "sub_literals" (formula "56") (term "2,1,0,1,0,0"))
                  (builtin "One Step Simplification" (formula "56"))
                  (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,1,0,0"))
                  (rule "nnf_imp2or" (formula "56") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "56") (term "0,1,0,0"))
                  (rule "nnf_imp2or" (formula "56") (term "0,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "56") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "56") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "56") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,1,0"))
                  (rule "nnf_imp2or" (formula "56") (term "0,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "56") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "56") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "56") (term "1,0,0,0,1,0,0"))
                  (rule "nnf_imp2or" (formula "56") (term "0,1,0,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "56") (term "0,0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "56") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "1,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "56") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "56") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "56") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "1,0,0,0,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "56") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "56") (term "0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "1,0,0,0,1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "56") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "1,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "andRight" (formula "56"))
                  (branch "Case 1"
                     (rule "andRight" (formula "56"))
                     (branch "Case 1"
                        (rule "andRight" (formula "56"))
                        (branch "Case 1"
                           (rule "andRight" (formula "56"))
                           (branch "Case 1"
                              (rule "andRight" (formula "56"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "56"))
                                 (branch "Case 1"
                                    (rule "allRight" (formula "56") (inst "sk=i_66"))
                                    (rule "orRight" (formula "56"))
                                    (rule "orRight" (formula "56"))
                                    (rule "notRight" (formula "58"))
                                    (rule "inEqSimp_geqRight" (formula "58"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "58"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_318"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "9")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "45"))
                                    (rule "cut_direct" (formula "43") (term "1"))
                                    (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_0) = TRUE TRUE"
                                       (rule "instanceof_not_compatible_5" (formula "44") (term "0,0") (ifseqformula "43"))
                                       (rule "instanceof_not_compatible_5" (formula "44") (term "1,0") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                       (rule "true_left" (formula "44"))
                                       (rule "cut_direct" (formula "36") (term "0"))
                                       (branch "CUT: exc_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "allLeft" (formula "23") (inst "t=i_66"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                       (branch "CUT: exc_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "allLeft" (formula "23") (inst "t=i_66"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "23"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_literals" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_0) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "cut_direct" (formula "36") (term "0"))
                                       (branch "CUT: exc_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "allLeft" (formula "23") (inst "t=i_66"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "2"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0"))
                                          (rule "leq_literals" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                       (branch "CUT: exc_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "allLeft" (formula "23") (inst "t=i_66"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "23"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "56") (inst "sk=i_65"))
                                    (rule "orRight" (formula "56"))
                                    (rule "orRight" (formula "56"))
                                    (rule "notRight" (formula "58"))
                                    (rule "inEqSimp_geqRight" (formula "58"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "58"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_317"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "46"))
                                    (rule "cut_direct" (formula "43") (term "1"))
                                    (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_0) = TRUE TRUE"
                                       (rule "instanceof_not_compatible_5" (formula "44") (term "0,0") (ifseqformula "43"))
                                       (rule "instanceof_not_compatible_5" (formula "44") (term "1,0") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                       (rule "true_left" (formula "44"))
                                       (rule "cut_direct" (formula "36") (term "0"))
                                       (branch "CUT: exc_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "allLeft" (formula "25") (inst "t=i_65"))
                                          (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                          (rule "leq_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "25") (term "0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                       (branch "CUT: exc_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "allLeft" (formula "25") (inst "t=i_65"))
                                          (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "25") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "25"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_literals" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_0) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "cut_direct" (formula "36") (term "0"))
                                       (branch "CUT: exc_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "allLeft" (formula "25") (inst "t=i_65"))
                                          (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "25") (term "0,0,1"))
                                          (rule "leq_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "25") (term "0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                       (branch "CUT: exc_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "allLeft" (formula "25") (inst "t=i_65"))
                                          (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "25") (term "0,0,1"))
                                          (rule "leq_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "25"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "56") (inst "sk=i_64"))
                                 (rule "orRight" (formula "56"))
                                 (rule "orRight" (formula "56"))
                                 (rule "notRight" (formula "58"))
                                 (rule "inEqSimp_geqRight" (formula "58"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "58"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_316"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "15")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "47"))
                                 (rule "cut_direct" (formula "36") (term "0"))
                                 (branch "CUT: exc_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "cut_direct" (formula "43") (term "0,0"))
                                    (branch "CUT: java.lang.Error::instance(exc_0) = TRUE TRUE"
                                       (rule "instanceof_not_compatible_5" (formula "44") (term "1") (ifseqformula "43"))
                                       (rule "instanceof_not_compatible_5" (formula "44") (term "1,0") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                       (rule "true_left" (formula "44"))
                                       (rule "allLeft" (formula "27") (inst "t=i_64"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                       (rule "leq_literals" (formula "27") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "27") (term "0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "closeFalse" (formula "27"))
                                    )
                                    (branch "CUT: java.lang.Error::instance(exc_0) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "allLeft" (formula "27") (inst "t=i_64"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "27") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0"))
                                       (rule "add_zero_right" (formula "27") (term "0"))
                                       (rule "leq_literals" (formula "27"))
                                       (rule "closeFalse" (formula "27"))
                                    )
                                 )
                                 (branch "CUT: exc_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "cut_direct" (formula "43") (term "0,0"))
                                    (branch "CUT: java.lang.Error::instance(exc_0) = TRUE TRUE"
                                       (rule "instanceof_not_compatible_5" (formula "44") (term "1") (ifseqformula "43"))
                                       (rule "instanceof_not_compatible_5" (formula "44") (term "1,0") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "46")) (ifInst ""  (formula "46")))
                                       (rule "true_left" (formula "44"))
                                       (rule "allLeft" (formula "27") (inst "t=i_64"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "27") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0"))
                                       (rule "add_literals" (formula "27") (term "0"))
                                       (rule "leq_literals" (formula "27"))
                                       (rule "closeFalse" (formula "27"))
                                    )
                                    (branch "CUT: java.lang.Error::instance(exc_0) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "allLeft" (formula "27") (inst "t=i_64"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "27") (term "0,0,1"))
                                       (rule "leq_literals" (formula "27") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "27") (term "0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "closeFalse" (formula "27"))
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "56") (inst "sk=i_63"))
                              (rule "orRight" (formula "56"))
                              (rule "orRight" (formula "56"))
                              (rule "notRight" (formula "58"))
                              (rule "inEqSimp_geqRight" (formula "58"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "58"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_315"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "48"))
                              (rule "cut_direct" (formula "43") (term "0,0"))
                              (branch "CUT: java.lang.Error::instance(exc_0) = TRUE TRUE"
                                 (rule "instanceof_not_compatible_5" (formula "44") (term "1") (ifseqformula "43"))
                                 (rule "instanceof_not_compatible_5" (formula "44") (term "1,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                 (rule "true_left" (formula "44"))
                                 (rule "cut_direct" (formula "36") (term "0"))
                                 (branch "CUT: exc_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "allLeft" (formula "29") (inst "t=i_63"))
                                    (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                    (rule "leq_literals" (formula "29") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "29"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "CUT: exc_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "allLeft" (formula "29") (inst "t=i_63"))
                                    (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                    (rule "leq_literals" (formula "29") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "29") (term "0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "closeFalse" (formula "29"))
                                 )
                              )
                              (branch "CUT: java.lang.Error::instance(exc_0) = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "cut_direct" (formula "36") (term "0"))
                                 (branch "CUT: exc_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "allLeft" (formula "29") (inst "t=i_63"))
                                    (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "29") (term "0,0,1"))
                                    (rule "leq_literals" (formula "29") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "29"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "CUT: exc_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "allLeft" (formula "29") (inst "t=i_63"))
                                    (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "29") (term "0,0,1"))
                                    (rule "leq_literals" (formula "29") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "29") (term "0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "closeFalse" (formula "29"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "56") (inst "sk=i_62"))
                           (rule "orRight" (formula "56"))
                           (rule "orRight" (formula "56"))
                           (rule "notRight" (formula "58"))
                           (rule "inEqSimp_geqRight" (formula "58"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "58"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_314"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")) (ifInst ""  (formula "14")))
                           (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "49"))
                           (rule "cut_direct" (formula "43") (term "0,0"))
                           (branch "CUT: java.lang.Error::instance(exc_0) = TRUE TRUE"
                              (rule "instanceof_not_compatible_5" (formula "44") (term "1") (ifseqformula "43"))
                              (rule "instanceof_not_compatible_5" (formula "44") (term "1,0") (ifseqformula "43"))
                              (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                              (rule "true_left" (formula "44"))
                              (rule "cut_direct" (formula "36") (term "0"))
                              (branch "CUT: exc_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "true_left" (formula "37"))
                                 (rule "allLeft" (formula "31") (inst "t=i_62"))
                                 (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                 (rule "leq_literals" (formula "31") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "31") (term "0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "closeFalse" (formula "31"))
                              )
                              (branch "CUT: exc_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "allLeft" (formula "31") (inst "t=i_62"))
                                 (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                 (rule "leq_literals" (formula "31") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "31") (term "0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "closeFalse" (formula "31"))
                              )
                           )
                           (branch "CUT: java.lang.Error::instance(exc_0) = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "cut_direct" (formula "36") (term "0"))
                              (branch "CUT: exc_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "true_left" (formula "37"))
                                 (rule "allLeft" (formula "31") (inst "t=i_62"))
                                 (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "31") (term "0,0,1"))
                                 (rule "leq_literals" (formula "31") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "31"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "CUT: exc_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "allLeft" (formula "31") (inst "t=i_62"))
                                 (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "31") (term "0,0,1"))
                                 (rule "leq_literals" (formula "31") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "31"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "56") (inst "sk=i_61"))
                        (rule "orRight" (formula "56"))
                        (rule "orRight" (formula "56"))
                        (rule "notRight" (formula "58"))
                        (rule "inEqSimp_geqRight" (formula "58"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "58"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_313"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")) (ifInst ""  (formula "16")))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "50"))
                        (rule "cut_direct" (formula "36") (term "0"))
                        (branch "CUT: exc_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "true_left" (formula "37"))
                           (rule "cut_direct" (formula "43") (term "0,0"))
                           (branch "CUT: java.lang.Error::instance(exc_0) = TRUE TRUE"
                              (rule "instanceof_not_compatible_5" (formula "44") (term "1") (ifseqformula "43"))
                              (rule "instanceof_not_compatible_5" (formula "44") (term "1,0") (ifseqformula "43"))
                              (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                              (rule "true_left" (formula "44"))
                              (rule "allLeft" (formula "33") (inst "t=i_61"))
                              (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "33") (term "0,0,1"))
                              (rule "leq_literals" (formula "33") (term "0,1"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "33"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "CUT: java.lang.Error::instance(exc_0) = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "allLeft" (formula "33") (inst "t=i_61"))
                              (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "33") (term "0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "2"))
                              (rule "andLeft" (formula "33"))
                              (rule "inEqSimp_homoInEq1" (formula "33"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                              (rule "add_literals" (formula "33") (term "1,1,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0"))
                              (rule "add_zero_right" (formula "33") (term "0"))
                              (rule "leq_literals" (formula "33"))
                              (rule "closeFalse" (formula "33"))
                           )
                        )
                        (branch "CUT: exc_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "cut_direct" (formula "43") (term "0,0"))
                           (branch "CUT: java.lang.Error::instance(exc_0) = TRUE TRUE"
                              (rule "instanceof_not_compatible_5" (formula "44") (term "1") (ifseqformula "43"))
                              (rule "instanceof_not_compatible_5" (formula "44") (term "1,0") (ifseqformula "43"))
                              (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "46")) (ifInst ""  (formula "46")))
                              (rule "true_left" (formula "44"))
                              (rule "allLeft" (formula "33") (inst "t=i_61"))
                              (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "33") (term "0,0,1"))
                              (rule "leq_literals" (formula "33") (term "0,1"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "33") (term "0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "closeFalse" (formula "33"))
                           )
                           (branch "CUT: java.lang.Error::instance(exc_0) = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "allLeft" (formula "33") (inst "t=i_61"))
                              (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                              (rule "add_literals" (formula "33") (term "0,0,1"))
                              (rule "leq_literals" (formula "33") (term "0,1"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "33") (term "0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "closeFalse" (formula "33"))
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "56") (inst "sk=f_10"))
                     (rule "allRight" (formula "56") (inst "sk=o_10"))
                     (rule "orRight" (formula "56"))
                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=f_10_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                     (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "58"))
                     (rule "closeTrue" (formula "58"))
                  )
               )
               (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "56"))
                  (rule "closeTrue" (formula "56"))
               )
            )
            (branch "if exc_0 instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Pre (getPayLoad)"
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "1")) (ifInst ""  (formula "26")) (ifInst ""  (formula "2")) (ifInst ""  (formula "26")) (ifInst ""  (formula "5")))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "27") (ifseqformula "4"))
         (rule "replace_known_right" (formula "27") (term "0,1,0,0") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")) (ifInst ""  (formula "21")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")))
         (rule "nonNull" (formula "27") (term "1,0,0") (inst "i=i"))
         (rule "greater_literals" (formula "27") (term "0,1,1,0,0"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "16")))
         (rule "sub_literals" (formula "27") (term "2,1,0,1,0,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0,1,0,0") (ifseqformula "2") (ifseqformula "16"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0,0"))
         (rule "nonNull" (formula "27") (term "1,0,0,0,0") (inst "i=i"))
         (rule "greater_literals" (formula "27") (term "0,1,1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "14")))
         (rule "sub_literals" (formula "27") (term "2,1,0,1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0,1,0,0,0,0") (ifseqformula "2") (ifseqformula "14"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0,0,0,0"))
         (rule "nonNull" (formula "27") (term "1,0,0,0") (inst "i=i"))
         (rule "greater_literals" (formula "27") (term "0,1,1,0,0,0"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "15")))
         (rule "sub_literals" (formula "27") (term "2,1,0,1,0,0,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0,1,0,0,0") (ifseqformula "2") (ifseqformula "15"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0,0,0"))
         (rule "nonNull" (formula "27") (term "1") (inst "i=i"))
         (rule "greater_literals" (formula "27") (term "0,1,1"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "18")))
         (rule "sub_literals" (formula "27") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0,1") (ifseqformula "2") (ifseqformula "18"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1"))
         (rule "nonNull" (formula "27") (term "0,0,0,0,0") (inst "i=i"))
         (rule "greater_literals" (formula "27") (term "0,1,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "13")))
         (rule "sub_literals" (formula "27") (term "2,1,0,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "2") (ifseqformula "13"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0,0,0,0"))
         (rule "nonNull" (formula "27") (term "1,0") (inst "i=i"))
         (rule "greater_literals" (formula "27") (term "0,1,1,0"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "17")))
         (rule "sub_literals" (formula "27") (term "2,1,0,1,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0,1,0") (ifseqformula "2") (ifseqformula "17"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
         (rule "nnf_imp2or" (formula "27") (term "0,1"))
         (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
         (rule "nnf_imp2or" (formula "27") (term "0,1,0,0"))
         (rule "nnf_notAnd" (formula "27") (term "0,0,1"))
         (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1"))
         (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1"))
         (rule "mul_literals" (formula "27") (term "1,0,0,0,1"))
         (rule "nnf_imp2or" (formula "27") (term "0,1,0,0,0"))
         (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
         (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0"))
         (rule "nnf_imp2or" (formula "27") (term "0,0,0,0,0,0"))
         (rule "nnf_imp2or" (formula "27") (term "0,1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "27") (term "0,0,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0,0"))
         (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0,0"))
         (rule "nnf_notAnd" (formula "27") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0,0,0"))
         (rule "nnf_notAnd" (formula "27") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,0,0,0,0"))
         (rule "nnf_notAnd" (formula "27") (term "0,0,1,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1,0,0,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0,0,0,0"))
         (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
         (rule "andRight" (formula "27"))
         (branch "Case 1"
            (rule "andRight" (formula "27"))
            (branch "Case 1"
               (rule "andRight" (formula "27"))
               (branch "Case 1"
                  (rule "andRight" (formula "27"))
                  (branch "Case 1"
                     (rule "andRight" (formula "27"))
                     (branch "Case 1"
                        (rule "allRight" (formula "27") (inst "sk=i_72"))
                        (rule "orRight" (formula "27"))
                        (rule "orRight" (formula "27"))
                        (rule "notRight" (formula "29"))
                        (rule "inEqSimp_geqRight" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "29"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
                        (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "arrayLengthNotNegative" (formula "4") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                        (rule "leq_literals" (formula "4") (term "0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                        (rule "allLeft" (formula "11") (inst "t=i_72"))
                        (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                        (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                        (rule "add_literals" (formula "11") (term "0,0,1"))
                        (rule "leq_literals" (formula "11") (term "0,1"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "11"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "27") (inst "sk=i_71"))
                        (rule "orRight" (formula "27"))
                        (rule "orRight" (formula "27"))
                        (rule "notRight" (formula "29"))
                        (rule "inEqSimp_geqRight" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "29"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
                        (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "arrayLengthNotNegative" (formula "4") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                        (rule "leq_literals" (formula "4") (term "0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                        (rule "allLeft" (formula "13") (inst "t=i_71"))
                        (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                        (rule "add_literals" (formula "13") (term "0,0,1"))
                        (rule "leq_literals" (formula "13") (term "0,1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "13"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "27") (inst "sk=i_70"))
                     (rule "orRight" (formula "27"))
                     (rule "orRight" (formula "27"))
                     (rule "notRight" (formula "29"))
                     (rule "inEqSimp_leqRight" (formula "28"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
                     (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                     (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                     (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "arrayLengthNotNegative" (formula "4") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                     (rule "leq_literals" (formula "4") (term "0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                     (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
                     (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                     (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "allLeft" (formula "15") (inst "t=i_70"))
                     (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,1"))
                     (rule "leq_literals" (formula "15") (term "0,1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "15"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "27") (inst "sk=i_69"))
                  (rule "orRight" (formula "27"))
                  (rule "orRight" (formula "27"))
                  (rule "notRight" (formula "29"))
                  (rule "inEqSimp_leqRight" (formula "28"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
                  (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "arrayLengthNotNegative" (formula "4") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "allLeft" (formula "17") (inst "t=i_69"))
                  (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                  (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                  (rule "add_literals" (formula "17") (term "0,0,1"))
                  (rule "leq_literals" (formula "17") (term "0,1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "17"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "27") (inst "sk=i_68"))
               (rule "orRight" (formula "27"))
               (rule "orRight" (formula "27"))
               (rule "notRight" (formula "29"))
               (rule "inEqSimp_geqRight" (formula "29"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "29"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
               (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
               (rule "arrayLengthNotNegative" (formula "4") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
               (rule "leq_literals" (formula "4") (term "0"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
               (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "arrayLengthIsAShort" (formula "4") (term "0"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
               (rule "allLeft" (formula "19") (inst "t=i_68"))
               (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "19") (term "0,0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "19"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_homoInEq1" (formula "2"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "leq_literals" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
         )
         (branch "Case 2"
            (rule "allRight" (formula "27") (inst "sk=i_67"))
            (rule "orRight" (formula "27"))
            (rule "orRight" (formula "27"))
            (rule "notRight" (formula "29"))
            (rule "inEqSimp_geqRight" (formula "29"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "29"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "arrayLengthIsAShort" (formula "4") (term "0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
            (rule "arrayLengthNotNegative" (formula "4") (term "0"))
            (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
            (rule "leq_literals" (formula "4") (term "0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
            (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "allLeft" (formula "21") (inst "t=i_67"))
            (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "21") (term "0,0"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "2"))
            (rule "andLeft" (formula "21"))
            (rule "inEqSimp_homoInEq1" (formula "21"))
            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
            (rule "add_literals" (formula "21") (term "1,1,0"))
            (rule "times_zero_1" (formula "21") (term "1,0"))
            (rule "add_zero_right" (formula "21") (term "0"))
            (rule "leq_literals" (formula "21"))
            (rule "closeFalse" (formula "21"))
         )
      )
   )
)
(branch "Null Reference (_data = null)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
   (rule "closeFalse" (formula "1"))
)
)

}
